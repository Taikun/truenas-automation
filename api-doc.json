{
    "openapi": "3.0.0",
    "info": {
     "title": "TrueNAS RESTful API",
     "version": "v2.0"
    },
    "paths": {
     "/core/arp": {
      "post": {
       "tags": [
        "core"
       ],
       "responses": {
        "200": {
         "$ref": "#/components/responses/Success"
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/core_arp"
          }
         }
        }
       }
      }
     },
     "/core/debug": {
      "post": {
       "tags": [
        "core"
       ],
       "responses": {
        "200": {
         "$ref": "#/components/responses/Success"
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Setup middlewared for remote debugging.\n\nengine currently used:\n  - REMOTE_PDB: Remote vanilla PDB (over TCP sockets)\n\noptions:\n    - bind_address: local ip address to bind the remote debug session to\n    - bind_port: local port to listen on\n    - threaded: run debugger in a new thread instead of the main event loop",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/core_debug"
          }
         }
        }
       }
      }
     },
     "/core/download": {
      "post": {
       "tags": [
        "core"
       ],
       "responses": {
        "200": {
         "$ref": "#/components/responses/Success"
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Core helper to call a job marked for download.\n\nNon-`buffered` downloads will allow job to write to pipe as soon as download URL is requested, job will stay\nblocked meanwhile. `buffered` downloads must wait for job to complete before requesting download URL, job's\npipe output will be buffered to ramfs.\n\nReturns the job id and the URL for download.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/core_download"
          }
         }
        }
       }
      }
     },
     "/core/get_jobs": {
      "get": {
       "tags": [
        "core"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_core_get_jobs"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "limit",
         "in": "query",
         "required": false,
         "schema": {
          "type": "integer"
         }
        },
        {
         "name": "offset",
         "in": "query",
         "required": false,
         "schema": {
          "type": "integer"
         }
        },
        {
         "name": "count",
         "in": "query",
         "required": false,
         "schema": {
          "type": "boolean"
         }
        },
        {
         "name": "sort",
         "in": "query",
         "required": false,
         "schema": {
          "type": "string"
         }
        }
       ],
       "description": "Get information about long-running jobs.\nIf authenticated session does not have the FULL_ADMIN role, only\njobs owned by the current authenticated session will be returned.\n\n`result` key will have sensitive values redacted by default for external\nclients.\n\nRedaction behavior may be explicitly specfied via the `extra`\nquery-option `raw_result`. If `raw_result` is True then unredacted result\nis returned.\n\n`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      }
     },
     "/core/job_abort": {
      "post": {
       "tags": [
        "core"
       ],
       "responses": {
        "200": {
         "$ref": "#/components/responses/Success"
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/core_job_abort"
          }
         }
        }
       }
      }
     },
     "/core/job_download_logs": {
      "post": {
       "tags": [
        "core"
       ],
       "responses": {
        "200": {
         "$ref": "#/components/responses/Success"
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Download logs of the job `id`.\n\nPlease see `core.download` method documentation for explanation on `filename` and `buffered` arguments,\nand return value.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/core_job_download_logs"
          }
         }
        }
       }
      }
     },
     "/core/job_wait": {
      "post": {
       "tags": [
        "core"
       ],
       "responses": {
        "200": {
         "$ref": "#/components/responses/Success"
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/core_job_wait"
          }
         }
        }
       }
      }
     },
     "/core/ping": {
      "get": {
       "tags": [
        "core"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_core_ping"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Utility method which just returns \"pong\".\nCan be used to keep connection/authtoken alive instead of using\n\"ping\" protocol message."
      }
     },
     "/core/ping_remote": {
      "post": {
       "tags": [
        "core"
       ],
       "responses": {
        "200": {
         "$ref": "#/components/responses/Success"
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Method that will send an ICMP echo request to \"hostname\"\nand will wait up to \"timeout\" for a reply.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/core_ping_remote"
          }
         }
        }
       }
      }
     },
     "/core/resize_shell": {
      "post": {
       "tags": [
        "core"
       ],
       "responses": {
        "200": {
         "$ref": "#/components/responses/Success"
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Resize terminal session (/websocket/shell) to cols x rows",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/core_resize_shell"
          }
         }
        }
       }
      }
     },
     "/acme/dns/authenticator": {
      "get": {
       "tags": [
        "acme.dns.authenticator"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_acme_dns_authenticator_query"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "limit",
         "in": "query",
         "required": false,
         "schema": {
          "type": "integer"
         }
        },
        {
         "name": "offset",
         "in": "query",
         "required": false,
         "schema": {
          "type": "integer"
         }
        },
        {
         "name": "count",
         "in": "query",
         "required": false,
         "schema": {
          "type": "boolean"
         }
        },
        {
         "name": "sort",
         "in": "query",
         "required": false,
         "schema": {
          "type": "string"
         }
        }
       ],
       "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      },
      "post": {
       "tags": [
        "acme.dns.authenticator"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_acme_dns_authenticator_create"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Create a DNS Authenticator\n\nCreate a specific DNS Authenticator containing required authentication details for the said\nprovider to successfully connect with it\n\n",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/acme_dns_authenticator_create"
          }
         }
        }
       }
      }
     },
     "/acme/dns/authenticator/id/{id_}": {
      "delete": {
       "tags": [
        "acme.dns.authenticator"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_acme_dns_authenticator_delete"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "Delete DNS Authenticator of `id`\n\n"
      },
      "get": {
       "tags": [
        "acme.dns.authenticator"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_acme_dns_authenticator_query"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      },
      "put": {
       "tags": [
        "acme.dns.authenticator"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_acme_dns_authenticator_update"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "Update DNS Authenticator of `id`\n\n",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/acme_dns_authenticator_update"
          }
         }
        }
       }
      }
     },
     "/acme/dns/authenticator/authenticator_schemas": {
      "get": {
       "tags": [
        "acme.dns.authenticator"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_acme_dns_authenticator_authenticator_schemas"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Get the schemas for all DNS providers we support for ACME DNS Challenge and the respective attributes\nrequired for connecting to them while validating a DNS Challenge"
      }
     },
     "/acme/dns/authenticator/get_instance": {
      "post": {
       "tags": [
        "acme.dns.authenticator"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_acme_dns_authenticator_get_instance"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised.\n\nPlease see `query` method documentation for `options`.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/acme_dns_authenticator_get_instance"
          }
         }
        }
       }
      }
     },
     "/activedirectory": {
      "get": {
       "tags": [
        "activedirectory"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_activedirectory_config"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": ""
      },
      "put": {
       "tags": [
        "activedirectory"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_activedirectory_update"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Update active directory configuration.\n`domainname` full DNS domain name of the Active Directory domain.\n\n`bindname` username used to perform the intial domain join.\n\n`bindpw` password used to perform the initial domain join. User-\nprovided credentials are used to obtain a kerberos ticket, which\nis used to perform the actual domain join.\n\n`verbose_logging` increase logging during the domain join process.\n\n`use_default_domain` controls whether domain users and groups have\nthe pre-windows 2000 domain name prepended to the user account. When\nenabled, the user appears as \"administrator\" rather than\n\"EXAMPLE\u0007dministrator\"\n\n`allow_trusted_doms` enable support for trusted domains. If this\nparameter is enabled, then separate idmap backends _must_ be configured\nfor each trusted domain, and the idmap cache should be cleared.\n\n`allow_dns_updates` during the domain join process, automatically\ngenerate DNS entries in the AD domain for the NAS. If this is disabled,\nthen a domain administrator must manually add appropriate DNS entries\nfor the NAS. This parameter is recommended for TrueNAS HA servers.\n\n`disable_freenas_cache` disables active caching of AD users and groups.\nWhen disabled, only users cached in winbind's internal cache are\nvisible in GUI dropdowns. Disabling active caching is recommended\nin environments with a large amount of users.\n\n`site` AD site of which the NAS is a member. This parameter is auto-\ndetected during the domain join process. If no AD site is configured\nfor the subnet in which the NAS is configured, then this parameter\nappears as 'Default-First-Site-Name'. Auto-detection is only performed\nduring the initial domain join.\n\n`kerberos_realm` in which the server is located. This parameter is\nautomatically populated during the initial domain join. If the NAS has\nan AD site configured and that site has multiple kerberos servers, then\nthe kerberos realm is automatically updated with a site-specific\nconfiguration to use those servers. Auto-detection is only performed\nduring initial domain join.\n\n`kerberos_principal` kerberos principal to use for AD-related\noperations outside of Samba. After intial domain join, this field is\nupdated with the kerberos principal associated with the AD machine\naccount for the NAS.\n\n`nss_info` controls how Winbind retrieves Name Service Information to\nconstruct a user's home directory and login shell. This parameter\nis only effective if the Active Directory Domain Controller supports\nthe Microsoft Services for Unix (SFU) LDAP schema.\n\n`timeout` timeout value for winbind-related operations. This value may\nneed to be increased in  environments with high latencies for\ncommunications with domain controllers or a large number of domain\ncontrollers. Lowering the value may cause status checks to fail.\n\n`dns_timeout` timeout value for DNS queries during the initial domain\njoin. This value is also set as the NETWORK_TIMEOUT in the ldap config\nfile.\n\n`createcomputer` Active Directory Organizational Unit in which new\ncomputer accounts are created.\n\nThe OU string is read from top to bottom without RDNs. Slashes (\"/\")\nare used as delimiters, like `Computers/Servers/NAS`. The backslash\n(\"\\\") is used to escape characters but not as a separator. Backslashes\nare interpreted at multiple levels and might require doubling or even\nquadrupling to take effect.\n\nWhen this field is blank, new computer accounts are created in the\nActive Directory default OU.\n\nThe Active Directory service is started after a configuration\nupdate if the service was initially disabled, and the updated\nconfiguration sets `enable` to `True`. The Active Directory\nservice is stopped if `enable` is changed to `False`. If the\nconfiguration is updated, but the initial `enable` state is `True`, and\nremains unchanged, then the samba server is only restarted.\n\nDuring the domain join, a kerberos keytab for the newly-created AD\nmachine account is generated. It is used for all future\nLDAP / AD interaction and the user-provided credentials are removed.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/activedirectory_update"
          }
         }
        }
       }
      }
     },
     "/activedirectory/domain_info": {
      "post": {
       "tags": [
        "activedirectory"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_activedirectory_domain_info"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Returns the following information about the currently joined domain:\n\n`LDAP server` IP address of current LDAP server to which TrueNAS is connected.\n\n`LDAP server name` DNS name of LDAP server to which TrueNAS is connected\n\n`Realm` Kerberos realm\n\n`LDAP port`\n\n`Server time` timestamp.\n\n`KDC server` Kerberos KDC to which TrueNAS is connected\n\n`Server time offset` current time offset from DC.\n\n`Last machine account password change`. timestamp",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/activedirectory_domain_info"
          }
         }
        }
       }
      }
     },
     "/activedirectory/leave": {
      "post": {
       "tags": [
        "activedirectory"
       ],
       "responses": {
        "200": {
         "$ref": "#/components/responses/Success"
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Leave Active Directory domain. This will remove computer\nobject from AD and clear relevant configuration data from\nthe NAS.\nThis requires credentials for appropriately-privileged user.\nCredentials are used to obtain a kerberos ticket, which is\nused to perform the actual removal from the domain.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/activedirectory_leave"
          }
         }
        }
       }
      }
     },
     "/activedirectory/nss_info_choices": {
      "get": {
       "tags": [
        "activedirectory"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_activedirectory_nss_info_choices"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Returns list of available LDAP schema choices."
      }
     },
     "/alert/dismiss": {
      "post": {
       "tags": [
        "alert"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_alert_dismiss"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Dismiss `id` alert.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/alert_dismiss"
          }
         }
        }
       }
      }
     },
     "/alert/list": {
      "get": {
       "tags": [
        "alert"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_alert_list"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "List all types of alerts including active/dismissed currently in the system."
      }
     },
     "/alert/list_categories": {
      "get": {
       "tags": [
        "alert"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_alert_list_categories"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "List all types of alerts which the system can issue."
      }
     },
     "/alert/list_policies": {
      "get": {
       "tags": [
        "alert"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_alert_list_policies"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "List all alert policies which indicate the frequency of the alerts."
      }
     },
     "/alert/restore": {
      "post": {
       "tags": [
        "alert"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_alert_restore"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Restore `id` alert which had been dismissed.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/alert_restore"
          }
         }
        }
       }
      }
     },
     "/alertclasses": {
      "get": {
       "tags": [
        "alertclasses"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_alertclasses_config"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": ""
      },
      "put": {
       "tags": [
        "alertclasses"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_alertclasses_update"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Update default Alert settings.\n\n",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/alertclasses_update"
          }
         }
        }
       }
      }
     },
     "/alertservice": {
      "get": {
       "tags": [
        "alertservice"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_alertservice_query"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "limit",
         "in": "query",
         "required": false,
         "schema": {
          "type": "integer"
         }
        },
        {
         "name": "offset",
         "in": "query",
         "required": false,
         "schema": {
          "type": "integer"
         }
        },
        {
         "name": "count",
         "in": "query",
         "required": false,
         "schema": {
          "type": "boolean"
         }
        },
        {
         "name": "sort",
         "in": "query",
         "required": false,
         "schema": {
          "type": "string"
         }
        }
       ],
       "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      },
      "post": {
       "tags": [
        "alertservice"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_alertservice_create"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Create an Alert Service of specified `type`.\n\nIf `enabled`, it sends alerts to the configured `type` of Alert Service.\n\n",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/alertservice_create"
          }
         }
        }
       }
      }
     },
     "/alertservice/id/{id_}": {
      "delete": {
       "tags": [
        "alertservice"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_alertservice_delete"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "Delete Alert Service of `id`."
      },
      "get": {
       "tags": [
        "alertservice"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_alertservice_query"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      },
      "put": {
       "tags": [
        "alertservice"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_alertservice_update"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "Update Alert Service of `id`.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/alertservice_update"
          }
         }
        }
       }
      }
     },
     "/alertservice/get_instance": {
      "post": {
       "tags": [
        "alertservice"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_alertservice_get_instance"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised.\n\nPlease see `query` method documentation for `options`.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/alertservice_get_instance"
          }
         }
        }
       }
      }
     },
     "/alertservice/test": {
      "post": {
       "tags": [
        "alertservice"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_alertservice_test"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Send a test alert using `type` of Alert Service.\n\n",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/alertservice_test"
          }
         }
        }
       }
      }
     },
     "/api_key": {
      "get": {
       "tags": [
        "api_key"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_api_key_query"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "limit",
         "in": "query",
         "required": false,
         "schema": {
          "type": "integer"
         }
        },
        {
         "name": "offset",
         "in": "query",
         "required": false,
         "schema": {
          "type": "integer"
         }
        },
        {
         "name": "count",
         "in": "query",
         "required": false,
         "schema": {
          "type": "boolean"
         }
        },
        {
         "name": "sort",
         "in": "query",
         "required": false,
         "schema": {
          "type": "string"
         }
        }
       ],
       "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      },
      "post": {
       "tags": [
        "api_key"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_api_key_create"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Creates API Key.\n\n`name` is a user-readable name for key.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/api_key_create"
          }
         }
        }
       }
      }
     },
     "/api_key/id/{id_}": {
      "delete": {
       "tags": [
        "api_key"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_api_key_delete"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "Delete API Key `id`."
      },
      "get": {
       "tags": [
        "api_key"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_api_key_query"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      },
      "put": {
       "tags": [
        "api_key"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_api_key_update"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "Update API Key `id`.\n\nSpecify `reset: true` to reset this API Key.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/api_key_update"
          }
         }
        }
       }
      }
     },
     "/api_key/get_instance": {
      "post": {
       "tags": [
        "api_key"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_api_key_get_instance"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised.\n\nPlease see `query` method documentation for `options`.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/api_key_get_instance"
          }
         }
        }
       }
      }
     },
     "/app": {
      "get": {
       "tags": [
        "app"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_app_query"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "limit",
         "in": "query",
         "required": false,
         "schema": {
          "type": "integer"
         }
        },
        {
         "name": "offset",
         "in": "query",
         "required": false,
         "schema": {
          "type": "integer"
         }
        },
        {
         "name": "count",
         "in": "query",
         "required": false,
         "schema": {
          "type": "boolean"
         }
        },
        {
         "name": "sort",
         "in": "query",
         "required": false,
         "schema": {
          "type": "string"
         }
        }
       ],
       "description": "Query all apps with `query-filters` and `query-options`.\n\n`query-options.extra.host_ip` is a string which can be provided to override portal IP address\nif it is a wildcard.\n\n`query-options.extra.include_app_schema` is a boolean which can be set to include app schema in the response.\n\n`query-options.extra.retrieve_config` is a boolean which can be set to retrieve app configuration\nused to install/manage app.\n\n`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      },
      "post": {
       "tags": [
        "app"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_app_create"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Create an app with `app_name` using `catalog_app` with `train` and `version`.\n\nTODO: Add support for advanced mode which will enable users to use their own compose files",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/app_create"
          }
         }
        }
       }
      }
     },
     "/app/id/{id_}": {
      "delete": {
       "tags": [
        "app"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_app_delete"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "string"
         }
        }
       ],
       "description": "Delete `app_name` app.\n\n`force_remove_ix_volumes` should be set when the ix-volumes were created by the system for apps which were\nmigrated from k8s to docker and the user wants to remove them. This is to prevent accidental deletion of\nthe original ix-volumes which were created in dragonfish and before for kubernetes based apps. When this\nis set, it will result in the deletion of ix-volumes from both docker based apps and k8s based apps and should\nbe carefully set.\n\n`force_remove_custom_app` should be set when the app being deleted is a custom app and the user wants to\nforcefully remove the app. A use-case for this attribute is that user had an invalid yaml in his custom\napp and there are no actual docker resources (network/containers/volumes) in place for the custom app, then\ndocker compose down will fail as the yaml itself is invalid. In this case this flag can be set to proceed\nwith the deletion of the custom app. However if this app had any docker resources in place, then this flag\nwill have no effect.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/app_delete"
          }
         }
        }
       }
      },
      "get": {
       "tags": [
        "app"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_app_query"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "string"
         }
        }
       ],
       "description": "Query all apps with `query-filters` and `query-options`.\n\n`query-options.extra.host_ip` is a string which can be provided to override portal IP address\nif it is a wildcard.\n\n`query-options.extra.include_app_schema` is a boolean which can be set to include app schema in the response.\n\n`query-options.extra.retrieve_config` is a boolean which can be set to retrieve app configuration\nused to install/manage app.\n\n`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      },
      "put": {
       "tags": [
        "app"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_app_update"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "string"
         }
        }
       ],
       "description": "Update `app_name` app with new configuration.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/app_update"
          }
         }
        }
       }
      }
     },
     "/app/available": {
      "get": {
       "tags": [
        "app"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_app_available"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "limit",
         "in": "query",
         "required": false,
         "schema": {
          "type": "integer"
         }
        },
        {
         "name": "offset",
         "in": "query",
         "required": false,
         "schema": {
          "type": "integer"
         }
        },
        {
         "name": "count",
         "in": "query",
         "required": false,
         "schema": {
          "type": "boolean"
         }
        },
        {
         "name": "sort",
         "in": "query",
         "required": false,
         "schema": {
          "type": "string"
         }
        }
       ],
       "description": "Retrieve all available applications from all configured catalogs.\n\n`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      }
     },
     "/app/available_space": {
      "get": {
       "tags": [
        "app"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_app_available_space"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Returns space available in bytes in the configured apps pool which apps can consume"
      }
     },
     "/app/categories": {
      "get": {
       "tags": [
        "app"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_app_categories"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Retrieve list of valid categories which have associated applications."
      }
     },
     "/app/certificate_authority_choices": {
      "get": {
       "tags": [
        "app"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_app_certificate_authority_choices"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Returns certificate authorities which can be used by applications."
      }
     },
     "/app/certificate_choices": {
      "get": {
       "tags": [
        "app"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_app_certificate_choices"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Returns certificates which can be used by applications."
      }
     },
     "/app/config": {
      "post": {
       "tags": [
        "app"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_app_config"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Retrieve user specified configuration of `app_name`.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/app_config"
          }
         }
        }
       }
      }
     },
     "/app/container_console_choices": {
      "post": {
       "tags": [
        "app"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_app_container_console_choices"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Returns container console choices for `app_name`.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/app_container_console_choices"
          }
         }
        }
       }
      }
     },
     "/app/container_ids": {
      "post": {
       "tags": [
        "app"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_app_container_ids"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Returns container IDs for `app_name`.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/app_container_ids"
          }
         }
        }
       }
      }
     },
     "/app/convert_to_custom": {
      "post": {
       "tags": [
        "app"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_app_convert_to_custom"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Convert `app_name` to a custom app.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/app_convert_to_custom"
          }
         }
        }
       }
      }
     },
     "/app/get_instance": {
      "post": {
       "tags": [
        "app"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_app_get_instance"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised.\n\nPlease see `query` method documentation for `options`.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/app_get_instance"
          }
         }
        }
       }
      }
     },
     "/app/gpu_choices": {
      "get": {
       "tags": [
        "app"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_app_gpu_choices"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Returns GPU choices which can be used by applications."
      }
     },
     "/app/ip_choices": {
      "get": {
       "tags": [
        "app"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_app_ip_choices"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Returns IP choices which can be used by applications."
      }
     },
     "/app/latest": {
      "get": {
       "tags": [
        "app"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_app_latest"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "limit",
         "in": "query",
         "required": false,
         "schema": {
          "type": "integer"
         }
        },
        {
         "name": "offset",
         "in": "query",
         "required": false,
         "schema": {
          "type": "integer"
         }
        },
        {
         "name": "count",
         "in": "query",
         "required": false,
         "schema": {
          "type": "boolean"
         }
        },
        {
         "name": "sort",
         "in": "query",
         "required": false,
         "schema": {
          "type": "string"
         }
        }
       ],
       "description": "Retrieve latest updated apps.\n\n`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      }
     },
     "/app/outdated_docker_images": {
      "post": {
       "tags": [
        "app"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_app_outdated_docker_images"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Returns a list of outdated docker images for the specified app `name`.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/app_outdated_docker_images"
          }
         }
        }
       }
      }
     },
     "/app/pull_images": {
      "post": {
       "tags": [
        "app"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_app_pull_images"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Pulls docker images for the specified app `name`.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/app_pull_images"
          }
         }
        }
       }
      }
     },
     "/app/redeploy": {
      "post": {
       "tags": [
        "app"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_app_redeploy"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Redeploy `app_name` app.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/app_redeploy"
          }
         }
        }
       }
      }
     },
     "/app/rollback": {
      "post": {
       "tags": [
        "app"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_app_rollback"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Rollback `app_name` app to previous version.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/app_rollback"
          }
         }
        }
       }
      }
     },
     "/app/rollback_versions": {
      "post": {
       "tags": [
        "app"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_app_rollback_versions"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Retrieve versions available for rollback for `app_name` app.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/app_rollback_versions"
          }
         }
        }
       }
      }
     },
     "/app/similar": {
      "post": {
       "tags": [
        "app"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_app_similar"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Retrieve applications which are similar to `app_name`.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/app_similar"
          }
         }
        }
       }
      }
     },
     "/app/start": {
      "post": {
       "tags": [
        "app"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_app_start"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Start `app_name` app.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/app_start"
          }
         }
        }
       }
      }
     },
     "/app/stop": {
      "post": {
       "tags": [
        "app"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_app_stop"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Stop `app_name` app.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/app_stop"
          }
         }
        }
       }
      }
     },
     "/app/upgrade": {
      "post": {
       "tags": [
        "app"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_app_upgrade"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Upgrade `app_name` app to `app_version`.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/app_upgrade"
          }
         }
        }
       }
      }
     },
     "/app/upgrade_summary": {
      "post": {
       "tags": [
        "app"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_app_upgrade_summary"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Retrieve upgrade summary for `app_name`.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/app_upgrade_summary"
          }
         }
        }
       }
      }
     },
     "/app/used_ports": {
      "get": {
       "tags": [
        "app"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_app_used_ports"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Returns ports in use by applications."
      }
     },
     "/app/image": {
      "get": {
       "tags": [
        "app.image"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_app_image_query"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "limit",
         "in": "query",
         "required": false,
         "schema": {
          "type": "integer"
         }
        },
        {
         "name": "offset",
         "in": "query",
         "required": false,
         "schema": {
          "type": "integer"
         }
        },
        {
         "name": "count",
         "in": "query",
         "required": false,
         "schema": {
          "type": "boolean"
         }
        },
        {
         "name": "sort",
         "in": "query",
         "required": false,
         "schema": {
          "type": "string"
         }
        }
       ],
       "description": "Query all docker images with `query-filters` and `query-options`.\n\n`query-options.extra.parse_tags` is a boolean which when set will have normalized tags to be retrieved.\n\n`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      }
     },
     "/app/image/id/{id_}": {
      "delete": {
       "tags": [
        "app.image"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_app_image_delete"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "Delete docker image `image_id`.\n\n`options.force` when set will force delete the image regardless of the state of containers and should\nbe used cautiously.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/app_image_delete"
          }
         }
        }
       }
      },
      "get": {
       "tags": [
        "app.image"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_app_image_query"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "Query all docker images with `query-filters` and `query-options`.\n\n`query-options.extra.parse_tags` is a boolean which when set will have normalized tags to be retrieved.\n\n`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      }
     },
     "/app/image/dockerhub_rate_limit": {
      "get": {
       "tags": [
        "app.image"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_app_image_dockerhub_rate_limit"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Returns the current rate limit information for Docker Hub registry.\n\nPlease refer to https://docs.docker.com/docker-hub/download-rate-limit/ for more information."
      }
     },
     "/app/image/get_instance": {
      "post": {
       "tags": [
        "app.image"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_app_image_get_instance"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised.\n\nPlease see `query` method documentation for `options`.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/app_image_get_instance"
          }
         }
        }
       }
      }
     },
     "/app/image/pull": {
      "post": {
       "tags": [
        "app.image"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_app_image_pull"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "`image` is the name of the image to pull. Format for the name is \"registry/repo/image:v1.2.3\" where\nregistry may be omitted and it will default to docker registry in this case. It can or cannot contain\nthe tag - this will be passed as is to docker so this should be analogous to what `docker pull` expects.\n\n`auth_config` should be specified if image to be retrieved is under a private repository.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/app_image_pull"
          }
         }
        }
       }
      }
     },
     "/app/ix_volume/exists": {
      "post": {
       "tags": [
        "app.ix_volume"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_app_ix_volume_exists"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Check if ix-volumes exist for `app_name`.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/app_ix_volume_exists"
          }
         }
        }
       }
      }
     },
     "/app/ix_volume/query": {
      "get": {
       "tags": [
        "app.ix_volume"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_app_ix_volume_query"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "limit",
         "in": "query",
         "required": false,
         "schema": {
          "type": "integer"
         }
        },
        {
         "name": "offset",
         "in": "query",
         "required": false,
         "schema": {
          "type": "integer"
         }
        },
        {
         "name": "count",
         "in": "query",
         "required": false,
         "schema": {
          "type": "boolean"
         }
        },
        {
         "name": "sort",
         "in": "query",
         "required": false,
         "schema": {
          "type": "string"
         }
        }
       ],
       "description": "Query ix-volumes with `filters` and `options`.\n\n`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      }
     },
     "/app/registry": {
      "get": {
       "tags": [
        "app.registry"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_app_registry_query"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "limit",
         "in": "query",
         "required": false,
         "schema": {
          "type": "integer"
         }
        },
        {
         "name": "offset",
         "in": "query",
         "required": false,
         "schema": {
          "type": "integer"
         }
        },
        {
         "name": "count",
         "in": "query",
         "required": false,
         "schema": {
          "type": "boolean"
         }
        },
        {
         "name": "sort",
         "in": "query",
         "required": false,
         "schema": {
          "type": "string"
         }
        }
       ],
       "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      },
      "post": {
       "tags": [
        "app.registry"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_app_registry_create"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Create an app registry entry.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/app_registry_create"
          }
         }
        }
       }
      }
     },
     "/app/registry/id/{id_}": {
      "delete": {
       "tags": [
        "app.registry"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_app_registry_delete"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "Delete an app registry entry."
      },
      "get": {
       "tags": [
        "app.registry"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_app_registry_query"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      },
      "put": {
       "tags": [
        "app.registry"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_app_registry_update"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "Update an app registry entry.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/app_registry_update"
          }
         }
        }
       }
      }
     },
     "/app/registry/get_instance": {
      "post": {
       "tags": [
        "app.registry"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_app_registry_get_instance"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised.\n\nPlease see `query` method documentation for `options`.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/app_registry_get_instance"
          }
         }
        }
       }
      }
     },
     "/audit": {
      "get": {
       "tags": [
        "audit"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_audit_config"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": ""
      },
      "put": {
       "tags": [
        "audit"
       ],
       "responses": {
        "200": {
         "$ref": "#/components/responses/Success"
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Update default audit settings.\n\nThe following fields may be modified:\n\n`retention` - number of days to retain local audit messages.\n\n`reservation` - size in GiB of refreservation to set on ZFS dataset\nwhere the audit databases are stored. The refreservation specifies the\nminimum amount of space guaranteed to the dataset, and counts against\nthe space available for other datasets in the zpool where the audit\ndataset is located.\n\n`quota` - size in GiB of the maximum amount of space that may be\nconsumed by the dataset where the audit dabases are stored.\n\n`quota_fill_warning` - percentage used of dataset quota at which to\ngenerate a warning alert.\n\n`quota_fill_critical` - percentage used of dataset quota at which to\ngenerate a critical alert.\n\nThe following fields contain read-only data and are returned in calls\nto `audit.config` and `audit.update`:\n\n`space` - ZFS dataset properties relating space used and available for\nthe dataset where the audit databases are written.\n\n`remote_logging_enabled` - Boolean indicating whether logging to a\nremote syslog server is enabled on TrueNAS and if audit logs are\nincluded in what is sent remotely.\n\n`enabled_services` - JSON object with key denoting service, and value\ncontaining a JSON array of what aspects of this service are being\naudited. In the case of the SMB audit, the list contains share names\nof shares for which auditing is enabled.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/audit_update"
          }
         }
        }
       }
      }
     },
     "/audit/download_report": {
      "post": {
       "tags": [
        "audit"
       ],
       "responses": {
        "200": {
         "$ref": "#/components/responses/Success"
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Download the audit report with the specified name from the server.\nNote that users will only be able to download reports that they personally\ngenerated.\n\nA file will be downloaded from this endpoint.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/audit_download_report"
          }
         }
        }
       }
      }
     },
     "/audit/export": {
      "post": {
       "tags": [
        "audit"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_audit_export"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Generate an audit report based on the specified `query-filters` and\n`query-options` for the specified `services` in the specified `export_format`.\n\nSupported export_formats are CSV, JSON, and YAML. The endpoint returns a\nlocal filesystem path where the resulting audit report is located.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/audit_export"
          }
         }
        }
       }
      }
     },
     "/audit/query": {
      "post": {
       "tags": [
        "audit"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_audit_query"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Query contents of audit databases specified by `services`.\n\nIf the query-option `force_sql_filters` is true, then the query will be\nconverted into a more efficient form for better performance. This will\nnot be possible if filters use keys within `svc_data` and `event_data`.\n\nHA systems may direct the query to the 'remote' controller by\nincluding 'remote_controller=True'.  The default is the 'current' controller.\n\nEach audit entry contains the following keys:\n\n`audit_id` - GUID uniquely identifying this specific audit event.\n\n`message_timestamp` - Unix timestamp for when the audit event was\nwritten to the auditing database.\n\n`timestamp` - converted ISO-8601 timestamp from application recording\nwhen event occurred.\n\n`address` - IP address of client performing action that generated the\naudit message.\n\n`username` - Username used by client performing action.\n\n`session` - GUID uniquely identifying the client session.\n\n`services` - Name of the service that generated the message. This will\nbe one of the names specified in `services`.\n\n`service_data` - JSON object containing variable data depending on the\nparticular service. See TrueNAS auditing documentation for the service\nin question.\n\n`event` - Name of the event type that generated the audit record. Each\nservice has its own unique event identifiers.\n\n`event_data` - JSON object containing variable data depending on the\nparticular event type. See TrueNAS auditing documentation for the\nservice in question.\n\n`success` - boolean value indicating whether the action generating the\nevent message succeeded.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/audit_query"
          }
         }
        }
       }
      }
     },
     "/auth/generate_onetime_password": {
      "post": {
       "tags": [
        "auth"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_auth_generate_onetime_password"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Generate a password for the specified username that may be used only a single time to authenticate\nto TrueNAS. This may be used by server administrators to allow users authenticate and then set\na proper password and two-factor authentication token.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/auth_generate_onetime_password"
          }
         }
        }
       }
      }
     },
     "/auth/generate_token": {
      "post": {
       "tags": [
        "auth"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_auth_generate_token"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Generate a token to be used for authentication.\n\n`ttl` stands for Time To Live, in seconds. The token will be invalidated if the connection\nhas been inactive for a time greater than this.\n\n`attrs` is a general purpose object/dictionary to hold information about the token.\n\n`match_origin` will only allow using this token from the same IP address or with the same user UID.\n\nNOTE: this endpoint is not supported when server security requires replay-resistant\nauthentication as part of GPOS STIG requirements.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/auth_generate_token"
          }
         }
        }
       }
      }
     },
     "/auth/mechanism_choices": {
      "get": {
       "tags": [
        "auth"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_auth_mechanism_choices"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Get list of available authentication mechanisms available for auth.login_ex "
      }
     },
     "/auth/terminate_session": {
      "post": {
       "tags": [
        "auth"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_auth_terminate_session"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Terminates session `id`.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/auth_terminate_session"
          }
         }
        }
       }
      }
     },
     "/auth/twofactor": {
      "get": {
       "tags": [
        "auth.twofactor"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_auth_twofactor_config"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": ""
      },
      "put": {
       "tags": [
        "auth.twofactor"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_auth_twofactor_update"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "`window` extends the validity to `window` many counter ticks before and after the current one.\n\nUpdate Two-Factor Authentication Service Configuration.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/auth_twofactor_update"
          }
         }
        }
       }
      }
     },
     "/boot/attach": {
      "post": {
       "tags": [
        "boot"
       ],
       "responses": {
        "200": {
         "$ref": "#/components/responses/Success"
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Attach a disk to the boot pool, turning a stripe into a mirror.\n\n`expand` option will determine whether the new disk partition will be\n         the maximum available or the same size as the current disk.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/boot_attach"
          }
         }
        }
       }
      }
     },
     "/boot/detach": {
      "post": {
       "tags": [
        "boot"
       ],
       "responses": {
        "200": {
         "$ref": "#/components/responses/Success"
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Detach given `dev` from boot pool.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/boot_detach"
          }
         }
        }
       }
      }
     },
     "/boot/get_disks": {
      "get": {
       "tags": [
        "boot"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_boot_get_disks"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Returns disks of the boot pool."
      }
     },
     "/boot/get_state": {
      "get": {
       "tags": [
        "boot"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_boot_get_state"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Returns the current state of the boot pool, including all vdevs, properties and datasets."
      }
     },
     "/boot/replace": {
      "post": {
       "tags": [
        "boot"
       ],
       "responses": {
        "200": {
         "$ref": "#/components/responses/Success"
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Replace device `label` on boot pool with `dev`.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/boot_replace"
          }
         }
        }
       }
      }
     },
     "/boot/scrub": {
      "get": {
       "tags": [
        "boot"
       ],
       "responses": {
        "200": {
         "$ref": "#/components/responses/Success"
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Scrub on boot pool."
      }
     },
     "/boot/set_scrub_interval": {
      "post": {
       "tags": [
        "boot"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_boot_set_scrub_interval"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Set Automatic Scrub Interval value in days.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/boot_set_scrub_interval"
          }
         }
        }
       }
      }
     },
     "/boot/environment/activate": {
      "post": {
       "tags": [
        "boot.environment"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_boot_environment_activate"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/boot_environment_activate"
          }
         }
        }
       }
      }
     },
     "/boot/environment/clone": {
      "post": {
       "tags": [
        "boot.environment"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_boot_environment_clone"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/boot_environment_clone"
          }
         }
        }
       }
      }
     },
     "/boot/environment/destroy": {
      "post": {
       "tags": [
        "boot.environment"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_boot_environment_destroy"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/boot_environment_destroy"
          }
         }
        }
       }
      }
     },
     "/boot/environment/keep": {
      "post": {
       "tags": [
        "boot.environment"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_boot_environment_keep"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/boot_environment_keep"
          }
         }
        }
       }
      }
     },
     "/boot/environment/query": {
      "get": {
       "tags": [
        "boot.environment"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_boot_environment_query"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "limit",
         "in": "query",
         "required": false,
         "schema": {
          "type": "integer"
         }
        },
        {
         "name": "offset",
         "in": "query",
         "required": false,
         "schema": {
          "type": "integer"
         }
        },
        {
         "name": "count",
         "in": "query",
         "required": false,
         "schema": {
          "type": "boolean"
         }
        },
        {
         "name": "sort",
         "in": "query",
         "required": false,
         "schema": {
          "type": "string"
         }
        }
       ],
       "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      }
     },
     "/catalog": {
      "get": {
       "tags": [
        "catalog"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_catalog_config"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": ""
      },
      "put": {
       "tags": [
        "catalog"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_catalog_update"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Update catalog preferences.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/catalog_update"
          }
         }
        }
       }
      }
     },
     "/catalog/apps": {
      "post": {
       "tags": [
        "catalog"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_catalog_apps"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Retrieve apps details for `label` catalog.\n\n`options.cache` is a boolean which when set will try to get apps details for `label` catalog from cache\nif available.\n\n`options.cache_only` is a boolean which when set will force usage of cache only for retrieving catalog\ninformation. If the content for the catalog in question is not cached, no content would be returned. If\n`options.cache` is unset, this attribute has no effect.\n\n`options.retrieve_all_trains` is a boolean value which when set will retrieve information for all the trains\npresent in the catalog ( it is set by default ).\n\n`options.trains` is a list of train name(s) which will allow selective filtering to retrieve only information\nof desired trains in a catalog. If `options.retrieve_all_trains` is set, it has precedence over `options.train`.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/catalog_apps"
          }
         }
        }
       }
      }
     },
     "/catalog/get_app_details": {
      "post": {
       "tags": [
        "catalog"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_catalog_get_app_details"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Retrieve information of `app_name` `app_version_details.catalog` catalog app.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/catalog_get_app_details"
          }
         }
        }
       }
      }
     },
     "/catalog/sync": {
      "get": {
       "tags": [
        "catalog"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_catalog_sync"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Sync truenas catalog to retrieve latest changes from upstream."
      }
     },
     "/catalog/trains": {
      "get": {
       "tags": [
        "catalog"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_catalog_trains"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Retrieve available trains."
      }
     },
     "/certificate": {
      "get": {
       "tags": [
        "certificate"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_certificate_query"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "limit",
         "in": "query",
         "required": false,
         "schema": {
          "type": "integer"
         }
        },
        {
         "name": "offset",
         "in": "query",
         "required": false,
         "schema": {
          "type": "integer"
         }
        },
        {
         "name": "count",
         "in": "query",
         "required": false,
         "schema": {
          "type": "boolean"
         }
        },
        {
         "name": "sort",
         "in": "query",
         "required": false,
         "schema": {
          "type": "string"
         }
        }
       ],
       "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      },
      "post": {
       "tags": [
        "certificate"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_certificate_create"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Create a new Certificate\n\nCertificates are classified under following types and the necessary keywords to be passed\nfor `create_type` attribute to create the respective type of certificate\n\n1) Internal Certificate                 -  CERTIFICATE_CREATE_INTERNAL\n\n2) Imported Certificate                 -  CERTIFICATE_CREATE_IMPORTED\n\n3) Certificate Signing Request          -  CERTIFICATE_CREATE_CSR\n\n4) Imported Certificate Signing Request -  CERTIFICATE_CREATE_IMPORTED_CSR\n\n5) ACME Certificate                     -  CERTIFICATE_CREATE_ACME\n\nBy default, created certs use RSA keys. If an Elliptic Curve Key is desired, it can be specified with the\n`key_type` attribute. If the `ec_curve` attribute is not specified for the Elliptic Curve Key, then default to\nusing \"SECP384R1\" curve.\n\nA type is selected by the Certificate Service based on `create_type`. The rest of the values in `data` are\nvalidated accordingly and finally a certificate is made based on the selected type.\n\n`cert_extensions` can be specified to set X509v3 extensions.\n\n",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/certificate_create"
          }
         }
        }
       }
      }
     },
     "/certificate/id/{id_}": {
      "delete": {
       "tags": [
        "certificate"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_certificate_delete"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "Delete certificate of `id`.\n\nIf the certificate is an ACME based certificate, certificate service will try to\nrevoke the certificate by updating it's status with the ACME server, if it fails an exception is raised\nand the certificate is not deleted from the system. However, if `force` is set to True, certificate is deleted\nfrom the system even if some error occurred while revoking the certificate with the ACME Server\n\n",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/certificate_delete"
          }
         }
        }
       }
      },
      "get": {
       "tags": [
        "certificate"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_certificate_query"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      },
      "put": {
       "tags": [
        "certificate"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_certificate_update"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "Update certificate of `id`\n\nOnly name and revoked attribute can be updated.\n\nWhen `revoked` is enabled, the specified cert `id` is revoked and if it belongs to a CA chain which\nexists on this system, its serial number is added to the CA's certificate revocation list.\n\n",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/certificate_update"
          }
         }
        }
       }
      }
     },
     "/certificate/acme_server_choices": {
      "get": {
       "tags": [
        "certificate"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_certificate_acme_server_choices"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Dictionary of popular ACME Servers with their directory URI\nendpoints which we display automatically in the UI"
      }
     },
     "/certificate/country_choices": {
      "get": {
       "tags": [
        "certificate"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_certificate_country_choices"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Returns country choices for creating a certificate/csr."
      }
     },
     "/certificate/ec_curve_choices": {
      "get": {
       "tags": [
        "certificate"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_certificate_ec_curve_choices"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Dictionary of supported EC curves."
      }
     },
     "/certificate/extended_key_usage_choices": {
      "get": {
       "tags": [
        "certificate"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_certificate_extended_key_usage_choices"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Dictionary of names that can be used in the\nExtendedKeyUsage attribute of a certificate request."
      }
     },
     "/certificate/get_instance": {
      "post": {
       "tags": [
        "certificate"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_certificate_get_instance"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised.\n\nPlease see `query` method documentation for `options`.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/certificate_get_instance"
          }
         }
        }
       }
      }
     },
     "/certificateauthority": {
      "get": {
       "tags": [
        "certificateauthority"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_certificateauthority_query"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "limit",
         "in": "query",
         "required": false,
         "schema": {
          "type": "integer"
         }
        },
        {
         "name": "offset",
         "in": "query",
         "required": false,
         "schema": {
          "type": "integer"
         }
        },
        {
         "name": "count",
         "in": "query",
         "required": false,
         "schema": {
          "type": "boolean"
         }
        },
        {
         "name": "sort",
         "in": "query",
         "required": false,
         "schema": {
          "type": "string"
         }
        }
       ],
       "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      },
      "post": {
       "tags": [
        "certificateauthority"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_certificateauthority_create"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Create a new Certificate Authority\n\nCertificate Authorities are classified under following types with the necessary keywords to be passed\nfor `create_type` attribute to create the respective type of certificate authority\n\n1) Internal Certificate Authority       -  CA_CREATE_INTERNAL\n\n2) Imported Certificate Authority       -  CA_CREATE_IMPORTED\n\n3) Intermediate Certificate Authority   -  CA_CREATE_INTERMEDIATE\n\nCreated certificate authorities use RSA keys by default. If an Elliptic Curve Key is desired, then it can be\nspecified with the `key_type` attribute. If the `ec_curve` attribute is not specified for the Elliptic\nCurve Key, default to using \"SECP384R1\" curve.\n\nA type is selected by the Certificate Authority Service based on `create_type`. The rest of the values\nare validated accordingly and finally a certificate is made based on the selected type.\n\n`cert_extensions` can be specified to set X509v3 extensions.\n\n",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/certificateauthority_create"
          }
         }
        }
       }
      }
     },
     "/certificateauthority/id/{id_}": {
      "delete": {
       "tags": [
        "certificateauthority"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_certificateauthority_delete"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "Delete a Certificate Authority of `id`\n\n"
      },
      "get": {
       "tags": [
        "certificateauthority"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_certificateauthority_query"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      },
      "put": {
       "tags": [
        "certificateauthority"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_certificateauthority_update"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "Update Certificate Authority of `id`\n\nOnly `name` and `revoked` attribute can be updated.\n\nIf `revoked` is enabled, the CA and its complete chain is marked as revoked and added to the CA's\ncertificate revocation list.\n\n",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/certificateauthority_update"
          }
         }
        }
       }
      }
     },
     "/certificateauthority/ca_sign_csr": {
      "post": {
       "tags": [
        "certificateauthority"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_certificateauthority_ca_sign_csr"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Sign CSR by Certificate Authority of `ca_id`\n\nSign CSR's and generate a certificate from it. `ca_id` provides which CA is to be used for signing\na CSR of `csr_cert_id` which exists in the system\n\n`cert_extensions` can be specified if specific extensions are to be set in the newly signed certificate.\n\n",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/certificateauthority_ca_sign_csr"
          }
         }
        }
       }
      }
     },
     "/certificateauthority/get_instance": {
      "post": {
       "tags": [
        "certificateauthority"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_certificateauthority_get_instance"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised.\n\nPlease see `query` method documentation for `options`.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/certificateauthority_get_instance"
          }
         }
        }
       }
      }
     },
     "/cloud_backup": {
      "get": {
       "tags": [
        "cloud_backup"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_cloud_backup_query"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "limit",
         "in": "query",
         "required": false,
         "schema": {
          "type": "integer"
         }
        },
        {
         "name": "offset",
         "in": "query",
         "required": false,
         "schema": {
          "type": "integer"
         }
        },
        {
         "name": "count",
         "in": "query",
         "required": false,
         "schema": {
          "type": "boolean"
         }
        },
        {
         "name": "sort",
         "in": "query",
         "required": false,
         "schema": {
          "type": "string"
         }
        }
       ],
       "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      },
      "post": {
       "tags": [
        "cloud_backup"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_cloud_backup_create"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Create a new cloud backup task",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/cloud_backup_create"
          }
         }
        }
       }
      }
     },
     "/cloud_backup/id/{id_}": {
      "delete": {
       "tags": [
        "cloud_backup"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_cloud_backup_delete"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "Delete cloud backup entry `id`."
      },
      "get": {
       "tags": [
        "cloud_backup"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_cloud_backup_query"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      },
      "put": {
       "tags": [
        "cloud_backup"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_cloud_backup_update"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "Update the cloud backup entry `id` with `data`.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/cloud_backup_update"
          }
         }
        }
       }
      }
     },
     "/cloud_backup/id/{id_}/abort": {
      "post": {
       "tags": [
        "cloud_backup"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_cloud_backup_abort"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "Abort a running cloud backup task.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/cloud_backup_abort"
          }
         }
        }
       }
      }
     },
     "/cloud_backup/delete_snapshot": {
      "post": {
       "tags": [
        "cloud_backup"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_cloud_backup_delete_snapshot"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Delete snapshot `snapshot_id` created by the cloud backup job `id`.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/cloud_backup_delete_snapshot"
          }
         }
        }
       }
      }
     },
     "/cloud_backup/get_instance": {
      "post": {
       "tags": [
        "cloud_backup"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_cloud_backup_get_instance"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised.\n\nPlease see `query` method documentation for `options`.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/cloud_backup_get_instance"
          }
         }
        }
       }
      }
     },
     "/cloud_backup/list_snapshot_directory": {
      "post": {
       "tags": [
        "cloud_backup"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_cloud_backup_list_snapshot_directory"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "List files in the directory `path` of the `snapshot_id` created by the cloud backup job `id`.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/cloud_backup_list_snapshot_directory"
          }
         }
        }
       }
      }
     },
     "/cloud_backup/list_snapshots": {
      "post": {
       "tags": [
        "cloud_backup"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_cloud_backup_list_snapshots"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "List existing snapshots for the cloud backup job `id`.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/cloud_backup_list_snapshots"
          }
         }
        }
       }
      }
     },
     "/cloud_backup/restore": {
      "post": {
       "tags": [
        "cloud_backup"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_cloud_backup_restore"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Restore files to the directory `destination_path` from the `snapshot_id` subfolder `subfolder`\ncreated by the cloud backup job `id`.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/cloud_backup_restore"
          }
         }
        }
       }
      }
     },
     "/cloud_backup/id/{id_}/sync": {
      "post": {
       "tags": [
        "cloud_backup"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_cloud_backup_sync"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "Run the cloud backup job `id`.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/cloud_backup_sync"
          }
         }
        }
       }
      }
     },
     "/cloud_backup/transfer_setting_choices": {
      "get": {
       "tags": [
        "cloud_backup"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_cloud_backup_transfer_setting_choices"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Return all possible choices for `cloud_backup.create.transfer_setting`."
      }
     },
     "/cloudsync": {
      "get": {
       "tags": [
        "cloudsync"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_cloudsync_query"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "limit",
         "in": "query",
         "required": false,
         "schema": {
          "type": "integer"
         }
        },
        {
         "name": "offset",
         "in": "query",
         "required": false,
         "schema": {
          "type": "integer"
         }
        },
        {
         "name": "count",
         "in": "query",
         "required": false,
         "schema": {
          "type": "boolean"
         }
        },
        {
         "name": "sort",
         "in": "query",
         "required": false,
         "schema": {
          "type": "string"
         }
        }
       ],
       "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      },
      "post": {
       "tags": [
        "cloudsync"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_cloudsync_create"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Creates a new cloud_sync entry.\n\n",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/cloudsync_create"
          }
         }
        }
       }
      }
     },
     "/cloudsync/id/{id_}": {
      "delete": {
       "tags": [
        "cloudsync"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_cloudsync_delete"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "Deletes cloud_sync entry `id`."
      },
      "get": {
       "tags": [
        "cloudsync"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_cloudsync_query"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      },
      "put": {
       "tags": [
        "cloudsync"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_cloudsync_update"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "Updates the cloud_sync entry `id` with `data`.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/cloudsync_update"
          }
         }
        }
       }
      }
     },
     "/cloudsync/id/{id_}/abort": {
      "post": {
       "tags": [
        "cloudsync"
       ],
       "responses": {
        "200": {
         "$ref": "#/components/responses/Success"
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "Aborts cloud sync task.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/cloudsync_abort"
          }
         }
        }
       }
      }
     },
     "/cloudsync/create_bucket": {
      "post": {
       "tags": [
        "cloudsync"
       ],
       "responses": {
        "200": {
         "$ref": "#/components/responses/Success"
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Creates a new bucket `name` using ` credentials_id`.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/cloudsync_create_bucket"
          }
         }
        }
       }
      }
     },
     "/cloudsync/get_instance": {
      "post": {
       "tags": [
        "cloudsync"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_cloudsync_get_instance"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised.\n\nPlease see `query` method documentation for `options`.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/cloudsync_get_instance"
          }
         }
        }
       }
      }
     },
     "/cloudsync/list_buckets": {
      "post": {
       "tags": [
        "cloudsync"
       ],
       "responses": {
        "200": {
         "$ref": "#/components/responses/Success"
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/cloudsync_list_buckets"
          }
         }
        }
       }
      }
     },
     "/cloudsync/list_directory": {
      "post": {
       "tags": [
        "cloudsync"
       ],
       "responses": {
        "200": {
         "$ref": "#/components/responses/Success"
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "List contents of a remote bucket / directory.\n\nIf remote supports buckets, path is constructed by two keys \"bucket\"/\"folder\" in `attributes`.\nIf remote does not support buckets, path is constructed using \"folder\" key only in `attributes`.\n\"folder\" is directory name and \"bucket\" is bucket name for remote.\n\nPath examples:\n\nS3 Service\n`bucketname/directory/name`\n\nDropbox Service\n`directory/name`\n\n`credentials` is a valid id of a Cloud Sync Credential which will be used to connect to the provider.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/cloudsync_list_directory"
          }
         }
        }
       }
      }
     },
     "/cloudsync/onedrive_list_drives": {
      "post": {
       "tags": [
        "cloudsync"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_cloudsync_onedrive_list_drives"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Lists all available drives and their types for given Microsoft OneDrive credentials.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/cloudsync_onedrive_list_drives"
          }
         }
        }
       }
      }
     },
     "/cloudsync/providers": {
      "get": {
       "tags": [
        "cloudsync"
       ],
       "responses": {
        "200": {
         "$ref": "#/components/responses/Success"
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Returns a list of dictionaries of supported providers for Cloud Sync Tasks.\n\n`task_schema` is JSON schema for task attributes.\n\n`buckets` is a boolean value which is set to \"true\" if provider supports buckets.\n\nExample of a single provider:\n\n[\n    {\n        \"name\": \"AMAZON_CLOUD_DRIVE\",\n        \"title\": \"Amazon Cloud Drive\",\n        \"credentials_oauth\": null,\n        \"buckets\": false,\n        \"bucket_title\": \"Bucket\",\n        \"task_schema\": []\n    }\n]"
      }
     },
     "/cloudsync/id/{id_}/restore": {
      "post": {
       "tags": [
        "cloudsync"
       ],
       "responses": {
        "200": {
         "$ref": "#/components/responses/Success"
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "Create the opposite of cloud sync task `id` (PULL if it was PUSH and vice versa).",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/cloudsync_restore"
          }
         }
        }
       }
      }
     },
     "/cloudsync/id/{id_}/sync": {
      "post": {
       "tags": [
        "cloudsync"
       ],
       "responses": {
        "200": {
         "$ref": "#/components/responses/Success"
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "Run the cloud_sync job `id`, syncing the local data to remote.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/cloudsync_sync"
          }
         }
        }
       }
      }
     },
     "/cloudsync/sync_onetime": {
      "post": {
       "tags": [
        "cloudsync"
       ],
       "responses": {
        "200": {
         "$ref": "#/components/responses/Success"
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Run cloud sync task without creating it.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/cloudsync_sync_onetime"
          }
         }
        }
       }
      }
     },
     "/cloudsync/credentials": {
      "get": {
       "tags": [
        "cloudsync.credentials"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_cloudsync_credentials_query"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "limit",
         "in": "query",
         "required": false,
         "schema": {
          "type": "integer"
         }
        },
        {
         "name": "offset",
         "in": "query",
         "required": false,
         "schema": {
          "type": "integer"
         }
        },
        {
         "name": "count",
         "in": "query",
         "required": false,
         "schema": {
          "type": "boolean"
         }
        },
        {
         "name": "sort",
         "in": "query",
         "required": false,
         "schema": {
          "type": "string"
         }
        }
       ],
       "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      },
      "post": {
       "tags": [
        "cloudsync.credentials"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_cloudsync_credentials_create"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Create Cloud Sync Credentials.\n\n`attributes` is a dictionary of valid values which will be used to authorize with the `provider`.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/cloudsync_credentials_create"
          }
         }
        }
       }
      }
     },
     "/cloudsync/credentials/id/{id_}": {
      "delete": {
       "tags": [
        "cloudsync.credentials"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_cloudsync_credentials_delete"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "Delete Cloud Sync Credentials of `id`."
      },
      "get": {
       "tags": [
        "cloudsync.credentials"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_cloudsync_credentials_query"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      },
      "put": {
       "tags": [
        "cloudsync.credentials"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_cloudsync_credentials_update"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "Update Cloud Sync Credentials of `id`.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/cloudsync_credentials_update"
          }
         }
        }
       }
      }
     },
     "/cloudsync/credentials/get_instance": {
      "post": {
       "tags": [
        "cloudsync.credentials"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_cloudsync_credentials_get_instance"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised.\n\nPlease see `query` method documentation for `options`.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/cloudsync_credentials_get_instance"
          }
         }
        }
       }
      }
     },
     "/cloudsync/credentials/verify": {
      "post": {
       "tags": [
        "cloudsync.credentials"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_cloudsync_credentials_verify"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Verify if `attributes` provided for `provider` are authorized by the `provider`.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/cloudsync_credentials_verify"
          }
         }
        }
       }
      }
     },
     "/config/reset": {
      "post": {
       "tags": [
        "config"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_config_reset"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Reset database to configuration defaults.\n\nIf `reboot` is true this job will reboot the system after its completed with a delay of 10\nseconds.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/config_reset"
          }
         }
        }
       }
      }
     },
     "/config/save": {
      "post": {
       "tags": [
        "config"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_config_save"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Create a tar file of security-sensitive information. These options select which information\nis included in the tar file:\n\n`secretseed` bool: When true, include password secret seed.\n`pool_keys` bool: IGNORED and DEPRECATED as it does not apply on SCALE systems.\n`root_authorized_keys` bool: When true, include \"/root/.ssh/authorized_keys\" file for the root user.\n\nIf none of these options are set, the tar file is not generated and the database file is returned.\n\nA file will be downloaded from this endpoint.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/config_save"
          }
         }
        }
       }
      }
     },
     "/config/upload": {
      "post": {
       "tags": [
        "config"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_config_upload"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Accepts a configuration file via job pipe.\n\nA file must be uploaded to this endpoint. To upload a file, please send a multipart request with two parts. The first, named `data`, should contain a JSON-encoded payload, and the second, named `file`, should contain an uploaded file."
      }
     },
     "/cronjob": {
      "get": {
       "tags": [
        "cronjob"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_cronjob_query"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "limit",
         "in": "query",
         "required": false,
         "schema": {
          "type": "integer"
         }
        },
        {
         "name": "offset",
         "in": "query",
         "required": false,
         "schema": {
          "type": "integer"
         }
        },
        {
         "name": "count",
         "in": "query",
         "required": false,
         "schema": {
          "type": "boolean"
         }
        },
        {
         "name": "sort",
         "in": "query",
         "required": false,
         "schema": {
          "type": "string"
         }
        }
       ],
       "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      },
      "post": {
       "tags": [
        "cronjob"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_cronjob_create"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Create a new cron job.\n\n`stderr` and `stdout` are boolean values which if `true`, represent that we would like to suppress\nstandard error / standard output respectively.\n\n",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/cronjob_create"
          }
         }
        }
       }
      }
     },
     "/cronjob/id/{id_}": {
      "delete": {
       "tags": [
        "cronjob"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_cronjob_delete"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "Delete cronjob of `id`."
      },
      "get": {
       "tags": [
        "cronjob"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_cronjob_query"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      },
      "put": {
       "tags": [
        "cronjob"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_cronjob_update"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "Update cronjob of `id`.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/cronjob_update"
          }
         }
        }
       }
      }
     },
     "/cronjob/get_instance": {
      "post": {
       "tags": [
        "cronjob"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_cronjob_get_instance"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised.\n\nPlease see `query` method documentation for `options`.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/cronjob_get_instance"
          }
         }
        }
       }
      }
     },
     "/cronjob/run": {
      "post": {
       "tags": [
        "cronjob"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_cronjob_run"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Job to run cronjob task of `id`.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/cronjob_run"
          }
         }
        }
       }
      }
     },
     "/device/get_info": {
      "post": {
       "tags": [
        "device"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_device_get_info"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Get info for `type` device.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/device_get_info"
          }
         }
        }
       }
      }
     },
     "/directoryservices/cache_refresh": {
      "get": {
       "tags": [
        "directoryservices"
       ],
       "responses": {
        "200": {
         "$ref": "#/components/responses/Success"
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "This method refreshes the directory services cache for users and groups that is\nused as a backing for `user.query` and `group.query` methods. The first cache fill in\nan Active Directory domain may take a significant amount of time to complete and\nso it is performed as within a job. The most likely situation in which a user may\ndesire to refresh the directory services cache is after new users or groups  to a remote\ndirectory server with the intention to have said users or groups appear in the\nresults of the aforementioned account-related methods.\n\nA cache refresh is not required in order to use newly-added users and groups for in\npermissions and ACL related methods. Likewise, a cache refresh will not resolve issues\nwith users being unable to authenticate to shares."
      }
     },
     "/directoryservices/get_state": {
      "get": {
       "tags": [
        "directoryservices"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_directoryservices_get_state"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "`DISABLED` Directory Service is disabled.\n\n`FAULTED` Directory Service is enabled, but not HEALTHY. Review logs and generated alert\nmessages to debug the issue causing the service to be in a FAULTED state.\n\n`LEAVING` Directory Service is in process of stopping.\n\n`JOINING` Directory Service is in process of starting.\n\n`HEALTHY` Directory Service is enabled, and last status check has passed."
      }
     },
     "/directoryservices/status": {
      "get": {
       "tags": [
        "directoryservices"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_directoryservices_status"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Provide the type and status of the currently-enabled directory service"
      }
     },
     "/disk": {
      "get": {
       "tags": [
        "disk"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_disk_query"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "limit",
         "in": "query",
         "required": false,
         "schema": {
          "type": "integer"
         }
        },
        {
         "name": "offset",
         "in": "query",
         "required": false,
         "schema": {
          "type": "integer"
         }
        },
        {
         "name": "count",
         "in": "query",
         "required": false,
         "schema": {
          "type": "boolean"
         }
        },
        {
         "name": "sort",
         "in": "query",
         "required": false,
         "schema": {
          "type": "string"
         }
        }
       ],
       "description": "Query disks.\n\nThe following extra options are supported:\n\n     include_expired: true - will also include expired disks (default: false)\n     passwords: true - will not hide KMIP password for the disks (default: false)\n     supports_smart: true - will query if disks support S.M.A.R.T. Only supported if resulting disks count is\n                            not larger than one; otherwise, raises an error.\n     pools: true - will join pool name for each disk (default: false)\n\n`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      }
     },
     "/disk/id/{id_}": {
      "get": {
       "tags": [
        "disk"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_disk_query"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "string"
         }
        }
       ],
       "description": "Query disks.\n\nThe following extra options are supported:\n\n     include_expired: true - will also include expired disks (default: false)\n     passwords: true - will not hide KMIP password for the disks (default: false)\n     supports_smart: true - will query if disks support S.M.A.R.T. Only supported if resulting disks count is\n                            not larger than one; otherwise, raises an error.\n     pools: true - will join pool name for each disk (default: false)\n\n`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      },
      "put": {
       "tags": [
        "disk"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_disk_update"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "string"
         }
        }
       ],
       "description": "Update disk of `id`.\n\nIf extra options need to be passed to SMART which we don't already support, they can be passed by\n`smartoptions`.\n\n`critical`, `informational` and `difference` are integer values on which alerts for SMART are configured\nif the disk temperature crosses the assigned threshold for each respective attribute.\nIf they are set to null, then SMARTD config values are used as defaults.\n\nEmail of log level LOG_CRIT is issued when disk temperature crosses `critical`.\n\nEmail of log level LOG_INFO is issued when disk temperature crosses `informational`.\n\nIf temperature of a disk changes by `difference` degree Celsius since the last report, SMART reports this.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/disk_update"
          }
         }
        }
       }
      }
     },
     "/disk/details": {
      "post": {
       "tags": [
        "disk"
       ],
       "responses": {
        "200": {
         "$ref": "#/components/responses/Success"
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Return detailed information for all disks on the system.\n\n`data`: dict\n    `join_partitions`: Bool, when True will return all partitions\n        currently written to disk (NOTE: this is expensive)\n    `type`: str, what type of disk information will be returned.\n        If `USED`, only disks that are IN USE will be returned.\n        If `UNUSED`, only disks that are NOT IN USE are returned.\n        If `BOTH`, used and unused disks will be returned.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/disk_details"
          }
         }
        }
       }
      }
     },
     "/disk/get_instance": {
      "post": {
       "tags": [
        "disk"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_disk_get_instance"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised.\n\nPlease see `query` method documentation for `options`.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/disk_get_instance"
          }
         }
        }
       }
      }
     },
     "/disk/get_used": {
      "post": {
       "tags": [
        "disk"
       ],
       "responses": {
        "200": {
         "$ref": "#/components/responses/Success"
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Return disks that are in use by any zpool that is currently imported. It will\nalso return disks that are in use by any zpool that is exported.\n\n`join_partitions`: Bool, when True will return all partitions currently written to disk\n    NOTE: this is an expensive operation",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/disk_get_used"
          }
         }
        }
       }
      }
     },
     "/disk/resize": {
      "post": {
       "tags": [
        "disk"
       ],
       "responses": {
        "200": {
         "$ref": "#/components/responses/Success"
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Takes a list of disks. Each list entry is a dict that requires a key, value pair.\n`name`: string (the name of the disk (i.e. sda))\n`size`: integer (given in gigabytes)\n`sync`: boolean, when true (default) will synchronize the new size of the disk(s)\n    with the database cache.\n`raise_error`: boolean\n    when true, will raise a `CallError` if any failures occur\n    when false, will will log the errors if any failures occur\n\nNOTE:\n    if `size` is given, the disk with `name` will be resized\n        to `size` (overprovision).\n    if `size` is not given, the disk with `name` will be resized\n        to it's original size (unoverprovision).",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/disk_resize"
          }
         }
        }
       }
      }
     },
     "/disk/retaste": {
      "post": {
       "tags": [
        "disk"
       ],
       "responses": {
        "200": {
         "$ref": "#/components/responses/Success"
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/disk_retaste"
          }
         }
        }
       }
      }
     },
     "/disk/smart_attributes": {
      "post": {
       "tags": [
        "disk"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_disk_smart_attributes"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Returns S.M.A.R.T. attributes values for specified disk name.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/disk_smart_attributes"
          }
         }
        }
       }
      }
     },
     "/disk/temperature": {
      "post": {
       "tags": [
        "disk"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_disk_temperature"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Returns temperature for device `name` using specified S.M.A.R.T. `powermode`. If `cache` is not null\nthen the last cached within `cache` seconds value is used.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/disk_temperature"
          }
         }
        }
       }
      }
     },
     "/disk/temperature_agg": {
      "post": {
       "tags": [
        "disk"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_disk_temperature_agg"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Returns min/max/avg temperature for `names` disks for the last `days` days",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/disk_temperature_agg"
          }
         }
        }
       }
      }
     },
     "/disk/temperature_alerts": {
      "post": {
       "tags": [
        "disk"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_disk_temperature_alerts"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Returns existing temperature alerts for specified disk `names.`",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/disk_temperature_alerts"
          }
         }
        }
       }
      }
     },
     "/disk/temperatures": {
      "post": {
       "tags": [
        "disk"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_disk_temperatures"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Returns temperatures for a list of devices (runs in parallel).\nSee `disk.temperature` documentation for more details.\nIf `only_cached` is specified then this method only returns disk temperatures that exist in cache.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/disk_temperatures"
          }
         }
        }
       }
      }
     },
     "/disk/wipe": {
      "post": {
       "tags": [
        "disk"
       ],
       "responses": {
        "200": {
         "$ref": "#/components/responses/Success"
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Performs a wipe of a disk `dev`.\nIt can be of the following modes:\n  - QUICK: clean the first and last 32 megabytes on `dev`\n  - FULL: write whole disk with zero's\n  - FULL_RANDOM: write whole disk with random bytes",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/disk_wipe"
          }
         }
        }
       }
      }
     },
     "/dns/query": {
      "get": {
       "tags": [
        "dns"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_dns_query"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "limit",
         "in": "query",
         "required": false,
         "schema": {
          "type": "integer"
         }
        },
        {
         "name": "offset",
         "in": "query",
         "required": false,
         "schema": {
          "type": "integer"
         }
        },
        {
         "name": "count",
         "in": "query",
         "required": false,
         "schema": {
          "type": "boolean"
         }
        },
        {
         "name": "sort",
         "in": "query",
         "required": false,
         "schema": {
          "type": "string"
         }
        }
       ],
       "description": "Query Name Servers with `query-filters` and `query-options`.\n\n`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      }
     },
     "/docker": {
      "get": {
       "tags": [
        "docker"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_docker_config"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": ""
      },
      "put": {
       "tags": [
        "docker"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_docker_update"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Update Docker service configuration.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/docker_update"
          }
         }
        }
       }
      }
     },
     "/docker/backup": {
      "post": {
       "tags": [
        "docker"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_docker_backup"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Create a backup of existing apps.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/docker_backup"
          }
         }
        }
       }
      }
     },
     "/docker/delete_backup": {
      "post": {
       "tags": [
        "docker"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_docker_delete_backup"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Delete `backup_name` app backup.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/docker_delete_backup"
          }
         }
        }
       }
      }
     },
     "/docker/list_backups": {
      "get": {
       "tags": [
        "docker"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_docker_list_backups"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "List existing app backups."
      }
     },
     "/docker/nvidia_present": {
      "get": {
       "tags": [
        "docker"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_docker_nvidia_present"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": ""
      }
     },
     "/docker/restore_backup": {
      "post": {
       "tags": [
        "docker"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_docker_restore_backup"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Restore a backup of existing apps.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/docker_restore_backup"
          }
         }
        }
       }
      }
     },
     "/docker/status": {
      "get": {
       "tags": [
        "docker"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_docker_status"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Returns the status of the docker service."
      }
     },
     "/docker/network": {
      "get": {
       "tags": [
        "docker.network"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_docker_network_query"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "limit",
         "in": "query",
         "required": false,
         "schema": {
          "type": "integer"
         }
        },
        {
         "name": "offset",
         "in": "query",
         "required": false,
         "schema": {
          "type": "integer"
         }
        },
        {
         "name": "count",
         "in": "query",
         "required": false,
         "schema": {
          "type": "boolean"
         }
        },
        {
         "name": "sort",
         "in": "query",
         "required": false,
         "schema": {
          "type": "string"
         }
        }
       ],
       "description": "Query all docker networks\n\n`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      }
     },
     "/docker/network/id/{id_}": {
      "get": {
       "tags": [
        "docker.network"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_docker_network_query"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "string"
         }
        }
       ],
       "description": "Query all docker networks\n\n`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      }
     },
     "/docker/network/get_instance": {
      "post": {
       "tags": [
        "docker.network"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_docker_network_get_instance"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised.\n\nPlease see `query` method documentation for `options`.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/docker_network_get_instance"
          }
         }
        }
       }
      }
     },
     "/enclosure/label/set": {
      "post": {
       "tags": [
        "enclosure.label"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_enclosure_label_set"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/enclosure_label_set"
          }
         }
        }
       }
      }
     },
     "/failover": {
      "get": {
       "tags": [
        "failover"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_failover_config"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": ""
      },
      "put": {
       "tags": [
        "failover"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_failover_update"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Update failover state.\n\n`disabled` When true indicates that HA will be disabled.\n`master`  Marks the particular node in the chassis as the master node.\n            The standby node will have the opposite value.\n\n`timeout` is the time to WAIT until a failover occurs when a network\n    event occurs on an interface that is marked critical for failover AND\n    HA is enabled and working appropriately.\n\n    The default time to wait is 2 seconds.\n    **NOTE**\n        This setting does NOT effect the `disabled` or `master` parameters.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/failover_update"
          }
         }
        }
       }
      }
     },
     "/failover/become_passive": {
      "get": {
       "tags": [
        "failover"
       ],
       "responses": {
        "200": {
         "$ref": "#/components/responses/Success"
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "This method is only called manually by the end-user so we fully expect that they\nknow what they're doing. Furthermore, this method will only run if failover has NOT\nbeen administratively disabled. The reason why we only allow this in that scenario\nis because the failover logic (on the other node) will ignore any failover \"event\"\nthat comes in if failover has been administratively disabled. This immediately causes\nthe HA system to go into a \"faulted\" state because the other node will get the VIPs\nbut it will not import the zpool and it will not start fenced. Only way out of that\nsituation is to manually fix things (import zpool, migrate VIPs, start fenced, etc).\n\nNOTE: The only \"safe\" way to \"become passive\" is to use the STCNITH method (similar to STONITH).\n(i.e. Shoot The Current Node In The Head)\n\nThis ensures that the current node gets out of the way _completely_ so there is no chance\nof the zpool being imported at the same time on both nodes (which can ultimately end in data corruption)."
      }
     },
     "/failover/call_remote": {
      "post": {
       "tags": [
        "failover"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_failover_call_remote"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Call a method on the other node.\n\n`method` name of the method to be called\n`args` list of arguments to be passed to `method`\n`options` dictionary with following keys\n    `timeout`: time to wait for `method` to return\n        NOTE: This parameter _ONLY_ applies if the remote\n            client is connected to the other node.\n    `job`: whether the `method` being called is a job\n    `job_return`: if true, will return immediately and not wait\n        for the job to complete, otherwise will wait for the\n        job to complete\n    `callback`: a function that will be called as a callback\n        on completion/failure of `method`.\n        NOTE: Only applies if `method` is a job\n    `connect_timeout`: Maximum amount of time in seconds to wait\n        for remote connection to become available.\n    `raise_connect_error`: If false, will not raise an exception if a connection error to the other node\n        happens, or connection/call timeout happens, or method does not exist on the remote node.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/failover_call_remote"
          }
         }
        }
       }
      }
     },
     "/failover/control": {
      "post": {
       "tags": [
        "failover"
       ],
       "responses": {
        "200": {
         "$ref": "#/components/responses/Success"
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/failover_control"
          }
         }
        }
       }
      }
     },
     "/failover/force_master": {
      "get": {
       "tags": [
        "failover"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_failover_force_master"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Force this controller to become MASTER, if it's not already."
      }
     },
     "/failover/get_ips": {
      "get": {
       "tags": [
        "failover"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_failover_get_ips"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Get a list of IPs for which the webUI can be accessed."
      }
     },
     "/failover/hardware": {
      "get": {
       "tags": [
        "failover"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_failover_hardware"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Returns the hardware type for an HA system.\n  ECHOSTREAM (z-series)\n  ECHOWARP (m-series)\n  LAJOLLA2 (f-series)\n  SUBLIGHT (h-series)\n  PUMA (x-series)\n  BHYVE (HA VMs for CI)\n  IXKVM (HA VMs (on KVM) for CI)\n  MANUAL (everything else)"
      }
     },
     "/failover/in_progress": {
      "get": {
       "tags": [
        "failover"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_failover_in_progress"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Returns True if there is an ongoing failover event."
      }
     },
     "/failover/licensed": {
      "get": {
       "tags": [
        "failover"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_failover_licensed"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Checks whether this instance is licensed as a HA unit"
      }
     },
     "/failover/node": {
      "get": {
       "tags": [
        "failover"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_failover_node"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Returns the slot position in the chassis that\nthe controller is located.\n  A - First node\n  B - Seconde Node\n  MANUAL - slot position in chassis could not be determined"
      }
     },
     "/failover/status": {
      "get": {
       "tags": [
        "failover"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_failover_status"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Get the current HA status.\n\nReturns:\n    MASTER\n    BACKUP\n    ELECTING\n    IMPORTING\n    ERROR\n    SINGLE"
      }
     },
     "/failover/sync_from_peer": {
      "get": {
       "tags": [
        "failover"
       ],
       "responses": {
        "200": {
         "$ref": "#/components/responses/Success"
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Sync database and files from the other controller."
      }
     },
     "/failover/sync_to_peer": {
      "post": {
       "tags": [
        "failover"
       ],
       "responses": {
        "200": {
         "$ref": "#/components/responses/Success"
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Sync database and files to the other controller.\n\n`reboot` as true will reboot the other controller after syncing.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/failover_sync_to_peer"
          }
         }
        }
       }
      }
     },
     "/failover/unlock": {
      "post": {
       "tags": [
        "failover"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_failover_unlock"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Unlock datasets in HA, syncing passphrase between controllers and forcing this controller\nto be MASTER importing the pools.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/failover_unlock"
          }
         }
        }
       }
      }
     },
     "/failover/upgrade": {
      "post": {
       "tags": [
        "failover"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_failover_upgrade"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Upgrades both controllers.\n\nFiles will be downloaded to the Active Controller and then transferred to the Standby\nController.\n\nUpgrade process will start concurrently on both nodes.\n\nOnce both upgrades are applied, the Standby Controller will reboot. This job will wait for\nthat job to complete before finalizing.\n\n`resume` should be set to `true` if a previous call to this method returned a `CallError` with `errno=EAGAIN`\nmeaning that an upgrade can be performed with a warning and that warning is accepted. In that case, you also\nhave to set `resume_manual` to `true` if a previous call to this method was performed using update file upload.\n\nA file might be uploaded to this endpoint. To upload a file, please send a multipart request with two parts. The first, named `data`, should contain a JSON-encoded payload, and the second, named `file`, should contain an uploaded file.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/failover_upgrade"
          }
         }
        }
       }
      }
     },
     "/failover/reboot/info": {
      "get": {
       "tags": [
        "failover.reboot"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_failover_reboot_info"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": ""
      }
     },
     "/failover/reboot/other_node": {
      "get": {
       "tags": [
        "failover.reboot"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_failover_reboot_other_node"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Reboot the other node and wait for it to come back online.\n\nNOTE: This makes very few checks on HA systems. You need to\n    know what you're doing before calling this."
      }
     },
     "/filesystem/can_access_as_user": {
      "post": {
       "tags": [
        "filesystem"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_filesystem_can_access_as_user"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Check if `username` is able to access `path` with specific `permissions`. At least one of `read/write/execute`\npermission must be specified for checking with each of these defaulting to `null`. `null` for\n`read/write/execute` represents that the permission should not be checked.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/filesystem_can_access_as_user"
          }
         }
        }
       }
      }
     },
     "/filesystem/chown": {
      "post": {
       "tags": [
        "filesystem"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_filesystem_chown"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Change owner or group of file at `path`.\n\n`uid` and `gid` specify new owner of the file. If either\nkey is absent or None, then existing value on the file is not\nchanged.\n\n`user` and `group` alternatively allow specifying a uid gid by\nuser name or group name.\n\n`recursive` performs action recursively, but does\nnot traverse filesystem mount points.\n\nIf `traverse` and `recursive` are specified, then the chown\noperation will traverse filesystem mount points.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/filesystem_chown"
          }
         }
        }
       }
      }
     },
     "/filesystem/get": {
      "post": {
       "tags": [
        "filesystem"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_filesystem_get"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Job to get contents of `path`.\n\nA file will be downloaded from this endpoint.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/filesystem_get"
          }
         }
        }
       }
      }
     },
     "/filesystem/get_zfs_attributes": {
      "post": {
       "tags": [
        "filesystem"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_filesystem_get_zfs_attributes"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Get the current ZFS attributes for the file at the given path",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/filesystem_get_zfs_attributes"
          }
         }
        }
       }
      }
     },
     "/filesystem/getacl": {
      "post": {
       "tags": [
        "filesystem"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_filesystem_getacl"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Return ACL of a given path. This may return a POSIX1e ACL or a NFSv4 ACL. The acl type is indicated\nby the `acltype` key.\n\n`simplified` - effect of this depends on ACL type on underlying filesystem. In the case of\nNFSv4 ACLs simplified permissions and flags are returned for ACL entries where applicable.\nNFSv4 errata below. In the case of POSIX1E ACls, this setting has no impact on returned ACL.\n\n`resolve_ids` - adds additional `who` key to each ACL entry, that converts the numeric id to\na user name or group name. In the case of owner@ and group@ (NFSv4) or USER_OBJ and GROUP_OBJ\n(POSIX1E), st_uid or st_gid will be converted from stat() return for file. In the case of\nMASK (POSIX1E), OTHER (POSIX1E), everyone@ (NFSv4), key `who` will be included, but set to null.\nIn case of failure to resolve the id to a name, `who` will be set to null. This option should\nonly be used if resolving ids to names is required.\n\nErrata about ACLType NFSv4:\n\n`simplified` returns a shortened form of the ACL permset and flags where applicable. If permissions\nhave been simplified, then the `perms` object will contain only a single `BASIC` key with a string\ndescribing the underlying permissions set.\n\n`TRAVERSE` sufficient rights to traverse a directory, but not read contents.\n\n`READ` sufficient rights to traverse a directory, and read file contents.\n\n`MODIFIY` sufficient rights to traverse, read, write, and modify a file.\n\n`FULL_CONTROL` all permissions.\n\nIf the permisssions do not fit within one of the pre-defined simplified permissions types, then\nthe full ACL entry will be returned.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/filesystem_getacl"
          }
         }
        }
       }
      }
     },
     "/filesystem/listdir": {
      "post": {
       "tags": [
        "filesystem"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_filesystem_listdir"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Get the contents of a directory.\n\nThe select option may be used to optimize listdir performance. Metadata-related\nfields that are not selected will not be retrieved from the filesystem.\n\nFor example {\"select\": [\"path\", \"type\"]} will avoid querying an xattr list and\nZFS attributes for files in a directory.\n\nNOTE: an empty list for select (default) is treated as requesting all information.\n\nEach entry of the list consists of:\n  name(str): name of the file\n  path(str): absolute path of the entry\n  realpath(str): absolute real path of the entry (if SYMLINK)\n  type(str): DIRECTORY | FILE | SYMLINK | OTHER\n  size(int): size of the entry\n  allocation_size(int): on-disk size of entry\n  mode(int): file mode/permission\n  uid(int): user id of entry owner\n  gid(int): group id of entry owner\n  acl(bool): extended ACL is present on file\n  is_mountpoint(bool): path is a mountpoint\n  is_ctldir(bool): path is within special .zfs directory\n  attributes(list): list of statx file attributes that apply to the\n  file. See statx(2) manpage for more details.\n  xattrs(list): list of extended attribute names.\n  zfs_attrs(list): list of ZFS file attributes on file",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/filesystem_listdir"
          }
         }
        }
       }
      }
     },
     "/filesystem/mkdir": {
      "post": {
       "tags": [
        "filesystem"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_filesystem_mkdir"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Create a directory at the specified path.\n\nThe following options are supported:\n\n`mode` - specify the permissions to set on the new directory (0o755 is default).\n`raise_chmod_error` - choose whether to raise an exception if the attempt to set\nmode fails. In this case, the newly created directory will be removed to prevent\nuse with unintended permissions.\n\nNOTE: if chmod error is skipped, the resulting `mode` key in mkdir response will\nindicate the current permissions on the directory and not the permissions specified\nin the mkdir payload",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/filesystem_mkdir"
          }
         }
        }
       }
      }
     },
     "/filesystem/put": {
      "post": {
       "tags": [
        "filesystem"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_filesystem_put"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Job to put contents to `path`.\n\nA file must be uploaded to this endpoint. To upload a file, please send a multipart request with two parts. The first, named `data`, should contain a JSON-encoded payload, and the second, named `file`, should contain an uploaded file.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/filesystem_put"
          }
         }
        }
       }
      }
     },
     "/filesystem/set_zfs_attributes": {
      "post": {
       "tags": [
        "filesystem"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_filesystem_set_zfs_attributes"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Set special ZFS-related file flags on the specified path\n\n`readonly` - this maps to READONLY MS-DOS attribute. When set, file may not be\nwritten to (toggling does not impact existing file opens).\n\n`hidden` - this maps to HIDDEN MS-DOS attribute. When set, the SMB HIDDEN flag\nis set and file is \"hidden\" from the perspective of SMB clients.\n\n`system` - this maps to SYSTEM MS-DOS attribute. Is presented to SMB clients, but\nhas no impact on local filesystem.\n\n`archive` - this maps to ARCHIVE MS-DOS attribute. Value is reset to True whenever\nfile is modified.\n\n`immutable` - file may not be altered or deleted. Also appears as IMMUTABLE in\nattributes in `filesystem.stat` output and as STATX_ATTR_IMMUTABLE in statx() response.\n\n`nounlink` - file may be altered but not deleted.\n\n`appendonly` - file may only be opened with O_APPEND flag. Also appears as APPEND in\nattributes in `filesystem.stat` output and as STATX_ATTR_APPEND in statx() response.\n\n`offline` - this maps to OFFLINE MS-DOS attribute. Is presented to SMB clients, but\nhas no impact on local filesystem.\n\n`sparse` - maps to SPARSE MS-DOS attribute. Is presented to SMB clients, but has\nno impact on local filesystem.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/filesystem_set_zfs_attributes"
          }
         }
        }
       }
      }
     },
     "/filesystem/setacl": {
      "post": {
       "tags": [
        "filesystem"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_filesystem_setacl"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Set ACL of a given path. Takes the following parameters:\n`path` full path to directory or file.\n\n`dacl` ACL entries. Formatting depends on the underlying `acltype`. NFS4ACL requires\nNFSv4 entries. POSIX1e requires POSIX1e entries.\n\n`uid` the desired UID of the file user. If set to None (the default), then user is not changed.\n\n`user` the desired username for the file user. If set to None, then user is not changed.\n\nNote about interaction between `uid` and `user`:\nOne and only one of these parameters should be set, and _only_ if the API consumer wishes to\nchange the owner on the file / directory.\n\n`gid` the desired GID of the file group. If set to None (the default), then group is not changed.\n\n`group` the desired groupname for the file group. If set to None (the default), then group is not\nchanged.\n\nNote about interaction between `gid` and `group`:\nOne and only one of these parameters should be set, and _only_ if the API consumer wishes to\nchange the owner on the file / directory.\n\nWARNING: if user, uid, group, or gid is specified in a recursive operation then the owning\nuser, group, or both for _all_ files will be changed.\n\n`recursive` apply the ACL recursively\n\n`traverse` traverse filestem boundaries (ZFS datasets)\n\n`strip` convert ACL to trivial. ACL is trivial if it can be expressed as a file mode without\nlosing any access rules.\n\n`canonicalize` reorder ACL entries so that they are in concanical form as described\nin the Microsoft documentation MS-DTYP 2.4.5 (ACL). This only applies to NFSv4 ACLs.\n\nThe following notes about ACL entries are necessarily terse. If more detail is requried\nplease consult relevant TrueNAS documentation.\n\nNotes about NFSv4 ACL entry fields:\n\n`tag` refers to the type of principal to whom the ACL entries applies. USER and GROUP have\nconventional meanings. `owner@` refers to the owning user of the file, `group@` refers to the owning\ngroup of the file, and `everyone@` refers to ALL users (including the owning user and group)..\n\n`id` refers to the numeric user id or group id associatiated with USER or GROUP entries.\n\n`who` a user or group name may be specified in lieu of numeric ID for USER or GROUP entries\n\n`type` may be ALLOW or DENY. Deny entries take precedence over allow when the ACL is evaluated.\n\n`perms` permissions allowed or denied by the entry. May be set as a simlified BASIC type or\nmore complex type detailing specific permissions.\n\n`flags` inheritance flags determine how this entry will be presented (if at all) on newly-created\nfiles or directories within the specified path. Only valid for directories.\n\nNotes about posix1e ACL entry fields:\n\n`default` the ACL entry is in the posix default ACL (will be copied to new files and directories)\ncreated within the directory where it is set. These are _NOT_ evaluated when determining access for\nthe file on which they're set. If default is false then the entry applies to the posix access ACL,\nwhich is used to determine access to the directory, but is not inherited on new files / directories.\n\n`tag` the type of principal to whom the ACL entry apples. USER and GROUP have conventional meanings\nUSER_OBJ refers to the owning user of the file and is also denoted by \"user\" in conventional POSIX\nUGO permissions. GROUP_OBJ refers to the owning group of the file and is denoted by \"group\" in the\nsame. OTHER refers to POSIX other, which applies to all users and groups who are not USER_OBJ or\nGROUP_OBJ. MASK sets maximum permissions granted to all USER and GROUP entries. A valid POSIX1 ACL\nentry contains precisely one USER_OBJ, GROUP_OBJ, OTHER, and MASK entry for the default and access\nlist.\n\n`id` refers to the numeric user id or group id associatiated with USER or GROUP entries.\n\n`who` a user or group name may be specified in lieu of numeric ID for USER or GROUP entries\n\n`perms` - object containing posix permissions.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/filesystem_setacl"
          }
         }
        }
       }
      }
     },
     "/filesystem/setperm": {
      "post": {
       "tags": [
        "filesystem"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_filesystem_setperm"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Set unix permissions on given `path`.\n\nIf `mode` is specified then the mode will be applied to the\npath and files and subdirectories depending on which `options` are\nselected. Mode should be formatted as string representation of octal\npermissions bits.\n\n`uid` the desired UID of the file user. If set to None (the default), then user is not changed.\n\n`gid` the desired GID of the file group. If set to None (the default), then group is not changed.\n\n`user` and `group` alternatively allow specifying the owner by name.\n\nWARNING: `uid`, `gid, `user`, and `group` _should_ remain unset _unless_\nthe administrator wishes to change the owner or group of files.\n\n`stripacl` setperm will fail if an extended ACL is present on `path`,\nunless `stripacl` is set to True.\n\n`recursive` remove ACLs recursively, but do not traverse dataset\nboundaries.\n\n`traverse` remove ACLs from child datasets.\n\nIf no `mode` is set, and `stripacl` is True, then non-trivial ACLs\nwill be converted to trivial ACLs. An ACL is trivial if it can be\nexpressed as a file mode without losing any access rules.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/filesystem_setperm"
          }
         }
        }
       }
      }
     },
     "/filesystem/stat": {
      "post": {
       "tags": [
        "filesystem"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_filesystem_stat"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Return filesystem information for a given path.\n\n`realpath(str)`: absolute real path of the entry (if SYMLINK)\n\n`type(str)`: DIRECTORY | FILE | SYMLINK | OTHER\n\n`size(int)`: size of the entry\n\n`allocation_size(int)`: on-disk size of entry\n\n`mode(int)`: file mode/permission\n\n`uid(int)`: user id of file owner\n\n`gid(int)`: group id of file owner\n\n`atime(float)`: timestamp for when file was last accessed.\nNOTE: this timestamp may be changed from userspace.\n\n`mtime(float)`: timestamp for when file data was last modified\nNOTE: this timestamp may be changed from userspace.\n\n`ctime(float)`: timestamp for when file was last changed.\n\n`btime(float)`: timestamp for when file was initially created.\nNOTE: depending on platform this may be changed from userspace.\n\n`dev(int)`: device id of the device containing the file. In the\ncontext of the TrueNAS API, this is sufficient to uniquely identify\na given dataset.\n\n`mount_id(int)`: the mount id for the filesystem underlying the given path.\nBind mounts will have same device id, but different mount IDs. This value\nis sufficient to uniquely identify the particular mount which can be used\nto identify children of the given mountpoint.\n\n`inode(int)`: inode number of the file. This number uniquely identifies\nthe file on the given device, but once a file is deleted its inode number\nmay be reused.\n\n`nlink(int)`: number of hard lnks to the file.\n\n`acl(bool)`: extended ACL is present on file\n\n`is_mountpoint(bool)`: path is a mountpoint\n\n`is_ctldir(bool)`: path is within special .zfs directory\n\n`attributes(list)`: list of statx file attributes that apply to the\nfile. See statx(2) manpage for more details.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/filesystem_stat"
          }
         }
        }
       }
      }
     },
     "/filesystem/statfs": {
      "post": {
       "tags": [
        "filesystem"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_filesystem_statfs"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Return stats from the filesystem of a given path.\n\nRaises:\n    CallError(ENOENT) - Path not found",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/filesystem_statfs"
          }
         }
        }
       }
      }
     },
     "/filesystem/acltemplate": {
      "get": {
       "tags": [
        "filesystem.acltemplate"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_filesystem_acltemplate_query"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "limit",
         "in": "query",
         "required": false,
         "schema": {
          "type": "integer"
         }
        },
        {
         "name": "offset",
         "in": "query",
         "required": false,
         "schema": {
          "type": "integer"
         }
        },
        {
         "name": "count",
         "in": "query",
         "required": false,
         "schema": {
          "type": "boolean"
         }
        },
        {
         "name": "sort",
         "in": "query",
         "required": false,
         "schema": {
          "type": "string"
         }
        }
       ],
       "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      },
      "post": {
       "tags": [
        "filesystem.acltemplate"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_filesystem_acltemplate_create"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Create a new filesystem ACL template.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/filesystem_acltemplate_create"
          }
         }
        }
       }
      }
     },
     "/filesystem/acltemplate/id/{id_}": {
      "delete": {
       "tags": [
        "filesystem.acltemplate"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_filesystem_acltemplate_delete"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": ""
      },
      "get": {
       "tags": [
        "filesystem.acltemplate"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_filesystem_acltemplate_query"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      },
      "put": {
       "tags": [
        "filesystem.acltemplate"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_filesystem_acltemplate_update"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "update filesystem ACL template with `id`.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/filesystem_acltemplate_update"
          }
         }
        }
       }
      }
     },
     "/filesystem/acltemplate/by_path": {
      "post": {
       "tags": [
        "filesystem.acltemplate"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_filesystem_acltemplate_by_path"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Retrieve list of available ACL templates for a given `path`.\n\nSupports `query-filters` and `query-options`.\n`format-options` gives additional options to alter the results of\nthe template query:\n\n`canonicalize` - place ACL entries for NFSv4 ACLs in Microsoft canonical order.\n`ensure_builtins` - ensure all results contain entries for `builtin_users` and `builtin_administrators`\ngroups.\n`resolve_names` - convert ids in ACL entries into names.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/filesystem_acltemplate_by_path"
          }
         }
        }
       }
      }
     },
     "/filesystem/acltemplate/get_instance": {
      "post": {
       "tags": [
        "filesystem.acltemplate"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_filesystem_acltemplate_get_instance"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised.\n\nPlease see `query` method documentation for `options`.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/filesystem_acltemplate_get_instance"
          }
         }
        }
       }
      }
     },
     "/ftp": {
      "get": {
       "tags": [
        "ftp"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_ftp_config"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": ""
      },
      "put": {
       "tags": [
        "ftp"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_ftp_update"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Update ftp service configuration.\n\n`clients` is an integer value which sets the maximum number of simultaneous clients allowed. It defaults to 32.\n\n`ipconnections` is an integer value which shows the maximum number of connections per IP address. It defaults\nto 0 which equals to unlimited.\n\n`timeout` is the maximum number of seconds that proftpd will allow clients to stay connected without receiving\nany data on either the control or data connection.\n\n`timeout_notransfer` is the maximum number of seconds a client is allowed to spend connected, after\nauthentication, without issuing a command which results in creating an active or passive data connection\n(i.e. sending/receiving a file, or receiving a directory listing).\n\n`onlyanonymous` allows anonymous FTP logins with access to the directory specified by `anonpath`.\n\n`banner` is a message displayed to local login users after they successfully authenticate. It is not displayed\nto anonymous login users.\n\n`filemask` sets the default permissions for newly created files which by default are 077.\n\n`dirmask` sets the default permissions for newly created directories which by default are 077.\n\n`resume` if set allows FTP clients to resume interrupted transfers.\n\n`fxp` if set to true indicates that File eXchange Protocol is enabled. Generally it is discouraged as it\nmakes the server vulnerable to FTP bounce attacks.\n\n`defaultroot` when set ensures that for local users, home directory access is only granted if the user\nis a member of group wheel.\n\n`ident` is a boolean value which when set to true indicates that IDENT authentication is required. If identd\nis not running on the client, this can result in timeouts.\n\n`masqaddress` is the public IP address or hostname which is set if FTP clients cannot connect through a\nNAT device.\n\n`localuserbw` is a positive integer value which indicates maximum upload bandwidth in KB/s for local user.\nDefault of zero indicates unlimited upload bandwidth ( from the FTP server configuration ).\n\n`localuserdlbw` is a positive integer value which indicates maximum download bandwidth in KB/s for local user.\nDefault of zero indicates unlimited download bandwidth ( from the FTP server configuration ).\n\n`anonuserbw` is a positive integer value which indicates maximum upload bandwidth in KB/s for anonymous user.\nDefault of zero indicates unlimited upload bandwidth ( from the FTP server configuration ).\n\n`anonuserdlbw` is a positive integer value which indicates maximum download bandwidth in KB/s for anonymous\nuser. Default of zero indicates unlimited download bandwidth ( from the FTP server configuration ).\n\n`tls` is a boolean value which when set indicates that encrypted connections are enabled. This requires a\ncertificate to be configured first with the certificate service and the id of certificate is passed on in\n`ssltls_certificate`.\n\n`tls_policy` defines whether the control channel, data channel, both channels, or neither channel of an FTP\nsession must occur over SSL/TLS.\n\n`tls_opt_enable_diags` is a boolean value when set, logs verbosely. This is helpful when troubleshooting a\nconnection.\n\n`options` is a string used to add proftpd(8) parameters not covered by ftp service.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/ftp_update"
          }
         }
        }
       }
      }
     },
     "/group": {
      "get": {
       "tags": [
        "group"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_group_query"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "limit",
         "in": "query",
         "required": false,
         "schema": {
          "type": "integer"
         }
        },
        {
         "name": "offset",
         "in": "query",
         "required": false,
         "schema": {
          "type": "integer"
         }
        },
        {
         "name": "count",
         "in": "query",
         "required": false,
         "schema": {
          "type": "boolean"
         }
        },
        {
         "name": "sort",
         "in": "query",
         "required": false,
         "schema": {
          "type": "string"
         }
        }
       ],
       "description": "Query groups with `query-filters` and `query-options`.\n\n`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      },
      "post": {
       "tags": [
        "group"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_group_create"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Create a new group.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/group_create"
          }
         }
        }
       }
      }
     },
     "/group/id/{id_}": {
      "delete": {
       "tags": [
        "group"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_group_delete"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "Delete group `id`.\n\nThe `delete_users` option deletes all users that have this group as their primary group.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/group_delete"
          }
         }
        }
       }
      },
      "get": {
       "tags": [
        "group"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_group_query"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "Query groups with `query-filters` and `query-options`.\n\n`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      },
      "put": {
       "tags": [
        "group"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_group_update"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "Update attributes of an existing group.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/group_update"
          }
         }
        }
       }
      }
     },
     "/group/get_group_obj": {
      "post": {
       "tags": [
        "group"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_group_get_group_obj"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Returns dictionary containing information from struct grp for the group specified by either\nthe `groupname` or `gid`.\n\nIf `sid_info` is specified then addition SMB / domain information is returned for the\ngroup.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/group_get_group_obj"
          }
         }
        }
       }
      }
     },
     "/group/get_instance": {
      "post": {
       "tags": [
        "group"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_group_get_instance"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised.\n\nPlease see `query` method documentation for `options`.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/group_get_instance"
          }
         }
        }
       }
      }
     },
     "/group/get_next_gid": {
      "get": {
       "tags": [
        "group"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_group_get_next_gid"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Get the next available/free gid."
      }
     },
     "/group/has_password_enabled_user": {
      "post": {
       "tags": [
        "group"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_group_has_password_enabled_user"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Checks whether at least one local user with a password is a member of any of the `group_ids`.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/group_has_password_enabled_user"
          }
         }
        }
       }
      }
     },
     "/hardware/memory/error_info": {
      "get": {
       "tags": [
        "hardware.memory"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_hardware_memory_error_info"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": ""
      }
     },
     "/idmap": {
      "get": {
       "tags": [
        "idmap"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_idmap_query"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "limit",
         "in": "query",
         "required": false,
         "schema": {
          "type": "integer"
         }
        },
        {
         "name": "offset",
         "in": "query",
         "required": false,
         "schema": {
          "type": "integer"
         }
        },
        {
         "name": "count",
         "in": "query",
         "required": false,
         "schema": {
          "type": "boolean"
         }
        },
        {
         "name": "sort",
         "in": "query",
         "required": false,
         "schema": {
          "type": "string"
         }
        }
       ],
       "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      },
      "post": {
       "tags": [
        "idmap"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_idmap_create"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Create a new IDMAP domain. These domains must be unique. This table\nwill be automatically populated after joining an Active Directory domain\nif \"allow trusted domains\" is set to True in the AD service configuration.\nThere are three default system domains: DS_TYPE_ACTIVEDIRECTORY, DS_TYPE_LDAP, DS_TYPE_DEFAULT_DOMAIN.\nThe system domains correspond with the idmap settings under Active Directory, LDAP, and SMB\nrespectively.\n\n`name` the pre-windows 2000 domain name.\n\n`DNS_domain_name` DNS name of the domain.\n\n`idmap_backend` provides a plugin interface for Winbind to use varying\nbackends to store SID/uid/gid mapping tables. The correct setting\ndepends on the environment in which the NAS is deployed.\n\n`range_low` and `range_high` specify the UID and GID range for which this backend is authoritative.\n\n`certificate_id` references the certificate ID of the SSL certificate to use for certificate-based\nauthentication to a remote LDAP server. This parameter is not supported for all idmap backends as some\nbackends will generate SID to ID mappings algorithmically without causing network traffic.\n\n`options` are additional parameters that are backend-dependent:\n\n`AD` idmap backend options:\n`unix_primary_group` If True, the primary group membership is fetched from the LDAP attributes (gidNumber).\nIf False, the primary group membership is calculated via the \"primaryGroupID\" LDAP attribute.\n\n`unix_nss_info` if True winbind will retrieve the login shell and home directory from the LDAP attributes.\nIf False or if the AD LDAP entry lacks the SFU attributes the smb4.conf parameters `template shell` and `template homedir` are used.\n\n`schema_mode` Defines the schema that idmap_ad should use when querying Active Directory regarding user and group information.\nThis can be either the RFC2307 schema support included in Windows 2003 R2 or the Service for Unix (SFU) schema.\nFor SFU 3.0 or 3.5 please choose \"SFU\", for SFU 2.0 please choose \"SFU20\". The behavior of primary group membership is\ncontrolled by the unix_primary_group option.\n\n`AUTORID` idmap backend options:\n`readonly` sets the module to read-only mode. No new ranges will be allocated and new mappings\nwill not be created in the idmap pool.\n\n`ignore_builtin` ignores mapping requests for the BUILTIN domain.\n\n`LDAP` idmap backend options:\n`ldap_base_dn` defines the directory base suffix to use for SID/uid/gid mapping entries.\n\n`ldap_user_dn` defines the user DN to be used for authentication.\n\n`ldap_url` specifies the LDAP server to use for SID/uid/gid map entries.\n\n`ssl` specifies whether to encrypt the LDAP transport for the idmap backend.\n\n`NSS` idmap backend options:\n`linked_service` specifies the auxiliary directory service ID provider.\n\n`RFC2307` idmap backend options:\n`domain` specifies the domain for which the idmap backend is being created. Numeric id, short-form\ndomain name, or long-form DNS domain name of the domain may be specified. Entry must be entered as\nit appears in `idmap.domain`.\n\n`range_low` and `range_high` specify the UID and GID range for which this backend is authoritative.\n\n`ldap_server` defines the type of LDAP server to use. This can either be an LDAP server provided\nby the Active Directory Domain (ad) or a stand-alone LDAP server.\n\n`bind_path_user` specfies the search base where user objects can be found in the LDAP server.\n\n`bind_path_group` specifies the search base where group objects can be found in the LDAP server.\n\n`user_cn` query cn attribute instead of uid attribute for the user name in LDAP.\n\n`realm` append @realm to cn for groups (and users if user_cn is set) in LDAP queries.\n\n`ldmap_domain` when using the LDAP server in the Active Directory server, this allows one to\nspecify the domain where to access the Active Directory server. This allows using trust relationships\nwhile keeping all RFC 2307 records in one place. This parameter is optional, the default is to access\nthe AD server in the current domain to query LDAP records.\n\n`ldap_url` when using a stand-alone LDAP server, this parameter specifies the LDAP URL for accessing the LDAP server.\n\n`ldap_user_dn` defines the user DN to be used for authentication.\n\n`ldap_user_dn_password` is the password to be used for LDAP authentication.\n\n`realm` defines the realm to use in the user and group names. This is only required when using cn_realm together with\n a stand-alone ldap server.\n\n`RID` backend options:\n`sssd_compat` generate idmap low range based on same algorithm that SSSD uses by default.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/idmap_create"
          }
         }
        }
       }
      }
     },
     "/idmap/id/{id_}": {
      "delete": {
       "tags": [
        "idmap"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_idmap_delete"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "Delete a domain by id. Deletion of default system domains is not permitted."
      },
      "get": {
       "tags": [
        "idmap"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_idmap_query"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      },
      "put": {
       "tags": [
        "idmap"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_idmap_update"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "Update a domain by id.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/idmap_update"
          }
         }
        }
       }
      }
     },
     "/idmap/backend_choices": {
      "get": {
       "tags": [
        "idmap"
       ],
       "responses": {
        "200": {
         "$ref": "#/components/responses/Success"
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Returns array of valid idmap backend choices per directory service."
      }
     },
     "/idmap/backend_options": {
      "get": {
       "tags": [
        "idmap"
       ],
       "responses": {
        "200": {
         "$ref": "#/components/responses/Success"
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "This returns full information about idmap backend options. Not all\n`options` are valid for every backend."
      }
     },
     "/idmap/clear_idmap_cache": {
      "get": {
       "tags": [
        "idmap"
       ],
       "responses": {
        "200": {
         "$ref": "#/components/responses/Success"
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Stop samba, remove the winbindd_cache.tdb file, start samba, flush samba's cache.\nThis should be performed after finalizing idmap changes."
      }
     },
     "/idmap/get_instance": {
      "post": {
       "tags": [
        "idmap"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_idmap_get_instance"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised.\n\nPlease see `query` method documentation for `options`.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/idmap_get_instance"
          }
         }
        }
       }
      }
     },
     "/initshutdownscript": {
      "get": {
       "tags": [
        "initshutdownscript"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_initshutdownscript_query"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "limit",
         "in": "query",
         "required": false,
         "schema": {
          "type": "integer"
         }
        },
        {
         "name": "offset",
         "in": "query",
         "required": false,
         "schema": {
          "type": "integer"
         }
        },
        {
         "name": "count",
         "in": "query",
         "required": false,
         "schema": {
          "type": "boolean"
         }
        },
        {
         "name": "sort",
         "in": "query",
         "required": false,
         "schema": {
          "type": "string"
         }
        }
       ],
       "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      },
      "post": {
       "tags": [
        "initshutdownscript"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_initshutdownscript_create"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Create an initshutdown script task.\n\n`type` indicates if a command or script should be executed at `when`.\n\nThere are three choices for `when`:\n\n1) PREINIT - This is early in the boot process before all the services have started\n2) POSTINIT - This is late in the boot process when most of the services have started\n3) SHUTDOWN - This is on shutdown\n\n`timeout` is an integer value which indicates time in seconds which the system should wait for the execution\nof script/command. It should be noted that a hard limit for a timeout is configured by the base OS, so when\na script/command is set to execute on SHUTDOWN, the hard limit configured by the base OS is changed adding\nthe timeout specified by script/command so it can be ensured that it executes as desired and is not interrupted\nby the base OS's limit.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/initshutdownscript_create"
          }
         }
        }
       }
      }
     },
     "/initshutdownscript/id/{id_}": {
      "delete": {
       "tags": [
        "initshutdownscript"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_initshutdownscript_delete"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "Delete init/shutdown task of `id`."
      },
      "get": {
       "tags": [
        "initshutdownscript"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_initshutdownscript_query"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      },
      "put": {
       "tags": [
        "initshutdownscript"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_initshutdownscript_update"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "Update initshutdown script task of `id`.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/initshutdownscript_update"
          }
         }
        }
       }
      }
     },
     "/initshutdownscript/get_instance": {
      "post": {
       "tags": [
        "initshutdownscript"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_initshutdownscript_get_instance"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised.\n\nPlease see `query` method documentation for `options`.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/initshutdownscript_get_instance"
          }
         }
        }
       }
      }
     },
     "/interface": {
      "get": {
       "tags": [
        "interface"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_interface_query"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "limit",
         "in": "query",
         "required": false,
         "schema": {
          "type": "integer"
         }
        },
        {
         "name": "offset",
         "in": "query",
         "required": false,
         "schema": {
          "type": "integer"
         }
        },
        {
         "name": "count",
         "in": "query",
         "required": false,
         "schema": {
          "type": "boolean"
         }
        },
        {
         "name": "sort",
         "in": "query",
         "required": false,
         "schema": {
          "type": "string"
         }
        }
       ],
       "description": "Query Interfaces with `query-filters` and `query-options`\n\n`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      },
      "post": {
       "tags": [
        "interface"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_interface_create"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Create virtual interfaces (Link Aggregation, VLAN)\n\nFor BRIDGE `type` the following attribute is required: bridge_members.\n\nFor LINK_AGGREGATION `type` the following attributes are required: lag_ports,\nlag_protocol.\n\nFor VLAN `type` the following attributes are required: vlan_parent_interface,\nvlan_tag and vlan_pcp.\n\n",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/interface_create"
          }
         }
        }
       }
      }
     },
     "/interface/id/{id_}": {
      "delete": {
       "tags": [
        "interface"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_interface_delete"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "string"
         }
        }
       ],
       "description": "Delete Interface of `id`."
      },
      "get": {
       "tags": [
        "interface"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_interface_query"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "string"
         }
        }
       ],
       "description": "Query Interfaces with `query-filters` and `query-options`\n\n`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      },
      "put": {
       "tags": [
        "interface"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_interface_update"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "string"
         }
        }
       ],
       "description": "Update Interface of `id`.\n\n",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/interface_update"
          }
         }
        }
       }
      }
     },
     "/interface/bridge_members_choices": {
      "post": {
       "tags": [
        "interface"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_interface_bridge_members_choices"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Return available interface choices that can be added to a `br` (bridge) interface.\n\n`id` is name of existing bridge interface on the system that will have its member\n        interfaces included.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/interface_bridge_members_choices"
          }
         }
        }
       }
      }
     },
     "/interface/cancel_rollback": {
      "get": {
       "tags": [
        "interface"
       ],
       "responses": {
        "200": {
         "$ref": "#/components/responses/Success"
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "If this method is called after interface changes have been committed and within the checkin timeout,\nthen the task that automatically rolls back any interface changes is cancelled and the in-memory snapshot\nof database tables for the various interface tables will NOT be cleared."
      }
     },
     "/interface/checkin": {
      "get": {
       "tags": [
        "interface"
       ],
       "responses": {
        "200": {
         "$ref": "#/components/responses/Success"
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "If this method is called after interface changes have been committed and within the checkin timeout,\nthen the task that automatically rolls back any interface changes is cancelled and the in-memory snapshot\nof database tables for the various interface tables will be cleared. The idea is that the end-user has\nverified the changes work as intended and need to be committed permanently."
      }
     },
     "/interface/checkin_waiting": {
      "get": {
       "tags": [
        "interface"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_interface_checkin_waiting"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Returns whether we are waiting user to check in the applied network changes\nbefore they are rolled back.\nValue is in number of seconds or null."
      }
     },
     "/interface/choices": {
      "post": {
       "tags": [
        "interface"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_interface_choices"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Choices of available network interfaces.\n\n`bridge_members` will include BRIDGE members.\n`lag_ports` will include LINK_AGGREGATION ports.\n`vlan_parent` will include VLAN parent interface.\n`exclude` is a list of interfaces prefix to remove.\n`include` is a list of interfaces that should not be removed.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/interface_choices"
          }
         }
        }
       }
      }
     },
     "/interface/commit": {
      "post": {
       "tags": [
        "interface"
       ],
       "responses": {
        "200": {
         "$ref": "#/components/responses/Success"
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Commit/apply pending interfaces changes.\n\n`rollback` as true (default) will roll back changes in case they fail to apply.\n`checkin_timeout` is the time in seconds it will wait for the checkin call to acknowledge\nthe interfaces changes happened as planned from the user. If checkin does not happen\nwithin this period of time the changes will get reverted.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/interface_commit"
          }
         }
        }
       }
      }
     },
     "/interface/default_route_will_be_removed": {
      "get": {
       "tags": [
        "interface"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_interface_default_route_will_be_removed"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "On a fresh install of SCALE, dhclient is started for every interface so IP\naddresses/routes could be installed via that program. However, when the\nend-user goes to configure the first interface we tear down all other interfaces\nconfigs AND delete the default route. We also remove the default route if the\nconfigured gateway doesn't match the one currently installed in kernel."
      }
     },
     "/interface/get_instance": {
      "post": {
       "tags": [
        "interface"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_interface_get_instance"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised.\n\nPlease see `query` method documentation for `options`.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/interface_get_instance"
          }
         }
        }
       }
      }
     },
     "/interface/has_pending_changes": {
      "get": {
       "tags": [
        "interface"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_interface_has_pending_changes"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Returns whether there are pending interfaces changes to be applied or not."
      }
     },
     "/interface/ip_in_use": {
      "post": {
       "tags": [
        "interface"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_interface_ip_in_use"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Get all IPv4 / Ipv6 from all valid interfaces, excluding tap and epair.\n\n`loopback` will return loopback interface addresses.\n\n`any` will return wildcard addresses (0.0.0.0 and ::).\n\n`static` when enabled will ensure we only return static ip's configured.\n\nReturns a list of dicts - eg -\n\n[\n    {\n        \"type\": \"INET6\",\n        \"address\": \"fe80::5054:ff:fe16:4aac\",\n        \"netmask\": 64\n    },\n    {\n        \"type\": \"INET\",\n        \"address\": \"192.168.122.148\",\n        \"netmask\": 24,\n        \"broadcast\": \"192.168.122.255\"\n    },\n]",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/interface_ip_in_use"
          }
         }
        }
       }
      }
     },
     "/interface/lacpdu_rate_choices": {
      "get": {
       "tags": [
        "interface"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_interface_lacpdu_rate_choices"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Available lacpdu rate policies for the LACP lagg type interfaces."
      }
     },
     "/interface/lag_ports_choices": {
      "post": {
       "tags": [
        "interface"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_interface_lag_ports_choices"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Return available interface choices that can be added to a `bond` (lag) interface.\n\n`id` is name of existing bond interface on the system that will have its member\n        interfaces included.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/interface_lag_ports_choices"
          }
         }
        }
       }
      }
     },
     "/interface/rollback": {
      "get": {
       "tags": [
        "interface"
       ],
       "responses": {
        "200": {
         "$ref": "#/components/responses/Success"
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Rollback pending interfaces changes."
      }
     },
     "/interface/save_default_route": {
      "post": {
       "tags": [
        "interface"
       ],
       "responses": {
        "200": {
         "$ref": "#/components/responses/Success"
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "This method exists _solely_ to provide a \"warning\" and therefore\na path for remediation for when an end-user modifies an interface\nand we rip the default gateway out from underneath them without\nany type of warning.\n\nNOTE: This makes 2 assumptions\n1. interface.create/update/delete must have been called before\n    calling this method\n2. this method must be called before `interface.sync` is called\n\nThis method exists for the predominant scenario for new users...\n1. fresh install SCALE\n2. all interfaces start DHCPv4 (v6 is ignored for now)\n3. 1 of the interfaces receives an IP address\n4. along with the IP, the kernel receives a default route\n    (by design, of course)\n5. user goes to configure this interface as having a static\n    IP address\n6. as we go through and \"sync\" the changes, we remove the default\n    route because it exists in the kernel FIB but doesn't exist\n    in the database.\n7. IF the user is connecting via layer3, then they will lose all\n    access to the TrueNAS and never be able to finalize the changes\n    to the network because we ripped out the default route which\n    is how they were communicating to begin with.\n\nIn the above scenario, we're going to try and prevent this by doing\nthe following:\n1. fresh install SCALE\n2. all interfaces start DHCPv4\n3. default route is received\n4. user configures an interface\n5. When user pushes \"Test Changes\" (interface.sync), webUI will call\n    network.configuration.default_route_will_be_removed BEFORE interface.sync\n6. if network.configuration.default_route_will_be_removed returns True,\n    then webUI will open a new modal dialog that gives the end-user\n    ample warning/verbiage describing the situation. Furthermore, the\n    modal will allow the user to input a default gateway\n7. if user gives gateway, webUI will call this method providing the info\n    and we'll validate accordingly\n8. OR if user doesn't give gateway, they will need to \"confirm\" this is\n    desired\n9. the default gateway provided to us (if given by end-user) will be stored\n    in the same in-memory cache that we use for storing the interface changes\n    and will be rolledback accordingly in this plugin just like everything else\n\nThere are a few other scenarios where this is beneficial, but the one listed above\nis seen most often by end-users/support team.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/interface_save_default_route"
          }
         }
        }
       }
      }
     },
     "/interface/services_restarted_on_sync": {
      "get": {
       "tags": [
        "interface"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_interface_services_restarted_on_sync"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Returns which services will be set to listen on 0.0.0.0 (and, thus, restarted) on sync.\n\nExample result:\n[\n    // Samba service will be set ot listen on 0.0.0.0 and restarted because it was set up to listen on\n    // 192.168.0.1 which is being removed.\n    {\"type\": \"SYSTEM_SERVICE\", \"service\": \"cifs\", \"ips\": [\"192.168.0.1\"]},\n]"
      }
     },
     "/interface/vlan_parent_interface_choices": {
      "get": {
       "tags": [
        "interface"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_interface_vlan_parent_interface_choices"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Return available interface choices for `vlan_parent_interface` attribute."
      }
     },
     "/interface/xmit_hash_policy_choices": {
      "get": {
       "tags": [
        "interface"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_interface_xmit_hash_policy_choices"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Available transmit hash policies for the LACP or LOADBALANCE\nlagg type interfaces."
      }
     },
     "/interface/capabilities/get": {
      "post": {
       "tags": [
        "interface.capabilities"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_interface_capabilities_get"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Return enabled, disabled and supported capabilities (also known as features)\non a given interface.\n\n`name` String representing name of the interface",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/interface_capabilities_get"
          }
         }
        }
       }
      }
     },
     "/interface/capabilities/set": {
      "post": {
       "tags": [
        "interface.capabilities"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_interface_capabilities_set"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Enable or Disable capabilties (also known as features) on a given interface.\n\n`name` String representing name of the interface\n`capabilities` List representing capabilities to be acted upon\n`action` String when set to 'ENABLE' will enable `capabilities` else if set\n            to `DISABLE` will disable `capabilities`.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/interface_capabilities_set"
          }
         }
        }
       }
      }
     },
     "/ipmi/is_loaded": {
      "get": {
       "tags": [
        "ipmi"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_ipmi_is_loaded"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Returns a boolean value indicating if /dev/ipmi0 is loaded."
      }
     },
     "/ipmi/chassis/identify": {
      "post": {
       "tags": [
        "ipmi.chassis"
       ],
       "responses": {
        "200": {
         "$ref": "#/components/responses/Success"
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Toggle the chassis identify light.\n\n`verb`: str if 'ON' turn identify light on. if 'OFF' turn identify light off.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/ipmi_chassis_identify"
          }
         }
        }
       }
      }
     },
     "/ipmi/chassis/info": {
      "get": {
       "tags": [
        "ipmi.chassis"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_ipmi_chassis_info"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Return looks like:\n{\n    \"system_power\": \"on\",\n    \"power_overload\": \"false\",\n    \"interlock\": \"inactive\",\n    \"power_fault\": \"false\",\n    \"power_control_fault\": \"false\",\n    \"power_restore_policy\": \"Always off\",\n    \"last_power_event\": \"unknown\",\n    \"chassis_intrusion\": \"inactive\",\n    \"front_panel_lockout\": \"inactive\",\n    \"drive_fault\": \"false\",\n    \"cooling/fan_fault\": \"false\",\n    \"chassis_identify_state\": \"off\"\n}"
      }
     },
     "/ipmi/lan": {
      "get": {
       "tags": [
        "ipmi.lan"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_ipmi_lan_query"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Query available IPMI Channels with `query-filters` and `query-options`.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/ipmi_lan_query"
          }
         }
        }
       }
      }
     },
     "/ipmi/lan/id/{id_}": {
      "get": {
       "tags": [
        "ipmi.lan"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_ipmi_lan_query"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "Query available IPMI Channels with `query-filters` and `query-options`.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/ipmi_lan_query"
          }
         }
        }
       }
      },
      "put": {
       "tags": [
        "ipmi.lan"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_ipmi_lan_update"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "Update IPMI configuration on channel number `id`.\n\n`ipaddress` is an IPv4 address to be assigned to channel number `id`.\n`netmask` is the subnet mask associated with `ipaddress`.\n`gateway` is an IPv4 address used by `ipaddress` to reach outside the local subnet.\n`password` is a password to be assigned to channel number `id`\n`dhcp` is a boolean. If False, `ipaddress`, `netmask` and `gateway` must be set.\n`vlan` is an integer representing the vlan tag number. Passing null will disable vlan tagging.\n`apply_remote` is a boolean. If True and this is an HA licensed system, will apply\n    the configuration to the remote controller.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/ipmi_lan_update"
          }
         }
        }
       }
      }
     },
     "/ipmi/lan/channels": {
      "get": {
       "tags": [
        "ipmi.lan"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_ipmi_lan_channels"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Return a list of available IPMI channels."
      }
     },
     "/ipmi/lan/get_instance": {
      "post": {
       "tags": [
        "ipmi.lan"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_ipmi_lan_get_instance"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised.\n\nPlease see `query` method documentation for `options`.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/ipmi_lan_get_instance"
          }
         }
        }
       }
      }
     },
     "/ipmi/mc/info": {
      "get": {
       "tags": [
        "ipmi.mc"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_ipmi_mc_info"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Return looks like:\n{\n    'auxiliary_firmware_revision_information': '00000006h',\n    'bridge': 'unsupported',\n    'chassis_device': 'supported',\n    'device_available': 'yes (normal operation)',\n    'device_id': '32',\n    'device_revision': '1',\n    'device_sdrs': 'unsupported',\n    'firmware_revision': '6.71',\n    'fru_inventory_device': 'supported',\n    'ipmb_event_generator': 'supported',\n    'ipmb_event_receiver': 'supported',\n    'ipmi_version': '2.0',\n    'manufacturer_id': 'Super Micro Computer Inc. (10876)',\n    'product_id': '2327',\n    'sdr_repository_device': 'supported',\n    'sel_device': 'supported',\n    'sensor_device': 'supported'\n}"
      }
     },
     "/ipmi/sel/clear": {
      "get": {
       "tags": [
        "ipmi.sel"
       ],
       "responses": {
        "200": {
         "$ref": "#/components/responses/Success"
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": ""
      }
     },
     "/ipmi/sel/elist": {
      "get": {
       "tags": [
        "ipmi.sel"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_ipmi_sel_elist"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "limit",
         "in": "query",
         "required": false,
         "schema": {
          "type": "integer"
         }
        },
        {
         "name": "offset",
         "in": "query",
         "required": false,
         "schema": {
          "type": "integer"
         }
        },
        {
         "name": "count",
         "in": "query",
         "required": false,
         "schema": {
          "type": "boolean"
         }
        },
        {
         "name": "sort",
         "in": "query",
         "required": false,
         "schema": {
          "type": "string"
         }
        }
       ],
       "description": "Query IPMI System Event Log (SEL) extended list\n\n`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      }
     },
     "/ipmi/sel/info": {
      "get": {
       "tags": [
        "ipmi.sel"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_ipmi_sel_info"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Query General information about the IPMI System Event Log"
      }
     },
     "/ipmi/sensors/query": {
      "get": {
       "tags": [
        "ipmi.sensors"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_ipmi_sensors_query"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "limit",
         "in": "query",
         "required": false,
         "schema": {
          "type": "integer"
         }
        },
        {
         "name": "offset",
         "in": "query",
         "required": false,
         "schema": {
          "type": "integer"
         }
        },
        {
         "name": "count",
         "in": "query",
         "required": false,
         "schema": {
          "type": "boolean"
         }
        },
        {
         "name": "sort",
         "in": "query",
         "required": false,
         "schema": {
          "type": "string"
         }
        }
       ],
       "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      }
     },
     "/iscsi/auth": {
      "get": {
       "tags": [
        "iscsi.auth"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_iscsi_auth_query"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "limit",
         "in": "query",
         "required": false,
         "schema": {
          "type": "integer"
         }
        },
        {
         "name": "offset",
         "in": "query",
         "required": false,
         "schema": {
          "type": "integer"
         }
        },
        {
         "name": "count",
         "in": "query",
         "required": false,
         "schema": {
          "type": "boolean"
         }
        },
        {
         "name": "sort",
         "in": "query",
         "required": false,
         "schema": {
          "type": "string"
         }
        }
       ],
       "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      },
      "post": {
       "tags": [
        "iscsi.auth"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_iscsi_auth_create"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Create an iSCSI Authorized Access.\n\n`tag` should be unique among all configured iSCSI Authorized Accesses.\n\n`secret` and `peersecret` should have length between 12-16 letters inclusive.\n\n`peeruser` and `peersecret` are provided only when configuring mutual CHAP. `peersecret` should not be\nsimilar to `secret`.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/iscsi_auth_create"
          }
         }
        }
       }
      }
     },
     "/iscsi/auth/id/{id_}": {
      "delete": {
       "tags": [
        "iscsi.auth"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_iscsi_auth_delete"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "Delete iSCSI Authorized Access of `id`."
      },
      "get": {
       "tags": [
        "iscsi.auth"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_iscsi_auth_query"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      },
      "put": {
       "tags": [
        "iscsi.auth"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_iscsi_auth_update"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "Update iSCSI Authorized Access of `id`.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/iscsi_auth_update"
          }
         }
        }
       }
      }
     },
     "/iscsi/auth/get_instance": {
      "post": {
       "tags": [
        "iscsi.auth"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_iscsi_auth_get_instance"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised.\n\nPlease see `query` method documentation for `options`.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/iscsi_auth_get_instance"
          }
         }
        }
       }
      }
     },
     "/iscsi/extent": {
      "get": {
       "tags": [
        "iscsi.extent"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_iscsi_extent_query"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "limit",
         "in": "query",
         "required": false,
         "schema": {
          "type": "integer"
         }
        },
        {
         "name": "offset",
         "in": "query",
         "required": false,
         "schema": {
          "type": "integer"
         }
        },
        {
         "name": "count",
         "in": "query",
         "required": false,
         "schema": {
          "type": "boolean"
         }
        },
        {
         "name": "sort",
         "in": "query",
         "required": false,
         "schema": {
          "type": "string"
         }
        }
       ],
       "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      },
      "post": {
       "tags": [
        "iscsi.extent"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_iscsi_extent_create"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Create an iSCSI Extent.\n\nWhen `type` is set to FILE, attribute `filesize` is used and it represents number of bytes. `filesize` if\nnot zero should be a multiple of `blocksize`. `path` is a required attribute with `type` set as FILE.\n\nWith `type` being set to DISK, a valid ZFS volume is required.\n\n`insecure_tpc` when enabled allows an initiator to bypass normal access control and access any scannable\ntarget. This allows xcopy operations otherwise blocked by access control.\n\n`xen` is a boolean value which is set to true if Xen is being used as the iSCSI initiator.\n\n`ro` when set to true prevents the initiator from writing to this LUN.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/iscsi_extent_create"
          }
         }
        }
       }
      }
     },
     "/iscsi/extent/id/{id_}": {
      "delete": {
       "tags": [
        "iscsi.extent"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_iscsi_extent_delete"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "Delete iSCSI Extent of `id`.\n\nIf `id` iSCSI Extent's `type` was configured to FILE, `remove` can be set to remove the configured file.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/iscsi_extent_delete"
          }
         }
        }
       }
      },
      "get": {
       "tags": [
        "iscsi.extent"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_iscsi_extent_query"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      },
      "put": {
       "tags": [
        "iscsi.extent"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_iscsi_extent_update"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "Update iSCSI Extent of `id`.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/iscsi_extent_update"
          }
         }
        }
       }
      }
     },
     "/iscsi/extent/disk_choices": {
      "get": {
       "tags": [
        "iscsi.extent"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_iscsi_extent_disk_choices"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Return a dict of available zvols that can be used\nwhen creating an extent."
      }
     },
     "/iscsi/extent/get_instance": {
      "post": {
       "tags": [
        "iscsi.extent"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_iscsi_extent_get_instance"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised.\n\nPlease see `query` method documentation for `options`.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/iscsi_extent_get_instance"
          }
         }
        }
       }
      }
     },
     "/iscsi/global": {
      "get": {
       "tags": [
        "iscsi.global"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_iscsi_global_config"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": ""
      },
      "put": {
       "tags": [
        "iscsi.global"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_iscsi_global_update"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "`alua` is a no-op for FreeNAS.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/iscsi_global_update"
          }
         }
        }
       }
      }
     },
     "/iscsi/global/alua_enabled": {
      "get": {
       "tags": [
        "iscsi.global"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_iscsi_global_alua_enabled"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Returns whether iSCSI ALUA is enabled or not."
      }
     },
     "/iscsi/global/client_count": {
      "get": {
       "tags": [
        "iscsi.global"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_iscsi_global_client_count"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Return currently connected clients count."
      }
     },
     "/iscsi/global/iser_enabled": {
      "get": {
       "tags": [
        "iscsi.global"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_iscsi_global_iser_enabled"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Returns whether iSER is enabled or not."
      }
     },
     "/iscsi/global/sessions": {
      "post": {
       "tags": [
        "iscsi.global"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_iscsi_global_sessions"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Get a list of currently running iSCSI sessions. This includes initiator and target names\nand the unique connection IDs.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/iscsi_global_sessions"
          }
         }
        }
       }
      }
     },
     "/iscsi/initiator": {
      "get": {
       "tags": [
        "iscsi.initiator"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_iscsi_initiator_query"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "limit",
         "in": "query",
         "required": false,
         "schema": {
          "type": "integer"
         }
        },
        {
         "name": "offset",
         "in": "query",
         "required": false,
         "schema": {
          "type": "integer"
         }
        },
        {
         "name": "count",
         "in": "query",
         "required": false,
         "schema": {
          "type": "boolean"
         }
        },
        {
         "name": "sort",
         "in": "query",
         "required": false,
         "schema": {
          "type": "string"
         }
        }
       ],
       "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      },
      "post": {
       "tags": [
        "iscsi.initiator"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_iscsi_initiator_create"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Create an iSCSI Initiator.\n\n`initiators` is a list of initiator hostnames which are authorized to access an iSCSI Target. To allow all\npossible initiators, `initiators` can be left empty.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/iscsi_initiator_create"
          }
         }
        }
       }
      }
     },
     "/iscsi/initiator/id/{id_}": {
      "delete": {
       "tags": [
        "iscsi.initiator"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_iscsi_initiator_delete"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "Delete iSCSI initiator of `id`."
      },
      "get": {
       "tags": [
        "iscsi.initiator"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_iscsi_initiator_query"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      },
      "put": {
       "tags": [
        "iscsi.initiator"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_iscsi_initiator_update"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "Update iSCSI initiator of `id`.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/iscsi_initiator_update"
          }
         }
        }
       }
      }
     },
     "/iscsi/initiator/get_instance": {
      "post": {
       "tags": [
        "iscsi.initiator"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_iscsi_initiator_get_instance"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised.\n\nPlease see `query` method documentation for `options`.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/iscsi_initiator_get_instance"
          }
         }
        }
       }
      }
     },
     "/iscsi/portal": {
      "get": {
       "tags": [
        "iscsi.portal"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_iscsi_portal_query"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "limit",
         "in": "query",
         "required": false,
         "schema": {
          "type": "integer"
         }
        },
        {
         "name": "offset",
         "in": "query",
         "required": false,
         "schema": {
          "type": "integer"
         }
        },
        {
         "name": "count",
         "in": "query",
         "required": false,
         "schema": {
          "type": "boolean"
         }
        },
        {
         "name": "sort",
         "in": "query",
         "required": false,
         "schema": {
          "type": "string"
         }
        }
       ],
       "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      },
      "post": {
       "tags": [
        "iscsi.portal"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_iscsi_portal_create"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Create a new iSCSI Portal.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/iscsi_portal_create"
          }
         }
        }
       }
      }
     },
     "/iscsi/portal/id/{id_}": {
      "delete": {
       "tags": [
        "iscsi.portal"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_iscsi_portal_delete"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "Delete iSCSI Portal `id`."
      },
      "get": {
       "tags": [
        "iscsi.portal"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_iscsi_portal_query"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      },
      "put": {
       "tags": [
        "iscsi.portal"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_iscsi_portal_update"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "Update iSCSI Portal `id`.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/iscsi_portal_update"
          }
         }
        }
       }
      }
     },
     "/iscsi/portal/get_instance": {
      "post": {
       "tags": [
        "iscsi.portal"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_iscsi_portal_get_instance"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised.\n\nPlease see `query` method documentation for `options`.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/iscsi_portal_get_instance"
          }
         }
        }
       }
      }
     },
     "/iscsi/portal/listen_ip_choices": {
      "get": {
       "tags": [
        "iscsi.portal"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_iscsi_portal_listen_ip_choices"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Returns possible choices for `listen.ip` attribute of portal create and update."
      }
     },
     "/iscsi/target": {
      "get": {
       "tags": [
        "iscsi.target"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_iscsi_target_query"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "limit",
         "in": "query",
         "required": false,
         "schema": {
          "type": "integer"
         }
        },
        {
         "name": "offset",
         "in": "query",
         "required": false,
         "schema": {
          "type": "integer"
         }
        },
        {
         "name": "count",
         "in": "query",
         "required": false,
         "schema": {
          "type": "boolean"
         }
        },
        {
         "name": "sort",
         "in": "query",
         "required": false,
         "schema": {
          "type": "string"
         }
        }
       ],
       "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      },
      "post": {
       "tags": [
        "iscsi.target"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_iscsi_target_create"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Create an iSCSI Target.\n\n`groups` is a list of group dictionaries which provide information related to using a `portal`, `initiator`,\n`authmethod` and `auth` with this target. `auth` represents a valid iSCSI Authorized Access and defaults to\nnull.\n\n`auth_networks` is a list of IP/CIDR addresses which are allowed to use this initiator. If all networks are\nto be allowed, this field should be left empty.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/iscsi_target_create"
          }
         }
        }
       }
      }
     },
     "/iscsi/target/id/{id_}": {
      "delete": {
       "tags": [
        "iscsi.target"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_iscsi_target_delete"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "Delete iSCSI Target of `id`.\n\nDeleting an iSCSI Target makes sure we delete all Associated Targets which use `id` iSCSI Target.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/iscsi_target_delete"
          }
         }
        }
       }
      },
      "get": {
       "tags": [
        "iscsi.target"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_iscsi_target_query"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      },
      "put": {
       "tags": [
        "iscsi.target"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_iscsi_target_update"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "Update iSCSI Target of `id`.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/iscsi_target_update"
          }
         }
        }
       }
      }
     },
     "/iscsi/target/get_instance": {
      "post": {
       "tags": [
        "iscsi.target"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_iscsi_target_get_instance"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised.\n\nPlease see `query` method documentation for `options`.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/iscsi_target_get_instance"
          }
         }
        }
       }
      }
     },
     "/iscsi/target/validate_name": {
      "post": {
       "tags": [
        "iscsi.target"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_iscsi_target_validate_name"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Returns validation error for iSCSI target name\n:param name: name to be validated\n:param existing_id: id of an existing iSCSI target that will receive this name (or `None` if a new target\n                    is being created)\n:return: error message (or `None` if there is no error)",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/iscsi_target_validate_name"
          }
         }
        }
       }
      }
     },
     "/iscsi/targetextent": {
      "get": {
       "tags": [
        "iscsi.targetextent"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_iscsi_targetextent_query"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "limit",
         "in": "query",
         "required": false,
         "schema": {
          "type": "integer"
         }
        },
        {
         "name": "offset",
         "in": "query",
         "required": false,
         "schema": {
          "type": "integer"
         }
        },
        {
         "name": "count",
         "in": "query",
         "required": false,
         "schema": {
          "type": "boolean"
         }
        },
        {
         "name": "sort",
         "in": "query",
         "required": false,
         "schema": {
          "type": "string"
         }
        }
       ],
       "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      },
      "post": {
       "tags": [
        "iscsi.targetextent"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_iscsi_targetextent_create"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Create an Associated Target.\n\n`lunid` will be automatically assigned if it is not provided based on the `target`.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/iscsi_targetextent_create"
          }
         }
        }
       }
      }
     },
     "/iscsi/targetextent/id/{id_}": {
      "delete": {
       "tags": [
        "iscsi.targetextent"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_iscsi_targetextent_delete"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "Delete Associated Target of `id`.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/iscsi_targetextent_delete"
          }
         }
        }
       }
      },
      "get": {
       "tags": [
        "iscsi.targetextent"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_iscsi_targetextent_query"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      },
      "put": {
       "tags": [
        "iscsi.targetextent"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_iscsi_targetextent_update"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "Update Associated Target of `id`.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/iscsi_targetextent_update"
          }
         }
        }
       }
      }
     },
     "/iscsi/targetextent/get_instance": {
      "post": {
       "tags": [
        "iscsi.targetextent"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_iscsi_targetextent_get_instance"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised.\n\nPlease see `query` method documentation for `options`.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/iscsi_targetextent_get_instance"
          }
         }
        }
       }
      }
     },
     "/jbof": {
      "get": {
       "tags": [
        "jbof"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_jbof_query"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "limit",
         "in": "query",
         "required": false,
         "schema": {
          "type": "integer"
         }
        },
        {
         "name": "offset",
         "in": "query",
         "required": false,
         "schema": {
          "type": "integer"
         }
        },
        {
         "name": "count",
         "in": "query",
         "required": false,
         "schema": {
          "type": "boolean"
         }
        },
        {
         "name": "sort",
         "in": "query",
         "required": false,
         "schema": {
          "type": "string"
         }
        }
       ],
       "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      },
      "post": {
       "tags": [
        "jbof"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_jbof_create"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Create a new JBOF.\n\nThis will use the supplied Redfish credentials to configure the data plane on\nthe expansion shelf for direct connection to ROCE capable network cards on\nthe TrueNAS head unit.\n\n`description` Optional description of the JBOF.\n\n`mgmt_ip1` IP of 1st Redfish management interface.\n\n`mgmt_ip2` Optional IP of 2nd Redfish management interface.\n\n`mgmt_username` Redfish administrative username.\n\n`mgmt_password` Redfish administrative password.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/jbof_create"
          }
         }
        }
       }
      }
     },
     "/jbof/id/{id_}": {
      "delete": {
       "tags": [
        "jbof"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_jbof_delete"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "Delete a JBOF by ID.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/jbof_delete"
          }
         }
        }
       }
      },
      "get": {
       "tags": [
        "jbof"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_jbof_query"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      },
      "put": {
       "tags": [
        "jbof"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_jbof_update"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "Update JBOF of `id`",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/jbof_update"
          }
         }
        }
       }
      }
     },
     "/jbof/get_instance": {
      "post": {
       "tags": [
        "jbof"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_jbof_get_instance"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised.\n\nPlease see `query` method documentation for `options`.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/jbof_get_instance"
          }
         }
        }
       }
      }
     },
     "/jbof/licensed": {
      "get": {
       "tags": [
        "jbof"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_jbof_licensed"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Return a count of the number of JBOF units licensed."
      }
     },
     "/jbof/reapply_config": {
      "get": {
       "tags": [
        "jbof"
       ],
       "responses": {
        "200": {
         "$ref": "#/components/responses/Success"
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Reapply the JBOF configuration to attached JBOFs.\n\nIf an IOM is replaced in a JBOF, then it is expected to be configured to have\nthe same redfish IP, user & password as was previously the case.\n\nThis API can then be called to configure each JBOF with the expected data-plane\nIP configuration, and then attach NVMe drives."
      }
     },
     "/k8s_to_docker/list_backups": {
      "post": {
       "tags": [
        "k8s_to_docker"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_k8s_to_docker_list_backups"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "List existing kubernetes backups",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/k8s_to_docker_list_backups"
          }
         }
        }
       }
      }
     },
     "/k8s_to_docker/migrate": {
      "post": {
       "tags": [
        "k8s_to_docker"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_k8s_to_docker_migrate"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Migrate kubernetes backups to docker.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/k8s_to_docker_migrate"
          }
         }
        }
       }
      }
     },
     "/kerberos": {
      "get": {
       "tags": [
        "kerberos"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_kerberos_config"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": ""
      },
      "put": {
       "tags": [
        "kerberos"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_kerberos_update"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "`appdefaults_aux` add parameters to \"appdefaults\" section of the krb5.conf file.\n\n`libdefaults_aux` add parameters to \"libdefaults\" section of the krb5.conf file.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/kerberos_update"
          }
         }
        }
       }
      }
     },
     "/kerberos/keytab": {
      "get": {
       "tags": [
        "kerberos.keytab"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_kerberos_keytab_query"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "limit",
         "in": "query",
         "required": false,
         "schema": {
          "type": "integer"
         }
        },
        {
         "name": "offset",
         "in": "query",
         "required": false,
         "schema": {
          "type": "integer"
         }
        },
        {
         "name": "count",
         "in": "query",
         "required": false,
         "schema": {
          "type": "boolean"
         }
        },
        {
         "name": "sort",
         "in": "query",
         "required": false,
         "schema": {
          "type": "string"
         }
        }
       ],
       "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      },
      "post": {
       "tags": [
        "kerberos.keytab"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_kerberos_keytab_create"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Create a kerberos keytab. Uploaded keytab files will be merged with the system\nkeytab under /etc/krb5.keytab.\n\n`file` b64encoded kerberos keytab\n`name` name for kerberos keytab",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/kerberos_keytab_create"
          }
         }
        }
       }
      }
     },
     "/kerberos/keytab/id/{id_}": {
      "delete": {
       "tags": [
        "kerberos.keytab"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_kerberos_keytab_delete"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "Delete kerberos keytab by id, and force regeneration of\nsystem keytab."
      },
      "get": {
       "tags": [
        "kerberos.keytab"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_kerberos_keytab_query"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      },
      "put": {
       "tags": [
        "kerberos.keytab"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_kerberos_keytab_update"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "Update kerberos keytab by id.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/kerberos_keytab_update"
          }
         }
        }
       }
      }
     },
     "/kerberos/keytab/get_instance": {
      "post": {
       "tags": [
        "kerberos.keytab"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_kerberos_keytab_get_instance"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised.\n\nPlease see `query` method documentation for `options`.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/kerberos_keytab_get_instance"
          }
         }
        }
       }
      }
     },
     "/kerberos/realm": {
      "get": {
       "tags": [
        "kerberos.realm"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_kerberos_realm_query"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "limit",
         "in": "query",
         "required": false,
         "schema": {
          "type": "integer"
         }
        },
        {
         "name": "offset",
         "in": "query",
         "required": false,
         "schema": {
          "type": "integer"
         }
        },
        {
         "name": "count",
         "in": "query",
         "required": false,
         "schema": {
          "type": "boolean"
         }
        },
        {
         "name": "sort",
         "in": "query",
         "required": false,
         "schema": {
          "type": "string"
         }
        }
       ],
       "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      },
      "post": {
       "tags": [
        "kerberos.realm"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_kerberos_realm_create"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Create a new kerberos realm. This will be automatically populated during the\ndomain join process in an Active Directory environment. Kerberos realm names\nare case-sensitive, but convention is to only use upper-case.\n\nEntries for kdc, admin_server, and kpasswd_server are not required.\nIf they are unpopulated, then kerberos will use DNS srv records to\ndiscover the correct servers. The option to hard-code them is provided\ndue to AD site discovery. Kerberos has no concept of Active Directory\nsites. This means that middleware performs the site discovery and\nsets the kerberos configuration based on the AD site.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/kerberos_realm_create"
          }
         }
        }
       }
      }
     },
     "/kerberos/realm/id/{id_}": {
      "delete": {
       "tags": [
        "kerberos.realm"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_kerberos_realm_delete"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "Delete a kerberos realm by ID."
      },
      "get": {
       "tags": [
        "kerberos.realm"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_kerberos_realm_query"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      },
      "put": {
       "tags": [
        "kerberos.realm"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_kerberos_realm_update"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "Update a kerberos realm by id. This will be automatically populated during the\ndomain join process in an Active Directory environment. Kerberos realm names\nare case-sensitive, but convention is to only use upper-case.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/kerberos_realm_update"
          }
         }
        }
       }
      }
     },
     "/kerberos/realm/get_instance": {
      "post": {
       "tags": [
        "kerberos.realm"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_kerberos_realm_get_instance"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised.\n\nPlease see `query` method documentation for `options`.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/kerberos_realm_get_instance"
          }
         }
        }
       }
      }
     },
     "/keychaincredential": {
      "get": {
       "tags": [
        "keychaincredential"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_keychaincredential_query"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "limit",
         "in": "query",
         "required": false,
         "schema": {
          "type": "integer"
         }
        },
        {
         "name": "offset",
         "in": "query",
         "required": false,
         "schema": {
          "type": "integer"
         }
        },
        {
         "name": "count",
         "in": "query",
         "required": false,
         "schema": {
          "type": "boolean"
         }
        },
        {
         "name": "sort",
         "in": "query",
         "required": false,
         "schema": {
          "type": "string"
         }
        }
       ],
       "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      },
      "post": {
       "tags": [
        "keychaincredential"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_keychaincredential_create"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Create a Keychain Credential.\n\nThe following `type`s are supported:\n * `SSH_KEY_PAIR`\n * `SSH_CREDENTIALS`\n\n",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/keychaincredential_create"
          }
         }
        }
       }
      }
     },
     "/keychaincredential/id/{id_}": {
      "delete": {
       "tags": [
        "keychaincredential"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_keychaincredential_delete"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "Delete Keychain Credential with specific `id`.\n\n",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/keychaincredential_delete"
          }
         }
        }
       }
      },
      "get": {
       "tags": [
        "keychaincredential"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_keychaincredential_query"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      },
      "put": {
       "tags": [
        "keychaincredential"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_keychaincredential_update"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "Update a Keychain Credential with specific `id`.\n\nPlease note that you can't change `type`. You must specify full `attributes` value.\n\n",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/keychaincredential_update"
          }
         }
        }
       }
      }
     },
     "/keychaincredential/generate_ssh_key_pair": {
      "get": {
       "tags": [
        "keychaincredential"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_keychaincredential_generate_ssh_key_pair"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Generate a public/private key pair (useful for `SSH_KEY_PAIR` type)\n\n"
      }
     },
     "/keychaincredential/get_instance": {
      "post": {
       "tags": [
        "keychaincredential"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_keychaincredential_get_instance"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised.\n\nPlease see `query` method documentation for `options`.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/keychaincredential_get_instance"
          }
         }
        }
       }
      }
     },
     "/keychaincredential/remote_ssh_host_key_scan": {
      "post": {
       "tags": [
        "keychaincredential"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_keychaincredential_remote_ssh_host_key_scan"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Discover a remote host key (useful for `SSH_CREDENTIALS`)\n\n",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/keychaincredential_remote_ssh_host_key_scan"
          }
         }
        }
       }
      }
     },
     "/keychaincredential/remote_ssh_semiautomatic_setup": {
      "post": {
       "tags": [
        "keychaincredential"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_keychaincredential_remote_ssh_semiautomatic_setup"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Perform semi-automatic SSH connection setup with other TrueNAS machine.\n\nIt creates an `SSH_CREDENTIALS` credential with specified `name` that can be used to connect to TrueNAS machine\nwith specified `url` and temporary auth `token`. Other TrueNAS machine adds `private_key` to allowed\n`username`'s private keys. Other `SSH_CREDENTIALS` attributes such as `connect_timeout` can be specified as\nwell.\n\n",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/keychaincredential_remote_ssh_semiautomatic_setup"
          }
         }
        }
       }
      }
     },
     "/keychaincredential/setup_ssh_connection": {
      "post": {
       "tags": [
        "keychaincredential"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_keychaincredential_setup_ssh_connection"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Creates an SSH Connection performing the following steps:\n\n1) Generate SSH Key Pair if required\n2) Set up SSH Credentials based on `setup_type`\n\nIn case (2) fails, it will be ensured that SSH Key Pair generated (if applicable) in the process is\nremoved.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/keychaincredential_setup_ssh_connection"
          }
         }
        }
       }
      }
     },
     "/keychaincredential/used_by": {
      "post": {
       "tags": [
        "keychaincredential"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_keychaincredential_used_by"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Returns list of objects that use this credential.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/keychaincredential_used_by"
          }
         }
        }
       }
      }
     },
     "/kmip": {
      "get": {
       "tags": [
        "kmip"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_kmip_config"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": ""
      },
      "put": {
       "tags": [
        "kmip"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_kmip_update"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Update KMIP Server Configuration.\n\nSystem currently authenticates connection with remote KMIP Server with a TLS handshake. `certificate` and\n`certificate_authority` determine the certs which will be used to initiate the TLS handshake with `server`.\n\n`validate` is enabled by default. When enabled, system will test connection to `server` making sure\nit's reachable.\n\n`manage_zfs_keys`/`manage_sed_disks` when enabled will sync keys from local database to remote KMIP server.\nWhen disabled, if there are any keys left to be retrieved from the KMIP server,\nit will sync them back to local database.\n\n`enabled` if true, cannot be set to disabled if there are existing keys pending to be synced. However users\ncan still perform this action by enabling `force_clear`.\n\n`ssl_version` can be specified to match the ssl configuration being used by KMIP server.\n\n`change_server` is a boolean field which allows users to migrate data between two KMIP servers. System\nwill first migrate keys from old KMIP server to local database and then migrate the keys from local database\nto new KMIP server. If it is unable to retrieve all the keys from old server, this will fail. Users can bypass\nthis by enabling `force_clear`.\n\n`force_clear` is a boolean option which when enabled will in this case remove all\npending keys to be synced from database. It should be used with extreme caution as users may end up with\nnot having ZFS dataset or SED disks keys leaving them locked forever. It is disabled by default.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/kmip_update"
          }
         }
        }
       }
      }
     },
     "/kmip/clear_sync_pending_keys": {
      "get": {
       "tags": [
        "kmip"
       ],
       "responses": {
        "200": {
         "$ref": "#/components/responses/Success"
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Clear all keys which are pending to be synced between KMIP server and TN database.\n\nFor ZFS/SED keys, we remove the UID from local database with which we are able to retrieve ZFS/SED keys.\nIt should be used with caution."
      }
     },
     "/kmip/kmip_sync_pending": {
      "get": {
       "tags": [
        "kmip"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_kmip_kmip_sync_pending"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Returns true or false based on if there are keys which are to be synced from local database to remote KMIP\nserver or vice versa."
      }
     },
     "/kmip/sync_keys": {
      "get": {
       "tags": [
        "kmip"
       ],
       "responses": {
        "200": {
         "$ref": "#/components/responses/Success"
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Sync ZFS/SED keys between KMIP Server and TN database."
      }
     },
     "/ldap": {
      "get": {
       "tags": [
        "ldap"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_ldap_config"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": ""
      },
      "put": {
       "tags": [
        "ldap"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_ldap_update"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "`hostname` list of ip addresses or hostnames of LDAP servers with\nwhich to communicate in order of preference. Failover only occurs\nif the current LDAP server is unresponsive.\n\n`basedn` specifies the default base DN to use when performing ldap\noperations. The base must be specified as a Distinguished Name in LDAP\nformat.\n\n`binddn` specifies the default bind DN to use when performing ldap\noperations. The bind DN must be specified as a Distinguished Name in\nLDAP format.\n\n`anonbind` use anonymous authentication.\n\n`ssl` establish SSL/TLS-protected connections to the LDAP server(s).\nGSSAPI signing is disabled on SSL/TLS-protected connections if\nkerberos authentication is used.\n\n`certificate` LDAPs client certificate to be used for certificate-\nbased authentication.\n\n`validate_certificates` specifies whether to perform checks on server\ncertificates in a TLS session. If enabled, TLS_REQCERT demand is set.\nThe server certificate is requested. If no certificate is provided or\nif a bad certificate is provided, the session is immediately terminated.\nIf disabled, TLS_REQCERT allow is set. The server certificate is\nrequested, but all errors are ignored.\n\n`kerberos_realm` in which the server is located. This parameter is\nonly required for SASL GSSAPI authentication to the remote LDAP server.\n\n`kerberos_principal` kerberos principal to use for SASL GSSAPI\nauthentication to the remote server. If `kerberos_realm` is specified\nwithout a keytab, then the `binddn` and `bindpw` are used to\nperform to obtain the ticket necessary for GSSAPI authentication.\n\n`timeout` specifies  a  timeout  (in  seconds) after which calls to\nsynchronous LDAP APIs will abort if no response is received.\n\n`dns_timeout` specifies the timeout (in seconds) after which the\npoll(2)/select(2) following a connect(2) returns in case of no activity\nfor openldap. For nslcd this specifies the time limit (in seconds) to\nuse when connecting to the directory server. This directly impacts the\nlength of time that the LDAP service tries before failing over to\na secondary LDAP URI.\n\nThe following are advanced settings are configuration parameters for\nhandling LDAP servers that do not fully comply with RFC-2307. In most\nsituations all of the following parameters should be set to null,\nwhich indicates to backend to use default for the specified NSS info\nschema.\n\n`search_bases` - these parameters allow specifying a non-standard\nsearch base for users (`base_user`), groups (`base_group`), and\nnetgroups (`base_netgroup`). Must be a valid LDAP DN. No remote\nvalidation is performed that the search base exists or contains\nexpected objects.\n\n`attribute_maps` - allow specifying alternate non-RFC-compliant\nattribute names for `passwd`, `shadow`, `group`, and `netgroup` object\nclasses as specified in RFC 2307. Setting key to `null` has special\nmeaning that RFC defaults for the configure `nss_info_schema` will\nbe used.\n\n`server_type` is a readonly key indicating the server_type detected\ninternally by TrueNAS. Value will be set to one of the following:\n`ACTIVE_DIRECTORY`, `FREEIPA`, `GENERIC`, and `OPENLDAP`. Generic\nis default if TrueNAS is unable to determine LDAP server type via\ninformation in the LDAP root DSE.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/ldap_update"
          }
         }
        }
       }
      }
     },
     "/ldap/schema_choices": {
      "get": {
       "tags": [
        "ldap"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_ldap_schema_choices"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Returns list of available LDAP schema choices."
      }
     },
     "/ldap/ssl_choices": {
      "get": {
       "tags": [
        "ldap"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_ldap_ssl_choices"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Returns list of SSL choices."
      }
     },
     "/mail": {
      "get": {
       "tags": [
        "mail"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_mail_config"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": ""
      },
      "put": {
       "tags": [
        "mail"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_mail_update"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Update Mail Service Configuration.\n\n`fromemail` is used as a sending address which the mail server will use for sending emails.\n\n`outgoingserver` is the hostname or IP address of SMTP server used for sending an email.\n\n`security` is type of encryption desired.\n\n`smtp` is a boolean value which when set indicates that SMTP authentication has been enabled and `user`/`pass`\nare required attributes now.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/mail_update"
          }
         }
        }
       }
      }
     },
     "/mail/send": {
      "post": {
       "tags": [
        "mail"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_mail_send"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Sends mail using configured mail settings.\n\n`text` will be formatted to HTML using Markdown and rendered using default E-Mail template.\nYou can put your own HTML using `html`. If `html` is null, no HTML MIME part will be added to E-Mail.\n\nIf `attachments` is true, a list compromised of the following dict is required\nvia HTTP upload:\n  - headers(list)\n    - name(str)\n    - value(str)\n    - params(dict)\n  - content (str)\n\n[\n {\n  \"headers\": [\n   {\n    \"name\": \"Content-Transfer-Encoding\",\n    \"value\": \"base64\"\n   },\n   {\n    \"name\": \"Content-Type\",\n    \"value\": \"application/octet-stream\",\n    \"params\": {\n     \"name\": \"test.txt\"\n    }\n   }\n  ],\n  \"content\": \"dGVzdAo=\"\n }\n]\n\nA file might be uploaded to this endpoint. To upload a file, please send a multipart request with two parts. The first, named `data`, should contain a JSON-encoded payload, and the second, named `file`, should contain an uploaded file.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/mail_send"
          }
         }
        }
       }
      }
     },
     "/network/configuration": {
      "get": {
       "tags": [
        "network.configuration"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_network_configuration_config"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": ""
      },
      "put": {
       "tags": [
        "network.configuration"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_network_configuration_update"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Update Network Configuration Service configuration.\n\n`ipv4gateway` if set is used instead of the default gateway provided by DHCP.\n\n`nameserver1` is primary DNS server.\n\n`nameserver2` is secondary DNS server.\n\n`nameserver3` is tertiary DNS server.\n\n`httpproxy` attribute must be provided if a proxy is to be used for network operations.\n\n`service_announcement` determines the broadcast protocols that will be used to advertise the server.\n`netbios` enables the NetBIOS name server (NBNS), which starts concurrently with the SMB service. SMB clients\nwill only perform NBNS lookups if SMB1 is enabled. NBNS may be required for legacy SMB clients.\n`mdns` enables multicast DNS service announcements for enabled services. `wsd` enables Web Service\nDiscovery support.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/network_configuration_update"
          }
         }
        }
       }
      }
     },
     "/network/configuration/activity_choices": {
      "get": {
       "tags": [
        "network.configuration"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_network_configuration_activity_choices"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Returns allowed/forbidden network activity choices."
      }
     },
     "/network/general/summary": {
      "get": {
       "tags": [
        "network.general"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_network_general_summary"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Retrieve general information for current Network.\n\nReturns a dictionary. For example:\n\n"
      }
     },
     "/nfs": {
      "get": {
       "tags": [
        "nfs"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_nfs_config"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": ""
      },
      "put": {
       "tags": [
        "nfs"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_nfs_update"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Update NFS Service Configuration.\n\n`servers` - Represents number of servers to create.\n            By default, the number of nfsd is determined by the capabilities of the system.\n            To specify the number of nfsd, set a value between 1 and 256.\n            'Unset' the field to return to default.\n            This field will always report the number of nfsd to start.\n\n            INPUT: 1 .. 256 or 'unset'\n                where unset will enable the automatic determination\n                and 1 ..256 will set the number of nfsd\n            Default: Number of nfsd is automatically determined and will be no less\n                than 1 and no more than 32\n\n            The number of mountd will be 1/4 the number of reported nfsd.\n\n`allow_nonroot` - If 'enabled' it allows non-root mount requests to be served.\n\n                INPUT: enable/disable (True/False)\n                Default: disabled\n\n`bindip` -  Limit the server IP addresses available for NFS\n            By default, NFS will listen on all IP addresses that are active on the server.\n            To specify the server interface or a set of interfaces provide a list of IP's.\n            If the field is unset/empty, NFS listens on all available server addresses.\n\n            INPUT: list of IP addresses available configured on the server\n            Default: Use all available addresses (empty list)\n\n`protocols` - enable/disable NFSv3, NFSv4\n            Both can be enabled or NFSv4 or NFSv4 by themselves.  At least one must be enabled.\n            Note:  The 'showmount' command is available only if NFSv3 is enabled.\n\n            INPUT: Select NFSv3 or NFSv4 or NFSv3,NFSv4\n            Default: NFSv3,NFSv4\n\n`v4_krb` -  Force Kerberos authentication on NFS shares\n            If enabled, NFS shares will fail if the Kerberos ticket is unavilable\n\n            INPUT: enable/disable\n            Default: disabled\n\n`v4_domain` -   Specify a DNS domain (NFSv4 only)\n            If set, the value will be used to override the default DNS domain name for NFSv4.\n            Specifies the 'Domain' idmapd.conf setting.\n\n            INPUT: a string\n            Default: unset, i.e. an empty string.\n\n`mountd_port` - mountd port binding\n            The value set specifies the port mountd(8) binds to.\n\n            INPUT: unset or an integer between 1 .. 65535\n            Default: unset\n\n`rpcstatd_port` - statd port binding\n            The value set specifies the port rpc.statd(8) binds to.\n\n            INPUT: unset or an integer between 1 .. 65535\n            Default: unset\n\n`rpclockd_port` - lockd port binding\n            The value set specifies the port rpclockd_port(8) binds to.\n\n            INPUT: unset or an integer between 1 .. 65535\n            Default: unset\n\n`rdma` -    Enable/Disable NFS over RDMA support\n            Available on supported platforms and requires an installed and RDMA capable NIC.\n            NFS over RDMA uses port 20040.\n\n            INPUT: Enable/Disable\n            Default: Disable",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/nfs_update"
          }
         }
        }
       }
      }
     },
     "/nfs/bindip_choices": {
      "get": {
       "tags": [
        "nfs"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_nfs_bindip_choices"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Returns ip choices for NFS service to use"
      }
     },
     "/nfs/client_count": {
      "get": {
       "tags": [
        "nfs"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_nfs_client_count"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Return currently connected clients count.\nCount may not be accurate if NFSv3 protocol is in use\ndue to potentially stale rmtab entries."
      }
     },
     "/nfs/get_nfs3_clients": {
      "get": {
       "tags": [
        "nfs"
       ],
       "responses": {
        "200": {
         "$ref": "#/components/responses/Success"
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "limit",
         "in": "query",
         "required": false,
         "schema": {
          "type": "integer"
         }
        },
        {
         "name": "offset",
         "in": "query",
         "required": false,
         "schema": {
          "type": "integer"
         }
        },
        {
         "name": "count",
         "in": "query",
         "required": false,
         "schema": {
          "type": "boolean"
         }
        },
        {
         "name": "sort",
         "in": "query",
         "required": false,
         "schema": {
          "type": "string"
         }
        }
       ],
       "description": "Read contents of rmtab. This information may not\nbe accurate due to stale entries. This is ultimately\na limitation of the NFSv3 protocol.\n\n`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      }
     },
     "/nfs/get_nfs4_clients": {
      "get": {
       "tags": [
        "nfs"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_nfs_get_nfs4_clients"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "limit",
         "in": "query",
         "required": false,
         "schema": {
          "type": "integer"
         }
        },
        {
         "name": "offset",
         "in": "query",
         "required": false,
         "schema": {
          "type": "integer"
         }
        },
        {
         "name": "count",
         "in": "query",
         "required": false,
         "schema": {
          "type": "boolean"
         }
        },
        {
         "name": "sort",
         "in": "query",
         "required": false,
         "schema": {
          "type": "string"
         }
        }
       ],
       "description": "Read information about NFSv4 clients from /proc/fs/nfsd/clients\nSample output:\n[{\n    \"id\": \"4\",\n    \"info\": {\n        \"clientid\": 6273260596088110000,\n        \"address\": \"192.168.40.247:790\",\n        \"status\": \"confirmed\",\n        \"seconds from last renew\": 45,\n        \"name\": \"Linux NFSv4.2 debian12-hv\",\n        \"minor version\": 2,\n        \"Implementation domain\": \"kernel.org\",\n        \"Implementation name\": \"Linux 6.1.0-12-amd64 #1 SMP PREEMPT_DYNAMIC Debian 6.1.52-1 (2023-09-07) x86_64\",\n        \"Implementation time\": [0, 0],\n        \"callback state\": \"UP\",\n        \"callback address\": \"192.168.40.247:0\"\n    },\n    \"states\": [\n        {\n            \"94850248556250062041657638912\": {\n                \"type\": \"deleg\",\n                \"access\": \"r\",\n                \"superblock\": \"00:39:5\",\n                \"filename\": \"/debian12-hv\"\n            }\n        },\n        {\n            \"94850248556250062041741524992\": {\n                \"type\": \"open\",\n                \"access\": \"rw\",\n                \"deny\": \"--\",\n                \"superblock\": \"00:39:137\",\n                \"filename\": \"/.debian12-hv.swp\",\n                \"owner\": \"open id:\u0000\u0000\u00008\u0000\u0000\u0000\u0000\u0000\u0000\u0014\u00fe\u00c0\u00b23\"\n            }\n        }\n    ]\n}]\n---- Description of the fields (all per NFS client) ----\n'clientid': Hash generated for this client connection\n'address':  The client IP and port. e.g. 10.20.30.40:768\n\n'status':   The current client status:\n    'confirmed' An active connection.\n                The status will convert to 'courtesy' in 90 seconds if not 'confirmed' by the client.\n    'courtesy'  A stalled connection from an inactive client.\n                The status will convert to 'expirable' in 24hr.\n    'expirable' Waiting to be cleaned up.\n\n'seconds from last renew':  The session timeout counter.  See 'status' field.\n                            Gets reset by confirmation update from the client\n\n'name': Supplied by the client.\n        Linux clients might offer something like 'Linux NFS4.2 clnt_name'.\n        FreeBSD clients might supply a UUID like name\n\n'minor version':    The NFS4.x minor version.  E.G. '2' for NFSv4.2\n\n'Implementation domain': NFSv4.1 info - e.g. 'kernel.org' or 'freebsd.org'.\n'Implementation name':   NFSv4.1 info - e.g. equivalent to 'uname -a' on the client\n'Implementation time':   NFSv4.1 info - Timestamp (time nfstime4) of client version (maybe unused?)\n\n'callback state':   Current callback 'service' status for this client: 'UP', 'DOWN', 'FAULT' or 'UNKNOWN'\n                    Linux clients usually indicate 'UP'\n                    FreeBSD clients may indicate 'DOWN' but are still functional\n\n`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      }
     },
     "/pool": {
      "get": {
       "tags": [
        "pool"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_pool_query"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "limit",
         "in": "query",
         "required": false,
         "schema": {
          "type": "integer"
         }
        },
        {
         "name": "offset",
         "in": "query",
         "required": false,
         "schema": {
          "type": "integer"
         }
        },
        {
         "name": "count",
         "in": "query",
         "required": false,
         "schema": {
          "type": "boolean"
         }
        },
        {
         "name": "sort",
         "in": "query",
         "required": false,
         "schema": {
          "type": "string"
         }
        }
       ],
       "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      },
      "post": {
       "tags": [
        "pool"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_pool_create"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Create a new ZFS Pool.\n\n`topology` is a object which requires at least one `data` entry.\nAll of `data` entries (vdevs) require to be of the same type.\n\n`deduplication` when set to ON or VERIFY makes sure that no block of data is duplicated in the pool. When\nVERIFY is specified, if two blocks have similar signatures, byte to byte comparison is performed to ensure that\nthe blocks are identical. This should be used in special circumstances as it carries a significant overhead.\n\n`encryption` when enabled will create an ZFS encrypted root dataset for `name` pool.\n\n`encryption_options` specifies configuration for encryption of root dataset for `name` pool.\n`encryption_options.passphrase` must be specified if encryption for root dataset is desired with a passphrase\nas a key.\nOtherwise a hex encoded key can be specified by providing `encryption_options.key`.\n`encryption_options.generate_key` when enabled automatically generates the key to be used\nfor dataset encryption.\n\nIt should be noted that keys are stored by the system for automatic locking/unlocking\non import/export of encrypted datasets. If that is not desired, dataset should be created\nwith a passphrase as a key.\n\nExample of `topology`:\n\n    {\n        \"data\": [\n            {\"type\": \"RAIDZ1\", \"disks\": [\"da1\", \"da2\", \"da3\"]}\n        ],\n        \"cache\": [\n            {\"type\": \"STRIPE\", \"disks\": [\"da4\"]}\n        ],\n        \"log\": [\n            {\"type\": \"STRIPE\", \"disks\": [\"da5\"]}\n        ],\n        \"spares\": [\"da6\"]\n    }\n\n\n",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/pool_create"
          }
         }
        }
       }
      }
     },
     "/pool/id/{id_}": {
      "get": {
       "tags": [
        "pool"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_pool_query"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      },
      "put": {
       "tags": [
        "pool"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_pool_update"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "Update pool of `id`, adding the new topology.\n\nThe `type` of `data` must be the same of existing vdevs.\n\n",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/pool_update"
          }
         }
        }
       }
      }
     },
     "/pool/attach": {
      "post": {
       "tags": [
        "pool"
       ],
       "responses": {
        "200": {
         "$ref": "#/components/responses/Success"
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "`target_vdev` is the GUID of the vdev where the disk needs to be attached. In case of STRIPED vdev, this\nis the STRIPED disk GUID which will be converted to mirror. If `target_vdev` is mirror, it will be converted\ninto a n-way mirror.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/pool_attach"
          }
         }
        }
       }
      }
     },
     "/pool/id/{id_}/attachments": {
      "post": {
       "tags": [
        "pool"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_pool_attachments"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "Return a list of services dependent of this pool.\n\nResponsible for telling the user whether there is a related\nshare, asking for confirmation.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/pool_attachments"
          }
         }
        }
       }
      }
     },
     "/pool/ddt_prefetch": {
      "post": {
       "tags": [
        "pool"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_pool_ddt_prefetch"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Prefetch DDT entries in pool `pool_name`.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/pool_ddt_prefetch"
          }
         }
        }
       }
      }
     },
     "/pool/ddt_prune": {
      "post": {
       "tags": [
        "pool"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_pool_ddt_prune"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Prune DDT entries in pool `pool_name` based on the specified options.\n\n`percentage` is the percentage of DDT entries to prune.\n\n`days` is the number of days to prune DDT entries.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/pool_ddt_prune"
          }
         }
        }
       }
      }
     },
     "/pool/id/{id_}/detach": {
      "post": {
       "tags": [
        "pool"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_pool_detach"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "Detach a disk from pool of id `id`.\n\n`label` is the vdev guid or device name.\n\n",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/pool_detach"
          }
         }
        }
       }
      }
     },
     "/pool/id/{id_}/expand": {
      "post": {
       "tags": [
        "pool"
       ],
       "responses": {
        "200": {
         "$ref": "#/components/responses/Success"
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "Expand pool to fit all available disk space.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/pool_expand"
          }
         }
        }
       }
      }
     },
     "/pool/id/{id_}/export": {
      "post": {
       "tags": [
        "pool"
       ],
       "responses": {
        "200": {
         "$ref": "#/components/responses/Success"
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "Export pool of `id`.\n\n`cascade` will delete all attachments of the given pool (`pool.attachments`).\n`restart_services` will restart services that have open files on given pool.\n`destroy` will also PERMANENTLY destroy the pool/data.\n\n",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/pool_export"
          }
         }
        }
       }
      }
     },
     "/pool/filesystem_choices": {
      "post": {
       "tags": [
        "pool"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_pool_filesystem_choices"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Returns all available datasets, except the following:\n    1. system datasets\n    2. application(s) internal datasets\n\n",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/pool_filesystem_choices"
          }
         }
        }
       }
      }
     },
     "/pool/id/{id_}/get_disks": {
      "post": {
       "tags": [
        "pool"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_pool_get_disks"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "Get all disks in use by pools.\nIf `id` is provided only the disks from the given pool `id` will be returned.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/pool_get_disks"
          }
         }
        }
       }
      }
     },
     "/pool/get_instance": {
      "post": {
       "tags": [
        "pool"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_pool_get_instance"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised.\n\nPlease see `query` method documentation for `options`.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/pool_get_instance"
          }
         }
        }
       }
      }
     },
     "/pool/import_find": {
      "get": {
       "tags": [
        "pool"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_pool_import_find"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Returns a job id which can be used to retrieve a list of pools available for\nimport with the following details as a result of the job:\nname, guid, status, hostname."
      }
     },
     "/pool/import_pool": {
      "post": {
       "tags": [
        "pool"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_pool_import_pool"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Import a pool found with `pool.import_find`.\n\nIf a `name` is specified the pool will be imported using that new name.\n\nIf `enable_attachments` is set to true, attachments that were disabled during pool export will be\nre-enabled.\n\nErrors:\n    ENOENT - Pool not found\n\n",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/pool_import_pool"
          }
         }
        }
       }
      }
     },
     "/pool/id/{id_}/is_upgraded": {
      "post": {
       "tags": [
        "pool"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_pool_is_upgraded"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "Returns whether or not the pool of `id` is on the latest version and with all feature\nflags enabled.\n\n",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/pool_is_upgraded"
          }
         }
        }
       }
      }
     },
     "/pool/id/{id_}/offline": {
      "post": {
       "tags": [
        "pool"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_pool_offline"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "Offline a disk from pool of id `id`.\n\n`label` is the vdev guid or device name.\n\n",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/pool_offline"
          }
         }
        }
       }
      }
     },
     "/pool/id/{id_}/online": {
      "post": {
       "tags": [
        "pool"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_pool_online"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "Online a disk from pool of id `id`.\n\n`label` is the vdev guid or device name.\n\n",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/pool_online"
          }
         }
        }
       }
      }
     },
     "/pool/id/{id_}/processes": {
      "post": {
       "tags": [
        "pool"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_pool_processes"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "Returns a list of running processes using this pool.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/pool_processes"
          }
         }
        }
       }
      }
     },
     "/pool/id/{id_}/remove": {
      "post": {
       "tags": [
        "pool"
       ],
       "responses": {
        "200": {
         "$ref": "#/components/responses/Success"
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "Remove a disk from pool of id `id`.\n\n`label` is the vdev guid or device name.\n\nError codes:\n\n    EZFS_NOSPC(2032): out of space to remove a device\n    EZFS_NODEVICE(2017): no such device in pool\n    EZFS_NOREPLICAS(2019): no valid replicas\n\n",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/pool_remove"
          }
         }
        }
       }
      }
     },
     "/pool/id/{id_}/replace": {
      "post": {
       "tags": [
        "pool"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_pool_replace"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "Replace a disk on a pool.\n\n`label` is the ZFS guid or a device name\n`disk` is the identifier of a disk\nIf `preserve_settings` is true, then settings (power management, S.M.A.R.T., etc.) of a disk being replaced\nwill be applied to a new disk.\n\n",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/pool_replace"
          }
         }
        }
       }
      }
     },
     "/pool/id/{id_}/scrub": {
      "post": {
       "tags": [
        "pool"
       ],
       "responses": {
        "200": {
         "$ref": "#/components/responses/Success"
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "Performs a scrub action to pool of `id`.\n\n`action` can be either of \"START\", \"STOP\" or \"PAUSE\".\n\n",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/pool_scrub"
          }
         }
        }
       }
      }
     },
     "/pool/id/{id_}/upgrade": {
      "post": {
       "tags": [
        "pool"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_pool_upgrade"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "Upgrade pool of `id` to latest version with all feature flags.\n\n",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/pool_upgrade"
          }
         }
        }
       }
      }
     },
     "/pool/validate_name": {
      "post": {
       "tags": [
        "pool"
       ],
       "responses": {
        "200": {
         "$ref": "#/components/responses/Success"
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Validates `pool_name` is a valid name for a pool.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/pool_validate_name"
          }
         }
        }
       }
      }
     },
     "/pool/dataset": {
      "get": {
       "tags": [
        "pool.dataset"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_pool_dataset_query"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "limit",
         "in": "query",
         "required": false,
         "schema": {
          "type": "integer"
         }
        },
        {
         "name": "offset",
         "in": "query",
         "required": false,
         "schema": {
          "type": "integer"
         }
        },
        {
         "name": "count",
         "in": "query",
         "required": false,
         "schema": {
          "type": "boolean"
         }
        },
        {
         "name": "sort",
         "in": "query",
         "required": false,
         "schema": {
          "type": "string"
         }
        }
       ],
       "description": "Query Pool Datasets with `query-filters` and `query-options`.\n\nWe provide two ways to retrieve datasets. The first is a flat structure (default), where\nall datasets in the system are returned as separate objects which contain all data\nthere is for their children. This retrieval type is slightly slower because of duplicates in each object.\nThe second type is hierarchical, where only top level datasets are returned in the list. They contain all the\nchildren in the `children` key. This retrieval type is slightly faster.\nThese options are controlled by the `query-options.extra.flat` attribute (default true).\n\nIn some cases it might be desirable to only retrieve details of a dataset itself and not it's children, in this\ncase `query-options.extra.retrieve_children` should be explicitly specified and set to `false` which will\nresult in children not being retrieved.\n\nIn case only some properties are desired to be retrieved for datasets, consumer should specify\n`query-options.extra.properties` which when `null` ( which is the default ) will retrieve all properties\nand otherwise a list can be specified like `[\"type\", \"used\", \"available\"]` to retrieve selective properties.\nIf no properties are desired, in that case an empty list should be sent. It should be noted that specifying\nempty list will still retrieve user properties. If user properties are not desired, in that case\n`query-options.extra.retrieve_user_props` should be set to `false`.\n\n`query-options.extra.snapshots` can be set to retrieve snapshot(s) of dataset in question.\n\n`query-options.extra.snapshots_recursive` can be set to retrieve snapshot(s) recursively of dataset in question.\nIf `query-options.extra.snapshots_recursive` and `query-options.extra.snapshots` are set, snapshot(s) will be\nretrieved recursively.\n\n`query-options.extra.snapshots_properties` can be specified to list out properties which should be retrieved\nfor snapshot(s) related to each dataset. By default only name of the snapshot would be retrieved, however\nif `null` is specified all properties of the snapshot would be retrieved in this case.\n\n`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      },
      "post": {
       "tags": [
        "pool.dataset"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_pool_dataset_create"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Creates a dataset/zvol.\n\n`volsize` is required for type=VOLUME and is supposed to be a multiple of the block size.\n`sparse` and `volblocksize` are only used for type=VOLUME.\n\n`encryption` when enabled will create an ZFS encrypted root dataset for `name` pool.\nThere is 1 case where ZFS encryption is not allowed for a dataset:\n1) If the parent dataset is encrypted with a passphrase and `name` is being created\n   with a key for encrypting the dataset.\n\n`encryption_options` specifies configuration for encryption of dataset for `name` pool.\n`encryption_options.passphrase` must be specified if encryption for dataset is desired with a passphrase\nas a key.\nOtherwise a hex encoded key can be specified by providing `encryption_options.key`.\n`encryption_options.generate_key` when enabled automatically generates the key to be used\nfor dataset encryption.\n\nIt should be noted that keys are stored by the system for automatic locking/unlocking\non import/export of encrypted datasets. If that is not desired, dataset should be created\nwith a passphrase as a key.\n\n",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/pool_dataset_create"
          }
         }
        }
       }
      }
     },
     "/pool/dataset/id/{id_}": {
      "delete": {
       "tags": [
        "pool.dataset"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_pool_dataset_delete"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "string"
         }
        }
       ],
       "description": "Delete dataset/zvol `id`.\n\n`recursive` will also delete/destroy all children datasets.\n`force` will force delete busy datasets.\n\nWhen root dataset is specified as `id` with `recursive`, it will destroy all the children of the\nroot dataset present leaving root dataset intact.\n\n",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/pool_dataset_delete"
          }
         }
        }
       }
      },
      "get": {
       "tags": [
        "pool.dataset"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_pool_dataset_query"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "string"
         }
        }
       ],
       "description": "Query Pool Datasets with `query-filters` and `query-options`.\n\nWe provide two ways to retrieve datasets. The first is a flat structure (default), where\nall datasets in the system are returned as separate objects which contain all data\nthere is for their children. This retrieval type is slightly slower because of duplicates in each object.\nThe second type is hierarchical, where only top level datasets are returned in the list. They contain all the\nchildren in the `children` key. This retrieval type is slightly faster.\nThese options are controlled by the `query-options.extra.flat` attribute (default true).\n\nIn some cases it might be desirable to only retrieve details of a dataset itself and not it's children, in this\ncase `query-options.extra.retrieve_children` should be explicitly specified and set to `false` which will\nresult in children not being retrieved.\n\nIn case only some properties are desired to be retrieved for datasets, consumer should specify\n`query-options.extra.properties` which when `null` ( which is the default ) will retrieve all properties\nand otherwise a list can be specified like `[\"type\", \"used\", \"available\"]` to retrieve selective properties.\nIf no properties are desired, in that case an empty list should be sent. It should be noted that specifying\nempty list will still retrieve user properties. If user properties are not desired, in that case\n`query-options.extra.retrieve_user_props` should be set to `false`.\n\n`query-options.extra.snapshots` can be set to retrieve snapshot(s) of dataset in question.\n\n`query-options.extra.snapshots_recursive` can be set to retrieve snapshot(s) recursively of dataset in question.\nIf `query-options.extra.snapshots_recursive` and `query-options.extra.snapshots` are set, snapshot(s) will be\nretrieved recursively.\n\n`query-options.extra.snapshots_properties` can be specified to list out properties which should be retrieved\nfor snapshot(s) related to each dataset. By default only name of the snapshot would be retrieved, however\nif `null` is specified all properties of the snapshot would be retrieved in this case.\n\n`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      },
      "put": {
       "tags": [
        "pool.dataset"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_pool_dataset_update"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "string"
         }
        }
       ],
       "description": "Updates a dataset/zvol `id`.\n\n",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/pool_dataset_update"
          }
         }
        }
       }
      }
     },
     "/pool/dataset/id/{id_}/attachments": {
      "post": {
       "tags": [
        "pool.dataset"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_pool_dataset_attachments"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "string"
         }
        }
       ],
       "description": "Return a list of services dependent of this dataset.\n\nResponsible for telling the user whether there is a related\nshare, asking for confirmation.\n\nExample return value:\n[\n  {\n    \"type\": \"NFS Share\",\n    \"service\": \"nfs\",\n    \"attachments\": [\"/mnt/tank/work\"]\n  }\n]",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/pool_dataset_attachments"
          }
         }
        }
       }
      }
     },
     "/pool/dataset/change_key": {
      "post": {
       "tags": [
        "pool.dataset"
       ],
       "responses": {
        "200": {
         "$ref": "#/components/responses/Success"
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Change encryption properties for `id` encrypted dataset.\n\nChanging dataset encryption to use passphrase instead of a key is not allowed if:\n\n1) It has encrypted roots as children which are encrypted with a key\n2) If it is a root dataset where the system dataset is located\n\nA file might be uploaded to this endpoint. To upload a file, please send a multipart request with two parts. The first, named `data`, should contain a JSON-encoded payload, and the second, named `file`, should contain an uploaded file.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/pool_dataset_change_key"
          }
         }
        }
       }
      }
     },
     "/pool/dataset/checksum_choices": {
      "get": {
       "tags": [
        "pool.dataset"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_pool_dataset_checksum_choices"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Retrieve checksums supported for ZFS dataset."
      }
     },
     "/pool/dataset/compression_choices": {
      "get": {
       "tags": [
        "pool.dataset"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_pool_dataset_compression_choices"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Retrieve compression algorithm supported by ZFS."
      }
     },
     "/pool/dataset/details": {
      "get": {
       "tags": [
        "pool.dataset"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_pool_dataset_details"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Retrieve all dataset(s) details outlining any\nservices/tasks which might be consuming them."
      }
     },
     "/pool/dataset/encryption_algorithm_choices": {
      "get": {
       "tags": [
        "pool.dataset"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_pool_dataset_encryption_algorithm_choices"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Retrieve encryption algorithms supported for ZFS dataset encryption."
      }
     },
     "/pool/dataset/encryption_summary": {
      "post": {
       "tags": [
        "pool.dataset"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_pool_dataset_encryption_summary"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Retrieve summary of all encrypted roots under `id`.\n\nKeys/passphrase can be supplied to check if the keys are valid.\n\nIt should be noted that there are 2 keys which show if a recursive unlock operation is\ndone for `id`, which dataset will be unlocked and if not why it won't be unlocked. The keys\nnamely are \"unlock_successful\" and \"unlock_error\". The former is a boolean value showing if unlock\nwould succeed/fail. The latter is description why it failed if it failed.\n\nIn some cases it's possible that the provided key/passphrase is valid but the path where the dataset is\nsupposed to be mounted after being unlocked already exists and is not empty. In this case, unlock operation\nwould fail and `unlock_error` will reflect this error appropriately. This can be overridden by setting\n`encryption_root_summary_options.datasets.X.force` boolean flag or by setting\n`encryption_root_summary_options.force` flag. In practice, when the dataset is going to be unlocked\nand these flags have been provided to `pool.dataset.unlock`, system will rename the directory/file path\nwhere the dataset should be mounted resulting in successful unlock of the dataset.\n\nIf a dataset is already unlocked, it will show up as true for \"unlock_successful\" regardless of what\nkey user provided as the unlock keys in the output are to reflect what a real unlock operation would\nbehave. If user is interested in seeing if a provided key is valid or not, then the key to look out for\nin the output is \"valid_key\" which based on what system has in database or if a user provided one, validates\nthe key and sets a boolean value for the dataset.\n\nExample output:\n[\n    {\n        \"name\": \"vol\",\n        \"key_format\": \"PASSPHRASE\",\n        \"key_present_in_database\": false,\n        \"valid_key\": true,\n        \"locked\": true,\n        \"unlock_error\": null,\n        \"unlock_successful\": true\n    },\n    {\n        \"name\": \"vol/c1/d1\",\n        \"key_format\": \"PASSPHRASE\",\n        \"key_present_in_database\": false,\n        \"valid_key\": false,\n        \"locked\": true,\n        \"unlock_error\": \"Provided key is invalid\",\n        \"unlock_successful\": false\n    },\n    {\n        \"name\": \"vol/c\",\n        \"key_format\": \"PASSPHRASE\",\n        \"key_present_in_database\": false,\n        \"valid_key\": false,\n        \"locked\": true,\n        \"unlock_error\": \"Key not provided\",\n        \"unlock_successful\": false\n    },\n    {\n        \"name\": \"vol/c/d2\",\n        \"key_format\": \"PASSPHRASE\",\n        \"key_present_in_database\": false,\n        \"valid_key\": false,\n        \"locked\": true,\n        \"unlock_error\": \"Child cannot be unlocked when parent \"vol/c\" is locked and provided key is invalid\",\n        \"unlock_successful\": false\n    }\n]\n\nA file might be uploaded to this endpoint. To upload a file, please send a multipart request with two parts. The first, named `data`, should contain a JSON-encoded payload, and the second, named `file`, should contain an uploaded file.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/pool_dataset_encryption_summary"
          }
         }
        }
       }
      }
     },
     "/pool/dataset/export_key": {
      "post": {
       "tags": [
        "pool.dataset"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_pool_dataset_export_key"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Export own encryption key for dataset `id`. If `download` is `true`, key will be downloaded in a json file\nwhere the same file can be used to unlock the dataset, otherwise it will be returned as string.\n\nPlease refer to websocket documentation for downloading the file.\n\nA file might be downloaded from this endpoint. Please specify `?download=0` to fetch a method call result instead.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/pool_dataset_export_key"
          }
         }
        }
       }
      }
     },
     "/pool/dataset/export_keys": {
      "post": {
       "tags": [
        "pool.dataset"
       ],
       "responses": {
        "200": {
         "$ref": "#/components/responses/Success"
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Export keys for `id` and its children which are stored in the system. The exported file is a JSON file\nwhich has a dictionary containing dataset names as keys and their keys as the value.\n\nPlease refer to websocket documentation for downloading the file.\n\nA file will be downloaded from this endpoint.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/pool_dataset_export_keys"
          }
         }
        }
       }
      }
     },
     "/pool/dataset/export_keys_for_replication": {
      "post": {
       "tags": [
        "pool.dataset"
       ],
       "responses": {
        "200": {
         "$ref": "#/components/responses/Success"
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Export keys for replication task `id` for source dataset(s) which are stored in the system. The exported file\nis a JSON file which has a dictionary containing dataset names as keys and their keys as the value.\n\nPlease refer to websocket documentation for downloading the file.\n\nA file will be downloaded from this endpoint.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/pool_dataset_export_keys_for_replication"
          }
         }
        }
       }
      }
     },
     "/pool/dataset/get_instance": {
      "post": {
       "tags": [
        "pool.dataset"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_pool_dataset_get_instance"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised.\n\nPlease see `query` method documentation for `options`.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/pool_dataset_get_instance"
          }
         }
        }
       }
      }
     },
     "/pool/dataset/id/{id_}/get_quota": {
      "post": {
       "tags": [
        "pool.dataset"
       ],
       "responses": {
        "200": {
         "$ref": "#/components/responses/Success"
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "string"
         }
        }
       ],
       "description": "Return a list of the specified `quota_type` of quotas on the ZFS dataset `ds`.\nSupport `query-filters` and `query-options`. used_bytes may not instantly\nupdate as space is used.\n\nWhen quota_type is not DATASET, each quota entry has these fields:\n\n`id` - the uid or gid to which the quota applies.\n\n`name` - the user or group name to which the quota applies. Value is\nnull if the id in the quota cannot be resolved to a user or group. This\nindicates that the user or group does not exist on the server.\n\n`quota` - the quota size in bytes.  Absent if no quota is set.\n\n`used_bytes` - the amount of bytes the user has written to the dataset.\nA value of zero means unlimited.\n\n`obj_quota` - the number of objects that may be owned by `id`.\nA value of zero means unlimited.  Absent if no objquota is set.\n\n`obj_used` - the number of objects currently owned by `id`.\n\nNote: SMB client requests to set a quota granting no space will result\nin an on-disk quota of 1 KiB.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/pool_dataset_get_quota"
          }
         }
        }
       }
      }
     },
     "/pool/dataset/inherit_parent_encryption_properties": {
      "post": {
       "tags": [
        "pool.dataset"
       ],
       "responses": {
        "200": {
         "$ref": "#/components/responses/Success"
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Allows inheriting parent's encryption root discarding its current encryption settings. This\ncan only be done where `id` has an encrypted parent and `id` itself is an encryption root.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/pool_dataset_inherit_parent_encryption_properties"
          }
         }
        }
       }
      }
     },
     "/pool/dataset/lock": {
      "post": {
       "tags": [
        "pool.dataset"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_pool_dataset_lock"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Locks `id` dataset. It will unmount the dataset and its children before locking.\n\nAfter the dataset has been unmounted, system will set immutable flag on the dataset's mountpoint where\nthe dataset was mounted before it was locked making sure that the path cannot be modified. Once the dataset\nis unlocked, it will not be affected by this change and consumers can continue consuming it.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/pool_dataset_lock"
          }
         }
        }
       }
      }
     },
     "/pool/dataset/id/{id_}/processes": {
      "post": {
       "tags": [
        "pool.dataset"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_pool_dataset_processes"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "string"
         }
        }
       ],
       "description": "Return a list of processes using this dataset.\n\nExample return value:\n\n[\n  {\n    \"pid\": 2520,\n    \"name\": \"smbd\",\n    \"service\": \"cifs\"\n  },\n  {\n    \"pid\": 97778,\n    \"name\": \"minio\",\n    \"cmdline\": \"/usr/local/bin/minio -C /usr/local/etc/minio server --address=0.0.0.0:9000 --quiet /mnt/tank/wk\"\n  }\n]",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/pool_dataset_processes"
          }
         }
        }
       }
      }
     },
     "/pool/dataset/id/{id_}/promote": {
      "post": {
       "tags": [
        "pool.dataset"
       ],
       "responses": {
        "200": {
         "$ref": "#/components/responses/Success"
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "string"
         }
        }
       ],
       "description": "Promote the cloned dataset `id`.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/pool_dataset_promote"
          }
         }
        }
       }
      }
     },
     "/pool/dataset/recommended_zvol_blocksize": {
      "post": {
       "tags": [
        "pool.dataset"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_pool_dataset_recommended_zvol_blocksize"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Helper method to get recommended size for a new zvol (dataset of type VOLUME).\n\n",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/pool_dataset_recommended_zvol_blocksize"
          }
         }
        }
       }
      }
     },
     "/pool/dataset/recordsize_choices": {
      "post": {
       "tags": [
        "pool.dataset"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_pool_dataset_recordsize_choices"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Retrieve recordsize choices for datasets.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/pool_dataset_recordsize_choices"
          }
         }
        }
       }
      }
     },
     "/pool/dataset/id/{id_}/set_quota": {
      "post": {
       "tags": [
        "pool.dataset"
       ],
       "responses": {
        "200": {
         "$ref": "#/components/responses/Success"
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "string"
         }
        }
       ],
       "description": "There are three over-arching types of quotas for ZFS datasets.\n1) dataset quotas and refquotas. If a DATASET quota type is specified in\nthis API call, then the API acts as a wrapper for `pool.dataset.update`.\n\n2) User and group quotas. These limit the amount of disk space consumed\nby files that are owned by the specified users or groups. If the respective\n\"object quota\" type is specfied, then the quota limits the number of objects\nthat may be owned by the specified user or group.\n\n3) Project quotas. These limit the amount of disk space consumed by files\nthat are owned by the specified project. Project quotas are not yet implemended.\n\nThis API allows users to set multiple quotas simultaneously by submitting a\nlist of quotas. The list may contain all supported quota types.\n\n`ds` the name of the target ZFS dataset.\n\n`quotas` specifies a list of `quota_entry` entries to apply to dataset.\n\n`quota_entry` entries have these required parameters:\n\n`quota_type`: specifies the type of quota to apply to the dataset. Possible\nvalues are USER, USEROBJ, GROUP, GROUPOBJ, and DATASET. USEROBJ and GROUPOBJ\nquotas limit the number of objects consumed by the specified user or group.\n\n`id`: the uid, gid, or name to which the quota applies. If quota_type is\n'DATASET', then `id` must be either `QUOTA` or `REFQUOTA`.\n\n`quota_value`: the quota size in bytes. Setting a value of `0` removes\nthe user or group quota.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/pool_dataset_set_quota"
          }
         }
        }
       }
      }
     },
     "/pool/dataset/snapshot_count": {
      "post": {
       "tags": [
        "pool.dataset"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_pool_dataset_snapshot_count"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Returns snapshot count for specified `dataset`.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/pool_dataset_snapshot_count"
          }
         }
        }
       }
      }
     },
     "/pool/dataset/unlock": {
      "post": {
       "tags": [
        "pool.dataset"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_pool_dataset_unlock"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Unlock dataset `id` (and its children if `unlock_options.recursive` is `true`).\n\nIf `id` dataset is not encrypted an exception will be raised. There is one exception:\nwhen `id` is a root dataset and `unlock_options.recursive` is specified, encryption\nvalidation will not be performed for `id`. This allow unlocking encrypted children for the entire pool `id`.\n\nThere are two ways to supply the key(s)/passphrase(s) for unlocking a dataset:\n\n1. Upload a json file which contains encrypted dataset keys (it will be read from the input pipe if\n`unlock_options.key_file` is `true`). The format is the one that is used for exporting encrypted dataset keys\n(`pool.export_keys`).\n\n2. Specify a key or a passphrase for each unlocked dataset using `unlock_options.datasets`.\n\nIf `unlock_options.datasets.{i}.recursive` is `true`, a key or a passphrase is applied to all the encrypted\nchildren of a dataset.\n\n`unlock_options.toggle_attachments` controls whether attachments  should be put in action after unlocking\ndataset(s). Toggling attachments can theoretically lead to service interruption when daemons configurations are\nreloaded (this should not happen,  and if this happens it should be considered a bug). As TrueNAS does not have\na state for resources that should be unlocked but are still locked, disabling this option will put the system\ninto an inconsistent state so it should really never be disabled.\n\nIn some cases it's possible that the provided key/passphrase is valid but the path where the dataset is\nsupposed to be mounted after being unlocked already exists and is not empty. In this case, unlock operation\nwould fail. This can be overridden by setting `unlock_options.datasets.X.force` boolean flag or by setting\n`unlock_options.force` flag. When any of these flags are set, system will rename the existing\ndirectory/file path where the dataset should be mounted resulting in successful unlock of the dataset.\n\nA file might be uploaded to this endpoint. To upload a file, please send a multipart request with two parts. The first, named `data`, should contain a JSON-encoded payload, and the second, named `file`, should contain an uploaded file.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/pool_dataset_unlock"
          }
         }
        }
       }
      }
     },
     "/pool/resilver": {
      "get": {
       "tags": [
        "pool.resilver"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_pool_resilver_config"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": ""
      },
      "put": {
       "tags": [
        "pool.resilver"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_pool_resilver_update"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Configure Pool Resilver Priority.\n\nIf `begin` time is greater than `end` time it means it will rollover the day, e.g.\nbegin = \"19:00\", end = \"05:00\" will increase pool resilver priority from 19:00 of one day\nuntil 05:00 of the next day.\n\n`weekday` follows crontab(5) values 0-7 (0 or 7 is Sun).\n\n",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/pool_resilver_update"
          }
         }
        }
       }
      }
     },
     "/pool/scrub": {
      "get": {
       "tags": [
        "pool.scrub"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_pool_scrub_query"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "limit",
         "in": "query",
         "required": false,
         "schema": {
          "type": "integer"
         }
        },
        {
         "name": "offset",
         "in": "query",
         "required": false,
         "schema": {
          "type": "integer"
         }
        },
        {
         "name": "count",
         "in": "query",
         "required": false,
         "schema": {
          "type": "boolean"
         }
        },
        {
         "name": "sort",
         "in": "query",
         "required": false,
         "schema": {
          "type": "string"
         }
        }
       ],
       "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      },
      "post": {
       "tags": [
        "pool.scrub"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_pool_scrub_create"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Create a scrub task for a pool.\n\n`threshold` refers to the minimum amount of time in days has to be passed before\na scrub can run again.\n\n",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/pool_scrub_create"
          }
         }
        }
       }
      }
     },
     "/pool/scrub/id/{id_}": {
      "delete": {
       "tags": [
        "pool.scrub"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_pool_scrub_delete"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "Delete scrub task of `id`."
      },
      "get": {
       "tags": [
        "pool.scrub"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_pool_scrub_query"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      },
      "put": {
       "tags": [
        "pool.scrub"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_pool_scrub_update"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "Update scrub task of `id`.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/pool_scrub_update"
          }
         }
        }
       }
      }
     },
     "/pool/scrub/get_instance": {
      "post": {
       "tags": [
        "pool.scrub"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_pool_scrub_get_instance"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised.\n\nPlease see `query` method documentation for `options`.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/pool_scrub_get_instance"
          }
         }
        }
       }
      }
     },
     "/pool/scrub/run": {
      "post": {
       "tags": [
        "pool.scrub"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_pool_scrub_run"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Initiate a scrub of a pool `name` if last scrub was performed more than `threshold` days before.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/pool_scrub_run"
          }
         }
        }
       }
      }
     },
     "/pool/scrub/scrub": {
      "post": {
       "tags": [
        "pool.scrub"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_pool_scrub_scrub"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Start/Stop/Pause a scrub on pool `name`.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/pool_scrub_scrub"
          }
         }
        }
       }
      }
     },
     "/pool/snapshottask": {
      "get": {
       "tags": [
        "pool.snapshottask"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_pool_snapshottask_query"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "limit",
         "in": "query",
         "required": false,
         "schema": {
          "type": "integer"
         }
        },
        {
         "name": "offset",
         "in": "query",
         "required": false,
         "schema": {
          "type": "integer"
         }
        },
        {
         "name": "count",
         "in": "query",
         "required": false,
         "schema": {
          "type": "boolean"
         }
        },
        {
         "name": "sort",
         "in": "query",
         "required": false,
         "schema": {
          "type": "string"
         }
        }
       ],
       "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      },
      "post": {
       "tags": [
        "pool.snapshottask"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_pool_snapshottask_create"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Create a Periodic Snapshot Task\n\nCreate a Periodic Snapshot Task that will take snapshots of specified `dataset` at specified `schedule`.\nRecursive snapshots can be created if `recursive` flag is enabled. You can `exclude` specific child datasets\nor zvols from the snapshot.\nSnapshots will be automatically destroyed after a certain amount of time, specified by\n`lifetime_value` and `lifetime_unit`.\nIf multiple periodic tasks create snapshots at the same time (for example hourly and daily at 00:00) the snapshot\nwill be kept until the last of these tasks reaches its expiry time.\nSnapshots will be named according to `naming_schema` which is a `strftime`-like template for snapshot name\nand must contain `%Y`, `%m`, `%d`, `%H` and `%M`.\n\n",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/pool_snapshottask_create"
          }
         }
        }
       }
      }
     },
     "/pool/snapshottask/id/{id_}": {
      "delete": {
       "tags": [
        "pool.snapshottask"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_pool_snapshottask_delete"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "Delete a Periodic Snapshot Task with specific `id`\n\n",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/pool_snapshottask_delete"
          }
         }
        }
       }
      },
      "get": {
       "tags": [
        "pool.snapshottask"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_pool_snapshottask_query"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      },
      "put": {
       "tags": [
        "pool.snapshottask"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_pool_snapshottask_update"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "Update a Periodic Snapshot Task with specific `id`\n\nSee the documentation for `create` method for information on payload contents\n\n",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/pool_snapshottask_update"
          }
         }
        }
       }
      }
     },
     "/pool/snapshottask/id/{id_}/delete_will_change_retention_for": {
      "post": {
       "tags": [
        "pool.snapshottask"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_pool_snapshottask_delete_will_change_retention_for"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "Returns a list of snapshots which will change the retention if periodic snapshot task `id` is deleted.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/pool_snapshottask_delete_will_change_retention_for"
          }
         }
        }
       }
      }
     },
     "/pool/snapshottask/get_instance": {
      "post": {
       "tags": [
        "pool.snapshottask"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_pool_snapshottask_get_instance"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised.\n\nPlease see `query` method documentation for `options`.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/pool_snapshottask_get_instance"
          }
         }
        }
       }
      }
     },
     "/pool/snapshottask/max_count": {
      "get": {
       "tags": [
        "pool.snapshottask"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_pool_snapshottask_max_count"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Returns a maximum amount of snapshots (per-dataset) the system can sustain."
      }
     },
     "/pool/snapshottask/max_total_count": {
      "get": {
       "tags": [
        "pool.snapshottask"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_pool_snapshottask_max_total_count"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Returns a maximum amount of snapshots (total) the system can sustain."
      }
     },
     "/pool/snapshottask/id/{id_}/run": {
      "post": {
       "tags": [
        "pool.snapshottask"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_pool_snapshottask_run"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "Execute a Periodic Snapshot Task of `id`.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/pool_snapshottask_run"
          }
         }
        }
       }
      }
     },
     "/pool/snapshottask/id/{id_}/update_will_change_retention_for": {
      "post": {
       "tags": [
        "pool.snapshottask"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_pool_snapshottask_update_will_change_retention_for"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "Returns a list of snapshots which will change the retention if periodic snapshot task `id` is updated\nwith `data`.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/pool_snapshottask_update_will_change_retention_for"
          }
         }
        }
       }
      }
     },
     "/privilege": {
      "get": {
       "tags": [
        "privilege"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_privilege_query"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "limit",
         "in": "query",
         "required": false,
         "schema": {
          "type": "integer"
         }
        },
        {
         "name": "offset",
         "in": "query",
         "required": false,
         "schema": {
          "type": "integer"
         }
        },
        {
         "name": "count",
         "in": "query",
         "required": false,
         "schema": {
          "type": "boolean"
         }
        },
        {
         "name": "sort",
         "in": "query",
         "required": false,
         "schema": {
          "type": "string"
         }
        }
       ],
       "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      },
      "post": {
       "tags": [
        "privilege"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_privilege_create"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Creates a privilege.\n\n`name` is a name for privilege (must be unique).\n\n`local_groups` is a list of local user account group GIDs that gain this privilege.\n\n`ds_groups` is list of Directory Service group GIDs that will gain this privilege.\n\n`roles` is a list of roles to be assigned to the privilege\n\n`web_shell` controls whether users with this privilege are allowed to log in to the Web UI.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/privilege_create"
          }
         }
        }
       }
      }
     },
     "/privilege/id/{id_}": {
      "delete": {
       "tags": [
        "privilege"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_privilege_delete"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "Delete the privilege `id`."
      },
      "get": {
       "tags": [
        "privilege"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_privilege_query"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      },
      "put": {
       "tags": [
        "privilege"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_privilege_update"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "Update the privilege `id`.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/privilege_update"
          }
         }
        }
       }
      }
     },
     "/privilege/get_instance": {
      "post": {
       "tags": [
        "privilege"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_privilege_get_instance"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised.\n\nPlease see `query` method documentation for `options`.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/privilege_get_instance"
          }
         }
        }
       }
      }
     },
     "/privilege/roles": {
      "get": {
       "tags": [
        "privilege"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_privilege_roles"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "limit",
         "in": "query",
         "required": false,
         "schema": {
          "type": "integer"
         }
        },
        {
         "name": "offset",
         "in": "query",
         "required": false,
         "schema": {
          "type": "integer"
         }
        },
        {
         "name": "count",
         "in": "query",
         "required": false,
         "schema": {
          "type": "boolean"
         }
        },
        {
         "name": "sort",
         "in": "query",
         "required": false,
         "schema": {
          "type": "string"
         }
        }
       ],
       "description": "Get all available roles.\n\nEach entry contains the following keys:\n\n`name` - the internal name of the role\n\n`includes` - list of other roles that this role includes. When user is\ngranted this role, they will also receive permissions granted by all\nthe included roles.\n\n`builtin` - role exists for internal backend purposes for access\ncontrol.\n\n`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      }
     },
     "/replication": {
      "get": {
       "tags": [
        "replication"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_replication_query"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "limit",
         "in": "query",
         "required": false,
         "schema": {
          "type": "integer"
         }
        },
        {
         "name": "offset",
         "in": "query",
         "required": false,
         "schema": {
          "type": "integer"
         }
        },
        {
         "name": "count",
         "in": "query",
         "required": false,
         "schema": {
          "type": "boolean"
         }
        },
        {
         "name": "sort",
         "in": "query",
         "required": false,
         "schema": {
          "type": "string"
         }
        }
       ],
       "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      },
      "post": {
       "tags": [
        "replication"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_replication_create"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Create a Replication Task\n\nCreate a Replication Task that will push or pull ZFS snapshots to or from remote host..\n\n* `name` specifies a name for replication task\n* `direction` specifies whether task will `PUSH` or `PULL` snapshots\n* `transport` is a method of snapshots transfer:\n  * `SSH` transfers snapshots via SSH connection. This method is supported everywhere but does not achieve\n    great performance\n    `ssh_credentials` is a required field for this transport (Keychain Credential ID of type `SSH_CREDENTIALS`)\n  * `SSH+NETCAT` uses unencrypted connection for data transfer. This can only be used in trusted networks\n    and requires a port (specified by range from `netcat_active_side_port_min` to `netcat_active_side_port_max`)\n    to be open on `netcat_active_side`\n    `ssh_credentials` is also required for control connection\n  * `LOCAL` replicates to or from localhost\n  `sudo` flag controls whether `SSH` and `SSH+NETCAT` transports should use sudo (which is expected to be\n  passwordless) to run `zfs` command on the remote machine.\n* `source_datasets` is a non-empty list of datasets to replicate snapshots from\n* `target_dataset` is a dataset to put snapshots into. It must exist on target side\n* `recursive` and `exclude` have the same meaning as for Periodic Snapshot Task\n* `properties` control whether we should send dataset properties along with snapshots\n* `periodic_snapshot_tasks` is a list of periodic snapshot task IDs that are sources of snapshots for this\n  replication task. Only push replication tasks can be bound to periodic snapshot tasks.\n* `naming_schema` is a list of naming schemas for pull replication\n* `also_include_naming_schema` is a list of naming schemas for push replication\n* `name_regex` will replicate all snapshots which names match specified regular expression\n* `auto` allows replication to run automatically on schedule or after bound periodic snapshot task\n* `schedule` is a schedule to run replication task. Only `auto` replication tasks without bound periodic\n  snapshot tasks can have a schedule\n* `restrict_schedule` restricts when replication task with bound periodic snapshot tasks runs. For example,\n  you can have periodic snapshot tasks that run every 15 minutes, but only run replication task every hour.\n* Enabling `only_matching_schedule` will only replicate snapshots that match `schedule` or\n  `restrict_schedule`\n* `allow_from_scratch` will destroy all snapshots on target side and replicate everything from scratch if none\n  of the snapshots on target side matches source snapshots\n* `readonly` controls destination datasets readonly property:\n  * `SET` will set all destination datasets to readonly=on after finishing the replication\n  * `REQUIRE` will require all existing destination datasets to have readonly=on property\n  * `IGNORE` will avoid this kind of behavior\n* `hold_pending_snapshots` will prevent source snapshots from being deleted by retention of replication fails\n  for some reason\n* `retention_policy` specifies how to delete old snapshots on target side:\n  * `SOURCE` deletes snapshots that are absent on source side\n  * `CUSTOM` deletes snapshots that are older than `lifetime_value` and `lifetime_unit`\n  * `NONE` does not delete any snapshots\n* `compression` compresses SSH stream. Available only for SSH transport\n* `speed_limit` limits speed of SSH stream. Available only for SSH transport\n* `large_block`, `embed` and `compressed` are various ZFS stream flag documented in `man zfs send`\n* `retries` specifies number of retries before considering replication failed\n\n",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/replication_create"
          }
         }
        }
       }
      }
     },
     "/replication/id/{id_}": {
      "delete": {
       "tags": [
        "replication"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_replication_delete"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "Delete a Replication Task with specific `id`\n\n"
      },
      "get": {
       "tags": [
        "replication"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_replication_query"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      },
      "put": {
       "tags": [
        "replication"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_replication_update"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "Update a Replication Task with specific `id`\n\nSee the documentation for `create` method for information on payload contents\n\n",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/replication_update"
          }
         }
        }
       }
      }
     },
     "/replication/count_eligible_manual_snapshots": {
      "post": {
       "tags": [
        "replication"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_replication_count_eligible_manual_snapshots"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Count how many existing snapshots of `dataset` match `naming_schema`.\n\n",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/replication_count_eligible_manual_snapshots"
          }
         }
        }
       }
      }
     },
     "/replication/create_dataset": {
      "post": {
       "tags": [
        "replication"
       ],
       "responses": {
        "200": {
         "$ref": "#/components/responses/Success"
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Creates dataset on remote side\n\nAccepts `dataset` name, `transport` and SSH credentials ID (for non-local transport)\n\n",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/replication_create_dataset"
          }
         }
        }
       }
      }
     },
     "/replication/get_instance": {
      "post": {
       "tags": [
        "replication"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_replication_get_instance"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised.\n\nPlease see `query` method documentation for `options`.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/replication_get_instance"
          }
         }
        }
       }
      }
     },
     "/replication/list_datasets": {
      "post": {
       "tags": [
        "replication"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_replication_list_datasets"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "List datasets on remote side\n\nAccepts `transport` and SSH credentials ID (for non-local transport)\n\n",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/replication_list_datasets"
          }
         }
        }
       }
      }
     },
     "/replication/list_naming_schemas": {
      "get": {
       "tags": [
        "replication"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_replication_list_naming_schemas"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "List all naming schemas used in periodic snapshot and replication tasks."
      }
     },
     "/replication/id/{id_}/restore": {
      "post": {
       "tags": [
        "replication"
       ],
       "responses": {
        "200": {
         "$ref": "#/components/responses/Success"
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "Create the opposite of replication task `id` (PULL if it was PUSH and vice versa).",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/replication_restore"
          }
         }
        }
       }
      }
     },
     "/replication/id/{id_}/run": {
      "post": {
       "tags": [
        "replication"
       ],
       "responses": {
        "200": {
         "$ref": "#/components/responses/Success"
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "Run Replication Task of `id`.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/replication_run"
          }
         }
        }
       }
      }
     },
     "/replication/run_onetime": {
      "post": {
       "tags": [
        "replication"
       ],
       "responses": {
        "200": {
         "$ref": "#/components/responses/Success"
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Run replication task without creating it.\n\nIf `only_from_scratch` is `true` then replication will fail if target dataset already exists.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/replication_run_onetime"
          }
         }
        }
       }
      }
     },
     "/replication/target_unmatched_snapshots": {
      "post": {
       "tags": [
        "replication"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_replication_target_unmatched_snapshots"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Check if target has any snapshots that do not exist on source. Returns these snapshots grouped by dataset.\n\n",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/replication_target_unmatched_snapshots"
          }
         }
        }
       }
      }
     },
     "/replication/config": {
      "get": {
       "tags": [
        "replication.config"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_replication_config_config"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": ""
      },
      "put": {
       "tags": [
        "replication.config"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_replication_config_update"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "`max_parallel_replication_tasks` represents a maximum number of parallel replication tasks running.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/replication_config_update"
          }
         }
        }
       }
      }
     },
     "/reporting": {
      "get": {
       "tags": [
        "reporting"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_reporting_config"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": ""
      },
      "put": {
       "tags": [
        "reporting"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_reporting_update"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "`tier1_days` can be set to specify for how many days we want to store reporting history which in netdata\nterms specifies the number of days netdata should be storing data in tier1 storage.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/reporting_update"
          }
         }
        }
       }
      }
     },
     "/reporting/get_data": {
      "post": {
       "tags": [
        "reporting"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_reporting_get_data"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Get reporting data for given graphs.\n\nList of possible graphs can be retrieved using `reporting.graphs` call.\n\nFor the time period of the graph either `unit` and `page` OR `start` and `end` should be\nused, not both.\n\n`aggregate` will return aggregate available data for each graph (e.g. min, max, mean).\n\n",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/reporting_get_data"
          }
         }
        }
       }
      }
     },
     "/reporting/graph": {
      "post": {
       "tags": [
        "reporting"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_reporting_graph"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Get reporting data for `name` graph.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/reporting_graph"
          }
         }
        }
       }
      }
     },
     "/reporting/graphs": {
      "get": {
       "tags": [
        "reporting"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_reporting_graphs"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "limit",
         "in": "query",
         "required": false,
         "schema": {
          "type": "integer"
         }
        },
        {
         "name": "offset",
         "in": "query",
         "required": false,
         "schema": {
          "type": "integer"
         }
        },
        {
         "name": "count",
         "in": "query",
         "required": false,
         "schema": {
          "type": "boolean"
         }
        },
        {
         "name": "sort",
         "in": "query",
         "required": false,
         "schema": {
          "type": "string"
         }
        }
       ],
       "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      }
     },
     "/reporting/netdata_get_data": {
      "post": {
       "tags": [
        "reporting"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_reporting_netdata_get_data"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Get reporting data for given graphs.\n\nList of possible graphs can be retrieved using `reporting.netdata_graphs` call.\n\nFor the time period of the graph either `unit` and `page` OR `start` and `end` should be\nused, not both.\n\n`aggregate` will return aggregate available data for each graph (e.g. min, max, mean).\n\n",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/reporting_netdata_get_data"
          }
         }
        }
       }
      }
     },
     "/reporting/netdata_graph": {
      "post": {
       "tags": [
        "reporting"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_reporting_netdata_graph"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Get reporting data for `name` graph.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/reporting_netdata_graph"
          }
         }
        }
       }
      }
     },
     "/reporting/netdata_graphs": {
      "get": {
       "tags": [
        "reporting"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_reporting_netdata_graphs"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "limit",
         "in": "query",
         "required": false,
         "schema": {
          "type": "integer"
         }
        },
        {
         "name": "offset",
         "in": "query",
         "required": false,
         "schema": {
          "type": "integer"
         }
        },
        {
         "name": "count",
         "in": "query",
         "required": false,
         "schema": {
          "type": "boolean"
         }
        },
        {
         "name": "sort",
         "in": "query",
         "required": false,
         "schema": {
          "type": "string"
         }
        }
       ],
       "description": "Get reporting netdata graphs.\n\n`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      }
     },
     "/reporting/exporters": {
      "get": {
       "tags": [
        "reporting.exporters"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_reporting_exporters_query"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "limit",
         "in": "query",
         "required": false,
         "schema": {
          "type": "integer"
         }
        },
        {
         "name": "offset",
         "in": "query",
         "required": false,
         "schema": {
          "type": "integer"
         }
        },
        {
         "name": "count",
         "in": "query",
         "required": false,
         "schema": {
          "type": "boolean"
         }
        },
        {
         "name": "sort",
         "in": "query",
         "required": false,
         "schema": {
          "type": "string"
         }
        }
       ],
       "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      },
      "post": {
       "tags": [
        "reporting.exporters"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_reporting_exporters_create"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Create a specific reporting exporter configuration containing required details for exporting reporting metrics.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/reporting_exporters_create"
          }
         }
        }
       }
      }
     },
     "/reporting/exporters/id/{id_}": {
      "delete": {
       "tags": [
        "reporting.exporters"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_reporting_exporters_delete"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "Delete Reporting Exporter of `id`."
      },
      "get": {
       "tags": [
        "reporting.exporters"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_reporting_exporters_query"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      },
      "put": {
       "tags": [
        "reporting.exporters"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_reporting_exporters_update"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "Update Reporting Exporter of `id`.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/reporting_exporters_update"
          }
         }
        }
       }
      }
     },
     "/reporting/exporters/exporter_schemas": {
      "get": {
       "tags": [
        "reporting.exporters"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_reporting_exporters_exporter_schemas"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Get the schemas for all the reporting export types we support with their respective attributes\nrequired for successfully exporting reporting metrics to them."
      }
     },
     "/reporting/exporters/get_instance": {
      "post": {
       "tags": [
        "reporting.exporters"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_reporting_exporters_get_instance"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised.\n\nPlease see `query` method documentation for `options`.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/reporting_exporters_get_instance"
          }
         }
        }
       }
      }
     },
     "/route/ipv4gw_reachable": {
      "post": {
       "tags": [
        "route"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_route_ipv4gw_reachable"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Get the IPv4 gateway and verify if it is reachable by any interface.\n\nReturns:\n    bool: True if the gateway is reachable or otherwise False.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/route_ipv4gw_reachable"
          }
         }
        }
       }
      }
     },
     "/route/system_routes": {
      "get": {
       "tags": [
        "route"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_route_system_routes"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "limit",
         "in": "query",
         "required": false,
         "schema": {
          "type": "integer"
         }
        },
        {
         "name": "offset",
         "in": "query",
         "required": false,
         "schema": {
          "type": "integer"
         }
        },
        {
         "name": "count",
         "in": "query",
         "required": false,
         "schema": {
          "type": "boolean"
         }
        },
        {
         "name": "sort",
         "in": "query",
         "required": false,
         "schema": {
          "type": "string"
         }
        }
       ],
       "description": "Get current/applied network routes.\n\n`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      }
     },
     "/rsynctask": {
      "get": {
       "tags": [
        "rsynctask"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_rsynctask_query"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "limit",
         "in": "query",
         "required": false,
         "schema": {
          "type": "integer"
         }
        },
        {
         "name": "offset",
         "in": "query",
         "required": false,
         "schema": {
          "type": "integer"
         }
        },
        {
         "name": "count",
         "in": "query",
         "required": false,
         "schema": {
          "type": "boolean"
         }
        },
        {
         "name": "sort",
         "in": "query",
         "required": false,
         "schema": {
          "type": "string"
         }
        }
       ],
       "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      },
      "post": {
       "tags": [
        "rsynctask"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_rsynctask_create"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Create a Rsync Task.\n\nSee the comment in Rsyncmod about `path` length limits.\n\n`remotehost` is ip address or hostname of the remote system. If username differs on the remote host,\n\"username@remote_host\" format should be used.\n\n`mode` represents different operating mechanisms for Rsync i.e Rsync Module mode / Rsync SSH mode.\n\nIn SSH mode, if `ssh_credentials` (a keychain credential of `SSH_CREDENTIALS` type) is specified then it is used\nto connect to the remote host. If it is not specified, then keys in `user`'s .ssh directory are used.\n`remotehost` and `remoteport` are not used in this case.\n\n`remotemodule` is the name of remote module, this attribute should be specified when `mode` is set to MODULE.\n\n`remotepath` specifies the path on the remote system.\n\n`validate_rpath` is a boolean which when sets validates the existence of the remote path.\n\n`ssh_keyscan` will automatically add remote host key to user's known_hosts file.\n\n`direction` specifies if data should be PULLED or PUSHED from the remote system.\n\n`compress` when set reduces the size of the data which is to be transmitted.\n\n`archive` when set makes rsync run recursively, preserving symlinks, permissions, modification times, group,\nand special files.\n\n`delete` when set deletes files in the destination directory which do not exist in the source directory.\n\n`preserveperm` when set preserves original file permissions.\n\n",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/rsynctask_create"
          }
         }
        }
       }
      }
     },
     "/rsynctask/id/{id_}": {
      "delete": {
       "tags": [
        "rsynctask"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_rsynctask_delete"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "Delete Rsync Task of `id`."
      },
      "get": {
       "tags": [
        "rsynctask"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_rsynctask_query"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      },
      "put": {
       "tags": [
        "rsynctask"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_rsynctask_update"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "Update Rsync Task of `id`.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/rsynctask_update"
          }
         }
        }
       }
      }
     },
     "/rsynctask/get_instance": {
      "post": {
       "tags": [
        "rsynctask"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_rsynctask_get_instance"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised.\n\nPlease see `query` method documentation for `options`.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/rsynctask_get_instance"
          }
         }
        }
       }
      }
     },
     "/rsynctask/id/{id_}/run": {
      "post": {
       "tags": [
        "rsynctask"
       ],
       "responses": {
        "200": {
         "$ref": "#/components/responses/Success"
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "Job to run rsync task of `id`.\n\nOutput is saved to job log excerpt (not syslog).",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/rsynctask_run"
          }
         }
        }
       }
      }
     },
     "/service": {
      "get": {
       "tags": [
        "service"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_service_query"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "limit",
         "in": "query",
         "required": false,
         "schema": {
          "type": "integer"
         }
        },
        {
         "name": "offset",
         "in": "query",
         "required": false,
         "schema": {
          "type": "integer"
         }
        },
        {
         "name": "count",
         "in": "query",
         "required": false,
         "schema": {
          "type": "boolean"
         }
        },
        {
         "name": "sort",
         "in": "query",
         "required": false,
         "schema": {
          "type": "string"
         }
        }
       ],
       "description": "Query all system services with `query-filters` and `query-options`.\n\nSupports the following extra options:\n`include_state` - performance optimization to avoid getting service state.\ndefaults to True.\n\n`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      }
     },
     "/service/id/{id_}": {
      "get": {
       "tags": [
        "service"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_service_query"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "Query all system services with `query-filters` and `query-options`.\n\nSupports the following extra options:\n`include_state` - performance optimization to avoid getting service state.\ndefaults to True.\n\n`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      },
      "put": {
       "tags": [
        "service"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_service_update"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "Update service entry of `id_or_name`.\n\nCurrently, it only accepts `enable` option which means whether the service should start on boot.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/service_update"
          }
         }
        }
       }
      }
     },
     "/service/get_instance": {
      "post": {
       "tags": [
        "service"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_service_get_instance"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised.\n\nPlease see `query` method documentation for `options`.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/service_get_instance"
          }
         }
        }
       }
      }
     },
     "/service/reload": {
      "post": {
       "tags": [
        "service"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_service_reload"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Reload the service specified by `service`.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/service_reload"
          }
         }
        }
       }
      }
     },
     "/service/restart": {
      "post": {
       "tags": [
        "service"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_service_restart"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Restart the service specified by `service`.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/service_restart"
          }
         }
        }
       }
      }
     },
     "/service/start": {
      "post": {
       "tags": [
        "service"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_service_start"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Start the service specified by `service`.\n\nIf `silent` is `true` then in case of service startup failure, `false` will be returned. If `silent` is `false`\nthen in case of service startup failure, an exception will be raised.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/service_start"
          }
         }
        }
       }
      }
     },
     "/service/started": {
      "post": {
       "tags": [
        "service"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_service_started"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Test if service specified by `service` has been started.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/service_started"
          }
         }
        }
       }
      }
     },
     "/service/started_or_enabled": {
      "post": {
       "tags": [
        "service"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_service_started_or_enabled"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Test if service specified by `service` is started or enabled to start automatically.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/service_started_or_enabled"
          }
         }
        }
       }
      }
     },
     "/service/stop": {
      "post": {
       "tags": [
        "service"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_service_stop"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Stop the service specified by `service`.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/service_stop"
          }
         }
        }
       }
      }
     },
     "/sharing/nfs": {
      "get": {
       "tags": [
        "sharing.nfs"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_sharing_nfs_query"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "limit",
         "in": "query",
         "required": false,
         "schema": {
          "type": "integer"
         }
        },
        {
         "name": "offset",
         "in": "query",
         "required": false,
         "schema": {
          "type": "integer"
         }
        },
        {
         "name": "count",
         "in": "query",
         "required": false,
         "schema": {
          "type": "boolean"
         }
        },
        {
         "name": "sort",
         "in": "query",
         "required": false,
         "schema": {
          "type": "string"
         }
        }
       ],
       "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      },
      "post": {
       "tags": [
        "sharing.nfs"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_sharing_nfs_create"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Create a NFS Share.\n\n`path` local path to be exported.\n\n`aliases` IGNORED, for now.\n\n`networks` is a list of authorized networks that are allowed to access the share having format\n\"network/mask\" CIDR notation. If empty, all networks are allowed.\n\n`hosts` is a list of IP's/hostnames which are allowed to access the share. If empty, all IP's/hostnames are\nallowed.\n\n`expose_snapshots` enable TrueNAS Enterprise feature to allow access\nto the ZFS snapshot directory over NFS. This feature requires a valid\nenterprise license.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/sharing_nfs_create"
          }
         }
        }
       }
      }
     },
     "/sharing/nfs/id/{id_}": {
      "delete": {
       "tags": [
        "sharing.nfs"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_sharing_nfs_delete"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "Delete NFS Share of `id`."
      },
      "get": {
       "tags": [
        "sharing.nfs"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_sharing_nfs_query"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      },
      "put": {
       "tags": [
        "sharing.nfs"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_sharing_nfs_update"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "Update NFS Share of `id`.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/sharing_nfs_update"
          }
         }
        }
       }
      }
     },
     "/sharing/nfs/get_instance": {
      "post": {
       "tags": [
        "sharing.nfs"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_sharing_nfs_get_instance"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised.\n\nPlease see `query` method documentation for `options`.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/sharing_nfs_get_instance"
          }
         }
        }
       }
      }
     },
     "/sharing/smb": {
      "get": {
       "tags": [
        "sharing.smb"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_sharing_smb_query"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "limit",
         "in": "query",
         "required": false,
         "schema": {
          "type": "integer"
         }
        },
        {
         "name": "offset",
         "in": "query",
         "required": false,
         "schema": {
          "type": "integer"
         }
        },
        {
         "name": "count",
         "in": "query",
         "required": false,
         "schema": {
          "type": "boolean"
         }
        },
        {
         "name": "sort",
         "in": "query",
         "required": false,
         "schema": {
          "type": "string"
         }
        }
       ],
       "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      },
      "post": {
       "tags": [
        "sharing.smb"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_sharing_smb_create"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Create a SMB Share.\n\n`purpose` applies common configuration presets depending on intended purpose.\n\n`path` path to export over the SMB protocol.\n\n`timemachine` when set, enables Time Machine backups for this share.\n\n`ro` when enabled, prohibits write access to the share.\n\n`guestok` when enabled, allows access to this share without a password.\n\n`hostsallow` is a list of hostnames / IP addresses which have access to this share.\n\n`hostsdeny` is a list of hostnames / IP addresses which are not allowed access to this share. If a handful\nof hostnames are to be only allowed access, `hostsdeny` can be passed \"ALL\" which means that it will deny\naccess to ALL hostnames except for the ones which have been listed in `hostsallow`.\n\n`acl` enables support for storing the SMB Security Descriptor as a Filesystem ACL.\n\n`streams` enables support for storing alternate datastreams as filesystem extended attributes.\n\n`fsrvp` enables support for the filesystem remote VSS protocol. This allows clients to create\nZFS snapshots through RPC.\n\n`shadowcopy` enables support for the volume shadow copy service.\n\n`audit` object contains configuration parameters related to SMB share auditing. It contains the\nfollowing keys: `enable`, `watch_list` and `ignore_list`. Enable is boolean and controls whether\naudit messages will be generated for the share. `watch_list` is a list of groups for which to\ngenerate audit messages (defaults to all groups). `ignore_list` is a list of groups to ignore\nwhen auditing. If conflict arises between watch_list and ignore_list (based on user group\nmembershipt), then watch_list will take precedence and ops will be audited.\nNOTE: auditing may not be enabled if SMB1 support is enabled for the server.\n\n`auxsmbconf` is a string of additional smb4.conf parameters not covered by the system's API.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/sharing_smb_create"
          }
         }
        }
       }
      }
     },
     "/sharing/smb/id/{id_}": {
      "delete": {
       "tags": [
        "sharing.smb"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_sharing_smb_delete"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "Delete SMB Share of `id`. This will forcibly disconnect SMB clients\nthat are accessing the share."
      },
      "get": {
       "tags": [
        "sharing.smb"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_sharing_smb_query"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      },
      "put": {
       "tags": [
        "sharing.smb"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_sharing_smb_update"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "Update SMB Share of `id`.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/sharing_smb_update"
          }
         }
        }
       }
      }
     },
     "/sharing/smb/get_instance": {
      "post": {
       "tags": [
        "sharing.smb"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_sharing_smb_get_instance"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised.\n\nPlease see `query` method documentation for `options`.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/sharing_smb_get_instance"
          }
         }
        }
       }
      }
     },
     "/sharing/smb/getacl": {
      "post": {
       "tags": [
        "sharing.smb"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_sharing_smb_getacl"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/sharing_smb_getacl"
          }
         }
        }
       }
      }
     },
     "/sharing/smb/presets": {
      "get": {
       "tags": [
        "sharing.smb"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_sharing_smb_presets"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Retrieve pre-defined configuration sets for specific use-cases. These parameter\ncombinations are often non-obvious, but beneficial in these scenarios."
      }
     },
     "/sharing/smb/setacl": {
      "post": {
       "tags": [
        "sharing.smb"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_sharing_smb_setacl"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Set an ACL on `share_name`. This only impacts access through the SMB protocol.\n\n`share_name` the name of the share\n\n`share_acl` a list of ACL entries (dictionaries) with the following keys:\n\n`ae_who_sid` who the ACL entry applies to expressed as a Windows SID\n\n`ae_who_id` Unix ID information for user or group to which the ACL entry applies.\n\n`ae_perm` string representation of the permissions granted to the user or group.\nFULL - grants read, write, execute, delete, write acl, and change owner.\nCHANGE - grants read, write, execute, and delete.\nREAD - grants read and execute.\n\n`ae_type` can be ALLOWED or DENIED.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/sharing_smb_setacl"
          }
         }
        }
       }
      }
     },
     "/smart": {
      "get": {
       "tags": [
        "smart"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_smart_config"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": ""
      },
      "put": {
       "tags": [
        "smart"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_smart_update"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Update SMART Service Configuration.\n\n`interval` is an integer value in minutes which defines how often smartd activates to check if any tests\nare configured to run.\n\n`critical`, `informational` and `difference` are integer values on which alerts for SMART are configured if\nthe disks temperature crosses the assigned threshold for each respective attribute. They default to 0 which\nindicates they are disabled.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/smart_update"
          }
         }
        }
       }
      }
     },
     "/smart/test": {
      "get": {
       "tags": [
        "smart.test"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_smart_test_query"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "limit",
         "in": "query",
         "required": false,
         "schema": {
          "type": "integer"
         }
        },
        {
         "name": "offset",
         "in": "query",
         "required": false,
         "schema": {
          "type": "integer"
         }
        },
        {
         "name": "count",
         "in": "query",
         "required": false,
         "schema": {
          "type": "boolean"
         }
        },
        {
         "name": "sort",
         "in": "query",
         "required": false,
         "schema": {
          "type": "string"
         }
        }
       ],
       "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      },
      "post": {
       "tags": [
        "smart.test"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_smart_test_create"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Create a SMART Test Task.\n\n`disks` is a list of valid disks which should be monitored in this task.\n\n`type` is specified to represent the type of SMART test to be executed.\n\n`all_disks` when enabled sets the task to cover all disks in which case `disks` is not required.\n\n",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/smart_test_create"
          }
         }
        }
       }
      }
     },
     "/smart/test/id/{id_}": {
      "delete": {
       "tags": [
        "smart.test"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_smart_test_delete"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "Delete SMART Test Task of `id`."
      },
      "get": {
       "tags": [
        "smart.test"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_smart_test_query"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      },
      "put": {
       "tags": [
        "smart.test"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_smart_test_update"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "Update SMART Test Task of `id`.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/smart_test_update"
          }
         }
        }
       }
      }
     },
     "/smart/test/abort": {
      "post": {
       "tags": [
        "smart.test"
       ],
       "responses": {
        "200": {
         "$ref": "#/components/responses/Success"
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Abort non-captive S.M.A.R.T. tests for disk.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/smart_test_abort"
          }
         }
        }
       }
      }
     },
     "/smart/test/disk_choices": {
      "post": {
       "tags": [
        "smart.test"
       ],
       "responses": {
        "200": {
         "$ref": "#/components/responses/Success"
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Returns disk choices for S.M.A.R.T. test.\n\n`full_disk` will return full disk objects instead of just names.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/smart_test_disk_choices"
          }
         }
        }
       }
      }
     },
     "/smart/test/get_instance": {
      "post": {
       "tags": [
        "smart.test"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_smart_test_get_instance"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised.\n\nPlease see `query` method documentation for `options`.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/smart_test_get_instance"
          }
         }
        }
       }
      }
     },
     "/smart/test/manual_test": {
      "post": {
       "tags": [
        "smart.test"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_smart_test_manual_test"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Run manual SMART tests for `disks`.\n\n`type` indicates what type of SMART test will be ran and must be specified.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/smart_test_manual_test"
          }
         }
        }
       }
      }
     },
     "/smart/test/query_for_disk": {
      "post": {
       "tags": [
        "smart.test"
       ],
       "responses": {
        "200": {
         "$ref": "#/components/responses/Success"
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Query S.M.A.R.T. tests for the specified disk name.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/smart_test_query_for_disk"
          }
         }
        }
       }
      }
     },
     "/smart/test/results": {
      "get": {
       "tags": [
        "smart.test"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_smart_test_results"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "limit",
         "in": "query",
         "required": false,
         "schema": {
          "type": "integer"
         }
        },
        {
         "name": "offset",
         "in": "query",
         "required": false,
         "schema": {
          "type": "integer"
         }
        },
        {
         "name": "count",
         "in": "query",
         "required": false,
         "schema": {
          "type": "boolean"
         }
        },
        {
         "name": "sort",
         "in": "query",
         "required": false,
         "schema": {
          "type": "string"
         }
        }
       ],
       "description": "Get disk(s) S.M.A.R.T. test(s) results.\n\n`options.extra.tests_filter` is an optional filter for tests results.\n\n\n\n`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      }
     },
     "/smb": {
      "get": {
       "tags": [
        "smb"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_smb_config"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": ""
      },
      "put": {
       "tags": [
        "smb"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_smb_update"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Update SMB Service Configuration.\n\n`netbiosname` defaults to the original hostname of the system.\n\n`netbiosalias` a list of netbios aliases. If Server is joined to an AD domain, additional Kerberos\nService Principal Names will be generated for these aliases.\n\n`workgroup` specifies the NetBIOS workgroup to which the TrueNAS server belongs. This will be\nautomatically set to the correct value during the process of joining an AD domain.\nNOTE: `workgroup` and `netbiosname` should have different values.\n\n`enable_smb1` allows legacy SMB clients to connect to the server when enabled.\n\n`aapl_extensions` enables support for SMB2 protocol extensions for MacOS clients. This is not a\nrequirement for MacOS support, but is currently a requirement for time machine support.\n\n`localmaster` when set, determines if the system participates in a browser election.\n\n`guest` attribute is specified to select the account to be used for guest access. It defaults to \"nobody\".\n\nThe group specified as the SMB `admin_group` will be automatically added as a foreign group member\nof S-1-5-32-544 (builtin\\admins). This will afford the group all privileges granted to a local admin.\nAny SMB group may be selected (including AD groups).\n\n`ntlmv1_auth` enables a legacy and insecure authentication method, which may be required for legacy or\npoorly-implemented SMB clients.\n\n`encryption` set global server behavior with regard to SMB encrpytion. Options are DEFAULT (which\nfollows the upstream defaults -- currently identical to NEGOTIATE), NEGOTIATE encrypts SMB transport\nonly if requested by the SMB client, DESIRED encrypts SMB transport if supported by the SMB client,\nREQUIRED only allows encrypted transport to the SMB server. Mandatory SMB encryption is not\ncompatible with SMB1 server support in TrueNAS.\n\n`smb_options` smb.conf parameters that are not covered by the above supported configuration options may be\nadded as an smb_option. Not all options are tested or supported, and behavior of smb_options may change\nbetween releases. Stability of smb.conf options is not guaranteed.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/smb_update"
          }
         }
        }
       }
      }
     },
     "/smb/bindip_choices": {
      "get": {
       "tags": [
        "smb"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_smb_bindip_choices"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "List of valid choices for IP addresses to which to bind the SMB service.\nAddresses assigned by DHCP are excluded from the results."
      }
     },
     "/smb/client_count": {
      "get": {
       "tags": [
        "smb"
       ],
       "responses": {
        "200": {
         "$ref": "#/components/responses/Success"
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Return currently connected clients count."
      }
     },
     "/smb/status": {
      "post": {
       "tags": [
        "smb"
       ],
       "responses": {
        "200": {
         "$ref": "#/components/responses/Success"
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Returns SMB server status (sessions, open files, locks, notifications).\n\n`info_level` type of information requests. Defaults to ALL.\n\n`status_options` additional options to filter query results. Supported\nvalues are as follows: `verbose` gives more verbose status output\n`fast` causes smbstatus to not check if the status data is valid by\nchecking if the processes that the status data refer to all still\nexist. This speeds up execution on busy systems and clusters but\nmight display stale data of processes that died without cleaning up\nproperly. `restrict_user` specifies the limits results to the specified\nuser.\n\nThis API endpoint also supports a legacy `info_level` AUTH_LOG that\nprovides AUTHENTICATION events from the SMB audit log. Support for\nthis information level will be removed in a future version.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/smb_status"
          }
         }
        }
       }
      }
     },
     "/smb/unixcharset_choices": {
      "get": {
       "tags": [
        "smb"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_smb_unixcharset_choices"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": ""
      }
     },
     "/snmp": {
      "get": {
       "tags": [
        "snmp"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_snmp_config"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": ""
      },
      "put": {
       "tags": [
        "snmp"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_snmp_update"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Update SNMP Service Configuration.\n\n--- Rules ---\nEnabling v3:\n    requires v3_username, v3_authtype and v3_password\nDisabling v3:\n    By itself will retain the v3 user settings and config in the 'private' config,\n    but remove the entry in the public config to block v3 access by that user.\nDisabling v3 and clearing the v3_username:\n    This will do the actions described in 'Disabling v3' and take the extra step to\n    remove the user from the 'private' config.\n\nThe 'v3_*' settings are valid and enforced only when 'v3' is enabled",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/snmp_update"
          }
         }
        }
       }
      }
     },
     "/ssh": {
      "get": {
       "tags": [
        "ssh"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_ssh_config"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": ""
      },
      "put": {
       "tags": [
        "ssh"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_ssh_update"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Update settings of SSH daemon service.\n\nIf `bindiface` is empty it will listen for all available addresses.\n\n",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/ssh_update"
          }
         }
        }
       }
      }
     },
     "/ssh/bindiface_choices": {
      "get": {
       "tags": [
        "ssh"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_ssh_bindiface_choices"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Available choices for the bindiface attribute of SSH service."
      }
     },
     "/staticroute": {
      "get": {
       "tags": [
        "staticroute"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_staticroute_query"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "limit",
         "in": "query",
         "required": false,
         "schema": {
          "type": "integer"
         }
        },
        {
         "name": "offset",
         "in": "query",
         "required": false,
         "schema": {
          "type": "integer"
         }
        },
        {
         "name": "count",
         "in": "query",
         "required": false,
         "schema": {
          "type": "boolean"
         }
        },
        {
         "name": "sort",
         "in": "query",
         "required": false,
         "schema": {
          "type": "string"
         }
        }
       ],
       "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      },
      "post": {
       "tags": [
        "staticroute"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_staticroute_create"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Create a Static Route.\n\nAddress families of `gateway` and `destination` should match when creating a static route.\n\n`description` is an optional attribute for any notes regarding the static route.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/staticroute_create"
          }
         }
        }
       }
      }
     },
     "/staticroute/id/{id_}": {
      "delete": {
       "tags": [
        "staticroute"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_staticroute_delete"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "Delete Static Route of `id`."
      },
      "get": {
       "tags": [
        "staticroute"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_staticroute_query"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      },
      "put": {
       "tags": [
        "staticroute"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_staticroute_update"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "Update Static Route of `id`.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/staticroute_update"
          }
         }
        }
       }
      }
     },
     "/staticroute/get_instance": {
      "post": {
       "tags": [
        "staticroute"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_staticroute_get_instance"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised.\n\nPlease see `query` method documentation for `options`.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/staticroute_get_instance"
          }
         }
        }
       }
      }
     },
     "/support": {
      "get": {
       "tags": [
        "support"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_support_config"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": ""
      },
      "put": {
       "tags": [
        "support"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_support_update"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Update Proactive Support settings.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/support_update"
          }
         }
        }
       }
      }
     },
     "/support/attach_ticket": {
      "post": {
       "tags": [
        "support"
       ],
       "responses": {
        "200": {
         "$ref": "#/components/responses/Success"
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Method to attach a file to an existing ticket.\n\nA file must be uploaded to this endpoint. To upload a file, please send a multipart request with two parts. The first, named `data`, should contain a JSON-encoded payload, and the second, named `file`, should contain an uploaded file.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/support_attach_ticket"
          }
         }
        }
       }
      }
     },
     "/support/attach_ticket_max_size": {
      "get": {
       "tags": [
        "support"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_support_attach_ticket_max_size"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Returns maximum uploaded file size for `support.attach_ticket`"
      }
     },
     "/support/fields": {
      "get": {
       "tags": [
        "support"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_support_fields"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Returns list of pairs of field names and field titles for Proactive Support."
      }
     },
     "/support/is_available": {
      "get": {
       "tags": [
        "support"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_support_is_available"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Returns whether Proactive Support is available for this product type and current license."
      }
     },
     "/support/is_available_and_enabled": {
      "get": {
       "tags": [
        "support"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_support_is_available_and_enabled"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Returns whether Proactive Support is available and enabled."
      }
     },
     "/support/new_ticket": {
      "post": {
       "tags": [
        "support"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_support_new_ticket"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Creates a new ticket for support.\nThis is done using the support proxy API.\nFor TrueNAS Community Edition it will be created on JIRA and for TrueNAS Enterprise on Salesforce.\n\nFor Community Edition, `criticality`, `environment`, `phone`, `name`, and `email` attributes are not required.\nFor Enterprise, `token` and `type` attributes are not required.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/support_new_ticket"
          }
         }
        }
       }
      }
     },
     "/support/similar_issues": {
      "post": {
       "tags": [
        "support"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_support_similar_issues"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/support_similar_issues"
          }
         }
        }
       }
      }
     },
     "/system/debug": {
      "get": {
       "tags": [
        "system"
       ],
       "responses": {
        "200": {
         "$ref": "#/components/responses/Success"
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Download a debug file.\n\nA file will be downloaded from this endpoint."
      }
     },
     "/system/feature_enabled": {
      "post": {
       "tags": [
        "system"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_system_feature_enabled"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Returns whether the `feature` is enabled or not",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/system_feature_enabled"
          }
         }
        }
       }
      }
     },
     "/system/host_id": {
      "get": {
       "tags": [
        "system"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_system_host_id"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Retrieve a hex string that is generated based\non the contents of the `/etc/hostid` file. This\nis a permanent value that persists across\nreboots/upgrades and can be used as a unique\nidentifier for the machine."
      }
     },
     "/system/info": {
      "get": {
       "tags": [
        "system"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_system_info"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Returns basic system information."
      }
     },
     "/system/license_update": {
      "post": {
       "tags": [
        "system"
       ],
       "responses": {
        "200": {
         "$ref": "#/components/responses/Success"
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Update license file",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/system_license_update"
          }
         }
        }
       }
      }
     },
     "/system/product_type": {
      "get": {
       "tags": [
        "system"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_system_product_type"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Returns the type of the product.\n\nCOMMUNITY_EDITION - TrueNAS SCALE, community version\nENTERPRISE - TrueNAS SCALE Enterprise, appliance version"
      }
     },
     "/system/ready": {
      "get": {
       "tags": [
        "system"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_system_ready"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Returns whether the system completed boot and is ready to use"
      }
     },
     "/system/reboot": {
      "post": {
       "tags": [
        "system"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_system_reboot"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Reboots the operating system.\n\nEmits an \"added\" event of name \"system\" and id \"reboot\".",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/system_reboot"
          }
         }
        }
       }
      }
     },
     "/system/release_notes_url": {
      "post": {
       "tags": [
        "system"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_system_release_notes_url"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Returns the release notes URL for a version of SCALE.\n\n`version_str` str: represents a version to check against\n\nIf `version` is not provided, then the release notes URL will return\n    a link for the currently installed version of SCALE.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/system_release_notes_url"
          }
         }
        }
       }
      }
     },
     "/system/shutdown": {
      "post": {
       "tags": [
        "system"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_system_shutdown"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Shuts down the operating system.\n\nAn \"added\" event of name \"system\" and id \"shutdown\" is emitted when shutdown is initiated.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/system_shutdown"
          }
         }
        }
       }
      }
     },
     "/system/state": {
      "get": {
       "tags": [
        "system"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_system_state"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Returns system state:\n\"BOOTING\" - System is booting\n\"READY\" - System completed boot and is ready to use\n\"SHUTTING_DOWN\" - System is shutting down"
      }
     },
     "/system/version": {
      "get": {
       "tags": [
        "system"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_system_version"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Returns the full name of the software version of the system."
      }
     },
     "/system/version_short": {
      "get": {
       "tags": [
        "system"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_system_version_short"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Returns the short name of the software version of the system."
      }
     },
     "/system/advanced": {
      "get": {
       "tags": [
        "system.advanced"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_system_advanced_config"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": ""
      },
      "put": {
       "tags": [
        "system.advanced"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_system_advanced_update"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Update System Advanced Service Configuration.\n\n`consolemenu` should be disabled if the menu at console is not desired. It will default to standard login\nin the console if disabled.\n\n`autotune` when enabled executes autotune script which attempts to optimize the system based on the installed\nhardware.\n\nWhen `syslogserver` is defined, logs of `sysloglevel` or above are sent. If syslog_audit is also set\nthen the remote syslog server will also receive audit messages.\n\n`consolemsg` is a deprecated attribute and will be removed in further releases. Please, use `consolemsg`\nattribute in the `system.general` plugin.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/system_advanced_update"
          }
         }
        }
       }
      }
     },
     "/system/advanced/get_gpu_pci_choices": {
      "get": {
       "tags": [
        "system.advanced"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_system_advanced_get_gpu_pci_choices"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "This endpoint gives all the gpu pci ids/slots that can be isolated."
      }
     },
     "/system/advanced/login_banner": {
      "get": {
       "tags": [
        "system.advanced"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_system_advanced_login_banner"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Returns user set login banner"
      }
     },
     "/system/advanced/sed_global_password": {
      "get": {
       "tags": [
        "system.advanced"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_system_advanced_sed_global_password"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Returns configured global SED password in clear-text if one\nis configured, otherwise an empty string"
      }
     },
     "/system/advanced/sed_global_password_is_set": {
      "get": {
       "tags": [
        "system.advanced"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_system_advanced_sed_global_password_is_set"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Returns a boolean identifying whether or not a global\nSED password has been set"
      }
     },
     "/system/advanced/serial_port_choices": {
      "get": {
       "tags": [
        "system.advanced"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_system_advanced_serial_port_choices"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Get available choices for `serialport`."
      }
     },
     "/system/advanced/syslog_certificate_authority_choices": {
      "get": {
       "tags": [
        "system.advanced"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_system_advanced_syslog_certificate_authority_choices"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Return choices of certificate authorities which can be used for `syslog_tls_certificate_authority`."
      }
     },
     "/system/advanced/syslog_certificate_choices": {
      "get": {
       "tags": [
        "system.advanced"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_system_advanced_syslog_certificate_choices"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Return choices of certificates which can be used for `syslog_tls_certificate`."
      }
     },
     "/system/advanced/update_gpu_pci_ids": {
      "post": {
       "tags": [
        "system.advanced"
       ],
       "responses": {
        "200": {
         "$ref": "#/components/responses/Success"
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "`isolated_gpu_pci_ids` is a list of PCI ids which are isolated from host system.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/system_advanced_update_gpu_pci_ids"
          }
         }
        }
       }
      }
     },
     "/system/general": {
      "get": {
       "tags": [
        "system.general"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_system_general_config"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": ""
      },
      "put": {
       "tags": [
        "system.general"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_system_general_update"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Update System General Service Configuration.\n\n`ui_certificate` is used to enable HTTPS access to the system. If `ui_certificate` is not configured on boot,\nit is automatically created by the system.\n\n`ui_httpsredirect` when set, makes sure that all HTTP requests are converted to HTTPS requests to better\nenhance security.\n\n`ui_address` and `ui_v6address` are a list of valid ipv4/ipv6 addresses respectively which the system will\nlisten on.\n\n`ui_allowlist` is a list of IP addresses and networks that are allow to use API and UI. If this list is empty,\nthen all IP addresses are allowed to use API and UI.\n\n`ds_auth` controls whether configured Directory Service users that are granted with Privileges are allowed to\nlog in to the Web UI or use TrueNAS API.\n\nUI configuration is not applied automatically. Call `system.general.ui_restart` to apply new UI settings (all\nHTTP connections will be aborted) or specify `ui_restart_delay` (in seconds) to automatically apply them after\nsome small amount of time necessary you might need to receive the response for your settings update request.\n\nIf incorrect UI configuration is applied, you might loss API connectivity and won't be able to fix the settings.\nTo avoid that, specify `rollback_timeout` (in seconds). It will automatically roll back UI configuration to the\npreviously working settings after `rollback_timeout` passes unless you call `system.general.checkin` in case\nthe new settings were correct and no rollback is necessary.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/system_general_update"
          }
         }
        }
       }
      }
     },
     "/system/general/checkin": {
      "get": {
       "tags": [
        "system.general"
       ],
       "responses": {
        "200": {
         "$ref": "#/components/responses/Success"
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "After UI settings are saved with `rollback_timeout` this method needs to be called within that timeout limit\nto prevent reverting the changes.\n\nThis is to ensure user verifies the changes went as planned and its working."
      }
     },
     "/system/general/checkin_waiting": {
      "get": {
       "tags": [
        "system.general"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_system_general_checkin_waiting"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Determines whether or not we are waiting user to check-in the applied UI settings changes before they are rolled\nback. Returns a number of seconds before the automatic rollback or null if there are no changes pending."
      }
     },
     "/system/general/country_choices": {
      "get": {
       "tags": [
        "system.general"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_system_general_country_choices"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Return a dictionary whose keys represent the\nISO 3166-1 alpha 2 country code and values represent\nthe English short name (used in ISO 3166/MA)"
      }
     },
     "/system/general/kbdmap_choices": {
      "get": {
       "tags": [
        "system.general"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_system_general_kbdmap_choices"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Returns kbdmap choices."
      }
     },
     "/system/general/language_choices": {
      "get": {
       "tags": [
        "system.general"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_system_general_language_choices"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Returns language choices."
      }
     },
     "/system/general/local_url": {
      "get": {
       "tags": [
        "system.general"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_system_general_local_url"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Returns configured local url in the format of protocol://host:port"
      }
     },
     "/system/general/timezone_choices": {
      "get": {
       "tags": [
        "system.general"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_system_general_timezone_choices"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Returns available timezones"
      }
     },
     "/system/general/ui_address_choices": {
      "get": {
       "tags": [
        "system.general"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_system_general_ui_address_choices"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Returns UI ipv4 address choices."
      }
     },
     "/system/general/ui_certificate_choices": {
      "get": {
       "tags": [
        "system.general"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_system_general_ui_certificate_choices"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Return choices of certificates which can be used for `ui_certificate`."
      }
     },
     "/system/general/ui_httpsprotocols_choices": {
      "get": {
       "tags": [
        "system.general"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_system_general_ui_httpsprotocols_choices"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Returns available HTTPS protocols."
      }
     },
     "/system/general/ui_restart": {
      "get": {
       "tags": [
        "system.general"
       ],
       "responses": {
        "200": {
         "$ref": "#/components/responses/Success"
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Restart HTTP server to use latest UI settings.\n\nHTTP server will be restarted after `delay` seconds.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/system_general_ui_restart"
          }
         }
        }
       }
      },
      "post": {
       "tags": [
        "system.general"
       ],
       "responses": {
        "200": {
         "$ref": "#/components/responses/Success"
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Restart HTTP server to use latest UI settings.\n\nHTTP server will be restarted after `delay` seconds.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/system_general_ui_restart"
          }
         }
        }
       }
      }
     },
     "/system/general/ui_v6address_choices": {
      "get": {
       "tags": [
        "system.general"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_system_general_ui_v6address_choices"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Returns UI ipv6 address choices."
      }
     },
     "/system/global/id": {
      "get": {
       "tags": [
        "system.global"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_system_global_id"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Retrieve a 128 bit hexadecimal UUID value unique for each TrueNAS system."
      }
     },
     "/system/ntpserver": {
      "get": {
       "tags": [
        "system.ntpserver"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_system_ntpserver_query"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "limit",
         "in": "query",
         "required": false,
         "schema": {
          "type": "integer"
         }
        },
        {
         "name": "offset",
         "in": "query",
         "required": false,
         "schema": {
          "type": "integer"
         }
        },
        {
         "name": "count",
         "in": "query",
         "required": false,
         "schema": {
          "type": "boolean"
         }
        },
        {
         "name": "sort",
         "in": "query",
         "required": false,
         "schema": {
          "type": "string"
         }
        }
       ],
       "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      },
      "post": {
       "tags": [
        "system.ntpserver"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_system_ntpserver_create"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Add an NTP Server.\n\n`address` specifies the hostname/IP address of the NTP server.\n\n`burst` when enabled makes sure that if server is reachable, sends a burst of eight packets instead of one.\nThis is designed to improve timekeeping quality with the server command.\n\n`iburst` when enabled speeds up the initial synchronization, taking seconds rather than minutes.\n\n`prefer` marks the specified server as preferred. When all other things are equal, this host is chosen\nfor synchronization acquisition with the server command. It is recommended that they be used for servers with\ntime monitoring hardware.\n\n`minpoll` is minimum polling time in seconds. It must be a power of 2 and less than `maxpoll`.\n\n`maxpoll` is maximum polling time in seconds. It must be a power of 2 and greater than `minpoll`.\n\n`force` when enabled forces the addition of NTP server even if it is currently unreachable.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/system_ntpserver_create"
          }
         }
        }
       }
      }
     },
     "/system/ntpserver/id/{id_}": {
      "delete": {
       "tags": [
        "system.ntpserver"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_system_ntpserver_delete"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "Delete NTP server of `id`."
      },
      "get": {
       "tags": [
        "system.ntpserver"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_system_ntpserver_query"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      },
      "put": {
       "tags": [
        "system.ntpserver"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_system_ntpserver_update"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "Update NTP server of `id`.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/system_ntpserver_update"
          }
         }
        }
       }
      }
     },
     "/system/ntpserver/get_instance": {
      "post": {
       "tags": [
        "system.ntpserver"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_system_ntpserver_get_instance"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised.\n\nPlease see `query` method documentation for `options`.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/system_ntpserver_get_instance"
          }
         }
        }
       }
      }
     },
     "/system/reboot/info": {
      "get": {
       "tags": [
        "system.reboot"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_system_reboot_info"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": ""
      }
     },
     "/system/security": {
      "get": {
       "tags": [
        "system.security"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_system_security_config"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": ""
      },
      "put": {
       "tags": [
        "system.security"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_system_security_update"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Update System Security Service Configuration.\n\n`enable_fips` when set, enables FIPS mode.\n`enable_gpos_stig` when set, enables compatibility with the General\nPurpose Operating System STIG.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/system_security_update"
          }
         }
        }
       }
      }
     },
     "/system/security/info/fips_available": {
      "get": {
       "tags": [
        "system.security.info"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_system_security_info_fips_available"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Returns a boolean identifying whether or not FIPS\nmode may be toggled on this system"
      }
     },
     "/system/security/info/fips_enabled": {
      "get": {
       "tags": [
        "system.security.info"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_system_security_info_fips_enabled"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Returns a boolean identifying whether or not FIPS\nmode has been enabled on this system"
      }
     },
     "/systemdataset": {
      "get": {
       "tags": [
        "systemdataset"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_systemdataset_config"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": ""
      },
      "put": {
       "tags": [
        "systemdataset"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_systemdataset_update"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Update System Dataset Service Configuration.\n\n`pool` is the name of a valid pool configured in the system which will be used to host the system dataset.\n\n`pool_exclude` can be specified to make sure that we don't place the system dataset on that pool if `pool`\nis not provided.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/systemdataset_update"
          }
         }
        }
       }
      }
     },
     "/systemdataset/pool_choices": {
      "post": {
       "tags": [
        "systemdataset"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_systemdataset_pool_choices"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Retrieve pool choices which can be used for configuring system dataset.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/systemdataset_pool_choices"
          }
         }
        }
       }
      }
     },
     "/tn_connect": {
      "get": {
       "tags": [
        "tn_connect"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_tn_connect_config"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": ""
      },
      "put": {
       "tags": [
        "tn_connect"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_tn_connect_update"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Update TrueNAS Connect configuration.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/tn_connect_update"
          }
         }
        }
       }
      }
     },
     "/tn_connect/generate_claim_token": {
      "get": {
       "tags": [
        "tn_connect"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_tn_connect_generate_claim_token"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Generate a claim token for TrueNAS Connect.\n\nThis is used to claim the system with TrueNAS Connect. When this endpoint will be called, a token will\nbe generated which will be used to assist with initial setup with truenas connect."
      }
     },
     "/tn_connect/get_registration_uri": {
      "get": {
       "tags": [
        "tn_connect"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_tn_connect_get_registration_uri"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Return the registration URI for TrueNAS Connect.\n\nBefore this endpoint is called, tn_connect must be enabled and a claim token must be generated - based\noff which this endpoint will return the registration URI for TrueNAS Connect."
      }
     },
     "/tn_connect/ip_choices": {
      "get": {
       "tags": [
        "tn_connect"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_tn_connect_ip_choices"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Returns IP choices which can be used with TrueNAS Connect."
      }
     },
     "/truecommand": {
      "get": {
       "tags": [
        "truecommand"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_truecommand_config"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": ""
      },
      "put": {
       "tags": [
        "truecommand"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_truecommand_update"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Update Truecommand service settings.\n\n`api_key` is a valid API key generated by iX Portal.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/truecommand_update"
          }
         }
        }
       }
      }
     },
     "/truenas/accept_eula": {
      "get": {
       "tags": [
        "truenas"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_truenas_accept_eula"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Accept TrueNAS EULA."
      }
     },
     "/truenas/get_chassis_hardware": {
      "get": {
       "tags": [
        "truenas"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_truenas_get_chassis_hardware"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Returns what type of hardware this is, detected from dmidecode."
      }
     },
     "/truenas/get_eula": {
      "get": {
       "tags": [
        "truenas"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_truenas_get_eula"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Returns the TrueNAS End-User License Agreement (EULA)."
      }
     },
     "/truenas/is_eula_accepted": {
      "get": {
       "tags": [
        "truenas"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_truenas_is_eula_accepted"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Returns whether the EULA is accepted or not."
      }
     },
     "/truenas/is_ix_hardware": {
      "get": {
       "tags": [
        "truenas"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_truenas_is_ix_hardware"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Return a boolean value on whether this is hardware that iXsystems sells."
      }
     },
     "/truenas/is_production": {
      "get": {
       "tags": [
        "truenas"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_truenas_is_production"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Returns if system is marked as production."
      }
     },
     "/truenas/managed_by_truecommand": {
      "get": {
       "tags": [
        "truenas"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_truenas_managed_by_truecommand"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Returns whether TrueNAS is being managed by TrueCommand"
      }
     },
     "/truenas/set_production": {
      "post": {
       "tags": [
        "truenas"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_truenas_set_production"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Sets system production state and optionally sends initial debug.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/truenas_set_production"
          }
         }
        }
       }
      }
     },
     "/tunable": {
      "get": {
       "tags": [
        "tunable"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_tunable_query"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "limit",
         "in": "query",
         "required": false,
         "schema": {
          "type": "integer"
         }
        },
        {
         "name": "offset",
         "in": "query",
         "required": false,
         "schema": {
          "type": "integer"
         }
        },
        {
         "name": "count",
         "in": "query",
         "required": false,
         "schema": {
          "type": "boolean"
         }
        },
        {
         "name": "sort",
         "in": "query",
         "required": false,
         "schema": {
          "type": "string"
         }
        }
       ],
       "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      },
      "post": {
       "tags": [
        "tunable"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_tunable_create"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Create a tunable.\n\nIf `type` is `SYSCTL` then `var` is a sysctl name (e.g. `kernel.watchdog`) and `value` is its corresponding\nvalue (e.g. `0`).\n\nIf `type` is `UDEV` then `var` is an udev rules file name (e.g. `10-disable-usb`, `.rules` suffix will be\nappended automatically) and `value` is its contents (e.g. `BUS==\"usb\", OPTIONS+=\"ignore_device\"`).\n\nIf `type` is `ZFS` then `var` is a ZFS kernel module parameter name (e.g. `zfs_dirty_data_max_max`) and `value`\nis its value (e.g. `783091712`).\n\nIf `update_initramfs` is `false` then initramfs will not be updated after creating a ZFS tunable and you will\nneed to run `system boot update_initramfs` manually.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/tunable_create"
          }
         }
        }
       }
      }
     },
     "/tunable/id/{id_}": {
      "delete": {
       "tags": [
        "tunable"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_tunable_delete"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "Delete Tunable of `id`."
      },
      "get": {
       "tags": [
        "tunable"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_tunable_query"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      },
      "put": {
       "tags": [
        "tunable"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_tunable_update"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "Update Tunable of `id`.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/tunable_update"
          }
         }
        }
       }
      }
     },
     "/tunable/get_instance": {
      "post": {
       "tags": [
        "tunable"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_tunable_get_instance"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised.\n\nPlease see `query` method documentation for `options`.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/tunable_get_instance"
          }
         }
        }
       }
      }
     },
     "/tunable/tunable_type_choices": {
      "get": {
       "tags": [
        "tunable"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_tunable_tunable_type_choices"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Retrieve the supported tunable types that can be changed."
      }
     },
     "/update/check_available": {
      "post": {
       "tags": [
        "update"
       ],
       "responses": {
        "200": {
         "$ref": "#/components/responses/Success"
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Checks if there is an update available from update server.\n\nstatus:\n  - REBOOT_REQUIRED: an update has already been applied\n  - AVAILABLE: an update is available\n  - UNAVAILABLE: no update available\n  - HA_UNAVAILABLE: HA is non-functional\n\n",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/update_check_available"
          }
         }
        }
       }
      }
     },
     "/update/download": {
      "get": {
       "tags": [
        "update"
       ],
       "responses": {
        "200": {
         "$ref": "#/components/responses/Success"
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Download updates using selected train."
      }
     },
     "/update/file": {
      "post": {
       "tags": [
        "update"
       ],
       "responses": {
        "200": {
         "$ref": "#/components/responses/Success"
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Updates the system using the uploaded .tar file.\n\n`resume` should be set to `true` if a previous call to this method returned a `CallError` with `errno=EAGAIN`\nmeaning that an upgrade can be performed with a warning and that warning is accepted. In that case, re-uploading\nthe file is not necessary.\n\nUse null `destination` to create a temporary location.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/update_file"
          }
         }
        }
       }
      }
     },
     "/update/get_auto_download": {
      "get": {
       "tags": [
        "update"
       ],
       "responses": {
        "200": {
         "$ref": "#/components/responses/Success"
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Returns if update auto-download is enabled."
      }
     },
     "/update/get_pending": {
      "post": {
       "tags": [
        "update"
       ],
       "responses": {
        "200": {
         "$ref": "#/components/responses/Success"
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Gets a list of packages already downloaded and ready to be applied.\nEach entry of the lists consists of type of operation and name of it, e.g.\n\n  {\n    \"operation\": \"upgrade\",\n    \"name\": \"baseos-11.0 -> baseos-11.1\"\n  }",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/update_get_pending"
          }
         }
        }
       }
      }
     },
     "/update/get_trains": {
      "get": {
       "tags": [
        "update"
       ],
       "responses": {
        "200": {
         "$ref": "#/components/responses/Success"
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Returns available trains dict and the currently configured train as well as the\ntrain of currently booted environment."
      }
     },
     "/update/manual": {
      "post": {
       "tags": [
        "update"
       ],
       "responses": {
        "200": {
         "$ref": "#/components/responses/Success"
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Update the system using a manual update file.\n\n`path` must be the absolute path to the update file.\n\n`options.resume` should be set to `true` if a previous call to this method returned a `CallError` with\n`errno=EAGAIN` meaning that an upgrade can be performed with a warning and that warning is accepted.\n\nIf `options.cleanup` is set to `false` then the manual update file won't be removed on update success and\nnewly created BE won't be removed on update failure (useful for debugging purposes).",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/update_manual"
          }
         }
        }
       }
      }
     },
     "/update/set_auto_download": {
      "post": {
       "tags": [
        "update"
       ],
       "responses": {
        "200": {
         "$ref": "#/components/responses/Success"
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Sets if update auto-download is enabled.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/update_set_auto_download"
          }
         }
        }
       }
      }
     },
     "/update/set_train": {
      "post": {
       "tags": [
        "update"
       ],
       "responses": {
        "200": {
         "$ref": "#/components/responses/Success"
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Set an update train to be used by default in updates.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/update_set_train"
          }
         }
        }
       }
      }
     },
     "/update/update": {
      "post": {
       "tags": [
        "update"
       ],
       "responses": {
        "200": {
         "$ref": "#/components/responses/Success"
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Downloads (if not already in cache) and apply an update.\n\n`resume` should be set to `true` if a previous call to this method returned a `CallError` with `errno=EAGAIN`\nmeaning that an upgrade can be performed with a warning and that warning is accepted. In that case, update\nprocess will be continued using an already downloaded file without performing any extra checks.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/update_update"
          }
         }
        }
       }
      }
     },
     "/ups": {
      "get": {
       "tags": [
        "ups"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_ups_config"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": ""
      },
      "put": {
       "tags": [
        "ups"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_ups_update"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Update UPS Service Configuration.\n\n`powerdown` when enabled, sets UPS to power off after shutting down the system.\n\n`nocommwarntime` is a value in seconds which makes UPS Service wait the specified seconds before alerting that\nthe Service cannot reach configured UPS.\n\n`shutdowntimer` is a value in seconds which tells the Service to wait specified seconds for the UPS before\ninitiating a shutdown. This only applies when `shutdown` is set to \"BATT\".\n\n`shutdowncmd` is the command which is executed to initiate a shutdown. It defaults to \"poweroff\".",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/ups_update"
          }
         }
        }
       }
      }
     },
     "/ups/driver_choices": {
      "get": {
       "tags": [
        "ups"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_ups_driver_choices"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Returns choices of UPS drivers supported by the system."
      }
     },
     "/ups/port_choices": {
      "get": {
       "tags": [
        "ups"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_ups_port_choices"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": ""
      }
     },
     "/user": {
      "get": {
       "tags": [
        "user"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_user_query"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "limit",
         "in": "query",
         "required": false,
         "schema": {
          "type": "integer"
         }
        },
        {
         "name": "offset",
         "in": "query",
         "required": false,
         "schema": {
          "type": "integer"
         }
        },
        {
         "name": "count",
         "in": "query",
         "required": false,
         "schema": {
          "type": "boolean"
         }
        },
        {
         "name": "sort",
         "in": "query",
         "required": false,
         "schema": {
          "type": "string"
         }
        }
       ],
       "description": "Query users with `query-filters` and `query-options`.\n\nIf users provided by Active Directory or LDAP are not desired, then\n\"local\", \"=\", True should be added to filters.\n\n`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      },
      "post": {
       "tags": [
        "user"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_user_create"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Create a new user.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/user_create"
          }
         }
        }
       }
      }
     },
     "/user/id/{id_}": {
      "delete": {
       "tags": [
        "user"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_user_delete"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "Delete user `id`.\n\nThe `delete_group` option deletes the user primary group if it is not being used by\nany other user.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/user_delete"
          }
         }
        }
       }
      },
      "get": {
       "tags": [
        "user"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_user_query"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "Query users with `query-filters` and `query-options`.\n\nIf users provided by Active Directory or LDAP are not desired, then\n\"local\", \"=\", True should be added to filters.\n\n`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      },
      "put": {
       "tags": [
        "user"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_user_update"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "Update attributes of an existing user.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/user_update"
          }
         }
        }
       }
      }
     },
     "/user/get_instance": {
      "post": {
       "tags": [
        "user"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_user_get_instance"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised.\n\nPlease see `query` method documentation for `options`.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/user_get_instance"
          }
         }
        }
       }
      }
     },
     "/user/get_next_uid": {
      "get": {
       "tags": [
        "user"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_user_get_next_uid"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Get the next available/free uid."
      }
     },
     "/user/get_user_obj": {
      "post": {
       "tags": [
        "user"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_user_get_user_obj"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Returns dictionary containing information from struct passwd for the user specified by either\nthe username or uid. Bypasses user cache.\n\nNOTE: results will not include nested groups for Active Directory users.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/user_get_user_obj"
          }
         }
        }
       }
      }
     },
     "/user/has_local_administrator_set_up": {
      "get": {
       "tags": [
        "user"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_user_has_local_administrator_set_up"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Return whether a local administrator with a valid password exists.\n\nThis is used when the system is installed without a password and must be set on\nfirst use/login."
      }
     },
     "/user/shell_choices": {
      "post": {
       "tags": [
        "user"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_user_shell_choices"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Return the available shell choices to be used in `user.create` and `user.update`.\n\n`group_ids` is a list of local group IDs for the user.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/user_shell_choices"
          }
         }
        }
       }
      }
     },
     "/user/unset_2fa_secret": {
      "post": {
       "tags": [
        "user"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_user_unset_2fa_secret"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Unset two-factor authentication secret for `username`.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/user_unset_2fa_secret"
          }
         }
        }
       }
      }
     },
     "/virt/device/disk_choices": {
      "get": {
       "tags": [
        "virt.device"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_virt_device_disk_choices"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Returns disk choices available for device type \"DISK\" for virtual machines. This includes\nboth available virt volumes and zvol choices. Disk choices for containers depend on the\nmounted file tree (paths)."
      }
     },
     "/virt/device/export_disk_image": {
      "post": {
       "tags": [
        "virt.device"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_virt_device_export_disk_image"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Exports a zvol to a formatted VM disk image.\n\nUtilized qemu-img with the conversion functionality to export a zvol to\nany supported disk image format, from RAW -> ${OTHER}. The resulting file\nwill be set to inherit the permissions of the target directory.\n\nAs of this implementation it supports the following {format} options :\n\n- QCOW2\n- QED\n- RAW\n- VDI\n- VPC\n- VMDK\n\n`format` is a required parameter for the exported disk image\n`directory` is a required parameter for the export disk image\n`zvol` is the source for the disk image",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/virt_device_export_disk_image"
          }
         }
        }
       }
      }
     },
     "/virt/device/gpu_choices": {
      "post": {
       "tags": [
        "virt.device"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_virt_device_gpu_choices"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Provide choices for GPU devices.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/virt_device_gpu_choices"
          }
         }
        }
       }
      }
     },
     "/virt/device/import_disk_image": {
      "post": {
       "tags": [
        "virt.device"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_virt_device_import_disk_image"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Imports a specified disk image.\n\nUtilized qemu-img with the auto-detect functionality to auto-convert\nany supported disk image format to RAW -> ZVOL\n\nAs of this implementation it supports:\n\n- QCOW2\n- QED\n- RAW\n- VDI\n- VPC\n- VMDK\n\n`diskimg` is a required parameter for the incoming disk image\n`zvol` is the required target for the imported disk image",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/virt_device_import_disk_image"
          }
         }
        }
       }
      }
     },
     "/virt/device/nic_choices": {
      "post": {
       "tags": [
        "virt.device"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_virt_device_nic_choices"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Returns choices for NIC device.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/virt_device_nic_choices"
          }
         }
        }
       }
      }
     },
     "/virt/device/pci_choices": {
      "get": {
       "tags": [
        "virt.device"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_virt_device_pci_choices"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Returns choices for PCI devices valid for VM virt instances."
      }
     },
     "/virt/device/usb_choices": {
      "get": {
       "tags": [
        "virt.device"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_virt_device_usb_choices"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Provide choices for USB devices."
      }
     },
     "/virt/global": {
      "get": {
       "tags": [
        "virt.global"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_virt_global_config"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": ""
      },
      "put": {
       "tags": [
        "virt.global"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_virt_global_update"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Update global virtualization settings.\n\n`pool` which pool to use to store instances.\nNone will disable the service.\n\n`bridge` which bridge interface to use by default.\nNone means it will automatically create one.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/virt_global_update"
          }
         }
        }
       }
      }
     },
     "/virt/global/bridge_choices": {
      "get": {
       "tags": [
        "virt.global"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_virt_global_bridge_choices"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Bridge choices for virtualization purposes.\n\nEmpty means it will be managed/created automatically."
      }
     },
     "/virt/global/get_network": {
      "post": {
       "tags": [
        "virt.global"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_virt_global_get_network"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Details for the given network.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/virt_global_get_network"
          }
         }
        }
       }
      }
     },
     "/virt/global/pool_choices": {
      "get": {
       "tags": [
        "virt.global"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_virt_global_pool_choices"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Pool choices for virtualization purposes."
      }
     },
     "/virt/instance": {
      "get": {
       "tags": [
        "virt.instance"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_virt_instance_query"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "limit",
         "in": "query",
         "required": false,
         "schema": {
          "type": "integer"
         }
        },
        {
         "name": "offset",
         "in": "query",
         "required": false,
         "schema": {
          "type": "integer"
         }
        },
        {
         "name": "count",
         "in": "query",
         "required": false,
         "schema": {
          "type": "boolean"
         }
        },
        {
         "name": "sort",
         "in": "query",
         "required": false,
         "schema": {
          "type": "string"
         }
        }
       ],
       "description": "Query all instances with `query-filters` and `query-options`.\n\n`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      },
      "post": {
       "tags": [
        "virt.instance"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_virt_instance_create"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Create a new virtualized instance.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/virt_instance_create"
          }
         }
        }
       }
      }
     },
     "/virt/instance/id/{id_}": {
      "delete": {
       "tags": [
        "virt.instance"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_virt_instance_delete"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "Delete an instance."
      },
      "get": {
       "tags": [
        "virt.instance"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_virt_instance_query"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "Query all instances with `query-filters` and `query-options`.\n\n`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      },
      "put": {
       "tags": [
        "virt.instance"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_virt_instance_update"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "Update instance.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/virt_instance_update"
          }
         }
        }
       }
      }
     },
     "/virt/instance/device_add": {
      "post": {
       "tags": [
        "virt.instance"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_virt_instance_device_add"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Add a device to an instance.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/virt_instance_device_add"
          }
         }
        }
       }
      }
     },
     "/virt/instance/device_delete": {
      "post": {
       "tags": [
        "virt.instance"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_virt_instance_device_delete"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Delete a device from an instance.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/virt_instance_device_delete"
          }
         }
        }
       }
      }
     },
     "/virt/instance/device_list": {
      "post": {
       "tags": [
        "virt.instance"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_virt_instance_device_list"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "List all devices associated to an instance.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/virt_instance_device_list"
          }
         }
        }
       }
      }
     },
     "/virt/instance/device_update": {
      "post": {
       "tags": [
        "virt.instance"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_virt_instance_device_update"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Update a device in an instance.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/virt_instance_device_update"
          }
         }
        }
       }
      }
     },
     "/virt/instance/get_instance": {
      "post": {
       "tags": [
        "virt.instance"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_virt_instance_get_instance"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised.\n\nPlease see `query` method documentation for `options`.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/virt_instance_get_instance"
          }
         }
        }
       }
      }
     },
     "/virt/instance/image_choices": {
      "post": {
       "tags": [
        "virt.instance"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_virt_instance_image_choices"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Provide choices for instance image from a remote repository.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/virt_instance_image_choices"
          }
         }
        }
       }
      }
     },
     "/virt/instance/restart": {
      "post": {
       "tags": [
        "virt.instance"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_virt_instance_restart"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Restart an instance.\n\nTimeout is how long it should wait for the instance to shutdown cleanly.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/virt_instance_restart"
          }
         }
        }
       }
      }
     },
     "/virt/instance/start": {
      "post": {
       "tags": [
        "virt.instance"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_virt_instance_start"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Start an instance.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/virt_instance_start"
          }
         }
        }
       }
      }
     },
     "/virt/instance/stop": {
      "post": {
       "tags": [
        "virt.instance"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_virt_instance_stop"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Stop an instance.\n\nTimeout is how long it should wait for the instance to shutdown cleanly.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/virt_instance_stop"
          }
         }
        }
       }
      }
     },
     "/virt/volume": {
      "get": {
       "tags": [
        "virt.volume"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_virt_volume_query"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "limit",
         "in": "query",
         "required": false,
         "schema": {
          "type": "integer"
         }
        },
        {
         "name": "offset",
         "in": "query",
         "required": false,
         "schema": {
          "type": "integer"
         }
        },
        {
         "name": "count",
         "in": "query",
         "required": false,
         "schema": {
          "type": "boolean"
         }
        },
        {
         "name": "sort",
         "in": "query",
         "required": false,
         "schema": {
          "type": "string"
         }
        }
       ],
       "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      },
      "post": {
       "tags": [
        "virt.volume"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_virt_volume_create"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/virt_volume_create"
          }
         }
        }
       }
      }
     },
     "/virt/volume/id/{id_}": {
      "delete": {
       "tags": [
        "virt.volume"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_virt_volume_delete"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": ""
      },
      "get": {
       "tags": [
        "virt.volume"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_virt_volume_query"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      },
      "put": {
       "tags": [
        "virt.volume"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_virt_volume_update"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/virt_volume_update"
          }
         }
        }
       }
      }
     },
     "/virt/volume/get_instance": {
      "post": {
       "tags": [
        "virt.volume"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_virt_volume_get_instance"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised.\n\nPlease see `query` method documentation for `options`.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/virt_volume_get_instance"
          }
         }
        }
       }
      }
     },
     "/virt/volume/import_iso": {
      "post": {
       "tags": [
        "virt.volume"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_virt_volume_import_iso"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "\n\nA file might be uploaded to this endpoint. To upload a file, please send a multipart request with two parts. The first, named `data`, should contain a JSON-encoded payload, and the second, named `file`, should contain an uploaded file.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/virt_volume_import_iso"
          }
         }
        }
       }
      }
     },
     "/virt/volume/import_zvol": {
      "post": {
       "tags": [
        "virt.volume"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_virt_volume_import_zvol"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/virt_volume_import_zvol"
          }
         }
        }
       }
      }
     },
     "/vmware": {
      "get": {
       "tags": [
        "vmware"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_vmware_query"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "limit",
         "in": "query",
         "required": false,
         "schema": {
          "type": "integer"
         }
        },
        {
         "name": "offset",
         "in": "query",
         "required": false,
         "schema": {
          "type": "integer"
         }
        },
        {
         "name": "count",
         "in": "query",
         "required": false,
         "schema": {
          "type": "boolean"
         }
        },
        {
         "name": "sort",
         "in": "query",
         "required": false,
         "schema": {
          "type": "string"
         }
        }
       ],
       "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      },
      "post": {
       "tags": [
        "vmware"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_vmware_create"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Create VMWare snapshot.\n\n`hostname` is a valid IP address / hostname of a VMWare host. When clustering, this is the vCenter server for\nthe cluster.\n\n`username` and `password` are the credentials used to authorize access to the VMWare host.\n\n`datastore` is a valid datastore name which exists on the VMWare host.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/vmware_create"
          }
         }
        }
       }
      }
     },
     "/vmware/id/{id_}": {
      "delete": {
       "tags": [
        "vmware"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_vmware_delete"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "Delete VMWare snapshot of `id`."
      },
      "get": {
       "tags": [
        "vmware"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_vmware_query"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      },
      "put": {
       "tags": [
        "vmware"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_vmware_update"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "integer"
         }
        }
       ],
       "description": "Update VMWare snapshot of `id`.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/vmware_update"
          }
         }
        }
       }
      }
     },
     "/vmware/dataset_has_vms": {
      "post": {
       "tags": [
        "vmware"
       ],
       "responses": {
        "200": {
         "$ref": "#/components/responses/Success"
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Returns \"true\" if `dataset` is configured with a VMWare snapshot",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/vmware_dataset_has_vms"
          }
         }
        }
       }
      }
     },
     "/vmware/get_datastores": {
      "post": {
       "tags": [
        "vmware"
       ],
       "responses": {
        "200": {
         "$ref": "#/components/responses/Success"
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Get datastores from VMWare.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/vmware_get_datastores"
          }
         }
        }
       }
      }
     },
     "/vmware/get_instance": {
      "post": {
       "tags": [
        "vmware"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_vmware_get_instance"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised.\n\nPlease see `query` method documentation for `options`.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/vmware_get_instance"
          }
         }
        }
       }
      }
     },
     "/vmware/match_datastores_with_datasets": {
      "post": {
       "tags": [
        "vmware"
       ],
       "responses": {
        "200": {
         "$ref": "#/components/responses/Success"
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Requests datastores from vCenter server and tries to match them with local filesystems.\n\nReturns a list of datastores, a list of local filesystems and guessed relationship between them.\n\n",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/vmware_match_datastores_with_datasets"
          }
         }
        }
       }
      }
     },
     "/zfs/snapshot": {
      "get": {
       "tags": [
        "zfs.snapshot"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_zfs_snapshot_query"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "limit",
         "in": "query",
         "required": false,
         "schema": {
          "type": "integer"
         }
        },
        {
         "name": "offset",
         "in": "query",
         "required": false,
         "schema": {
          "type": "integer"
         }
        },
        {
         "name": "count",
         "in": "query",
         "required": false,
         "schema": {
          "type": "boolean"
         }
        },
        {
         "name": "sort",
         "in": "query",
         "required": false,
         "schema": {
          "type": "string"
         }
        }
       ],
       "description": "Query all ZFS Snapshots with `query-filters` and `query-options`.\n\n`query-options.extra.holds` specifies whether hold tags for snapshots should be retrieved (false by default)\n\n`query-options.extra.min_txg` can be specified to limit snapshot retrieval based on minimum transaction group.\n\n`query-options.extra.max_txg` can be specified to limit snapshot retrieval based on maximum transaction group.\n\n`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      },
      "post": {
       "tags": [
        "zfs.snapshot"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_zfs_snapshot_create"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Take a snapshot from a given dataset.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/zfs_snapshot_create"
          }
         }
        }
       }
      }
     },
     "/zfs/snapshot/id/{id_}": {
      "delete": {
       "tags": [
        "zfs.snapshot"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_zfs_snapshot_delete"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "string"
         }
        }
       ],
       "description": "Delete snapshot of name `id`.\n\n`options.defer` will defer the deletion of snapshot.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/zfs_snapshot_delete"
          }
         }
        }
       }
      },
      "get": {
       "tags": [
        "zfs.snapshot"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_zfs_snapshot_query"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "string"
         }
        }
       ],
       "description": "Query all ZFS Snapshots with `query-filters` and `query-options`.\n\n`query-options.extra.holds` specifies whether hold tags for snapshots should be retrieved (false by default)\n\n`query-options.extra.min_txg` can be specified to limit snapshot retrieval based on minimum transaction group.\n\n`query-options.extra.max_txg` can be specified to limit snapshot retrieval based on maximum transaction group.\n\n`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      },
      "put": {
       "tags": [
        "zfs.snapshot"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_zfs_snapshot_update"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [
        {
         "name": "id_",
         "in": "path",
         "required": true,
         "schema": {
          "type": "string"
         }
        }
       ],
       "description": "",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/zfs_snapshot_update"
          }
         }
        }
       }
      }
     },
     "/zfs/snapshot/clone": {
      "post": {
       "tags": [
        "zfs.snapshot"
       ],
       "responses": {
        "200": {
         "$ref": "#/components/responses/Success"
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Clone a given snapshot to a new dataset.\n\nReturns:\n    bool: True if succeed otherwise False.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/zfs_snapshot_clone"
          }
         }
        }
       }
      }
     },
     "/zfs/snapshot/get_instance": {
      "post": {
       "tags": [
        "zfs.snapshot"
       ],
       "responses": {
        "200": {
         "description": "Response schema:",
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/return_schema_of_zfs_snapshot_get_instance"
           }
          }
         }
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised.\n\nPlease see `query` method documentation for `options`.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/zfs_snapshot_get_instance"
          }
         }
        }
       }
      }
     },
     "/zfs/snapshot/hold": {
      "post": {
       "tags": [
        "zfs.snapshot"
       ],
       "responses": {
        "200": {
         "$ref": "#/components/responses/Success"
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Holds snapshot `id`.\n\n`truenas` tag will be added to the snapshot's tag namespace.\n\n`options.recursive` will hold snapshots recursively.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/zfs_snapshot_hold"
          }
         }
        }
       }
      }
     },
     "/zfs/snapshot/release": {
      "post": {
       "tags": [
        "zfs.snapshot"
       ],
       "responses": {
        "200": {
         "$ref": "#/components/responses/Success"
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Release held snapshot `id`.\n\nWill remove all hold tags from the specified snapshot.\n\n`options.recursive` will release snapshots recursively. Please note that only the tags that are present on the\nparent snapshot will be removed.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/zfs_snapshot_release"
          }
         }
        }
       }
      }
     },
     "/zfs/snapshot/rollback": {
      "post": {
       "tags": [
        "zfs.snapshot"
       ],
       "responses": {
        "200": {
         "$ref": "#/components/responses/Success"
        },
        "401": {
         "$ref": "#/components/responses/Unauthorized"
        }
       },
       "parameters": [],
       "description": "Rollback to a given snapshot `id`.\n\n`options.recursive` will destroy any snapshots and bookmarks more recent than the one\nspecified.\n\n`options.recursive_clones` is just like `recursive` but will also destroy any clones.\n\n`options.force` will force unmount of any clones.\n\n`options.recursive_rollback` will do a complete recursive rollback of each child snapshots for `id`. If\nany child does not have specified snapshot, this operation will fail.",
       "requestBody": {
        "content": {
         "application/json": {
          "schema": {
           "$ref": "#/components/schemas/zfs_snapshot_rollback"
          }
         }
        }
       }
      }
     }
    },
    "servers": [
     {
      "url": "https://truenas.tech-preppers.com/api/v2.0"
     }
    ],
    "components": {
     "schemas": {
      "core_arp": {
       "type": "object",
       "properties": {
        "ip": {
         "_name_": "ip",
         "title": "ip",
         "default": null,
         "type": "string"
        },
        "interface": {
         "_name_": "interface",
         "title": "interface",
         "default": null,
         "type": "string"
        }
       },
       "additionalProperties": false,
       "_name_": "options",
       "title": "options",
       "default": {},
       "_attrs_order_": [
        "ip",
        "interface"
       ]
      },
      "core_debug": {
       "type": "object",
       "properties": {
        "bind_address": {
         "_name_": "bind_address",
         "title": "bind_address",
         "default": "0.0.0.0",
         "type": "string"
        },
        "bind_port": {
         "type": "integer",
         "_name_": "bind_port",
         "title": "bind_port",
         "default": 3000
        },
        "threaded": {
         "type": "boolean",
         "_name_": "threaded",
         "title": "threaded",
         "default": false
        }
       },
       "additionalProperties": false,
       "_name_": "options",
       "title": "options",
       "default": {},
       "_attrs_order_": [
        "bind_address",
        "bind_port",
        "threaded"
       ]
      },
      "core_download_0": {
       "_name_": "method",
       "title": "method",
       "type": "string"
      },
      "core_download_1": {
       "_name_": "args",
       "title": "args",
       "default": [],
       "type": "array",
       "items": {}
      },
      "core_download_2": {
       "_name_": "filename",
       "title": "filename",
       "type": "string"
      },
      "core_download_3": {
       "type": "boolean",
       "_name_": "buffered",
       "title": "buffered",
       "default": false,
       "description": "Non-`buffered` downloads will allow job to write to pipe as soon as download URL is requested, job will stay\nblocked meanwhile. `buffered` downloads must wait for job to complete before requesting download URL, job's\npipe output will be buffered to ramfs."
      },
      "core_download": {
       "type": "object",
       "properties": {
        "method": {
         "$ref": "#/components/schemas/core_download_0"
        },
        "args": {
         "$ref": "#/components/schemas/core_download_1"
        },
        "filename": {
         "$ref": "#/components/schemas/core_download_2"
        },
        "buffered": {
         "$ref": "#/components/schemas/core_download_3"
        }
       }
      },
      "return_schema_of_core_get_jobs": {
       "anyOf": [
        {
         "type": "integer",
         "_name_": "count",
         "title": "count",
         "_required_": false
        },
        {
         "type": "object",
         "properties": {
          "id": {
           "type": "integer",
           "_name_": "id",
           "title": "id",
           "_required_": false
          },
          "method": {
           "_name_": "method",
           "title": "method",
           "_required_": false,
           "type": "string"
          },
          "arguments": {
           "_name_": "arguments",
           "title": "arguments",
           "default": [],
           "_required_": false,
           "type": "array",
           "items": []
          },
          "transient": {
           "type": "boolean",
           "_name_": "transient",
           "title": "transient",
           "_required_": false
          },
          "description": {
           "_name_": "description",
           "title": "description",
           "_required_": false,
           "type": [
            "string",
            "null"
           ]
          },
          "abortable": {
           "type": "boolean",
           "_name_": "abortable",
           "title": "abortable",
           "_required_": false
          },
          "logs_path": {
           "_name_": "logs_path",
           "title": "logs_path",
           "_required_": false,
           "type": [
            "string",
            "null"
           ]
          },
          "logs_excerpt": {
           "_name_": "logs_excerpt",
           "title": "logs_excerpt",
           "_required_": false,
           "type": [
            "string",
            "null"
           ]
          },
          "progress": {
           "type": "object",
           "properties": {
            "percent": {
             "type": [
              "integer",
              "null"
             ],
             "_name_": "percent",
             "title": "percent",
             "_required_": false
            },
            "description": {
             "_name_": "description",
             "title": "description",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "extra": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "extra",
             "title": "extra",
             "_required_": false
            }
           },
           "additionalProperties": false,
           "_name_": "progress",
           "title": "progress",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "percent",
            "description",
            "extra"
           ]
          },
          "result": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "result",
           "title": "result",
           "_required_": false
          },
          "result_encoding_error": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "result_encoding_error",
           "title": "result_encoding_error",
           "_required_": false
          },
          "error": {
           "_name_": "error",
           "title": "error",
           "_required_": false,
           "type": [
            "string",
            "null"
           ]
          },
          "exception": {
           "_name_": "exception",
           "title": "exception",
           "_required_": false,
           "type": [
            "string",
            "null"
           ]
          },
          "exc_info": {
           "type": "object",
           "properties": {
            "repr": {
             "_name_": "repr",
             "title": "repr",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "type": {
             "_name_": "type",
             "title": "type",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "errno": {
             "type": [
              "integer",
              "null"
             ],
             "_name_": "errno",
             "title": "errno",
             "_required_": false
            },
            "extra": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "extra",
             "title": "extra",
             "_required_": false
            }
           },
           "additionalProperties": false,
           "_name_": "exc_info",
           "title": "exc_info",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "repr",
            "type",
            "errno",
            "extra"
           ]
          },
          "state": {
           "_name_": "state",
           "title": "state",
           "_required_": false,
           "type": "string"
          },
          "time_started": {
           "_name_": "time_started",
           "title": "time_started",
           "_required_": false,
           "type": [
            "string",
            "null"
           ]
          },
          "time_finished": {
           "_name_": "time_finished",
           "title": "time_finished",
           "_required_": false,
           "type": [
            "string",
            "null"
           ]
          },
          "credentials": {
           "type": "object",
           "properties": {
            "type": {
             "_name_": "type",
             "title": "type",
             "_required_": false,
             "type": "string"
            },
            "data": {
             "type": "object",
             "properties": {},
             "additionalProperties": true,
             "_name_": "data",
             "title": "data",
             "default": {},
             "_required_": false,
             "_attrs_order_": []
            }
           },
           "additionalProperties": false,
           "_name_": "credentials",
           "title": "credentials",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "type",
            "data"
           ]
          }
         },
         "additionalProperties": false,
         "_name_": "job",
         "title": "job",
         "default": {},
         "_required_": false,
         "_attrs_order_": [
          "id",
          "method",
          "arguments",
          "transient",
          "description",
          "abortable",
          "logs_path",
          "logs_excerpt",
          "progress",
          "result",
          "result_encoding_error",
          "error",
          "exception",
          "exc_info",
          "state",
          "time_started",
          "time_finished",
          "credentials"
         ]
        },
        {
         "_name_": "query_result",
         "title": "query_result",
         "default": [],
         "_required_": false,
         "type": "array",
         "items": [
          {
           "type": "object",
           "properties": {
            "id": {
             "type": "integer",
             "_name_": "id",
             "title": "id",
             "_required_": false
            },
            "method": {
             "_name_": "method",
             "title": "method",
             "_required_": false,
             "type": "string"
            },
            "arguments": {
             "_name_": "arguments",
             "title": "arguments",
             "default": [],
             "_required_": false,
             "type": "array",
             "items": []
            },
            "transient": {
             "type": "boolean",
             "_name_": "transient",
             "title": "transient",
             "_required_": false
            },
            "description": {
             "_name_": "description",
             "title": "description",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "abortable": {
             "type": "boolean",
             "_name_": "abortable",
             "title": "abortable",
             "_required_": false
            },
            "logs_path": {
             "_name_": "logs_path",
             "title": "logs_path",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "logs_excerpt": {
             "_name_": "logs_excerpt",
             "title": "logs_excerpt",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "progress": {
             "type": "object",
             "properties": {
              "percent": {
               "type": [
                "integer",
                "null"
               ],
               "_name_": "percent",
               "title": "percent",
               "_required_": false
              },
              "description": {
               "_name_": "description",
               "title": "description",
               "_required_": false,
               "type": [
                "string",
                "null"
               ]
              },
              "extra": {
               "anyOf": [
                {
                 "type": "string"
                },
                {
                 "type": "integer"
                },
                {
                 "type": "boolean"
                },
                {
                 "type": "object"
                },
                {
                 "type": "array"
                }
               ],
               "nullable": true,
               "_name_": "extra",
               "title": "extra",
               "_required_": false
              }
             },
             "additionalProperties": false,
             "_name_": "progress",
             "title": "progress",
             "default": {},
             "_required_": false,
             "_attrs_order_": [
              "percent",
              "description",
              "extra"
             ]
            },
            "result": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "result",
             "title": "result",
             "_required_": false
            },
            "result_encoding_error": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "result_encoding_error",
             "title": "result_encoding_error",
             "_required_": false
            },
            "error": {
             "_name_": "error",
             "title": "error",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "exception": {
             "_name_": "exception",
             "title": "exception",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "exc_info": {
             "type": "object",
             "properties": {
              "repr": {
               "_name_": "repr",
               "title": "repr",
               "_required_": false,
               "type": [
                "string",
                "null"
               ]
              },
              "type": {
               "_name_": "type",
               "title": "type",
               "_required_": false,
               "type": [
                "string",
                "null"
               ]
              },
              "errno": {
               "type": [
                "integer",
                "null"
               ],
               "_name_": "errno",
               "title": "errno",
               "_required_": false
              },
              "extra": {
               "anyOf": [
                {
                 "type": "string"
                },
                {
                 "type": "integer"
                },
                {
                 "type": "boolean"
                },
                {
                 "type": "object"
                },
                {
                 "type": "array"
                }
               ],
               "nullable": true,
               "_name_": "extra",
               "title": "extra",
               "_required_": false
              }
             },
             "additionalProperties": false,
             "_name_": "exc_info",
             "title": "exc_info",
             "default": {},
             "_required_": false,
             "_attrs_order_": [
              "repr",
              "type",
              "errno",
              "extra"
             ]
            },
            "state": {
             "_name_": "state",
             "title": "state",
             "_required_": false,
             "type": "string"
            },
            "time_started": {
             "_name_": "time_started",
             "title": "time_started",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "time_finished": {
             "_name_": "time_finished",
             "title": "time_finished",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "credentials": {
             "type": "object",
             "properties": {
              "type": {
               "_name_": "type",
               "title": "type",
               "_required_": false,
               "type": "string"
              },
              "data": {
               "type": "object",
               "properties": {},
               "additionalProperties": true,
               "_name_": "data",
               "title": "data",
               "default": {},
               "_required_": false,
               "_attrs_order_": []
              }
             },
             "additionalProperties": false,
             "_name_": "credentials",
             "title": "credentials",
             "default": {},
             "_required_": false,
             "_attrs_order_": [
              "type",
              "data"
             ]
            }
           },
           "additionalProperties": false,
           "_name_": "job",
           "title": "job",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "id",
            "method",
            "arguments",
            "transient",
            "description",
            "abortable",
            "logs_path",
            "logs_excerpt",
            "progress",
            "result",
            "result_encoding_error",
            "error",
            "exception",
            "exc_info",
            "state",
            "time_started",
            "time_finished",
            "credentials"
           ]
          }
         ]
        }
       ],
       "nullable": false,
       "_name_": "filterable_result",
       "description": null
      },
      "core_job_abort": {
       "type": "integer",
       "_name_": "id",
       "title": "id"
      },
      "core_job_download_logs_0": {
       "type": "integer",
       "_name_": "id",
       "title": "id",
       "description": "Download logs of the job `id`."
      },
      "core_job_download_logs_1": {
       "_name_": "filename",
       "title": "filename",
       "type": "string"
      },
      "core_job_download_logs_2": {
       "type": "boolean",
       "_name_": "buffered",
       "title": "buffered",
       "default": false
      },
      "core_job_download_logs": {
       "type": "object",
       "properties": {
        "id": {
         "$ref": "#/components/schemas/core_job_download_logs_0"
        },
        "filename": {
         "$ref": "#/components/schemas/core_job_download_logs_1"
        },
        "buffered": {
         "$ref": "#/components/schemas/core_job_download_logs_2"
        }
       }
      },
      "core_job_wait": {
       "type": "integer",
       "_name_": "id",
       "title": "id"
      },
      "return_schema_of_core_ping": {
       "const": "pong",
       "enum": [
        "pong"
       ],
       "title": "result",
       "type": "string",
       "_name_": "result"
      },
      "core_ping_remote": {
       "type": "object",
       "properties": {
        "type": {
         "_name_": "type",
         "title": "type",
         "default": "ICMP",
         "type": "string",
         "enum": [
          "ICMP",
          "ICMPV4",
          "ICMPV6"
         ]
        },
        "hostname": {
         "_name_": "hostname",
         "title": "hostname",
         "type": "string"
        },
        "timeout": {
         "type": "integer",
         "_name_": "timeout",
         "title": "timeout",
         "default": 4
        },
        "count": {
         "type": "integer",
         "_name_": "count",
         "title": "count",
         "default": null
        },
        "interface": {
         "_name_": "interface",
         "title": "interface",
         "default": null,
         "type": "string"
        },
        "interval": {
         "_name_": "interval",
         "title": "interval",
         "default": null,
         "type": "string"
        }
       },
       "additionalProperties": false,
       "_name_": "options",
       "title": "options",
       "default": {},
       "_attrs_order_": [
        "type",
        "hostname",
        "timeout",
        "count",
        "interface",
        "interval"
       ]
      },
      "core_resize_shell_0": {
       "_name_": "id",
       "title": "id",
       "type": "string"
      },
      "core_resize_shell_1": {
       "type": "integer",
       "_name_": "cols",
       "title": "cols"
      },
      "core_resize_shell_2": {
       "type": "integer",
       "_name_": "rows",
       "title": "rows"
      },
      "core_resize_shell": {
       "type": "object",
       "properties": {
        "id": {
         "$ref": "#/components/schemas/core_resize_shell_0"
        },
        "cols": {
         "$ref": "#/components/schemas/core_resize_shell_1"
        },
        "rows": {
         "$ref": "#/components/schemas/core_resize_shell_2"
        }
       }
      },
      "return_schema_of_acme_dns_authenticator_query": {
       "anyOf": [
        {
         "items": [
          {
           "additionalProperties": false,
           "properties": {
            "id": {
             "title": "id",
             "type": "integer",
             "_name_": "id",
             "_required_": false
            },
            "attributes": {
             "discriminator": {
              "mapping": {
               "OVH": "#/$defs/OVHSchema",
               "cloudflare": "#/$defs/CloudFlareSchema",
               "digitalocean": "#/$defs/DigitalOceanSchema",
               "route53": "#/$defs/Route53Schema",
               "shell": "#/$defs/ShellSchema"
              },
              "propertyName": "authenticator"
             },
             "oneOf": [
              {},
              {},
              {},
              {},
              {}
             ],
             "title": "attributes",
             "_name_": "attributes",
             "_required_": false
            },
            "name": {
             "title": "name",
             "type": "string",
             "_name_": "name",
             "_required_": false
            }
           },
           "title": "ACMEDNSAuthenticatorQueryResultItem",
           "type": "object",
           "_attrs_order_": [
            "id",
            "attributes",
            "name"
           ]
          }
         ],
         "type": "array"
        },
        {
         "additionalProperties": false,
         "properties": {
          "id": {
           "title": "id",
           "type": "integer",
           "_name_": "id",
           "_required_": false
          },
          "attributes": {
           "discriminator": {
            "mapping": {
             "OVH": "#/$defs/OVHSchema",
             "cloudflare": "#/$defs/CloudFlareSchema",
             "digitalocean": "#/$defs/DigitalOceanSchema",
             "route53": "#/$defs/Route53Schema",
             "shell": "#/$defs/ShellSchema"
            },
            "propertyName": "authenticator"
           },
           "oneOf": [
            {},
            {},
            {},
            {},
            {}
           ],
           "title": "attributes",
           "_name_": "attributes",
           "_required_": false
          },
          "name": {
           "title": "name",
           "type": "string",
           "_name_": "name",
           "_required_": false
          }
         },
         "title": "ACMEDNSAuthenticatorQueryResultItem",
         "type": "object",
         "_attrs_order_": [
          "id",
          "attributes",
          "name"
         ]
        },
        {
         "type": "integer"
        }
       ],
       "title": "result",
       "_name_": "result"
      },
      "acme_dns_authenticator_create": {
       "additionalProperties": false,
       "properties": {
        "attributes": {
         "discriminator": {
          "mapping": {
           "OVH": "#/$defs/OVHSchema",
           "cloudflare": "#/$defs/CloudFlareSchema",
           "digitalocean": "#/$defs/DigitalOceanSchema",
           "route53": "#/$defs/Route53Schema",
           "shell": "#/$defs/ShellSchema"
          },
          "propertyName": "authenticator"
         },
         "oneOf": [
          {},
          {},
          {},
          {},
          {}
         ],
         "title": "attributes",
         "_name_": "attributes"
        },
        "name": {
         "title": "name",
         "type": "string",
         "_name_": "name"
        }
       },
       "required": [
        "attributes",
        "name"
       ],
       "title": "dns_authenticator_create",
       "type": "object",
       "_name_": "dns_authenticator_create",
       "_attrs_order_": [
        "attributes",
        "name"
       ]
      },
      "return_schema_of_acme_dns_authenticator_create": {
       "additionalProperties": false,
       "properties": {
        "id": {
         "title": "id",
         "type": "integer",
         "_name_": "id"
        },
        "attributes": {
         "discriminator": {
          "mapping": {
           "OVH": "#/$defs/OVHSchema",
           "cloudflare": "#/$defs/CloudFlareSchema",
           "digitalocean": "#/$defs/DigitalOceanSchema",
           "route53": "#/$defs/Route53Schema",
           "shell": "#/$defs/ShellSchema"
          },
          "propertyName": "authenticator"
         },
         "oneOf": [
          {},
          {},
          {},
          {},
          {}
         ],
         "title": "attributes",
         "_name_": "attributes"
        },
        "name": {
         "title": "name",
         "type": "string",
         "_name_": "name"
        }
       },
       "required": [
        "id",
        "attributes",
        "name"
       ],
       "title": "result",
       "type": "object",
       "_name_": "result",
       "_attrs_order_": [
        "id",
        "attributes",
        "name"
       ]
      },
      "return_schema_of_acme_dns_authenticator_delete": {
       "title": "result",
       "type": "boolean",
       "_name_": "result"
      },
      "acme_dns_authenticator_update": {
       "additionalProperties": false,
       "properties": {
        "attributes": {
         "discriminator": {
          "mapping": {
           "OVH": "#/$defs/OVHSchema",
           "cloudflare": "#/$defs/CloudFlareSchema",
           "digitalocean": "#/$defs/DigitalOceanSchema",
           "route53": "#/$defs/Route53Schema",
           "shell": "#/$defs/ShellSchema"
          },
          "propertyName": "authenticator"
         },
         "oneOf": [
          {},
          {},
          {},
          {},
          {}
         ],
         "title": "attributes",
         "_name_": "attributes"
        },
        "name": {
         "title": "name",
         "type": "string",
         "_name_": "name"
        }
       },
       "title": "dns_authenticator_update",
       "type": "object",
       "_name_": "dns_authenticator_update",
       "_attrs_order_": [
        "attributes",
        "name"
       ]
      },
      "return_schema_of_acme_dns_authenticator_update": {
       "additionalProperties": false,
       "properties": {
        "id": {
         "title": "id",
         "type": "integer",
         "_name_": "id"
        },
        "attributes": {
         "discriminator": {
          "mapping": {
           "OVH": "#/$defs/OVHSchema",
           "cloudflare": "#/$defs/CloudFlareSchema",
           "digitalocean": "#/$defs/DigitalOceanSchema",
           "route53": "#/$defs/Route53Schema",
           "shell": "#/$defs/ShellSchema"
          },
          "propertyName": "authenticator"
         },
         "oneOf": [
          {},
          {},
          {},
          {},
          {}
         ],
         "title": "attributes",
         "_name_": "attributes"
        },
        "name": {
         "title": "name",
         "type": "string",
         "_name_": "name"
        }
       },
       "required": [
        "id",
        "attributes",
        "name"
       ],
       "title": "result",
       "type": "object",
       "_name_": "result",
       "_attrs_order_": [
        "id",
        "attributes",
        "name"
       ]
      },
      "return_schema_of_acme_dns_authenticator_authenticator_schemas": {
       "items": {
        "additionalProperties": false,
        "properties": {
         "key": {
          "title": "key",
          "type": "string",
          "_name_": "key",
          "_required_": true
         },
         "schema": {
          "title": "schema",
          "_name_": "schema",
          "_required_": true
         }
        },
        "required": [
         "key",
         "schema"
        ],
        "title": "ACMEDNSAuthenticatorSchema",
        "type": "object",
        "_attrs_order_": [
         "key",
         "schema"
        ]
       },
       "title": "result",
       "type": "array",
       "_name_": "result"
      },
      "acme_dns_authenticator_get_instance_0": {
       "title": "id",
       "type": "integer",
       "_name_": "id"
      },
      "acme_dns_authenticator_get_instance_1": {
       "additionalProperties": false,
       "properties": {
        "relationships": {
         "default": true,
         "title": "relationships",
         "type": "boolean",
         "_name_": "relationships"
        },
        "extend": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "extend",
         "_name_": "extend"
        },
        "extend_context": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "extend_context",
         "_name_": "extend_context"
        },
        "prefix": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "prefix",
         "_name_": "prefix"
        },
        "extra": {
         "default": {},
         "title": "extra",
         "type": "object",
         "_name_": "extra"
        },
        "order_by": {
         "default": [],
         "items": {
          "type": "string"
         },
         "title": "order_by",
         "type": "array",
         "_name_": "order_by"
        },
        "select": {
         "default": [],
         "items": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "items": [
             {}
            ],
            "type": "array"
           }
          ]
         },
         "title": "select",
         "type": "array",
         "_name_": "select"
        },
        "count": {
         "default": false,
         "title": "count",
         "type": "boolean",
         "_name_": "count"
        },
        "get": {
         "default": false,
         "title": "get",
         "type": "boolean",
         "_name_": "get"
        },
        "offset": {
         "default": 0,
         "title": "offset",
         "type": "integer",
         "_name_": "offset"
        },
        "limit": {
         "default": 0,
         "title": "limit",
         "type": "integer",
         "_name_": "limit"
        },
        "force_sql_filters": {
         "default": false,
         "title": "force_sql_filters",
         "type": "boolean",
         "_name_": "force_sql_filters"
        }
       },
       "title": "options",
       "type": "object",
       "default": {},
       "_name_": "options",
       "_attrs_order_": [
        "relationships",
        "extend",
        "extend_context",
        "prefix",
        "extra",
        "order_by",
        "select",
        "count",
        "get",
        "offset",
        "limit",
        "force_sql_filters"
       ]
      },
      "acme_dns_authenticator_get_instance": {
       "type": "object",
       "properties": {
        "id": {
         "$ref": "#/components/schemas/acme_dns_authenticator_get_instance_0"
        },
        "options": {
         "$ref": "#/components/schemas/acme_dns_authenticator_get_instance_1"
        }
       }
      },
      "return_schema_of_acme_dns_authenticator_get_instance": {
       "additionalProperties": false,
       "properties": {
        "id": {
         "title": "id",
         "type": "integer",
         "_name_": "id"
        },
        "attributes": {
         "discriminator": {
          "mapping": {
           "OVH": "#/$defs/OVHSchema",
           "cloudflare": "#/$defs/CloudFlareSchema",
           "digitalocean": "#/$defs/DigitalOceanSchema",
           "route53": "#/$defs/Route53Schema",
           "shell": "#/$defs/ShellSchema"
          },
          "propertyName": "authenticator"
         },
         "oneOf": [
          {},
          {},
          {},
          {},
          {}
         ],
         "title": "attributes",
         "_name_": "attributes"
        },
        "name": {
         "title": "name",
         "type": "string",
         "_name_": "name"
        }
       },
       "required": [
        "id",
        "attributes",
        "name"
       ],
       "title": "result",
       "type": "object",
       "_name_": "result",
       "_attrs_order_": [
        "id",
        "attributes",
        "name"
       ]
      },
      "return_schema_of_activedirectory_config": {
       "type": "object",
       "properties": {
        "domainname": {
         "_name_": "domainname",
         "title": "domainname",
         "type": "string"
        },
        "bindname": {
         "_name_": "bindname",
         "title": "bindname",
         "type": "string"
        },
        "bindpw": {
         "_name_": "bindpw",
         "title": "bindpw",
         "type": "string"
        },
        "verbose_logging": {
         "type": "boolean",
         "_name_": "verbose_logging",
         "title": "verbose_logging"
        },
        "use_default_domain": {
         "type": "boolean",
         "_name_": "use_default_domain",
         "title": "use_default_domain"
        },
        "allow_trusted_doms": {
         "type": "boolean",
         "_name_": "allow_trusted_doms",
         "title": "allow_trusted_doms"
        },
        "allow_dns_updates": {
         "type": "boolean",
         "_name_": "allow_dns_updates",
         "title": "allow_dns_updates"
        },
        "disable_freenas_cache": {
         "type": "boolean",
         "_name_": "disable_freenas_cache",
         "title": "disable_freenas_cache"
        },
        "restrict_pam": {
         "type": "boolean",
         "_name_": "restrict_pam",
         "title": "restrict_pam",
         "default": false
        },
        "site": {
         "_name_": "site",
         "title": "site",
         "type": "string",
         "nullable": true
        },
        "kerberos_realm": {
         "type": "integer",
         "_name_": "kerberos_realm",
         "title": "kerberos_realm",
         "nullable": true
        },
        "kerberos_principal": {
         "_name_": "kerberos_principal",
         "title": "kerberos_principal",
         "type": "string",
         "nullable": true
        },
        "timeout": {
         "type": "integer",
         "_name_": "timeout",
         "title": "timeout",
         "default": 60
        },
        "dns_timeout": {
         "type": "integer",
         "_name_": "dns_timeout",
         "title": "dns_timeout",
         "default": 10
        },
        "nss_info": {
         "_name_": "nss_info",
         "title": "nss_info",
         "type": "string",
         "enum": [
          "TEMPLATE",
          "SFU",
          "SFU20",
          "RFC2307"
         ],
         "nullable": true
        },
        "createcomputer": {
         "_name_": "createcomputer",
         "title": "createcomputer",
         "type": "string"
        },
        "netbiosname": {
         "_name_": "netbiosname",
         "title": "netbiosname",
         "type": "string"
        },
        "netbiosalias": {
         "_name_": "netbiosalias",
         "title": "netbiosalias",
         "default": null,
         "type": "array",
         "items": {
          "_name_": "alias",
          "title": "alias",
          "_required_": false,
          "type": "string"
         }
        },
        "enable": {
         "type": "boolean",
         "_name_": "enable",
         "title": "enable"
        }
       },
       "additionalProperties": false,
       "_name_": "activedirectory_update",
       "title": "activedirectory_update",
       "default": {},
       "_attrs_order_": [
        "domainname",
        "bindname",
        "bindpw",
        "verbose_logging",
        "use_default_domain",
        "allow_trusted_doms",
        "allow_dns_updates",
        "disable_freenas_cache",
        "restrict_pam",
        "site",
        "kerberos_realm",
        "kerberos_principal",
        "timeout",
        "dns_timeout",
        "nss_info",
        "createcomputer",
        "netbiosname",
        "netbiosalias",
        "enable"
       ]
      },
      "activedirectory_update": {
       "type": "object",
       "properties": {
        "domainname": {
         "_name_": "domainname",
         "title": "domainname",
         "type": "string",
         "description": "`domainname` full DNS domain name of the Active Directory domain."
        },
        "bindname": {
         "_name_": "bindname",
         "title": "bindname",
         "type": "string",
         "description": "`bindname` username used to perform the intial domain join."
        },
        "bindpw": {
         "_name_": "bindpw",
         "title": "bindpw",
         "type": "string",
         "description": "`bindpw` password used to perform the initial domain join. User-\nprovided credentials are used to obtain a kerberos ticket, which\nis used to perform the actual domain join."
        },
        "verbose_logging": {
         "type": "boolean",
         "_name_": "verbose_logging",
         "title": "verbose_logging",
         "description": "`verbose_logging` increase logging during the domain join process."
        },
        "use_default_domain": {
         "type": "boolean",
         "_name_": "use_default_domain",
         "title": "use_default_domain",
         "description": "`use_default_domain` controls whether domain users and groups have\nthe pre-windows 2000 domain name prepended to the user account. When\nenabled, the user appears as \"administrator\" rather than\n\"EXAMPLE\u0007dministrator\""
        },
        "allow_trusted_doms": {
         "type": "boolean",
         "_name_": "allow_trusted_doms",
         "title": "allow_trusted_doms",
         "description": "`allow_trusted_doms` enable support for trusted domains. If this\nparameter is enabled, then separate idmap backends _must_ be configured\nfor each trusted domain, and the idmap cache should be cleared."
        },
        "allow_dns_updates": {
         "type": "boolean",
         "_name_": "allow_dns_updates",
         "title": "allow_dns_updates",
         "description": "`allow_dns_updates` during the domain join process, automatically\ngenerate DNS entries in the AD domain for the NAS. If this is disabled,\nthen a domain administrator must manually add appropriate DNS entries\nfor the NAS. This parameter is recommended for TrueNAS HA servers."
        },
        "disable_freenas_cache": {
         "type": "boolean",
         "_name_": "disable_freenas_cache",
         "title": "disable_freenas_cache",
         "description": "`disable_freenas_cache` disables active caching of AD users and groups.\nWhen disabled, only users cached in winbind's internal cache are\nvisible in GUI dropdowns. Disabling active caching is recommended\nin environments with a large amount of users."
        },
        "restrict_pam": {
         "type": "boolean",
         "_name_": "restrict_pam",
         "title": "restrict_pam",
         "default": false
        },
        "site": {
         "_name_": "site",
         "title": "site",
         "type": "string",
         "description": "`site` AD site of which the NAS is a member. This parameter is auto-\ndetected during the domain join process. If no AD site is configured\nfor the subnet in which the NAS is configured, then this parameter\nappears as 'Default-First-Site-Name'. Auto-detection is only performed\nduring the initial domain join.",
         "nullable": true
        },
        "kerberos_realm": {
         "type": "integer",
         "_name_": "kerberos_realm",
         "title": "kerberos_realm",
         "description": "`kerberos_realm` in which the server is located. This parameter is\nautomatically populated during the initial domain join. If the NAS has\nan AD site configured and that site has multiple kerberos servers, then\nthe kerberos realm is automatically updated with a site-specific\nconfiguration to use those servers. Auto-detection is only performed\nduring initial domain join.",
         "nullable": true
        },
        "kerberos_principal": {
         "_name_": "kerberos_principal",
         "title": "kerberos_principal",
         "type": "string",
         "description": "`kerberos_principal` kerberos principal to use for AD-related\noperations outside of Samba. After intial domain join, this field is\nupdated with the kerberos principal associated with the AD machine\naccount for the NAS.",
         "nullable": true
        },
        "timeout": {
         "type": "integer",
         "_name_": "timeout",
         "title": "timeout",
         "default": 60,
         "description": "`timeout` timeout value for winbind-related operations. This value may\nneed to be increased in  environments with high latencies for\ncommunications with domain controllers or a large number of domain\ncontrollers. Lowering the value may cause status checks to fail."
        },
        "dns_timeout": {
         "type": "integer",
         "_name_": "dns_timeout",
         "title": "dns_timeout",
         "default": 10,
         "description": "`dns_timeout` timeout value for DNS queries during the initial domain\njoin. This value is also set as the NETWORK_TIMEOUT in the ldap config\nfile."
        },
        "nss_info": {
         "_name_": "nss_info",
         "title": "nss_info",
         "type": "string",
         "enum": [
          "TEMPLATE",
          "SFU",
          "SFU20",
          "RFC2307"
         ],
         "description": "`nss_info` controls how Winbind retrieves Name Service Information to\nconstruct a user's home directory and login shell. This parameter\nis only effective if the Active Directory Domain Controller supports\nthe Microsoft Services for Unix (SFU) LDAP schema.",
         "nullable": true
        },
        "createcomputer": {
         "_name_": "createcomputer",
         "title": "createcomputer",
         "type": "string",
         "description": "`createcomputer` Active Directory Organizational Unit in which new\ncomputer accounts are created."
        },
        "netbiosname": {
         "_name_": "netbiosname",
         "title": "netbiosname",
         "type": "string"
        },
        "netbiosalias": {
         "_name_": "netbiosalias",
         "title": "netbiosalias",
         "default": null,
         "type": "array",
         "items": {
          "_name_": "alias",
          "title": "alias",
          "_required_": false,
          "type": "string"
         }
        },
        "enable": {
         "type": "boolean",
         "_name_": "enable",
         "title": "enable",
         "description": "The Active Directory service is started after a configuration\nupdate if the service was initially disabled, and the updated\nconfiguration sets `enable` to `True`. The Active Directory\nservice is stopped if `enable` is changed to `False`. If the\nconfiguration is updated, but the initial `enable` state is `True`, and\nremains unchanged, then the samba server is only restarted."
        }
       },
       "additionalProperties": false,
       "_name_": "activedirectory_update",
       "title": "activedirectory_update",
       "default": {},
       "_attrs_order_": [
        "domainname",
        "bindname",
        "bindpw",
        "verbose_logging",
        "use_default_domain",
        "allow_trusted_doms",
        "allow_dns_updates",
        "disable_freenas_cache",
        "restrict_pam",
        "site",
        "kerberos_realm",
        "kerberos_principal",
        "timeout",
        "dns_timeout",
        "nss_info",
        "createcomputer",
        "netbiosname",
        "netbiosalias",
        "enable"
       ]
      },
      "return_schema_of_activedirectory_update": {
       "type": "object",
       "properties": {
        "domainname": {
         "_name_": "domainname",
         "title": "domainname",
         "type": "string",
         "description": "`domainname` full DNS domain name of the Active Directory domain."
        },
        "bindname": {
         "_name_": "bindname",
         "title": "bindname",
         "type": "string",
         "description": "`bindname` username used to perform the intial domain join."
        },
        "bindpw": {
         "_name_": "bindpw",
         "title": "bindpw",
         "type": "string",
         "description": "`bindpw` password used to perform the initial domain join. User-\nprovided credentials are used to obtain a kerberos ticket, which\nis used to perform the actual domain join."
        },
        "verbose_logging": {
         "type": "boolean",
         "_name_": "verbose_logging",
         "title": "verbose_logging",
         "description": "`verbose_logging` increase logging during the domain join process."
        },
        "use_default_domain": {
         "type": "boolean",
         "_name_": "use_default_domain",
         "title": "use_default_domain",
         "description": "`use_default_domain` controls whether domain users and groups have\nthe pre-windows 2000 domain name prepended to the user account. When\nenabled, the user appears as \"administrator\" rather than\n\"EXAMPLE\u0007dministrator\""
        },
        "allow_trusted_doms": {
         "type": "boolean",
         "_name_": "allow_trusted_doms",
         "title": "allow_trusted_doms",
         "description": "`allow_trusted_doms` enable support for trusted domains. If this\nparameter is enabled, then separate idmap backends _must_ be configured\nfor each trusted domain, and the idmap cache should be cleared."
        },
        "allow_dns_updates": {
         "type": "boolean",
         "_name_": "allow_dns_updates",
         "title": "allow_dns_updates",
         "description": "`allow_dns_updates` during the domain join process, automatically\ngenerate DNS entries in the AD domain for the NAS. If this is disabled,\nthen a domain administrator must manually add appropriate DNS entries\nfor the NAS. This parameter is recommended for TrueNAS HA servers."
        },
        "disable_freenas_cache": {
         "type": "boolean",
         "_name_": "disable_freenas_cache",
         "title": "disable_freenas_cache",
         "description": "`disable_freenas_cache` disables active caching of AD users and groups.\nWhen disabled, only users cached in winbind's internal cache are\nvisible in GUI dropdowns. Disabling active caching is recommended\nin environments with a large amount of users."
        },
        "restrict_pam": {
         "type": "boolean",
         "_name_": "restrict_pam",
         "title": "restrict_pam",
         "default": false
        },
        "site": {
         "_name_": "site",
         "title": "site",
         "type": "string",
         "description": "`site` AD site of which the NAS is a member. This parameter is auto-\ndetected during the domain join process. If no AD site is configured\nfor the subnet in which the NAS is configured, then this parameter\nappears as 'Default-First-Site-Name'. Auto-detection is only performed\nduring the initial domain join.",
         "nullable": true
        },
        "kerberos_realm": {
         "type": "integer",
         "_name_": "kerberos_realm",
         "title": "kerberos_realm",
         "description": "`kerberos_realm` in which the server is located. This parameter is\nautomatically populated during the initial domain join. If the NAS has\nan AD site configured and that site has multiple kerberos servers, then\nthe kerberos realm is automatically updated with a site-specific\nconfiguration to use those servers. Auto-detection is only performed\nduring initial domain join.",
         "nullable": true
        },
        "kerberos_principal": {
         "_name_": "kerberos_principal",
         "title": "kerberos_principal",
         "type": "string",
         "description": "`kerberos_principal` kerberos principal to use for AD-related\noperations outside of Samba. After intial domain join, this field is\nupdated with the kerberos principal associated with the AD machine\naccount for the NAS.",
         "nullable": true
        },
        "timeout": {
         "type": "integer",
         "_name_": "timeout",
         "title": "timeout",
         "default": 60,
         "description": "`timeout` timeout value for winbind-related operations. This value may\nneed to be increased in  environments with high latencies for\ncommunications with domain controllers or a large number of domain\ncontrollers. Lowering the value may cause status checks to fail."
        },
        "dns_timeout": {
         "type": "integer",
         "_name_": "dns_timeout",
         "title": "dns_timeout",
         "default": 10,
         "description": "`dns_timeout` timeout value for DNS queries during the initial domain\njoin. This value is also set as the NETWORK_TIMEOUT in the ldap config\nfile."
        },
        "nss_info": {
         "_name_": "nss_info",
         "title": "nss_info",
         "type": "string",
         "enum": [
          "TEMPLATE",
          "SFU",
          "SFU20",
          "RFC2307"
         ],
         "description": "`nss_info` controls how Winbind retrieves Name Service Information to\nconstruct a user's home directory and login shell. This parameter\nis only effective if the Active Directory Domain Controller supports\nthe Microsoft Services for Unix (SFU) LDAP schema.",
         "nullable": true
        },
        "createcomputer": {
         "_name_": "createcomputer",
         "title": "createcomputer",
         "type": "string",
         "description": "`createcomputer` Active Directory Organizational Unit in which new\ncomputer accounts are created."
        },
        "netbiosname": {
         "_name_": "netbiosname",
         "title": "netbiosname",
         "type": "string"
        },
        "netbiosalias": {
         "_name_": "netbiosalias",
         "title": "netbiosalias",
         "default": null,
         "type": "array",
         "items": {
          "_name_": "alias",
          "title": "alias",
          "_required_": false,
          "type": "string"
         }
        },
        "enable": {
         "type": "boolean",
         "_name_": "enable",
         "title": "enable",
         "description": "The Active Directory service is started after a configuration\nupdate if the service was initially disabled, and the updated\nconfiguration sets `enable` to `True`. The Active Directory\nservice is stopped if `enable` is changed to `False`. If the\nconfiguration is updated, but the initial `enable` state is `True`, and\nremains unchanged, then the samba server is only restarted."
        }
       },
       "additionalProperties": false,
       "_name_": "activedirectory_update",
       "title": "activedirectory_update",
       "default": {},
       "_attrs_order_": [
        "domainname",
        "bindname",
        "bindpw",
        "verbose_logging",
        "use_default_domain",
        "allow_trusted_doms",
        "allow_dns_updates",
        "disable_freenas_cache",
        "restrict_pam",
        "site",
        "kerberos_realm",
        "kerberos_principal",
        "timeout",
        "dns_timeout",
        "nss_info",
        "createcomputer",
        "netbiosname",
        "netbiosalias",
        "enable"
       ]
      },
      "activedirectory_domain_info": {
       "_name_": "domain",
       "title": "domain",
       "default": "",
       "type": "string"
      },
      "return_schema_of_activedirectory_domain_info": {
       "type": "object",
       "properties": {
        "LDAP server": {
         "_name_": "LDAP server",
         "title": "LDAP server",
         "type": "string"
        },
        "LDAP server name": {
         "_name_": "LDAP server name",
         "title": "LDAP server name",
         "type": "string"
        },
        "Realm": {
         "_name_": "Realm",
         "title": "Realm",
         "type": "string",
         "description": "`Realm` Kerberos realm"
        },
        "Bind Path": {
         "_name_": "Bind Path",
         "title": "Bind Path",
         "type": "string"
        },
        "LDAP port": {
         "type": "integer",
         "_name_": "LDAP port",
         "title": "LDAP port"
        },
        "Server time": {
         "type": "integer",
         "_name_": "Server time",
         "title": "Server time"
        },
        "KDC server": {
         "_name_": "KDC server",
         "title": "KDC server",
         "type": "string"
        },
        "Server time offset": {
         "type": "integer",
         "_name_": "Server time offset",
         "title": "Server time offset"
        },
        "Last machine account password change": {
         "type": "integer",
         "_name_": "Last machine account password change",
         "title": "Last machine account password change"
        }
       },
       "additionalProperties": false,
       "_name_": "domain_info",
       "title": "domain_info",
       "default": {},
       "_attrs_order_": [
        "LDAP server",
        "LDAP server name",
        "Realm",
        "Bind Path",
        "LDAP port",
        "Server time",
        "KDC server",
        "Server time offset",
        "Last machine account password change"
       ]
      },
      "activedirectory_leave": {
       "type": "object",
       "properties": {
        "username": {
         "_name_": "username",
         "title": "username",
         "type": "string"
        },
        "password": {
         "_name_": "password",
         "title": "password",
         "type": "string"
        }
       },
       "additionalProperties": false,
       "_name_": "kerberos_username_password",
       "title": "kerberos_username_password",
       "default": {},
       "_attrs_order_": [
        "username",
        "password"
       ]
      },
      "return_schema_of_activedirectory_nss_info_choices": {
       "_name_": "nss_info_ad",
       "title": "nss_info_ad",
       "default": "SFU",
       "type": "string",
       "enum": [
        "SFU",
        "SFU20",
        "RFC2307",
        "TEMPLATE"
       ]
      },
      "alert_dismiss": {
       "title": "uuid",
       "type": "string",
       "_name_": "uuid"
      },
      "return_schema_of_alert_dismiss": {
       "title": "result",
       "type": "null",
       "_name_": "result"
      },
      "return_schema_of_alert_list": {
       "items": {
        "additionalProperties": false,
        "properties": {
         "uuid": {
          "title": "uuid",
          "type": "string",
          "_name_": "uuid",
          "_required_": true
         },
         "source": {
          "title": "source",
          "type": "string",
          "_name_": "source",
          "_required_": true
         },
         "klass": {
          "title": "klass",
          "type": "string",
          "_name_": "klass",
          "_required_": true
         },
         "args": {
          "title": "args",
          "_name_": "args",
          "_required_": true
         },
         "node": {
          "title": "node",
          "type": "string",
          "_name_": "node",
          "_required_": true
         },
         "key": {
          "title": "key",
          "type": "string",
          "_name_": "key",
          "_required_": true
         },
         "datetime": {
          "format": "date-time",
          "title": "datetime",
          "type": "string",
          "_name_": "datetime",
          "_required_": true
         },
         "last_occurrence": {
          "format": "date-time",
          "title": "last_occurrence",
          "type": "string",
          "_name_": "last_occurrence",
          "_required_": true
         },
         "dismissed": {
          "title": "dismissed",
          "type": "boolean",
          "_name_": "dismissed",
          "_required_": true
         },
         "mail": {
          "title": "mail",
          "_name_": "mail",
          "_required_": true
         },
         "text": {
          "title": "text",
          "type": "string",
          "_name_": "text",
          "_required_": true
         },
         "id": {
          "title": "id",
          "type": "string",
          "_name_": "id",
          "_required_": true
         },
         "level": {
          "title": "level",
          "type": "string",
          "_name_": "level",
          "_required_": true
         },
         "formatted": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "null"
           }
          ],
          "title": "formatted",
          "_name_": "formatted",
          "_required_": true
         },
         "one_shot": {
          "title": "one_shot",
          "type": "boolean",
          "_name_": "one_shot",
          "_required_": true
         }
        },
        "required": [
         "uuid",
         "source",
         "klass",
         "args",
         "node",
         "key",
         "datetime",
         "last_occurrence",
         "dismissed",
         "mail",
         "text",
         "id",
         "level",
         "formatted",
         "one_shot"
        ],
        "title": "Alert",
        "type": "object",
        "_attrs_order_": [
         "uuid",
         "source",
         "klass",
         "args",
         "node",
         "key",
         "datetime",
         "last_occurrence",
         "dismissed",
         "mail",
         "text",
         "id",
         "level",
         "formatted",
         "one_shot"
        ]
       },
       "title": "result",
       "type": "array",
       "_name_": "result"
      },
      "return_schema_of_alert_list_categories": {
       "items": {
        "additionalProperties": false,
        "properties": {
         "id": {
          "title": "id",
          "type": "string",
          "_name_": "id",
          "_required_": true
         },
         "title": {
          "title": "title",
          "type": "string",
          "_name_": "title",
          "_required_": true
         },
         "classes": {
          "items": [
           {}
          ],
          "title": "classes",
          "type": "array",
          "_name_": "classes",
          "_required_": true
         }
        },
        "required": [
         "id",
         "title",
         "classes"
        ],
        "title": "AlertCategory",
        "type": "object",
        "_attrs_order_": [
         "id",
         "title",
         "classes"
        ]
       },
       "title": "result",
       "type": "array",
       "_name_": "result"
      },
      "return_schema_of_alert_list_policies": {
       "items": {
        "type": "string"
       },
       "title": "result",
       "type": "array",
       "_name_": "result"
      },
      "alert_restore": {
       "title": "uuid",
       "type": "string",
       "_name_": "uuid"
      },
      "return_schema_of_alert_restore": {
       "title": "result",
       "type": "null",
       "_name_": "result"
      },
      "return_schema_of_alertclasses_config": {
       "additionalProperties": false,
       "properties": {
        "id": {
         "title": "id",
         "type": "integer",
         "_name_": "id"
        },
        "classes": {
         "title": "classes",
         "type": "object",
         "_name_": "classes"
        }
       },
       "required": [
        "id",
        "classes"
       ],
       "title": "result",
       "type": "object",
       "_name_": "result",
       "_attrs_order_": [
        "id",
        "classes"
       ]
      },
      "alertclasses_update": {
       "additionalProperties": false,
       "properties": {
        "classes": {
         "title": "classes",
         "type": "object",
         "_name_": "classes"
        }
       },
       "title": "data",
       "type": "object",
       "_name_": "data",
       "_attrs_order_": [
        "classes"
       ]
      },
      "return_schema_of_alertclasses_update": {
       "additionalProperties": false,
       "properties": {
        "id": {
         "title": "id",
         "type": "integer",
         "_name_": "id"
        },
        "classes": {
         "title": "classes",
         "type": "object",
         "_name_": "classes"
        }
       },
       "required": [
        "id",
        "classes"
       ],
       "title": "result",
       "type": "object",
       "_name_": "result",
       "_attrs_order_": [
        "id",
        "classes"
       ]
      },
      "return_schema_of_alertservice_query": {
       "anyOf": [
        {
         "items": [
          {
           "additionalProperties": false,
           "properties": {
            "name": {
             "minLength": 1,
             "title": "name",
             "type": "string",
             "_name_": "name",
             "_required_": false
            },
            "type": {
             "title": "type",
             "type": "string",
             "_name_": "type",
             "_required_": false
            },
            "attributes": {
             "title": "attributes",
             "type": "object",
             "_name_": "attributes",
             "_required_": false
            },
            "level": {
             "title": "level",
             "type": "string",
             "_name_": "level",
             "_required_": false
            },
            "enabled": {
             "title": "enabled",
             "type": "boolean",
             "_name_": "enabled",
             "_required_": false
            },
            "id": {
             "title": "id",
             "type": "integer",
             "_name_": "id",
             "_required_": false
            },
            "type__title": {
             "title": "type__title",
             "type": "string",
             "_name_": "type__title",
             "_required_": false
            }
           },
           "title": "AlertServiceQueryResultItem",
           "type": "object",
           "_attrs_order_": [
            "name",
            "type",
            "attributes",
            "level",
            "enabled",
            "id",
            "type__title"
           ]
          }
         ],
         "type": "array"
        },
        {
         "additionalProperties": false,
         "properties": {
          "name": {
           "minLength": 1,
           "title": "name",
           "type": "string",
           "_name_": "name",
           "_required_": false
          },
          "type": {
           "title": "type",
           "type": "string",
           "_name_": "type",
           "_required_": false
          },
          "attributes": {
           "title": "attributes",
           "type": "object",
           "_name_": "attributes",
           "_required_": false
          },
          "level": {
           "title": "level",
           "type": "string",
           "_name_": "level",
           "_required_": false
          },
          "enabled": {
           "title": "enabled",
           "type": "boolean",
           "_name_": "enabled",
           "_required_": false
          },
          "id": {
           "title": "id",
           "type": "integer",
           "_name_": "id",
           "_required_": false
          },
          "type__title": {
           "title": "type__title",
           "type": "string",
           "_name_": "type__title",
           "_required_": false
          }
         },
         "title": "AlertServiceQueryResultItem",
         "type": "object",
         "_attrs_order_": [
          "name",
          "type",
          "attributes",
          "level",
          "enabled",
          "id",
          "type__title"
         ]
        },
        {
         "type": "integer"
        }
       ],
       "title": "result",
       "_name_": "result"
      },
      "alertservice_create": {
       "additionalProperties": false,
       "properties": {
        "name": {
         "minLength": 1,
         "title": "name",
         "type": "string",
         "_name_": "name"
        },
        "type": {
         "title": "type",
         "type": "string",
         "_name_": "type"
        },
        "attributes": {
         "title": "attributes",
         "type": "object",
         "_name_": "attributes"
        },
        "level": {
         "title": "level",
         "type": "string",
         "_name_": "level"
        },
        "enabled": {
         "default": true,
         "title": "enabled",
         "type": "boolean",
         "_name_": "enabled"
        }
       },
       "required": [
        "name",
        "type",
        "attributes",
        "level"
       ],
       "title": "alert_service_create",
       "type": "object",
       "_name_": "alert_service_create",
       "_attrs_order_": [
        "name",
        "type",
        "attributes",
        "level",
        "enabled"
       ]
      },
      "return_schema_of_alertservice_create": {
       "additionalProperties": false,
       "properties": {
        "name": {
         "minLength": 1,
         "title": "name",
         "type": "string",
         "_name_": "name"
        },
        "type": {
         "title": "type",
         "type": "string",
         "_name_": "type"
        },
        "attributes": {
         "title": "attributes",
         "type": "object",
         "_name_": "attributes"
        },
        "level": {
         "title": "level",
         "type": "string",
         "_name_": "level"
        },
        "enabled": {
         "default": true,
         "title": "enabled",
         "type": "boolean",
         "_name_": "enabled"
        },
        "id": {
         "title": "id",
         "type": "integer",
         "_name_": "id"
        },
        "type__title": {
         "title": "type__title",
         "type": "string",
         "_name_": "type__title"
        }
       },
       "required": [
        "name",
        "type",
        "attributes",
        "level",
        "id",
        "type__title"
       ],
       "title": "result",
       "type": "object",
       "_name_": "result",
       "_attrs_order_": [
        "name",
        "type",
        "attributes",
        "level",
        "enabled",
        "id",
        "type__title"
       ]
      },
      "return_schema_of_alertservice_delete": {
       "title": "result",
       "type": "boolean",
       "_name_": "result"
      },
      "alertservice_update": {
       "additionalProperties": false,
       "properties": {
        "name": {
         "minLength": 1,
         "title": "name",
         "type": "string",
         "_name_": "name"
        },
        "type": {
         "title": "type",
         "type": "string",
         "_name_": "type"
        },
        "attributes": {
         "title": "attributes",
         "type": "object",
         "_name_": "attributes"
        },
        "level": {
         "title": "level",
         "type": "string",
         "_name_": "level"
        },
        "enabled": {
         "default": true,
         "title": "enabled",
         "type": "boolean",
         "_name_": "enabled"
        }
       },
       "required": [
        "name",
        "type",
        "attributes",
        "level"
       ],
       "title": "alert_service_update",
       "type": "object",
       "_name_": "alert_service_update",
       "_attrs_order_": [
        "name",
        "type",
        "attributes",
        "level",
        "enabled"
       ]
      },
      "return_schema_of_alertservice_update": {
       "additionalProperties": false,
       "properties": {
        "name": {
         "minLength": 1,
         "title": "name",
         "type": "string",
         "_name_": "name"
        },
        "type": {
         "title": "type",
         "type": "string",
         "_name_": "type"
        },
        "attributes": {
         "title": "attributes",
         "type": "object",
         "_name_": "attributes"
        },
        "level": {
         "title": "level",
         "type": "string",
         "_name_": "level"
        },
        "enabled": {
         "default": true,
         "title": "enabled",
         "type": "boolean",
         "_name_": "enabled"
        },
        "id": {
         "title": "id",
         "type": "integer",
         "_name_": "id"
        },
        "type__title": {
         "title": "type__title",
         "type": "string",
         "_name_": "type__title"
        }
       },
       "required": [
        "name",
        "type",
        "attributes",
        "level",
        "id",
        "type__title"
       ],
       "title": "result",
       "type": "object",
       "_name_": "result",
       "_attrs_order_": [
        "name",
        "type",
        "attributes",
        "level",
        "enabled",
        "id",
        "type__title"
       ]
      },
      "alertservice_get_instance_0": {
       "title": "id",
       "type": "integer",
       "_name_": "id"
      },
      "alertservice_get_instance_1": {
       "additionalProperties": false,
       "properties": {
        "relationships": {
         "default": true,
         "title": "relationships",
         "type": "boolean",
         "_name_": "relationships"
        },
        "extend": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "extend",
         "_name_": "extend"
        },
        "extend_context": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "extend_context",
         "_name_": "extend_context"
        },
        "prefix": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "prefix",
         "_name_": "prefix"
        },
        "extra": {
         "default": {},
         "title": "extra",
         "type": "object",
         "_name_": "extra"
        },
        "order_by": {
         "default": [],
         "items": {
          "type": "string"
         },
         "title": "order_by",
         "type": "array",
         "_name_": "order_by"
        },
        "select": {
         "default": [],
         "items": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "items": [
             {}
            ],
            "type": "array"
           }
          ]
         },
         "title": "select",
         "type": "array",
         "_name_": "select"
        },
        "count": {
         "default": false,
         "title": "count",
         "type": "boolean",
         "_name_": "count"
        },
        "get": {
         "default": false,
         "title": "get",
         "type": "boolean",
         "_name_": "get"
        },
        "offset": {
         "default": 0,
         "title": "offset",
         "type": "integer",
         "_name_": "offset"
        },
        "limit": {
         "default": 0,
         "title": "limit",
         "type": "integer",
         "_name_": "limit"
        },
        "force_sql_filters": {
         "default": false,
         "title": "force_sql_filters",
         "type": "boolean",
         "_name_": "force_sql_filters"
        }
       },
       "title": "options",
       "type": "object",
       "default": {},
       "_name_": "options",
       "_attrs_order_": [
        "relationships",
        "extend",
        "extend_context",
        "prefix",
        "extra",
        "order_by",
        "select",
        "count",
        "get",
        "offset",
        "limit",
        "force_sql_filters"
       ]
      },
      "alertservice_get_instance": {
       "type": "object",
       "properties": {
        "id": {
         "$ref": "#/components/schemas/alertservice_get_instance_0"
        },
        "options": {
         "$ref": "#/components/schemas/alertservice_get_instance_1"
        }
       }
      },
      "return_schema_of_alertservice_get_instance": {
       "additionalProperties": false,
       "properties": {
        "name": {
         "minLength": 1,
         "title": "name",
         "type": "string",
         "_name_": "name"
        },
        "type": {
         "title": "type",
         "type": "string",
         "_name_": "type"
        },
        "attributes": {
         "title": "attributes",
         "type": "object",
         "_name_": "attributes"
        },
        "level": {
         "title": "level",
         "type": "string",
         "_name_": "level"
        },
        "enabled": {
         "default": true,
         "title": "enabled",
         "type": "boolean",
         "_name_": "enabled"
        },
        "id": {
         "title": "id",
         "type": "integer",
         "_name_": "id"
        },
        "type__title": {
         "title": "type__title",
         "type": "string",
         "_name_": "type__title"
        }
       },
       "required": [
        "name",
        "type",
        "attributes",
        "level",
        "id",
        "type__title"
       ],
       "title": "result",
       "type": "object",
       "_name_": "result",
       "_attrs_order_": [
        "name",
        "type",
        "attributes",
        "level",
        "enabled",
        "id",
        "type__title"
       ]
      },
      "alertservice_test": {
       "additionalProperties": false,
       "properties": {
        "name": {
         "minLength": 1,
         "title": "name",
         "type": "string",
         "_name_": "name"
        },
        "type": {
         "title": "type",
         "type": "string",
         "_name_": "type"
        },
        "attributes": {
         "title": "attributes",
         "type": "object",
         "_name_": "attributes"
        },
        "level": {
         "title": "level",
         "type": "string",
         "_name_": "level"
        },
        "enabled": {
         "default": true,
         "title": "enabled",
         "type": "boolean",
         "_name_": "enabled"
        }
       },
       "required": [
        "name",
        "type",
        "attributes",
        "level"
       ],
       "title": "alert_service_create",
       "type": "object",
       "_name_": "alert_service_create",
       "_attrs_order_": [
        "name",
        "type",
        "attributes",
        "level",
        "enabled"
       ]
      },
      "return_schema_of_alertservice_test": {
       "title": "result",
       "type": "boolean",
       "_name_": "result"
      },
      "return_schema_of_api_key_query": {
       "anyOf": [
        {
         "items": [
          {
           "additionalProperties": false,
           "properties": {
            "id": {
             "title": "id",
             "type": "integer",
             "_name_": "id",
             "_required_": false
            },
            "name": {
             "maxLength": 200,
             "minLength": 1,
             "title": "name",
             "type": "string",
             "_name_": "name",
             "_required_": false
            },
            "username": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "minLength": 1,
               "type": "string"
              }
             ],
             "title": "username",
             "_name_": "username",
             "_required_": false
            },
            "user_identifier": {
             "anyOf": [
              {
               "type": "integer"
              },
              {
               "type": "string"
              }
             ],
             "title": "user_identifier",
             "_name_": "user_identifier",
             "_required_": false
            },
            "keyhash": {
             "title": "keyhash",
             "type": "string",
             "_name_": "keyhash",
             "_required_": false
            },
            "created_at": {
             "format": "date-time",
             "title": "created_at",
             "type": "string",
             "_name_": "created_at",
             "_required_": false
            },
            "expires_at": {
             "anyOf": [
              {
               "format": "date-time",
               "type": "string"
              },
              {
               "type": "null"
              }
             ],
             "title": "expires_at",
             "_name_": "expires_at",
             "_required_": false
            },
            "local": {
             "title": "local",
             "type": "boolean",
             "_name_": "local",
             "_required_": false
            },
            "revoked": {
             "title": "revoked",
             "type": "boolean",
             "_name_": "revoked",
             "_required_": false
            }
           },
           "title": "ApiKeyQueryResultItem",
           "type": "object",
           "_attrs_order_": [
            "id",
            "name",
            "username",
            "user_identifier",
            "keyhash",
            "created_at",
            "expires_at",
            "local",
            "revoked"
           ]
          }
         ],
         "type": "array"
        },
        {
         "additionalProperties": false,
         "properties": {
          "id": {
           "title": "id",
           "type": "integer",
           "_name_": "id",
           "_required_": false
          },
          "name": {
           "maxLength": 200,
           "minLength": 1,
           "title": "name",
           "type": "string",
           "_name_": "name",
           "_required_": false
          },
          "username": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "minLength": 1,
             "type": "string"
            }
           ],
           "title": "username",
           "_name_": "username",
           "_required_": false
          },
          "user_identifier": {
           "anyOf": [
            {
             "type": "integer"
            },
            {
             "type": "string"
            }
           ],
           "title": "user_identifier",
           "_name_": "user_identifier",
           "_required_": false
          },
          "keyhash": {
           "title": "keyhash",
           "type": "string",
           "_name_": "keyhash",
           "_required_": false
          },
          "created_at": {
           "format": "date-time",
           "title": "created_at",
           "type": "string",
           "_name_": "created_at",
           "_required_": false
          },
          "expires_at": {
           "anyOf": [
            {
             "format": "date-time",
             "type": "string"
            },
            {
             "type": "null"
            }
           ],
           "title": "expires_at",
           "_name_": "expires_at",
           "_required_": false
          },
          "local": {
           "title": "local",
           "type": "boolean",
           "_name_": "local",
           "_required_": false
          },
          "revoked": {
           "title": "revoked",
           "type": "boolean",
           "_name_": "revoked",
           "_required_": false
          }
         },
         "title": "ApiKeyQueryResultItem",
         "type": "object",
         "_attrs_order_": [
          "id",
          "name",
          "username",
          "user_identifier",
          "keyhash",
          "created_at",
          "expires_at",
          "local",
          "revoked"
         ]
        },
        {
         "type": "integer"
        }
       ],
       "title": "result",
       "_name_": "result"
      },
      "api_key_create": {
       "additionalProperties": false,
       "properties": {
        "name": {
         "maxLength": 200,
         "minLength": 1,
         "title": "name",
         "type": "string",
         "_name_": "name"
        },
        "username": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "minLength": 1,
           "type": "string"
          }
         ],
         "title": "username",
         "_name_": "username"
        },
        "expires_at": {
         "anyOf": [
          {
           "format": "date-time",
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "expires_at",
         "_name_": "expires_at"
        }
       },
       "required": [
        "name",
        "username"
       ],
       "title": "api_key_create",
       "type": "object",
       "_name_": "api_key_create",
       "_attrs_order_": [
        "name",
        "username",
        "expires_at"
       ]
      },
      "return_schema_of_api_key_create": {
       "additionalProperties": false,
       "properties": {
        "id": {
         "title": "id",
         "type": "integer",
         "_name_": "id"
        },
        "name": {
         "maxLength": 200,
         "minLength": 1,
         "title": "name",
         "type": "string",
         "_name_": "name"
        },
        "username": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "minLength": 1,
           "type": "string"
          }
         ],
         "title": "username",
         "_name_": "username"
        },
        "user_identifier": {
         "anyOf": [
          {
           "type": "integer"
          },
          {
           "type": "string"
          }
         ],
         "title": "user_identifier",
         "_name_": "user_identifier"
        },
        "keyhash": {
         "title": "keyhash",
         "type": "string",
         "_name_": "keyhash"
        },
        "created_at": {
         "format": "date-time",
         "title": "created_at",
         "type": "string",
         "_name_": "created_at"
        },
        "expires_at": {
         "anyOf": [
          {
           "format": "date-time",
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "expires_at",
         "_name_": "expires_at"
        },
        "local": {
         "title": "local",
         "type": "boolean",
         "_name_": "local"
        },
        "revoked": {
         "title": "revoked",
         "type": "boolean",
         "_name_": "revoked"
        },
        "key": {
         "title": "key",
         "type": "string",
         "_name_": "key"
        }
       },
       "required": [
        "id",
        "name",
        "username",
        "user_identifier",
        "keyhash",
        "created_at",
        "local",
        "revoked",
        "key"
       ],
       "title": "result",
       "type": "object",
       "_name_": "result",
       "_attrs_order_": [
        "id",
        "name",
        "username",
        "user_identifier",
        "keyhash",
        "created_at",
        "expires_at",
        "local",
        "revoked",
        "key"
       ]
      },
      "return_schema_of_api_key_delete": {
       "const": true,
       "enum": [
        true
       ],
       "title": "result",
       "type": "boolean",
       "_name_": "result"
      },
      "api_key_update": {
       "additionalProperties": false,
       "properties": {
        "name": {
         "maxLength": 200,
         "minLength": 1,
         "title": "name",
         "type": "string",
         "_name_": "name"
        },
        "expires_at": {
         "anyOf": [
          {
           "format": "date-time",
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "title": "expires_at",
         "_name_": "expires_at"
        },
        "reset": {
         "title": "reset",
         "type": "boolean",
         "_name_": "reset"
        }
       },
       "title": "api_key_update",
       "type": "object",
       "_name_": "api_key_update",
       "_attrs_order_": [
        "name",
        "expires_at",
        "reset"
       ]
      },
      "return_schema_of_api_key_update": {
       "anyOf": [
        {
         "additionalProperties": false,
         "properties": {
          "id": {
           "title": "id",
           "type": "integer",
           "_name_": "id",
           "_required_": true
          },
          "name": {
           "maxLength": 200,
           "minLength": 1,
           "title": "name",
           "type": "string",
           "_name_": "name",
           "_required_": true
          },
          "username": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "minLength": 1,
             "type": "string"
            }
           ],
           "title": "username",
           "_name_": "username",
           "_required_": true
          },
          "user_identifier": {
           "anyOf": [
            {
             "type": "integer"
            },
            {
             "type": "string"
            }
           ],
           "title": "user_identifier",
           "_name_": "user_identifier",
           "_required_": true
          },
          "keyhash": {
           "title": "keyhash",
           "type": "string",
           "_name_": "keyhash",
           "_required_": true
          },
          "created_at": {
           "format": "date-time",
           "title": "created_at",
           "type": "string",
           "_name_": "created_at",
           "_required_": true
          },
          "expires_at": {
           "anyOf": [
            {
             "format": "date-time",
             "type": "string"
            },
            {
             "type": "null"
            }
           ],
           "default": null,
           "title": "expires_at",
           "_name_": "expires_at",
           "_required_": false
          },
          "local": {
           "title": "local",
           "type": "boolean",
           "_name_": "local",
           "_required_": true
          },
          "revoked": {
           "title": "revoked",
           "type": "boolean",
           "_name_": "revoked",
           "_required_": true
          },
          "key": {
           "title": "key",
           "type": "string",
           "_name_": "key",
           "_required_": true
          }
         },
         "required": [
          "id",
          "name",
          "username",
          "user_identifier",
          "keyhash",
          "created_at",
          "local",
          "revoked",
          "key"
         ],
         "title": "ApiKeyEntryWithKey",
         "type": "object",
         "_attrs_order_": [
          "id",
          "name",
          "username",
          "user_identifier",
          "keyhash",
          "created_at",
          "expires_at",
          "local",
          "revoked",
          "key"
         ]
        },
        {
         "additionalProperties": false,
         "properties": {
          "id": {
           "title": "id",
           "type": "integer",
           "_name_": "id",
           "_required_": true
          },
          "name": {
           "maxLength": 200,
           "minLength": 1,
           "title": "name",
           "type": "string",
           "_name_": "name",
           "_required_": true
          },
          "username": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "minLength": 1,
             "type": "string"
            }
           ],
           "title": "username",
           "_name_": "username",
           "_required_": true
          },
          "user_identifier": {
           "anyOf": [
            {
             "type": "integer"
            },
            {
             "type": "string"
            }
           ],
           "title": "user_identifier",
           "_name_": "user_identifier",
           "_required_": true
          },
          "keyhash": {
           "title": "keyhash",
           "type": "string",
           "_name_": "keyhash",
           "_required_": true
          },
          "created_at": {
           "format": "date-time",
           "title": "created_at",
           "type": "string",
           "_name_": "created_at",
           "_required_": true
          },
          "expires_at": {
           "anyOf": [
            {
             "format": "date-time",
             "type": "string"
            },
            {
             "type": "null"
            }
           ],
           "default": null,
           "title": "expires_at",
           "_name_": "expires_at",
           "_required_": false
          },
          "local": {
           "title": "local",
           "type": "boolean",
           "_name_": "local",
           "_required_": true
          },
          "revoked": {
           "title": "revoked",
           "type": "boolean",
           "_name_": "revoked",
           "_required_": true
          }
         },
         "required": [
          "id",
          "name",
          "username",
          "user_identifier",
          "keyhash",
          "created_at",
          "local",
          "revoked"
         ],
         "title": "ApiKeyEntry",
         "type": "object",
         "_attrs_order_": [
          "id",
          "name",
          "username",
          "user_identifier",
          "keyhash",
          "created_at",
          "expires_at",
          "local",
          "revoked"
         ]
        }
       ],
       "title": "result",
       "_name_": "result"
      },
      "api_key_get_instance_0": {
       "title": "id",
       "type": "integer",
       "_name_": "id"
      },
      "api_key_get_instance_1": {
       "additionalProperties": false,
       "properties": {
        "relationships": {
         "default": true,
         "title": "relationships",
         "type": "boolean",
         "_name_": "relationships"
        },
        "extend": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "extend",
         "_name_": "extend"
        },
        "extend_context": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "extend_context",
         "_name_": "extend_context"
        },
        "prefix": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "prefix",
         "_name_": "prefix"
        },
        "extra": {
         "default": {},
         "title": "extra",
         "type": "object",
         "_name_": "extra"
        },
        "order_by": {
         "default": [],
         "items": {
          "type": "string"
         },
         "title": "order_by",
         "type": "array",
         "_name_": "order_by"
        },
        "select": {
         "default": [],
         "items": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "items": [
             {}
            ],
            "type": "array"
           }
          ]
         },
         "title": "select",
         "type": "array",
         "_name_": "select"
        },
        "count": {
         "default": false,
         "title": "count",
         "type": "boolean",
         "_name_": "count"
        },
        "get": {
         "default": false,
         "title": "get",
         "type": "boolean",
         "_name_": "get"
        },
        "offset": {
         "default": 0,
         "title": "offset",
         "type": "integer",
         "_name_": "offset"
        },
        "limit": {
         "default": 0,
         "title": "limit",
         "type": "integer",
         "_name_": "limit"
        },
        "force_sql_filters": {
         "default": false,
         "title": "force_sql_filters",
         "type": "boolean",
         "_name_": "force_sql_filters"
        }
       },
       "title": "options",
       "type": "object",
       "default": {},
       "_name_": "options",
       "_attrs_order_": [
        "relationships",
        "extend",
        "extend_context",
        "prefix",
        "extra",
        "order_by",
        "select",
        "count",
        "get",
        "offset",
        "limit",
        "force_sql_filters"
       ]
      },
      "api_key_get_instance": {
       "type": "object",
       "properties": {
        "id": {
         "$ref": "#/components/schemas/api_key_get_instance_0"
        },
        "options": {
         "$ref": "#/components/schemas/api_key_get_instance_1"
        }
       }
      },
      "return_schema_of_api_key_get_instance": {
       "additionalProperties": false,
       "properties": {
        "id": {
         "title": "id",
         "type": "integer",
         "_name_": "id"
        },
        "name": {
         "maxLength": 200,
         "minLength": 1,
         "title": "name",
         "type": "string",
         "_name_": "name"
        },
        "username": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "minLength": 1,
           "type": "string"
          }
         ],
         "title": "username",
         "_name_": "username"
        },
        "user_identifier": {
         "anyOf": [
          {
           "type": "integer"
          },
          {
           "type": "string"
          }
         ],
         "title": "user_identifier",
         "_name_": "user_identifier"
        },
        "keyhash": {
         "title": "keyhash",
         "type": "string",
         "_name_": "keyhash"
        },
        "created_at": {
         "format": "date-time",
         "title": "created_at",
         "type": "string",
         "_name_": "created_at"
        },
        "expires_at": {
         "anyOf": [
          {
           "format": "date-time",
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "expires_at",
         "_name_": "expires_at"
        },
        "local": {
         "title": "local",
         "type": "boolean",
         "_name_": "local"
        },
        "revoked": {
         "title": "revoked",
         "type": "boolean",
         "_name_": "revoked"
        }
       },
       "required": [
        "id",
        "name",
        "username",
        "user_identifier",
        "keyhash",
        "created_at",
        "local",
        "revoked"
       ],
       "title": "result",
       "type": "object",
       "_name_": "result",
       "_attrs_order_": [
        "id",
        "name",
        "username",
        "user_identifier",
        "keyhash",
        "created_at",
        "expires_at",
        "local",
        "revoked"
       ]
      },
      "return_schema_of_app_query": {
       "anyOf": [
        {
         "items": [
          {
           "additionalProperties": false,
           "properties": {
            "name": {
             "minLength": 1,
             "title": "name",
             "type": "string",
             "_name_": "name",
             "_required_": false
            },
            "id": {
             "minLength": 1,
             "title": "id",
             "type": "string",
             "_name_": "id",
             "_required_": false
            },
            "state": {
             "enum": [
              "CRASHED",
              "DEPLOYING",
              "RUNNING",
              "STOPPED",
              "STOPPING"
             ],
             "title": "state",
             "type": "string",
             "_name_": "state",
             "_required_": false
            },
            "upgrade_available": {
             "title": "upgrade_available",
             "type": "boolean",
             "_name_": "upgrade_available",
             "_required_": false
            },
            "latest_version": {
             "anyOf": [
              {
               "minLength": 1,
               "type": "string"
              },
              {
               "type": "null"
              }
             ],
             "title": "latest_version",
             "_name_": "latest_version",
             "_required_": false
            },
            "image_updates_available": {
             "title": "image_updates_available",
             "type": "boolean",
             "_name_": "image_updates_available",
             "_required_": false
            },
            "custom_app": {
             "title": "custom_app",
             "type": "boolean",
             "_name_": "custom_app",
             "_required_": false
            },
            "migrated": {
             "title": "migrated",
             "type": "boolean",
             "_name_": "migrated",
             "_required_": false
            },
            "human_version": {
             "minLength": 1,
             "title": "human_version",
             "type": "string",
             "_name_": "human_version",
             "_required_": false
            },
            "version": {
             "minLength": 1,
             "title": "version",
             "type": "string",
             "_name_": "version",
             "_required_": false
            },
            "metadata": {
             "title": "metadata",
             "type": "object",
             "_name_": "metadata",
             "_required_": false
            },
            "active_workloads": {
             "title": "active_workloads",
             "_name_": "active_workloads",
             "_required_": false
            },
            "notes": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "null"
              }
             ],
             "title": "notes",
             "_name_": "notes",
             "_required_": false
            },
            "portals": {
             "title": "portals",
             "type": "object",
             "_name_": "portals",
             "_required_": false
            },
            "version_details": {
             "anyOf": [
              {
               "type": "object"
              },
              {
               "type": "null"
              }
             ],
             "title": "version_details",
             "_name_": "version_details",
             "_required_": false
            },
            "config": {
             "anyOf": [
              {
               "type": "object"
              },
              {
               "type": "null"
              }
             ],
             "title": "config",
             "_name_": "config",
             "_required_": false
            }
           },
           "title": "AppQueryResultItem",
           "type": "object",
           "_attrs_order_": [
            "name",
            "id",
            "state",
            "upgrade_available",
            "latest_version",
            "image_updates_available",
            "custom_app",
            "migrated",
            "human_version",
            "version",
            "metadata",
            "active_workloads",
            "notes",
            "portals",
            "version_details",
            "config"
           ]
          }
         ],
         "type": "array"
        },
        {
         "additionalProperties": false,
         "properties": {
          "name": {
           "minLength": 1,
           "title": "name",
           "type": "string",
           "_name_": "name",
           "_required_": false
          },
          "id": {
           "minLength": 1,
           "title": "id",
           "type": "string",
           "_name_": "id",
           "_required_": false
          },
          "state": {
           "enum": [
            "CRASHED",
            "DEPLOYING",
            "RUNNING",
            "STOPPED",
            "STOPPING"
           ],
           "title": "state",
           "type": "string",
           "_name_": "state",
           "_required_": false
          },
          "upgrade_available": {
           "title": "upgrade_available",
           "type": "boolean",
           "_name_": "upgrade_available",
           "_required_": false
          },
          "latest_version": {
           "anyOf": [
            {
             "minLength": 1,
             "type": "string"
            },
            {
             "type": "null"
            }
           ],
           "title": "latest_version",
           "_name_": "latest_version",
           "_required_": false
          },
          "image_updates_available": {
           "title": "image_updates_available",
           "type": "boolean",
           "_name_": "image_updates_available",
           "_required_": false
          },
          "custom_app": {
           "title": "custom_app",
           "type": "boolean",
           "_name_": "custom_app",
           "_required_": false
          },
          "migrated": {
           "title": "migrated",
           "type": "boolean",
           "_name_": "migrated",
           "_required_": false
          },
          "human_version": {
           "minLength": 1,
           "title": "human_version",
           "type": "string",
           "_name_": "human_version",
           "_required_": false
          },
          "version": {
           "minLength": 1,
           "title": "version",
           "type": "string",
           "_name_": "version",
           "_required_": false
          },
          "metadata": {
           "title": "metadata",
           "type": "object",
           "_name_": "metadata",
           "_required_": false
          },
          "active_workloads": {
           "title": "active_workloads",
           "_name_": "active_workloads",
           "_required_": false
          },
          "notes": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "null"
            }
           ],
           "title": "notes",
           "_name_": "notes",
           "_required_": false
          },
          "portals": {
           "title": "portals",
           "type": "object",
           "_name_": "portals",
           "_required_": false
          },
          "version_details": {
           "anyOf": [
            {
             "type": "object"
            },
            {
             "type": "null"
            }
           ],
           "title": "version_details",
           "_name_": "version_details",
           "_required_": false
          },
          "config": {
           "anyOf": [
            {
             "type": "object"
            },
            {
             "type": "null"
            }
           ],
           "title": "config",
           "_name_": "config",
           "_required_": false
          }
         },
         "title": "AppQueryResultItem",
         "type": "object",
         "_attrs_order_": [
          "name",
          "id",
          "state",
          "upgrade_available",
          "latest_version",
          "image_updates_available",
          "custom_app",
          "migrated",
          "human_version",
          "version",
          "metadata",
          "active_workloads",
          "notes",
          "portals",
          "version_details",
          "config"
         ]
        },
        {
         "type": "integer"
        }
       ],
       "title": "result",
       "_name_": "result"
      },
      "app_create": {
       "additionalProperties": false,
       "properties": {
        "custom_app": {
         "default": false,
         "title": "custom_app",
         "type": "boolean",
         "_name_": "custom_app"
        },
        "values": {
         "title": "values",
         "type": "object",
         "_name_": "values"
        },
        "custom_compose_config": {
         "title": "custom_compose_config",
         "type": "object",
         "_name_": "custom_compose_config"
        },
        "custom_compose_config_string": {
         "default": "",
         "title": "custom_compose_config_string",
         "type": "string",
         "_name_": "custom_compose_config_string"
        },
        "catalog_app": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "catalog_app",
         "_name_": "catalog_app"
        },
        "app_name": {
         "description": "Application name must have the following:\n1) Lowercase alphanumeric characters can be specified\n2) Name must start with an alphabetic character and can end with alphanumeric character\n3) Hyphen '-' is allowed but not as the first or last character\ne.g abc123, abc, abcd-1232",
         "maxLength": 40,
         "minLength": 1,
         "pattern": "^[a-z]([-a-z0-9]*[a-z0-9])?$",
         "title": "app_name",
         "type": "string",
         "_name_": "app_name"
        },
        "train": {
         "default": "stable",
         "minLength": 1,
         "title": "train",
         "type": "string",
         "_name_": "train"
        },
        "version": {
         "default": "latest",
         "minLength": 1,
         "title": "version",
         "type": "string",
         "_name_": "version"
        }
       },
       "required": [
        "app_name"
       ],
       "title": "app_create",
       "type": "object",
       "_name_": "app_create",
       "_attrs_order_": [
        "custom_app",
        "values",
        "custom_compose_config",
        "custom_compose_config_string",
        "catalog_app",
        "app_name",
        "train",
        "version"
       ]
      },
      "return_schema_of_app_create": {
       "additionalProperties": false,
       "properties": {
        "name": {
         "minLength": 1,
         "title": "name",
         "type": "string",
         "_name_": "name"
        },
        "id": {
         "minLength": 1,
         "title": "id",
         "type": "string",
         "_name_": "id"
        },
        "state": {
         "enum": [
          "CRASHED",
          "DEPLOYING",
          "RUNNING",
          "STOPPED",
          "STOPPING"
         ],
         "title": "state",
         "type": "string",
         "_name_": "state"
        },
        "upgrade_available": {
         "title": "upgrade_available",
         "type": "boolean",
         "_name_": "upgrade_available"
        },
        "latest_version": {
         "anyOf": [
          {
           "minLength": 1,
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "title": "latest_version",
         "_name_": "latest_version"
        },
        "image_updates_available": {
         "title": "image_updates_available",
         "type": "boolean",
         "_name_": "image_updates_available"
        },
        "custom_app": {
         "title": "custom_app",
         "type": "boolean",
         "_name_": "custom_app"
        },
        "migrated": {
         "title": "migrated",
         "type": "boolean",
         "_name_": "migrated"
        },
        "human_version": {
         "minLength": 1,
         "title": "human_version",
         "type": "string",
         "_name_": "human_version"
        },
        "version": {
         "minLength": 1,
         "title": "version",
         "type": "string",
         "_name_": "version"
        },
        "metadata": {
         "title": "metadata",
         "type": "object",
         "_name_": "metadata"
        },
        "active_workloads": {
         "title": "active_workloads",
         "_name_": "active_workloads"
        },
        "notes": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "title": "notes",
         "_name_": "notes"
        },
        "portals": {
         "title": "portals",
         "type": "object",
         "_name_": "portals"
        },
        "version_details": {
         "anyOf": [
          {
           "type": "object"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "version_details",
         "_name_": "version_details"
        },
        "config": {
         "anyOf": [
          {
           "type": "object"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "config",
         "_name_": "config"
        }
       },
       "required": [
        "name",
        "id",
        "state",
        "upgrade_available",
        "latest_version",
        "image_updates_available",
        "custom_app",
        "migrated",
        "human_version",
        "version",
        "metadata",
        "active_workloads",
        "notes",
        "portals"
       ],
       "title": "result",
       "type": "object",
       "_name_": "result",
       "_attrs_order_": [
        "name",
        "id",
        "state",
        "upgrade_available",
        "latest_version",
        "image_updates_available",
        "custom_app",
        "migrated",
        "human_version",
        "version",
        "metadata",
        "active_workloads",
        "notes",
        "portals",
        "version_details",
        "config"
       ]
      },
      "app_delete": {
       "additionalProperties": false,
       "properties": {
        "remove_images": {
         "default": true,
         "title": "remove_images",
         "type": "boolean",
         "_name_": "remove_images"
        },
        "remove_ix_volumes": {
         "default": false,
         "title": "remove_ix_volumes",
         "type": "boolean",
         "_name_": "remove_ix_volumes"
        },
        "force_remove_ix_volumes": {
         "default": false,
         "title": "force_remove_ix_volumes",
         "type": "boolean",
         "_name_": "force_remove_ix_volumes"
        },
        "force_remove_custom_app": {
         "default": false,
         "title": "force_remove_custom_app",
         "type": "boolean",
         "_name_": "force_remove_custom_app"
        }
       },
       "title": "options",
       "type": "object",
       "default": {
        "remove_images": true,
        "remove_ix_volumes": false,
        "force_remove_ix_volumes": false,
        "force_remove_custom_app": false
       },
       "_name_": "options",
       "_attrs_order_": [
        "remove_images",
        "remove_ix_volumes",
        "force_remove_ix_volumes",
        "force_remove_custom_app"
       ]
      },
      "return_schema_of_app_delete": {
       "const": true,
       "enum": [
        true
       ],
       "title": "result",
       "type": "boolean",
       "_name_": "result"
      },
      "app_update": {
       "additionalProperties": false,
       "properties": {
        "values": {
         "title": "values",
         "type": "object",
         "_name_": "values"
        },
        "custom_compose_config": {
         "title": "custom_compose_config",
         "type": "object",
         "_name_": "custom_compose_config"
        },
        "custom_compose_config_string": {
         "default": "",
         "title": "custom_compose_config_string",
         "type": "string",
         "_name_": "custom_compose_config_string"
        }
       },
       "title": "update",
       "type": "object",
       "default": {
        "values": "{}",
        "custom_compose_config": "{}",
        "custom_compose_config_string": ""
       },
       "_name_": "update",
       "_attrs_order_": [
        "values",
        "custom_compose_config",
        "custom_compose_config_string"
       ]
      },
      "return_schema_of_app_update": {
       "additionalProperties": false,
       "properties": {
        "name": {
         "minLength": 1,
         "title": "name",
         "type": "string",
         "_name_": "name"
        },
        "id": {
         "minLength": 1,
         "title": "id",
         "type": "string",
         "_name_": "id"
        },
        "state": {
         "enum": [
          "CRASHED",
          "DEPLOYING",
          "RUNNING",
          "STOPPED",
          "STOPPING"
         ],
         "title": "state",
         "type": "string",
         "_name_": "state"
        },
        "upgrade_available": {
         "title": "upgrade_available",
         "type": "boolean",
         "_name_": "upgrade_available"
        },
        "latest_version": {
         "anyOf": [
          {
           "minLength": 1,
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "title": "latest_version",
         "_name_": "latest_version"
        },
        "image_updates_available": {
         "title": "image_updates_available",
         "type": "boolean",
         "_name_": "image_updates_available"
        },
        "custom_app": {
         "title": "custom_app",
         "type": "boolean",
         "_name_": "custom_app"
        },
        "migrated": {
         "title": "migrated",
         "type": "boolean",
         "_name_": "migrated"
        },
        "human_version": {
         "minLength": 1,
         "title": "human_version",
         "type": "string",
         "_name_": "human_version"
        },
        "version": {
         "minLength": 1,
         "title": "version",
         "type": "string",
         "_name_": "version"
        },
        "metadata": {
         "title": "metadata",
         "type": "object",
         "_name_": "metadata"
        },
        "active_workloads": {
         "title": "active_workloads",
         "_name_": "active_workloads"
        },
        "notes": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "title": "notes",
         "_name_": "notes"
        },
        "portals": {
         "title": "portals",
         "type": "object",
         "_name_": "portals"
        },
        "version_details": {
         "anyOf": [
          {
           "type": "object"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "version_details",
         "_name_": "version_details"
        },
        "config": {
         "anyOf": [
          {
           "type": "object"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "config",
         "_name_": "config"
        }
       },
       "required": [
        "name",
        "id",
        "state",
        "upgrade_available",
        "latest_version",
        "image_updates_available",
        "custom_app",
        "migrated",
        "human_version",
        "version",
        "metadata",
        "active_workloads",
        "notes",
        "portals"
       ],
       "title": "result",
       "type": "object",
       "_name_": "result",
       "_attrs_order_": [
        "name",
        "id",
        "state",
        "upgrade_available",
        "latest_version",
        "image_updates_available",
        "custom_app",
        "migrated",
        "human_version",
        "version",
        "metadata",
        "active_workloads",
        "notes",
        "portals",
        "version_details",
        "config"
       ]
      },
      "return_schema_of_app_available": {
       "anyOf": [
        {
         "items": [
          {
           "additionalProperties": true,
           "properties": {
            "app_readme": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "null"
              }
             ],
             "description": "HTML content of the app README.",
             "title": "app_readme",
             "_name_": "app_readme",
             "_required_": false
            },
            "categories": {
             "description": "List of categories for the app.",
             "items": [
              {
               "type": "string"
              }
             ],
             "title": "categories",
             "type": "array",
             "_name_": "categories",
             "_required_": false
            },
            "description": {
             "description": "Short description of the app.",
             "title": "description",
             "type": "string",
             "_name_": "description",
             "_required_": false
            },
            "healthy": {
             "description": "Health status of the app.",
             "title": "healthy",
             "type": "boolean",
             "_name_": "healthy",
             "_required_": false
            },
            "healthy_error": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "null"
              }
             ],
             "description": "Error if app is not healthy.",
             "title": "healthy_error",
             "_name_": "healthy_error",
             "_required_": false
            },
            "home": {
             "description": "Homepage URL of the app.",
             "title": "home",
             "type": "string",
             "_name_": "home",
             "_required_": false
            },
            "location": {
             "description": "Local path to the app's location.",
             "title": "location",
             "type": "string",
             "_name_": "location",
             "_required_": false
            },
            "latest_version": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "null"
              }
             ],
             "description": "Latest available app version.",
             "title": "latest_version",
             "_name_": "latest_version",
             "_required_": false
            },
            "latest_app_version": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "null"
              }
             ],
             "description": "Latest available app version in repository.",
             "title": "latest_app_version",
             "_name_": "latest_app_version",
             "_required_": false
            },
            "latest_human_version": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "null"
              }
             ],
             "description": "Human-readable version of the app.",
             "title": "latest_human_version",
             "_name_": "latest_human_version",
             "_required_": false
            },
            "last_update": {
             "anyOf": [
              {
               "format": "date-time",
               "type": "string"
              },
              {
               "type": "null"
              }
             ],
             "description": "Timestamp of the last update in ISO format.",
             "title": "last_update",
             "_name_": "last_update",
             "_required_": false
            },
            "name": {
             "description": "Name of the app.",
             "title": "name",
             "type": "string",
             "_name_": "name",
             "_required_": false
            },
            "recommended": {
             "description": "Indicates if the app is recommended.",
             "title": "recommended",
             "type": "boolean",
             "_name_": "recommended",
             "_required_": false
            },
            "title": {
             "description": "Title of the app.",
             "title": "title",
             "type": "string",
             "_name_": "title",
             "_required_": false
            },
            "maintainers": {
             "description": "List of app maintainers.",
             "items": [
              {}
             ],
             "title": "maintainers",
             "type": "array",
             "_name_": "maintainers",
             "_required_": false
            },
            "tags": {
             "description": "Tags associated with the app.",
             "items": [
              {
               "type": "string"
              }
             ],
             "title": "tags",
             "type": "array",
             "_name_": "tags",
             "_required_": false
            },
            "screenshots": {
             "description": "List of screenshot URLs.",
             "items": [
              {
               "type": "string"
              }
             ],
             "title": "screenshots",
             "type": "array",
             "_name_": "screenshots",
             "_required_": false
            },
            "sources": {
             "description": "List of source URLs.",
             "items": [
              {
               "type": "string"
              }
             ],
             "title": "sources",
             "type": "array",
             "_name_": "sources",
             "_required_": false
            },
            "icon_url": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "null"
              }
             ],
             "description": "URL of the app icon",
             "title": "icon_url",
             "_name_": "icon_url",
             "_required_": false
            },
            "catalog": {
             "minLength": 1,
             "title": "catalog",
             "type": "string",
             "_name_": "catalog",
             "_required_": false
            },
            "installed": {
             "title": "installed",
             "type": "boolean",
             "_name_": "installed",
             "_required_": false
            },
            "train": {
             "minLength": 1,
             "title": "train",
             "type": "string",
             "_name_": "train",
             "_required_": false
            }
           },
           "title": "AppAvailableResponseQueryResultItem",
           "type": "object",
           "_attrs_order_": [
            "app_readme",
            "categories",
            "description",
            "healthy",
            "healthy_error",
            "home",
            "location",
            "latest_version",
            "latest_app_version",
            "latest_human_version",
            "last_update",
            "name",
            "recommended",
            "title",
            "maintainers",
            "tags",
            "screenshots",
            "sources",
            "icon_url",
            "catalog",
            "installed",
            "train"
           ]
          }
         ],
         "type": "array"
        },
        {
         "additionalProperties": true,
         "properties": {
          "app_readme": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "null"
            }
           ],
           "description": "HTML content of the app README.",
           "title": "app_readme",
           "_name_": "app_readme",
           "_required_": false
          },
          "categories": {
           "description": "List of categories for the app.",
           "items": [
            {
             "type": "string"
            }
           ],
           "title": "categories",
           "type": "array",
           "_name_": "categories",
           "_required_": false
          },
          "description": {
           "description": "Short description of the app.",
           "title": "description",
           "type": "string",
           "_name_": "description",
           "_required_": false
          },
          "healthy": {
           "description": "Health status of the app.",
           "title": "healthy",
           "type": "boolean",
           "_name_": "healthy",
           "_required_": false
          },
          "healthy_error": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "null"
            }
           ],
           "description": "Error if app is not healthy.",
           "title": "healthy_error",
           "_name_": "healthy_error",
           "_required_": false
          },
          "home": {
           "description": "Homepage URL of the app.",
           "title": "home",
           "type": "string",
           "_name_": "home",
           "_required_": false
          },
          "location": {
           "description": "Local path to the app's location.",
           "title": "location",
           "type": "string",
           "_name_": "location",
           "_required_": false
          },
          "latest_version": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "null"
            }
           ],
           "description": "Latest available app version.",
           "title": "latest_version",
           "_name_": "latest_version",
           "_required_": false
          },
          "latest_app_version": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "null"
            }
           ],
           "description": "Latest available app version in repository.",
           "title": "latest_app_version",
           "_name_": "latest_app_version",
           "_required_": false
          },
          "latest_human_version": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "null"
            }
           ],
           "description": "Human-readable version of the app.",
           "title": "latest_human_version",
           "_name_": "latest_human_version",
           "_required_": false
          },
          "last_update": {
           "anyOf": [
            {
             "format": "date-time",
             "type": "string"
            },
            {
             "type": "null"
            }
           ],
           "description": "Timestamp of the last update in ISO format.",
           "title": "last_update",
           "_name_": "last_update",
           "_required_": false
          },
          "name": {
           "description": "Name of the app.",
           "title": "name",
           "type": "string",
           "_name_": "name",
           "_required_": false
          },
          "recommended": {
           "description": "Indicates if the app is recommended.",
           "title": "recommended",
           "type": "boolean",
           "_name_": "recommended",
           "_required_": false
          },
          "title": {
           "description": "Title of the app.",
           "title": "title",
           "type": "string",
           "_name_": "title",
           "_required_": false
          },
          "maintainers": {
           "description": "List of app maintainers.",
           "items": [
            {}
           ],
           "title": "maintainers",
           "type": "array",
           "_name_": "maintainers",
           "_required_": false
          },
          "tags": {
           "description": "Tags associated with the app.",
           "items": [
            {
             "type": "string"
            }
           ],
           "title": "tags",
           "type": "array",
           "_name_": "tags",
           "_required_": false
          },
          "screenshots": {
           "description": "List of screenshot URLs.",
           "items": [
            {
             "type": "string"
            }
           ],
           "title": "screenshots",
           "type": "array",
           "_name_": "screenshots",
           "_required_": false
          },
          "sources": {
           "description": "List of source URLs.",
           "items": [
            {
             "type": "string"
            }
           ],
           "title": "sources",
           "type": "array",
           "_name_": "sources",
           "_required_": false
          },
          "icon_url": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "null"
            }
           ],
           "description": "URL of the app icon",
           "title": "icon_url",
           "_name_": "icon_url",
           "_required_": false
          },
          "catalog": {
           "minLength": 1,
           "title": "catalog",
           "type": "string",
           "_name_": "catalog",
           "_required_": false
          },
          "installed": {
           "title": "installed",
           "type": "boolean",
           "_name_": "installed",
           "_required_": false
          },
          "train": {
           "minLength": 1,
           "title": "train",
           "type": "string",
           "_name_": "train",
           "_required_": false
          }
         },
         "title": "AppAvailableResponseQueryResultItem",
         "type": "object",
         "_attrs_order_": [
          "app_readme",
          "categories",
          "description",
          "healthy",
          "healthy_error",
          "home",
          "location",
          "latest_version",
          "latest_app_version",
          "latest_human_version",
          "last_update",
          "name",
          "recommended",
          "title",
          "maintainers",
          "tags",
          "screenshots",
          "sources",
          "icon_url",
          "catalog",
          "installed",
          "train"
         ]
        },
        {
         "type": "integer"
        }
       ],
       "title": "result",
       "_name_": "result"
      },
      "return_schema_of_app_available_space": {
       "title": "result",
       "type": "integer",
       "_name_": "result"
      },
      "return_schema_of_app_categories": {
       "items": {
        "minLength": 1,
        "type": "string"
       },
       "title": "result",
       "type": "array",
       "_name_": "result"
      },
      "return_schema_of_app_certificate_authority_choices": {
       "items": {
        "additionalProperties": false,
        "properties": {
         "id": {
          "title": "id",
          "type": "integer",
          "_name_": "id",
          "_required_": true
         },
         "name": {
          "minLength": 1,
          "title": "name",
          "type": "string",
          "_name_": "name",
          "_required_": true
         }
        },
        "required": [
         "id",
         "name"
        ],
        "title": "AppCertificate",
        "type": "object",
        "_attrs_order_": [
         "id",
         "name"
        ]
       },
       "title": "result",
       "type": "array",
       "_name_": "result"
      },
      "return_schema_of_app_certificate_choices": {
       "items": {
        "additionalProperties": false,
        "properties": {
         "id": {
          "title": "id",
          "type": "integer",
          "_name_": "id",
          "_required_": true
         },
         "name": {
          "minLength": 1,
          "title": "name",
          "type": "string",
          "_name_": "name",
          "_required_": true
         }
        },
        "required": [
         "id",
         "name"
        ],
        "title": "AppCertificate",
        "type": "object",
        "_attrs_order_": [
         "id",
         "name"
        ]
       },
       "title": "result",
       "type": "array",
       "_name_": "result"
      },
      "app_config": {
       "minLength": 1,
       "title": "app_name",
       "type": "string",
       "_name_": "app_name"
      },
      "return_schema_of_app_config": {
       "title": "result",
       "type": "object",
       "_name_": "result"
      },
      "app_container_console_choices": {
       "minLength": 1,
       "title": "app_name",
       "type": "string",
       "_name_": "app_name"
      },
      "return_schema_of_app_container_console_choices": {
       "additionalProperties": {},
       "title": "result",
       "type": "object",
       "_name_": "result"
      },
      "app_container_ids_0": {
       "minLength": 1,
       "title": "app_name",
       "type": "string",
       "_name_": "app_name"
      },
      "app_container_ids_1": {
       "additionalProperties": false,
       "properties": {
        "alive_only": {
         "default": true,
         "title": "alive_only",
         "type": "boolean",
         "_name_": "alive_only"
        }
       },
       "title": "options",
       "type": "object",
       "default": {
        "alive_only": true
       },
       "_name_": "options",
       "_attrs_order_": [
        "alive_only"
       ]
      },
      "app_container_ids": {
       "type": "object",
       "properties": {
        "app_name": {
         "$ref": "#/components/schemas/app_container_ids_0"
        },
        "options": {
         "$ref": "#/components/schemas/app_container_ids_1"
        }
       }
      },
      "return_schema_of_app_container_ids": {
       "additionalProperties": {},
       "title": "result",
       "type": "object",
       "_name_": "result"
      },
      "app_convert_to_custom": {
       "minLength": 1,
       "title": "app_name",
       "type": "string",
       "_name_": "app_name"
      },
      "return_schema_of_app_convert_to_custom": {
       "additionalProperties": false,
       "properties": {
        "name": {
         "minLength": 1,
         "title": "name",
         "type": "string",
         "_name_": "name"
        },
        "id": {
         "minLength": 1,
         "title": "id",
         "type": "string",
         "_name_": "id"
        },
        "state": {
         "enum": [
          "CRASHED",
          "DEPLOYING",
          "RUNNING",
          "STOPPED",
          "STOPPING"
         ],
         "title": "state",
         "type": "string",
         "_name_": "state"
        },
        "upgrade_available": {
         "title": "upgrade_available",
         "type": "boolean",
         "_name_": "upgrade_available"
        },
        "latest_version": {
         "anyOf": [
          {
           "minLength": 1,
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "title": "latest_version",
         "_name_": "latest_version"
        },
        "image_updates_available": {
         "title": "image_updates_available",
         "type": "boolean",
         "_name_": "image_updates_available"
        },
        "custom_app": {
         "title": "custom_app",
         "type": "boolean",
         "_name_": "custom_app"
        },
        "migrated": {
         "title": "migrated",
         "type": "boolean",
         "_name_": "migrated"
        },
        "human_version": {
         "minLength": 1,
         "title": "human_version",
         "type": "string",
         "_name_": "human_version"
        },
        "version": {
         "minLength": 1,
         "title": "version",
         "type": "string",
         "_name_": "version"
        },
        "metadata": {
         "title": "metadata",
         "type": "object",
         "_name_": "metadata"
        },
        "active_workloads": {
         "title": "active_workloads",
         "_name_": "active_workloads"
        },
        "notes": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "title": "notes",
         "_name_": "notes"
        },
        "portals": {
         "title": "portals",
         "type": "object",
         "_name_": "portals"
        },
        "version_details": {
         "anyOf": [
          {
           "type": "object"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "version_details",
         "_name_": "version_details"
        },
        "config": {
         "anyOf": [
          {
           "type": "object"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "config",
         "_name_": "config"
        }
       },
       "required": [
        "name",
        "id",
        "state",
        "upgrade_available",
        "latest_version",
        "image_updates_available",
        "custom_app",
        "migrated",
        "human_version",
        "version",
        "metadata",
        "active_workloads",
        "notes",
        "portals"
       ],
       "title": "result",
       "type": "object",
       "_name_": "result",
       "_attrs_order_": [
        "name",
        "id",
        "state",
        "upgrade_available",
        "latest_version",
        "image_updates_available",
        "custom_app",
        "migrated",
        "human_version",
        "version",
        "metadata",
        "active_workloads",
        "notes",
        "portals",
        "version_details",
        "config"
       ]
      },
      "app_get_instance_0": {
       "title": "id",
       "type": "string",
       "_name_": "id"
      },
      "app_get_instance_1": {
       "additionalProperties": false,
       "properties": {
        "relationships": {
         "default": true,
         "title": "relationships",
         "type": "boolean",
         "_name_": "relationships"
        },
        "extend": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "extend",
         "_name_": "extend"
        },
        "extend_context": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "extend_context",
         "_name_": "extend_context"
        },
        "prefix": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "prefix",
         "_name_": "prefix"
        },
        "extra": {
         "default": {},
         "title": "extra",
         "type": "object",
         "_name_": "extra"
        },
        "order_by": {
         "default": [],
         "items": {
          "type": "string"
         },
         "title": "order_by",
         "type": "array",
         "_name_": "order_by"
        },
        "select": {
         "default": [],
         "items": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "items": [
             {}
            ],
            "type": "array"
           }
          ]
         },
         "title": "select",
         "type": "array",
         "_name_": "select"
        },
        "count": {
         "default": false,
         "title": "count",
         "type": "boolean",
         "_name_": "count"
        },
        "get": {
         "default": false,
         "title": "get",
         "type": "boolean",
         "_name_": "get"
        },
        "offset": {
         "default": 0,
         "title": "offset",
         "type": "integer",
         "_name_": "offset"
        },
        "limit": {
         "default": 0,
         "title": "limit",
         "type": "integer",
         "_name_": "limit"
        },
        "force_sql_filters": {
         "default": false,
         "title": "force_sql_filters",
         "type": "boolean",
         "_name_": "force_sql_filters"
        }
       },
       "title": "options",
       "type": "object",
       "default": {},
       "_name_": "options",
       "_attrs_order_": [
        "relationships",
        "extend",
        "extend_context",
        "prefix",
        "extra",
        "order_by",
        "select",
        "count",
        "get",
        "offset",
        "limit",
        "force_sql_filters"
       ]
      },
      "app_get_instance": {
       "type": "object",
       "properties": {
        "id": {
         "$ref": "#/components/schemas/app_get_instance_0"
        },
        "options": {
         "$ref": "#/components/schemas/app_get_instance_1"
        }
       }
      },
      "return_schema_of_app_get_instance": {
       "additionalProperties": false,
       "properties": {
        "name": {
         "minLength": 1,
         "title": "name",
         "type": "string",
         "_name_": "name"
        },
        "id": {
         "minLength": 1,
         "title": "id",
         "type": "string",
         "_name_": "id"
        },
        "state": {
         "enum": [
          "CRASHED",
          "DEPLOYING",
          "RUNNING",
          "STOPPED",
          "STOPPING"
         ],
         "title": "state",
         "type": "string",
         "_name_": "state"
        },
        "upgrade_available": {
         "title": "upgrade_available",
         "type": "boolean",
         "_name_": "upgrade_available"
        },
        "latest_version": {
         "anyOf": [
          {
           "minLength": 1,
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "title": "latest_version",
         "_name_": "latest_version"
        },
        "image_updates_available": {
         "title": "image_updates_available",
         "type": "boolean",
         "_name_": "image_updates_available"
        },
        "custom_app": {
         "title": "custom_app",
         "type": "boolean",
         "_name_": "custom_app"
        },
        "migrated": {
         "title": "migrated",
         "type": "boolean",
         "_name_": "migrated"
        },
        "human_version": {
         "minLength": 1,
         "title": "human_version",
         "type": "string",
         "_name_": "human_version"
        },
        "version": {
         "minLength": 1,
         "title": "version",
         "type": "string",
         "_name_": "version"
        },
        "metadata": {
         "title": "metadata",
         "type": "object",
         "_name_": "metadata"
        },
        "active_workloads": {
         "title": "active_workloads",
         "_name_": "active_workloads"
        },
        "notes": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "title": "notes",
         "_name_": "notes"
        },
        "portals": {
         "title": "portals",
         "type": "object",
         "_name_": "portals"
        },
        "version_details": {
         "anyOf": [
          {
           "type": "object"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "version_details",
         "_name_": "version_details"
        },
        "config": {
         "anyOf": [
          {
           "type": "object"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "config",
         "_name_": "config"
        }
       },
       "required": [
        "name",
        "id",
        "state",
        "upgrade_available",
        "latest_version",
        "image_updates_available",
        "custom_app",
        "migrated",
        "human_version",
        "version",
        "metadata",
        "active_workloads",
        "notes",
        "portals"
       ],
       "title": "result",
       "type": "object",
       "_name_": "result",
       "_attrs_order_": [
        "name",
        "id",
        "state",
        "upgrade_available",
        "latest_version",
        "image_updates_available",
        "custom_app",
        "migrated",
        "human_version",
        "version",
        "metadata",
        "active_workloads",
        "notes",
        "portals",
        "version_details",
        "config"
       ]
      },
      "return_schema_of_app_gpu_choices": {
       "additionalProperties": {},
       "title": "result",
       "type": "object",
       "_name_": "result"
      },
      "return_schema_of_app_ip_choices": {
       "additionalProperties": {
        "minLength": 1,
        "type": "string"
       },
       "title": "result",
       "type": "object",
       "_name_": "result"
      },
      "return_schema_of_app_latest": {
       "anyOf": [
        {
         "items": [
          {
           "additionalProperties": true,
           "properties": {
            "app_readme": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "null"
              }
             ],
             "description": "HTML content of the app README.",
             "title": "app_readme",
             "_name_": "app_readme",
             "_required_": false
            },
            "categories": {
             "description": "List of categories for the app.",
             "items": [
              {
               "type": "string"
              }
             ],
             "title": "categories",
             "type": "array",
             "_name_": "categories",
             "_required_": false
            },
            "description": {
             "description": "Short description of the app.",
             "title": "description",
             "type": "string",
             "_name_": "description",
             "_required_": false
            },
            "healthy": {
             "description": "Health status of the app.",
             "title": "healthy",
             "type": "boolean",
             "_name_": "healthy",
             "_required_": false
            },
            "healthy_error": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "null"
              }
             ],
             "description": "Error if app is not healthy.",
             "title": "healthy_error",
             "_name_": "healthy_error",
             "_required_": false
            },
            "home": {
             "description": "Homepage URL of the app.",
             "title": "home",
             "type": "string",
             "_name_": "home",
             "_required_": false
            },
            "location": {
             "description": "Local path to the app's location.",
             "title": "location",
             "type": "string",
             "_name_": "location",
             "_required_": false
            },
            "latest_version": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "null"
              }
             ],
             "description": "Latest available app version.",
             "title": "latest_version",
             "_name_": "latest_version",
             "_required_": false
            },
            "latest_app_version": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "null"
              }
             ],
             "description": "Latest available app version in repository.",
             "title": "latest_app_version",
             "_name_": "latest_app_version",
             "_required_": false
            },
            "latest_human_version": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "null"
              }
             ],
             "description": "Human-readable version of the app.",
             "title": "latest_human_version",
             "_name_": "latest_human_version",
             "_required_": false
            },
            "last_update": {
             "anyOf": [
              {
               "format": "date-time",
               "type": "string"
              },
              {
               "type": "null"
              }
             ],
             "description": "Timestamp of the last update in ISO format.",
             "title": "last_update",
             "_name_": "last_update",
             "_required_": false
            },
            "name": {
             "description": "Name of the app.",
             "title": "name",
             "type": "string",
             "_name_": "name",
             "_required_": false
            },
            "recommended": {
             "description": "Indicates if the app is recommended.",
             "title": "recommended",
             "type": "boolean",
             "_name_": "recommended",
             "_required_": false
            },
            "title": {
             "description": "Title of the app.",
             "title": "title",
             "type": "string",
             "_name_": "title",
             "_required_": false
            },
            "maintainers": {
             "description": "List of app maintainers.",
             "items": [
              {}
             ],
             "title": "maintainers",
             "type": "array",
             "_name_": "maintainers",
             "_required_": false
            },
            "tags": {
             "description": "Tags associated with the app.",
             "items": [
              {
               "type": "string"
              }
             ],
             "title": "tags",
             "type": "array",
             "_name_": "tags",
             "_required_": false
            },
            "screenshots": {
             "description": "List of screenshot URLs.",
             "items": [
              {
               "type": "string"
              }
             ],
             "title": "screenshots",
             "type": "array",
             "_name_": "screenshots",
             "_required_": false
            },
            "sources": {
             "description": "List of source URLs.",
             "items": [
              {
               "type": "string"
              }
             ],
             "title": "sources",
             "type": "array",
             "_name_": "sources",
             "_required_": false
            },
            "icon_url": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "null"
              }
             ],
             "description": "URL of the app icon",
             "title": "icon_url",
             "_name_": "icon_url",
             "_required_": false
            },
            "catalog": {
             "minLength": 1,
             "title": "catalog",
             "type": "string",
             "_name_": "catalog",
             "_required_": false
            },
            "installed": {
             "title": "installed",
             "type": "boolean",
             "_name_": "installed",
             "_required_": false
            },
            "train": {
             "minLength": 1,
             "title": "train",
             "type": "string",
             "_name_": "train",
             "_required_": false
            }
           },
           "title": "AppAvailableResponseQueryResultItem",
           "type": "object",
           "_attrs_order_": [
            "app_readme",
            "categories",
            "description",
            "healthy",
            "healthy_error",
            "home",
            "location",
            "latest_version",
            "latest_app_version",
            "latest_human_version",
            "last_update",
            "name",
            "recommended",
            "title",
            "maintainers",
            "tags",
            "screenshots",
            "sources",
            "icon_url",
            "catalog",
            "installed",
            "train"
           ]
          }
         ],
         "type": "array"
        },
        {
         "additionalProperties": true,
         "properties": {
          "app_readme": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "null"
            }
           ],
           "description": "HTML content of the app README.",
           "title": "app_readme",
           "_name_": "app_readme",
           "_required_": false
          },
          "categories": {
           "description": "List of categories for the app.",
           "items": [
            {
             "type": "string"
            }
           ],
           "title": "categories",
           "type": "array",
           "_name_": "categories",
           "_required_": false
          },
          "description": {
           "description": "Short description of the app.",
           "title": "description",
           "type": "string",
           "_name_": "description",
           "_required_": false
          },
          "healthy": {
           "description": "Health status of the app.",
           "title": "healthy",
           "type": "boolean",
           "_name_": "healthy",
           "_required_": false
          },
          "healthy_error": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "null"
            }
           ],
           "description": "Error if app is not healthy.",
           "title": "healthy_error",
           "_name_": "healthy_error",
           "_required_": false
          },
          "home": {
           "description": "Homepage URL of the app.",
           "title": "home",
           "type": "string",
           "_name_": "home",
           "_required_": false
          },
          "location": {
           "description": "Local path to the app's location.",
           "title": "location",
           "type": "string",
           "_name_": "location",
           "_required_": false
          },
          "latest_version": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "null"
            }
           ],
           "description": "Latest available app version.",
           "title": "latest_version",
           "_name_": "latest_version",
           "_required_": false
          },
          "latest_app_version": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "null"
            }
           ],
           "description": "Latest available app version in repository.",
           "title": "latest_app_version",
           "_name_": "latest_app_version",
           "_required_": false
          },
          "latest_human_version": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "null"
            }
           ],
           "description": "Human-readable version of the app.",
           "title": "latest_human_version",
           "_name_": "latest_human_version",
           "_required_": false
          },
          "last_update": {
           "anyOf": [
            {
             "format": "date-time",
             "type": "string"
            },
            {
             "type": "null"
            }
           ],
           "description": "Timestamp of the last update in ISO format.",
           "title": "last_update",
           "_name_": "last_update",
           "_required_": false
          },
          "name": {
           "description": "Name of the app.",
           "title": "name",
           "type": "string",
           "_name_": "name",
           "_required_": false
          },
          "recommended": {
           "description": "Indicates if the app is recommended.",
           "title": "recommended",
           "type": "boolean",
           "_name_": "recommended",
           "_required_": false
          },
          "title": {
           "description": "Title of the app.",
           "title": "title",
           "type": "string",
           "_name_": "title",
           "_required_": false
          },
          "maintainers": {
           "description": "List of app maintainers.",
           "items": [
            {}
           ],
           "title": "maintainers",
           "type": "array",
           "_name_": "maintainers",
           "_required_": false
          },
          "tags": {
           "description": "Tags associated with the app.",
           "items": [
            {
             "type": "string"
            }
           ],
           "title": "tags",
           "type": "array",
           "_name_": "tags",
           "_required_": false
          },
          "screenshots": {
           "description": "List of screenshot URLs.",
           "items": [
            {
             "type": "string"
            }
           ],
           "title": "screenshots",
           "type": "array",
           "_name_": "screenshots",
           "_required_": false
          },
          "sources": {
           "description": "List of source URLs.",
           "items": [
            {
             "type": "string"
            }
           ],
           "title": "sources",
           "type": "array",
           "_name_": "sources",
           "_required_": false
          },
          "icon_url": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "null"
            }
           ],
           "description": "URL of the app icon",
           "title": "icon_url",
           "_name_": "icon_url",
           "_required_": false
          },
          "catalog": {
           "minLength": 1,
           "title": "catalog",
           "type": "string",
           "_name_": "catalog",
           "_required_": false
          },
          "installed": {
           "title": "installed",
           "type": "boolean",
           "_name_": "installed",
           "_required_": false
          },
          "train": {
           "minLength": 1,
           "title": "train",
           "type": "string",
           "_name_": "train",
           "_required_": false
          }
         },
         "title": "AppAvailableResponseQueryResultItem",
         "type": "object",
         "_attrs_order_": [
          "app_readme",
          "categories",
          "description",
          "healthy",
          "healthy_error",
          "home",
          "location",
          "latest_version",
          "latest_app_version",
          "latest_human_version",
          "last_update",
          "name",
          "recommended",
          "title",
          "maintainers",
          "tags",
          "screenshots",
          "sources",
          "icon_url",
          "catalog",
          "installed",
          "train"
         ]
        },
        {
         "type": "integer"
        }
       ],
       "title": "result",
       "_name_": "result"
      },
      "app_outdated_docker_images": {
       "minLength": 1,
       "title": "app_name",
       "type": "string",
       "_name_": "app_name"
      },
      "return_schema_of_app_outdated_docker_images": {
       "items": {
        "minLength": 1,
        "type": "string"
       },
       "title": "result",
       "type": "array",
       "_name_": "result"
      },
      "app_pull_images_0": {
       "minLength": 1,
       "title": "app_name",
       "type": "string",
       "_name_": "app_name"
      },
      "app_pull_images_1": {
       "additionalProperties": false,
       "properties": {
        "redeploy": {
         "default": true,
         "title": "redeploy",
         "type": "boolean",
         "_name_": "redeploy"
        }
       },
       "title": "options",
       "type": "object",
       "default": {
        "redeploy": true
       },
       "_name_": "options",
       "_attrs_order_": [
        "redeploy"
       ]
      },
      "app_pull_images": {
       "type": "object",
       "properties": {
        "app_name": {
         "$ref": "#/components/schemas/app_pull_images_0"
        },
        "options": {
         "$ref": "#/components/schemas/app_pull_images_1"
        }
       }
      },
      "return_schema_of_app_pull_images": {
       "title": "result",
       "type": "null",
       "_name_": "result"
      },
      "app_redeploy": {
       "minLength": 1,
       "title": "app_name",
       "type": "string",
       "_name_": "app_name"
      },
      "return_schema_of_app_redeploy": {
       "additionalProperties": false,
       "properties": {
        "name": {
         "minLength": 1,
         "title": "name",
         "type": "string",
         "_name_": "name"
        },
        "id": {
         "minLength": 1,
         "title": "id",
         "type": "string",
         "_name_": "id"
        },
        "state": {
         "enum": [
          "CRASHED",
          "DEPLOYING",
          "RUNNING",
          "STOPPED",
          "STOPPING"
         ],
         "title": "state",
         "type": "string",
         "_name_": "state"
        },
        "upgrade_available": {
         "title": "upgrade_available",
         "type": "boolean",
         "_name_": "upgrade_available"
        },
        "latest_version": {
         "anyOf": [
          {
           "minLength": 1,
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "title": "latest_version",
         "_name_": "latest_version"
        },
        "image_updates_available": {
         "title": "image_updates_available",
         "type": "boolean",
         "_name_": "image_updates_available"
        },
        "custom_app": {
         "title": "custom_app",
         "type": "boolean",
         "_name_": "custom_app"
        },
        "migrated": {
         "title": "migrated",
         "type": "boolean",
         "_name_": "migrated"
        },
        "human_version": {
         "minLength": 1,
         "title": "human_version",
         "type": "string",
         "_name_": "human_version"
        },
        "version": {
         "minLength": 1,
         "title": "version",
         "type": "string",
         "_name_": "version"
        },
        "metadata": {
         "title": "metadata",
         "type": "object",
         "_name_": "metadata"
        },
        "active_workloads": {
         "title": "active_workloads",
         "_name_": "active_workloads"
        },
        "notes": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "title": "notes",
         "_name_": "notes"
        },
        "portals": {
         "title": "portals",
         "type": "object",
         "_name_": "portals"
        },
        "version_details": {
         "anyOf": [
          {
           "type": "object"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "version_details",
         "_name_": "version_details"
        },
        "config": {
         "anyOf": [
          {
           "type": "object"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "config",
         "_name_": "config"
        }
       },
       "required": [
        "name",
        "id",
        "state",
        "upgrade_available",
        "latest_version",
        "image_updates_available",
        "custom_app",
        "migrated",
        "human_version",
        "version",
        "metadata",
        "active_workloads",
        "notes",
        "portals"
       ],
       "title": "result",
       "type": "object",
       "_name_": "result",
       "_attrs_order_": [
        "name",
        "id",
        "state",
        "upgrade_available",
        "latest_version",
        "image_updates_available",
        "custom_app",
        "migrated",
        "human_version",
        "version",
        "metadata",
        "active_workloads",
        "notes",
        "portals",
        "version_details",
        "config"
       ]
      },
      "app_rollback_0": {
       "minLength": 1,
       "title": "app_name",
       "type": "string",
       "_name_": "app_name"
      },
      "app_rollback_1": {
       "additionalProperties": false,
       "properties": {
        "app_version": {
         "minLength": 1,
         "title": "app_version",
         "type": "string",
         "_name_": "app_version"
        },
        "rollback_snapshot": {
         "default": true,
         "title": "rollback_snapshot",
         "type": "boolean",
         "_name_": "rollback_snapshot"
        }
       },
       "required": [
        "app_version"
       ],
       "title": "options",
       "type": "object",
       "_name_": "options",
       "_attrs_order_": [
        "app_version",
        "rollback_snapshot"
       ]
      },
      "app_rollback": {
       "type": "object",
       "properties": {
        "app_name": {
         "$ref": "#/components/schemas/app_rollback_0"
        },
        "options": {
         "$ref": "#/components/schemas/app_rollback_1"
        }
       }
      },
      "return_schema_of_app_rollback": {
       "additionalProperties": false,
       "properties": {
        "name": {
         "minLength": 1,
         "title": "name",
         "type": "string",
         "_name_": "name"
        },
        "id": {
         "minLength": 1,
         "title": "id",
         "type": "string",
         "_name_": "id"
        },
        "state": {
         "enum": [
          "CRASHED",
          "DEPLOYING",
          "RUNNING",
          "STOPPED",
          "STOPPING"
         ],
         "title": "state",
         "type": "string",
         "_name_": "state"
        },
        "upgrade_available": {
         "title": "upgrade_available",
         "type": "boolean",
         "_name_": "upgrade_available"
        },
        "latest_version": {
         "anyOf": [
          {
           "minLength": 1,
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "title": "latest_version",
         "_name_": "latest_version"
        },
        "image_updates_available": {
         "title": "image_updates_available",
         "type": "boolean",
         "_name_": "image_updates_available"
        },
        "custom_app": {
         "title": "custom_app",
         "type": "boolean",
         "_name_": "custom_app"
        },
        "migrated": {
         "title": "migrated",
         "type": "boolean",
         "_name_": "migrated"
        },
        "human_version": {
         "minLength": 1,
         "title": "human_version",
         "type": "string",
         "_name_": "human_version"
        },
        "version": {
         "minLength": 1,
         "title": "version",
         "type": "string",
         "_name_": "version"
        },
        "metadata": {
         "title": "metadata",
         "type": "object",
         "_name_": "metadata"
        },
        "active_workloads": {
         "title": "active_workloads",
         "_name_": "active_workloads"
        },
        "notes": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "title": "notes",
         "_name_": "notes"
        },
        "portals": {
         "title": "portals",
         "type": "object",
         "_name_": "portals"
        },
        "version_details": {
         "anyOf": [
          {
           "type": "object"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "version_details",
         "_name_": "version_details"
        },
        "config": {
         "anyOf": [
          {
           "type": "object"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "config",
         "_name_": "config"
        }
       },
       "required": [
        "name",
        "id",
        "state",
        "upgrade_available",
        "latest_version",
        "image_updates_available",
        "custom_app",
        "migrated",
        "human_version",
        "version",
        "metadata",
        "active_workloads",
        "notes",
        "portals"
       ],
       "title": "result",
       "type": "object",
       "_name_": "result",
       "_attrs_order_": [
        "name",
        "id",
        "state",
        "upgrade_available",
        "latest_version",
        "image_updates_available",
        "custom_app",
        "migrated",
        "human_version",
        "version",
        "metadata",
        "active_workloads",
        "notes",
        "portals",
        "version_details",
        "config"
       ]
      },
      "app_rollback_versions": {
       "minLength": 1,
       "title": "app_name",
       "type": "string",
       "_name_": "app_name"
      },
      "return_schema_of_app_rollback_versions": {
       "items": {
        "minLength": 1,
        "type": "string"
       },
       "title": "result",
       "type": "array",
       "_name_": "result"
      },
      "app_similar_0": {
       "minLength": 1,
       "title": "app_name",
       "type": "string",
       "_name_": "app_name"
      },
      "app_similar_1": {
       "minLength": 1,
       "title": "train",
       "type": "string",
       "_name_": "train"
      },
      "app_similar": {
       "type": "object",
       "properties": {
        "app_name": {
         "$ref": "#/components/schemas/app_similar_0"
        },
        "train": {
         "$ref": "#/components/schemas/app_similar_1"
        }
       }
      },
      "return_schema_of_app_similar": {
       "items": {
        "additionalProperties": true,
        "properties": {
         "app_readme": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "null"
           }
          ],
          "description": "HTML content of the app README.",
          "title": "app_readme",
          "_name_": "app_readme",
          "_required_": true
         },
         "categories": {
          "description": "List of categories for the app.",
          "items": [
           {
            "type": "string"
           }
          ],
          "title": "categories",
          "type": "array",
          "_name_": "categories",
          "_required_": true
         },
         "description": {
          "description": "Short description of the app.",
          "title": "description",
          "type": "string",
          "_name_": "description",
          "_required_": true
         },
         "healthy": {
          "description": "Health status of the app.",
          "title": "healthy",
          "type": "boolean",
          "_name_": "healthy",
          "_required_": true
         },
         "healthy_error": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "null"
           }
          ],
          "default": null,
          "description": "Error if app is not healthy.",
          "title": "healthy_error",
          "_name_": "healthy_error",
          "_required_": false
         },
         "home": {
          "description": "Homepage URL of the app.",
          "title": "home",
          "type": "string",
          "_name_": "home",
          "_required_": true
         },
         "location": {
          "description": "Local path to the app's location.",
          "title": "location",
          "type": "string",
          "_name_": "location",
          "_required_": true
         },
         "latest_version": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "null"
           }
          ],
          "description": "Latest available app version.",
          "title": "latest_version",
          "_name_": "latest_version",
          "_required_": true
         },
         "latest_app_version": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "null"
           }
          ],
          "description": "Latest available app version in repository.",
          "title": "latest_app_version",
          "_name_": "latest_app_version",
          "_required_": true
         },
         "latest_human_version": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "null"
           }
          ],
          "description": "Human-readable version of the app.",
          "title": "latest_human_version",
          "_name_": "latest_human_version",
          "_required_": true
         },
         "last_update": {
          "anyOf": [
           {
            "format": "date-time",
            "type": "string"
           },
           {
            "type": "null"
           }
          ],
          "description": "Timestamp of the last update in ISO format.",
          "title": "last_update",
          "_name_": "last_update",
          "_required_": true
         },
         "name": {
          "description": "Name of the app.",
          "title": "name",
          "type": "string",
          "_name_": "name",
          "_required_": true
         },
         "recommended": {
          "description": "Indicates if the app is recommended.",
          "title": "recommended",
          "type": "boolean",
          "_name_": "recommended",
          "_required_": true
         },
         "title": {
          "description": "Title of the app.",
          "title": "title",
          "type": "string",
          "_name_": "title",
          "_required_": true
         },
         "maintainers": {
          "description": "List of app maintainers.",
          "items": [
           {}
          ],
          "title": "maintainers",
          "type": "array",
          "_name_": "maintainers",
          "_required_": true
         },
         "tags": {
          "description": "Tags associated with the app.",
          "items": [
           {
            "type": "string"
           }
          ],
          "title": "tags",
          "type": "array",
          "_name_": "tags",
          "_required_": true
         },
         "screenshots": {
          "description": "List of screenshot URLs.",
          "items": [
           {
            "type": "string"
           }
          ],
          "title": "screenshots",
          "type": "array",
          "_name_": "screenshots",
          "_required_": true
         },
         "sources": {
          "description": "List of source URLs.",
          "items": [
           {
            "type": "string"
           }
          ],
          "title": "sources",
          "type": "array",
          "_name_": "sources",
          "_required_": true
         },
         "icon_url": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "null"
           }
          ],
          "default": null,
          "description": "URL of the app icon",
          "title": "icon_url",
          "_name_": "icon_url",
          "_required_": false
         },
         "catalog": {
          "minLength": 1,
          "title": "catalog",
          "type": "string",
          "_name_": "catalog",
          "_required_": true
         },
         "installed": {
          "title": "installed",
          "type": "boolean",
          "_name_": "installed",
          "_required_": true
         },
         "train": {
          "minLength": 1,
          "title": "train",
          "type": "string",
          "_name_": "train",
          "_required_": true
         }
        },
        "required": [
         "app_readme",
         "categories",
         "description",
         "healthy",
         "home",
         "location",
         "latest_version",
         "latest_app_version",
         "latest_human_version",
         "last_update",
         "name",
         "recommended",
         "title",
         "maintainers",
         "tags",
         "screenshots",
         "sources",
         "catalog",
         "installed",
         "train"
        ],
        "title": "AppAvailableResponse",
        "type": "object",
        "_attrs_order_": [
         "app_readme",
         "categories",
         "description",
         "healthy",
         "healthy_error",
         "home",
         "location",
         "latest_version",
         "latest_app_version",
         "latest_human_version",
         "last_update",
         "name",
         "recommended",
         "title",
         "maintainers",
         "tags",
         "screenshots",
         "sources",
         "icon_url",
         "catalog",
         "installed",
         "train"
        ]
       },
       "title": "result",
       "type": "array",
       "_name_": "result"
      },
      "app_start": {
       "minLength": 1,
       "title": "app_name",
       "type": "string",
       "_name_": "app_name"
      },
      "return_schema_of_app_start": {
       "title": "result",
       "type": "null",
       "_name_": "result"
      },
      "app_stop": {
       "minLength": 1,
       "title": "app_name",
       "type": "string",
       "_name_": "app_name"
      },
      "return_schema_of_app_stop": {
       "title": "result",
       "type": "null",
       "_name_": "result"
      },
      "app_upgrade_0": {
       "minLength": 1,
       "title": "app_name",
       "type": "string",
       "_name_": "app_name"
      },
      "app_upgrade_1": {
       "additionalProperties": false,
       "properties": {
        "app_version": {
         "default": "latest",
         "minLength": 1,
         "title": "app_version",
         "type": "string",
         "_name_": "app_version"
        },
        "values": {
         "title": "values",
         "type": "object",
         "_name_": "values"
        },
        "snapshot_hostpaths": {
         "default": false,
         "title": "snapshot_hostpaths",
         "type": "boolean",
         "_name_": "snapshot_hostpaths"
        }
       },
       "title": "options",
       "type": "object",
       "default": {
        "app_version": "latest",
        "values": "{}",
        "snapshot_hostpaths": false
       },
       "_name_": "options",
       "_attrs_order_": [
        "app_version",
        "values",
        "snapshot_hostpaths"
       ]
      },
      "app_upgrade": {
       "type": "object",
       "properties": {
        "app_name": {
         "$ref": "#/components/schemas/app_upgrade_0"
        },
        "options": {
         "$ref": "#/components/schemas/app_upgrade_1"
        }
       }
      },
      "return_schema_of_app_upgrade": {
       "additionalProperties": false,
       "properties": {
        "name": {
         "minLength": 1,
         "title": "name",
         "type": "string",
         "_name_": "name"
        },
        "id": {
         "minLength": 1,
         "title": "id",
         "type": "string",
         "_name_": "id"
        },
        "state": {
         "enum": [
          "CRASHED",
          "DEPLOYING",
          "RUNNING",
          "STOPPED",
          "STOPPING"
         ],
         "title": "state",
         "type": "string",
         "_name_": "state"
        },
        "upgrade_available": {
         "title": "upgrade_available",
         "type": "boolean",
         "_name_": "upgrade_available"
        },
        "latest_version": {
         "anyOf": [
          {
           "minLength": 1,
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "title": "latest_version",
         "_name_": "latest_version"
        },
        "image_updates_available": {
         "title": "image_updates_available",
         "type": "boolean",
         "_name_": "image_updates_available"
        },
        "custom_app": {
         "title": "custom_app",
         "type": "boolean",
         "_name_": "custom_app"
        },
        "migrated": {
         "title": "migrated",
         "type": "boolean",
         "_name_": "migrated"
        },
        "human_version": {
         "minLength": 1,
         "title": "human_version",
         "type": "string",
         "_name_": "human_version"
        },
        "version": {
         "minLength": 1,
         "title": "version",
         "type": "string",
         "_name_": "version"
        },
        "metadata": {
         "title": "metadata",
         "type": "object",
         "_name_": "metadata"
        },
        "active_workloads": {
         "title": "active_workloads",
         "_name_": "active_workloads"
        },
        "notes": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "title": "notes",
         "_name_": "notes"
        },
        "portals": {
         "title": "portals",
         "type": "object",
         "_name_": "portals"
        },
        "version_details": {
         "anyOf": [
          {
           "type": "object"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "version_details",
         "_name_": "version_details"
        },
        "config": {
         "anyOf": [
          {
           "type": "object"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "config",
         "_name_": "config"
        }
       },
       "required": [
        "name",
        "id",
        "state",
        "upgrade_available",
        "latest_version",
        "image_updates_available",
        "custom_app",
        "migrated",
        "human_version",
        "version",
        "metadata",
        "active_workloads",
        "notes",
        "portals"
       ],
       "title": "result",
       "type": "object",
       "_name_": "result",
       "_attrs_order_": [
        "name",
        "id",
        "state",
        "upgrade_available",
        "latest_version",
        "image_updates_available",
        "custom_app",
        "migrated",
        "human_version",
        "version",
        "metadata",
        "active_workloads",
        "notes",
        "portals",
        "version_details",
        "config"
       ]
      },
      "app_upgrade_summary_0": {
       "minLength": 1,
       "title": "app_name",
       "type": "string",
       "_name_": "app_name"
      },
      "app_upgrade_summary_1": {
       "additionalProperties": false,
       "properties": {
        "app_version": {
         "default": "latest",
         "minLength": 1,
         "title": "app_version",
         "type": "string",
         "_name_": "app_version"
        }
       },
       "title": "options",
       "type": "object",
       "default": {
        "app_version": "latest"
       },
       "_name_": "options",
       "_attrs_order_": [
        "app_version"
       ]
      },
      "app_upgrade_summary": {
       "type": "object",
       "properties": {
        "app_name": {
         "$ref": "#/components/schemas/app_upgrade_summary_0"
        },
        "options": {
         "$ref": "#/components/schemas/app_upgrade_summary_1"
        }
       }
      },
      "return_schema_of_app_upgrade_summary": {
       "additionalProperties": false,
       "properties": {
        "latest_version": {
         "description": "Latest version available for the app",
         "title": "latest_version",
         "type": "string",
         "_name_": "latest_version"
        },
        "latest_human_version": {
         "description": "Latest human readable version available for the app",
         "title": "latest_human_version",
         "type": "string",
         "_name_": "latest_human_version"
        },
        "upgrade_version": {
         "description": "Version user has requested to be upgraded at",
         "title": "upgrade_version",
         "type": "string",
         "_name_": "upgrade_version"
        },
        "upgrade_human_version": {
         "description": "Human readable version user has requested to be upgraded at",
         "title": "upgrade_human_version",
         "type": "string",
         "_name_": "upgrade_human_version"
        },
        "available_versions_for_upgrade": {
         "description": "List of available versions for upgrade",
         "items": {},
         "title": "available_versions_for_upgrade",
         "type": "array",
         "_name_": "available_versions_for_upgrade"
        },
        "changelog": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "title": "changelog",
         "_name_": "changelog"
        }
       },
       "required": [
        "latest_version",
        "latest_human_version",
        "upgrade_version",
        "upgrade_human_version",
        "available_versions_for_upgrade",
        "changelog"
       ],
       "title": "result",
       "type": "object",
       "_name_": "result",
       "_attrs_order_": [
        "latest_version",
        "latest_human_version",
        "upgrade_version",
        "upgrade_human_version",
        "available_versions_for_upgrade",
        "changelog"
       ]
      },
      "return_schema_of_app_used_ports": {
       "items": {
        "type": "integer"
       },
       "title": "result",
       "type": "array",
       "_name_": "result"
      },
      "return_schema_of_app_image_query": {
       "anyOf": [
        {
         "items": [
          {
           "additionalProperties": false,
           "properties": {
            "id": {
             "minLength": 1,
             "title": "id",
             "type": "string",
             "_name_": "id",
             "_required_": false
            },
            "repo_tags": {
             "items": [
              {
               "type": "string"
              }
             ],
             "title": "repo_tags",
             "type": "array",
             "_name_": "repo_tags",
             "_required_": false
            },
            "repo_digests": {
             "items": [
              {
               "type": "string"
              }
             ],
             "title": "repo_digests",
             "type": "array",
             "_name_": "repo_digests",
             "_required_": false
            },
            "size": {
             "title": "size",
             "type": "integer",
             "_name_": "size",
             "_required_": false
            },
            "dangling": {
             "title": "dangling",
             "type": "boolean",
             "_name_": "dangling",
             "_required_": false
            },
            "update_available": {
             "title": "update_available",
             "type": "boolean",
             "_name_": "update_available",
             "_required_": false
            },
            "created": {
             "title": "created",
             "type": "string",
             "_name_": "created",
             "_required_": false
            },
            "author": {
             "title": "author",
             "type": "string",
             "_name_": "author",
             "_required_": false
            },
            "comment": {
             "title": "comment",
             "type": "string",
             "_name_": "comment",
             "_required_": false
            },
            "parsed_repo_tags": {
             "anyOf": [
              {
               "items": [
                {}
               ],
               "type": "array"
              },
              {
               "type": "null"
              }
             ],
             "title": "parsed_repo_tags",
             "_name_": "parsed_repo_tags",
             "_required_": false
            }
           },
           "title": "AppImageQueryResultItem",
           "type": "object",
           "_attrs_order_": [
            "id",
            "repo_tags",
            "repo_digests",
            "size",
            "dangling",
            "update_available",
            "created",
            "author",
            "comment",
            "parsed_repo_tags"
           ]
          }
         ],
         "type": "array"
        },
        {
         "additionalProperties": false,
         "properties": {
          "id": {
           "minLength": 1,
           "title": "id",
           "type": "string",
           "_name_": "id",
           "_required_": false
          },
          "repo_tags": {
           "items": [
            {
             "type": "string"
            }
           ],
           "title": "repo_tags",
           "type": "array",
           "_name_": "repo_tags",
           "_required_": false
          },
          "repo_digests": {
           "items": [
            {
             "type": "string"
            }
           ],
           "title": "repo_digests",
           "type": "array",
           "_name_": "repo_digests",
           "_required_": false
          },
          "size": {
           "title": "size",
           "type": "integer",
           "_name_": "size",
           "_required_": false
          },
          "dangling": {
           "title": "dangling",
           "type": "boolean",
           "_name_": "dangling",
           "_required_": false
          },
          "update_available": {
           "title": "update_available",
           "type": "boolean",
           "_name_": "update_available",
           "_required_": false
          },
          "created": {
           "title": "created",
           "type": "string",
           "_name_": "created",
           "_required_": false
          },
          "author": {
           "title": "author",
           "type": "string",
           "_name_": "author",
           "_required_": false
          },
          "comment": {
           "title": "comment",
           "type": "string",
           "_name_": "comment",
           "_required_": false
          },
          "parsed_repo_tags": {
           "anyOf": [
            {
             "items": [
              {}
             ],
             "type": "array"
            },
            {
             "type": "null"
            }
           ],
           "title": "parsed_repo_tags",
           "_name_": "parsed_repo_tags",
           "_required_": false
          }
         },
         "title": "AppImageQueryResultItem",
         "type": "object",
         "_attrs_order_": [
          "id",
          "repo_tags",
          "repo_digests",
          "size",
          "dangling",
          "update_available",
          "created",
          "author",
          "comment",
          "parsed_repo_tags"
         ]
        },
        {
         "type": "integer"
        }
       ],
       "title": "result",
       "_name_": "result"
      },
      "app_image_delete": {
       "additionalProperties": false,
       "properties": {
        "force": {
         "default": false,
         "title": "force",
         "type": "boolean",
         "_name_": "force"
        }
       },
       "title": "options",
       "type": "object",
       "default": {
        "force": false
       },
       "_name_": "options",
       "_attrs_order_": [
        "force"
       ]
      },
      "return_schema_of_app_image_delete": {
       "const": true,
       "enum": [
        true
       ],
       "title": "result",
       "type": "boolean",
       "_name_": "result"
      },
      "return_schema_of_app_image_dockerhub_rate_limit": {
       "additionalProperties": false,
       "properties": {
        "total_pull_limit": {
         "anyOf": [
          {
           "type": "integer"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "description": "Total pull limit for Docker Hub registry",
         "title": "total_pull_limit",
         "_name_": "total_pull_limit"
        },
        "total_time_limit_in_secs": {
         "anyOf": [
          {
           "type": "integer"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "description": "Total time limit in seconds for Docker Hub registry before the limit renews",
         "title": "total_time_limit_in_secs",
         "_name_": "total_time_limit_in_secs"
        },
        "remaining_pull_limit": {
         "anyOf": [
          {
           "type": "integer"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "description": "Remaining pull limit for Docker Hub registry",
         "title": "remaining_pull_limit",
         "_name_": "remaining_pull_limit"
        },
        "remaining_time_limit_in_secs": {
         "anyOf": [
          {
           "type": "integer"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "description": "Remaining time limit in seconds for Docker Hub registry for the current pull limit to be renewed",
         "title": "remaining_time_limit_in_secs",
         "_name_": "remaining_time_limit_in_secs"
        },
        "error": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "error",
         "_name_": "error"
        }
       },
       "title": "result",
       "type": "object",
       "_name_": "result",
       "_attrs_order_": [
        "total_pull_limit",
        "total_time_limit_in_secs",
        "remaining_pull_limit",
        "remaining_time_limit_in_secs",
        "error"
       ]
      },
      "app_image_get_instance_0": {
       "title": "id",
       "type": "string",
       "_name_": "id"
      },
      "app_image_get_instance_1": {
       "additionalProperties": false,
       "properties": {
        "relationships": {
         "default": true,
         "title": "relationships",
         "type": "boolean",
         "_name_": "relationships"
        },
        "extend": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "extend",
         "_name_": "extend"
        },
        "extend_context": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "extend_context",
         "_name_": "extend_context"
        },
        "prefix": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "prefix",
         "_name_": "prefix"
        },
        "extra": {
         "default": {},
         "title": "extra",
         "type": "object",
         "_name_": "extra"
        },
        "order_by": {
         "default": [],
         "items": {
          "type": "string"
         },
         "title": "order_by",
         "type": "array",
         "_name_": "order_by"
        },
        "select": {
         "default": [],
         "items": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "items": [
             {}
            ],
            "type": "array"
           }
          ]
         },
         "title": "select",
         "type": "array",
         "_name_": "select"
        },
        "count": {
         "default": false,
         "title": "count",
         "type": "boolean",
         "_name_": "count"
        },
        "get": {
         "default": false,
         "title": "get",
         "type": "boolean",
         "_name_": "get"
        },
        "offset": {
         "default": 0,
         "title": "offset",
         "type": "integer",
         "_name_": "offset"
        },
        "limit": {
         "default": 0,
         "title": "limit",
         "type": "integer",
         "_name_": "limit"
        },
        "force_sql_filters": {
         "default": false,
         "title": "force_sql_filters",
         "type": "boolean",
         "_name_": "force_sql_filters"
        }
       },
       "title": "options",
       "type": "object",
       "default": {},
       "_name_": "options",
       "_attrs_order_": [
        "relationships",
        "extend",
        "extend_context",
        "prefix",
        "extra",
        "order_by",
        "select",
        "count",
        "get",
        "offset",
        "limit",
        "force_sql_filters"
       ]
      },
      "app_image_get_instance": {
       "type": "object",
       "properties": {
        "id": {
         "$ref": "#/components/schemas/app_image_get_instance_0"
        },
        "options": {
         "$ref": "#/components/schemas/app_image_get_instance_1"
        }
       }
      },
      "return_schema_of_app_image_get_instance": {
       "additionalProperties": false,
       "properties": {
        "id": {
         "minLength": 1,
         "title": "id",
         "type": "string",
         "_name_": "id"
        },
        "repo_tags": {
         "items": {
          "type": "string"
         },
         "title": "repo_tags",
         "type": "array",
         "_name_": "repo_tags"
        },
        "repo_digests": {
         "items": {
          "type": "string"
         },
         "title": "repo_digests",
         "type": "array",
         "_name_": "repo_digests"
        },
        "size": {
         "title": "size",
         "type": "integer",
         "_name_": "size"
        },
        "dangling": {
         "title": "dangling",
         "type": "boolean",
         "_name_": "dangling"
        },
        "update_available": {
         "title": "update_available",
         "type": "boolean",
         "_name_": "update_available"
        },
        "created": {
         "title": "created",
         "type": "string",
         "_name_": "created"
        },
        "author": {
         "title": "author",
         "type": "string",
         "_name_": "author"
        },
        "comment": {
         "title": "comment",
         "type": "string",
         "_name_": "comment"
        },
        "parsed_repo_tags": {
         "anyOf": [
          {
           "items": [
            {}
           ],
           "type": "array"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "parsed_repo_tags",
         "_name_": "parsed_repo_tags"
        }
       },
       "required": [
        "id",
        "repo_tags",
        "repo_digests",
        "size",
        "dangling",
        "update_available",
        "created",
        "author",
        "comment"
       ],
       "title": "result",
       "type": "object",
       "_name_": "result",
       "_attrs_order_": [
        "id",
        "repo_tags",
        "repo_digests",
        "size",
        "dangling",
        "update_available",
        "created",
        "author",
        "comment",
        "parsed_repo_tags"
       ]
      },
      "app_image_pull": {
       "additionalProperties": false,
       "properties": {
        "auth_config": {
         "anyOf": [
          {},
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "auth_config",
         "_name_": "auth_config"
        },
        "image": {
         "minLength": 1,
         "title": "image",
         "type": "string",
         "_name_": "image"
        }
       },
       "required": [
        "image"
       ],
       "title": "image_pull",
       "type": "object",
       "_name_": "image_pull",
       "_attrs_order_": [
        "auth_config",
        "image"
       ]
      },
      "return_schema_of_app_image_pull": {
       "title": "result",
       "type": "null",
       "_name_": "result"
      },
      "app_ix_volume_exists": {
       "minLength": 1,
       "title": "name",
       "type": "string",
       "_name_": "name"
      },
      "return_schema_of_app_ix_volume_exists": {
       "title": "result",
       "type": "boolean",
       "_name_": "result"
      },
      "return_schema_of_app_ix_volume_query": {
       "anyOf": [
        {
         "items": [
          {
           "additionalProperties": false,
           "properties": {
            "app_name": {
             "minLength": 1,
             "title": "app_name",
             "type": "string",
             "_name_": "app_name",
             "_required_": false
            },
            "name": {
             "minLength": 1,
             "title": "name",
             "type": "string",
             "_name_": "name",
             "_required_": false
            }
           },
           "title": "AppIXVolumeQueryResultItem",
           "type": "object",
           "_attrs_order_": [
            "app_name",
            "name"
           ]
          }
         ],
         "type": "array"
        },
        {
         "additionalProperties": false,
         "properties": {
          "app_name": {
           "minLength": 1,
           "title": "app_name",
           "type": "string",
           "_name_": "app_name",
           "_required_": false
          },
          "name": {
           "minLength": 1,
           "title": "name",
           "type": "string",
           "_name_": "name",
           "_required_": false
          }
         },
         "title": "AppIXVolumeQueryResultItem",
         "type": "object",
         "_attrs_order_": [
          "app_name",
          "name"
         ]
        },
        {
         "type": "integer"
        }
       ],
       "title": "result",
       "_name_": "result"
      },
      "return_schema_of_app_registry_query": {
       "anyOf": [
        {
         "items": [
          {
           "additionalProperties": false,
           "properties": {
            "id": {
             "title": "id",
             "type": "integer",
             "_name_": "id",
             "_required_": false
            },
            "name": {
             "title": "name",
             "type": "string",
             "_name_": "name",
             "_required_": false
            },
            "description": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "null"
              }
             ],
             "title": "description",
             "_name_": "description",
             "_required_": false
            },
            "username": {
             "title": "username",
             "type": "string",
             "_name_": "username",
             "_required_": false
            },
            "password": {
             "title": "password",
             "type": "string",
             "_name_": "password",
             "_required_": false
            },
            "uri": {
             "title": "uri",
             "type": "string",
             "_name_": "uri",
             "_required_": false
            }
           },
           "title": "AppRegistryQueryResultItem",
           "type": "object",
           "_attrs_order_": [
            "id",
            "name",
            "description",
            "username",
            "password",
            "uri"
           ]
          }
         ],
         "type": "array"
        },
        {
         "additionalProperties": false,
         "properties": {
          "id": {
           "title": "id",
           "type": "integer",
           "_name_": "id",
           "_required_": false
          },
          "name": {
           "title": "name",
           "type": "string",
           "_name_": "name",
           "_required_": false
          },
          "description": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "null"
            }
           ],
           "title": "description",
           "_name_": "description",
           "_required_": false
          },
          "username": {
           "title": "username",
           "type": "string",
           "_name_": "username",
           "_required_": false
          },
          "password": {
           "title": "password",
           "type": "string",
           "_name_": "password",
           "_required_": false
          },
          "uri": {
           "title": "uri",
           "type": "string",
           "_name_": "uri",
           "_required_": false
          }
         },
         "title": "AppRegistryQueryResultItem",
         "type": "object",
         "_attrs_order_": [
          "id",
          "name",
          "description",
          "username",
          "password",
          "uri"
         ]
        },
        {
         "type": "integer"
        }
       ],
       "title": "result",
       "_name_": "result"
      },
      "app_registry_create": {
       "additionalProperties": false,
       "properties": {
        "name": {
         "title": "name",
         "type": "string",
         "_name_": "name"
        },
        "description": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "description",
         "_name_": "description"
        },
        "username": {
         "title": "username",
         "type": "string",
         "_name_": "username"
        },
        "password": {
         "title": "password",
         "type": "string",
         "_name_": "password"
        },
        "uri": {
         "default": "https://index.docker.io/v1/",
         "title": "uri",
         "type": "string",
         "_name_": "uri"
        }
       },
       "required": [
        "name",
        "username",
        "password"
       ],
       "title": "app_registry_create",
       "type": "object",
       "_name_": "app_registry_create",
       "_attrs_order_": [
        "name",
        "description",
        "username",
        "password",
        "uri"
       ]
      },
      "return_schema_of_app_registry_create": {
       "additionalProperties": false,
       "properties": {
        "id": {
         "title": "id",
         "type": "integer",
         "_name_": "id"
        },
        "name": {
         "title": "name",
         "type": "string",
         "_name_": "name"
        },
        "description": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "description",
         "_name_": "description"
        },
        "username": {
         "title": "username",
         "type": "string",
         "_name_": "username"
        },
        "password": {
         "title": "password",
         "type": "string",
         "_name_": "password"
        },
        "uri": {
         "title": "uri",
         "type": "string",
         "_name_": "uri"
        }
       },
       "required": [
        "id",
        "name",
        "username",
        "password",
        "uri"
       ],
       "title": "result",
       "type": "object",
       "_name_": "result",
       "_attrs_order_": [
        "id",
        "name",
        "description",
        "username",
        "password",
        "uri"
       ]
      },
      "return_schema_of_app_registry_delete": {
       "title": "result",
       "type": "null",
       "_name_": "result"
      },
      "app_registry_update": {
       "additionalProperties": false,
       "properties": {
        "name": {
         "title": "name",
         "type": "string",
         "_name_": "name"
        },
        "description": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "title": "description",
         "_name_": "description"
        },
        "username": {
         "title": "username",
         "type": "string",
         "_name_": "username"
        },
        "password": {
         "title": "password",
         "type": "string",
         "_name_": "password"
        },
        "uri": {
         "title": "uri",
         "type": "string",
         "_name_": "uri"
        }
       },
       "title": "data",
       "type": "object",
       "_name_": "data",
       "_attrs_order_": [
        "name",
        "description",
        "username",
        "password",
        "uri"
       ]
      },
      "return_schema_of_app_registry_update": {
       "additionalProperties": false,
       "properties": {
        "id": {
         "title": "id",
         "type": "integer",
         "_name_": "id"
        },
        "name": {
         "title": "name",
         "type": "string",
         "_name_": "name"
        },
        "description": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "description",
         "_name_": "description"
        },
        "username": {
         "title": "username",
         "type": "string",
         "_name_": "username"
        },
        "password": {
         "title": "password",
         "type": "string",
         "_name_": "password"
        },
        "uri": {
         "title": "uri",
         "type": "string",
         "_name_": "uri"
        }
       },
       "required": [
        "id",
        "name",
        "username",
        "password",
        "uri"
       ],
       "title": "result",
       "type": "object",
       "_name_": "result",
       "_attrs_order_": [
        "id",
        "name",
        "description",
        "username",
        "password",
        "uri"
       ]
      },
      "app_registry_get_instance_0": {
       "title": "id",
       "type": "integer",
       "_name_": "id"
      },
      "app_registry_get_instance_1": {
       "additionalProperties": false,
       "properties": {
        "relationships": {
         "default": true,
         "title": "relationships",
         "type": "boolean",
         "_name_": "relationships"
        },
        "extend": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "extend",
         "_name_": "extend"
        },
        "extend_context": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "extend_context",
         "_name_": "extend_context"
        },
        "prefix": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "prefix",
         "_name_": "prefix"
        },
        "extra": {
         "default": {},
         "title": "extra",
         "type": "object",
         "_name_": "extra"
        },
        "order_by": {
         "default": [],
         "items": {
          "type": "string"
         },
         "title": "order_by",
         "type": "array",
         "_name_": "order_by"
        },
        "select": {
         "default": [],
         "items": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "items": [
             {}
            ],
            "type": "array"
           }
          ]
         },
         "title": "select",
         "type": "array",
         "_name_": "select"
        },
        "count": {
         "default": false,
         "title": "count",
         "type": "boolean",
         "_name_": "count"
        },
        "get": {
         "default": false,
         "title": "get",
         "type": "boolean",
         "_name_": "get"
        },
        "offset": {
         "default": 0,
         "title": "offset",
         "type": "integer",
         "_name_": "offset"
        },
        "limit": {
         "default": 0,
         "title": "limit",
         "type": "integer",
         "_name_": "limit"
        },
        "force_sql_filters": {
         "default": false,
         "title": "force_sql_filters",
         "type": "boolean",
         "_name_": "force_sql_filters"
        }
       },
       "title": "options",
       "type": "object",
       "default": {},
       "_name_": "options",
       "_attrs_order_": [
        "relationships",
        "extend",
        "extend_context",
        "prefix",
        "extra",
        "order_by",
        "select",
        "count",
        "get",
        "offset",
        "limit",
        "force_sql_filters"
       ]
      },
      "app_registry_get_instance": {
       "type": "object",
       "properties": {
        "id": {
         "$ref": "#/components/schemas/app_registry_get_instance_0"
        },
        "options": {
         "$ref": "#/components/schemas/app_registry_get_instance_1"
        }
       }
      },
      "return_schema_of_app_registry_get_instance": {
       "additionalProperties": false,
       "properties": {
        "id": {
         "title": "id",
         "type": "integer",
         "_name_": "id"
        },
        "name": {
         "title": "name",
         "type": "string",
         "_name_": "name"
        },
        "description": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "description",
         "_name_": "description"
        },
        "username": {
         "title": "username",
         "type": "string",
         "_name_": "username"
        },
        "password": {
         "title": "password",
         "type": "string",
         "_name_": "password"
        },
        "uri": {
         "title": "uri",
         "type": "string",
         "_name_": "uri"
        }
       },
       "required": [
        "id",
        "name",
        "username",
        "password",
        "uri"
       ],
       "title": "result",
       "type": "object",
       "_name_": "result",
       "_attrs_order_": [
        "id",
        "name",
        "description",
        "username",
        "password",
        "uri"
       ]
      },
      "return_schema_of_audit_config": {
       "type": "object",
       "properties": {
        "retention": {
         "type": "integer",
         "_name_": "retention",
         "title": "retention"
        },
        "reservation": {
         "type": "integer",
         "_name_": "reservation",
         "title": "reservation"
        },
        "quota": {
         "type": "integer",
         "_name_": "quota",
         "title": "quota"
        },
        "quota_fill_warning": {
         "type": "integer",
         "_name_": "quota_fill_warning",
         "title": "quota_fill_warning"
        },
        "quota_fill_critical": {
         "type": "integer",
         "_name_": "quota_fill_critical",
         "title": "quota_fill_critical"
        },
        "available": {
         "type": "integer",
         "_name_": "available",
         "title": "available"
        },
        "space": {
         "type": "object",
         "properties": {
          "used": {
           "type": "integer",
           "_name_": "used",
           "title": "used"
          },
          "used_by_snapshots": {
           "type": "integer",
           "_name_": "used_by_snapshots",
           "title": "used_by_snapshots"
          },
          "available": {
           "type": "integer",
           "_name_": "available",
           "title": "available"
          }
         },
         "additionalProperties": false,
         "_name_": "space",
         "title": "space",
         "default": {},
         "_attrs_order_": [
          "used",
          "used_by_snapshots",
          "available"
         ]
        },
        "remote_logging_enabled": {
         "type": "boolean",
         "_name_": "remote_logging_enabled",
         "title": "remote_logging_enabled"
        },
        "enabled_services": {
         "_name_": "enabled_services",
         "title": "enabled_services",
         "default": [],
         "type": "array",
         "items": {}
        }
       },
       "additionalProperties": false,
       "_name_": "system_audit_config",
       "title": "system_audit_config",
       "default": {},
       "_attrs_order_": [
        "retention",
        "reservation",
        "quota",
        "quota_fill_warning",
        "quota_fill_critical",
        "available",
        "space",
        "remote_logging_enabled",
        "enabled_services"
       ]
      },
      "audit_update": {
       "type": "object",
       "properties": {
        "retention": {
         "type": "integer",
         "_name_": "retention",
         "title": "retention",
         "description": "`retention` - number of days to retain local audit messages."
        },
        "reservation": {
         "type": "integer",
         "_name_": "reservation",
         "title": "reservation",
         "description": "`reservation` - size in GiB of refreservation to set on ZFS dataset\nwhere the audit databases are stored. The refreservation specifies the\nminimum amount of space guaranteed to the dataset, and counts against\nthe space available for other datasets in the zpool where the audit\ndataset is located."
        },
        "quota": {
         "type": "integer",
         "_name_": "quota",
         "title": "quota",
         "description": "`quota` - size in GiB of the maximum amount of space that may be\nconsumed by the dataset where the audit dabases are stored."
        },
        "quota_fill_warning": {
         "type": "integer",
         "_name_": "quota_fill_warning",
         "title": "quota_fill_warning",
         "description": "`quota_fill_warning` - percentage used of dataset quota at which to\ngenerate a warning alert."
        },
        "quota_fill_critical": {
         "type": "integer",
         "_name_": "quota_fill_critical",
         "title": "quota_fill_critical",
         "description": "`quota_fill_critical` - percentage used of dataset quota at which to\ngenerate a critical alert."
        }
       },
       "additionalProperties": false,
       "_name_": "system_audit_update",
       "title": "system_audit_update",
       "default": {},
       "_attrs_order_": [
        "retention",
        "reservation",
        "quota",
        "quota_fill_warning",
        "quota_fill_critical"
       ]
      },
      "audit_download_report": {
       "type": "object",
       "properties": {
        "report_name": {
         "_name_": "report_name",
         "title": "report_name",
         "type": "string"
        }
       },
       "additionalProperties": false,
       "_name_": "audit_download",
       "title": "audit_download",
       "default": {},
       "_attrs_order_": [
        "report_name"
       ]
      },
      "audit_export": {
       "type": "object",
       "properties": {
        "services": {
         "_name_": "services",
         "title": "services",
         "default": [
          "MIDDLEWARE",
          "SUDO"
         ],
         "type": "array",
         "items": {
          "_name_": "db_name",
          "title": "db_name",
          "_required_": false,
          "type": "string",
          "enum": [
           "MIDDLEWARE",
           "SMB",
           "SUDO",
           "SYSTEM"
          ]
         },
         "description": "`query-options` for the specified `services` in the specified `export_format`."
        },
        "query-filters": {
         "_name_": "query-filters",
         "title": "query-filters",
         "default": [],
         "type": "array",
         "items": {
          "_name_": "query-filter",
          "title": "query-filter",
          "default": [],
          "_required_": false,
          "type": "array",
          "items": []
         }
        },
        "query-options": {
         "type": "object",
         "properties": {
          "relationships": {
           "type": "boolean",
           "_name_": "relationships",
           "title": "relationships",
           "default": true
          },
          "extend": {
           "_name_": "extend",
           "title": "extend",
           "default": null,
           "type": "string",
           "nullable": true
          },
          "extend_context": {
           "_name_": "extend_context",
           "title": "extend_context",
           "default": null,
           "type": "string",
           "nullable": true
          },
          "prefix": {
           "_name_": "prefix",
           "title": "prefix",
           "default": null,
           "type": "string",
           "nullable": true
          },
          "extra": {
           "type": "object",
           "properties": {},
           "additionalProperties": true,
           "_name_": "extra",
           "title": "extra",
           "default": {},
           "_attrs_order_": []
          },
          "order_by": {
           "_name_": "order_by",
           "title": "order_by",
           "default": [],
           "type": "array",
           "items": {}
          },
          "select": {
           "_name_": "select",
           "title": "select",
           "default": [],
           "type": "array",
           "items": {}
          },
          "count": {
           "type": "boolean",
           "_name_": "count",
           "title": "count",
           "default": false
          },
          "get": {
           "type": "boolean",
           "_name_": "get",
           "title": "get",
           "default": false
          },
          "offset": {
           "type": "integer",
           "_name_": "offset",
           "title": "offset",
           "default": 0
          },
          "limit": {
           "type": "integer",
           "_name_": "limit",
           "title": "limit",
           "default": 0
          },
          "force_sql_filters": {
           "type": "boolean",
           "_name_": "force_sql_filters",
           "title": "force_sql_filters",
           "default": false
          }
         },
         "additionalProperties": false,
         "_name_": "query-options",
         "title": "query-options",
         "default": {},
         "_attrs_order_": [
          "relationships",
          "extend",
          "extend_context",
          "prefix",
          "extra",
          "order_by",
          "select",
          "count",
          "get",
          "offset",
          "limit",
          "force_sql_filters"
         ]
        },
        "remote_controller": {
         "type": "boolean",
         "_name_": "remote_controller",
         "title": "remote_controller",
         "default": false
        },
        "export_format": {
         "_name_": "export_format",
         "title": "export_format",
         "default": "JSON",
         "type": "string",
         "enum": [
          "CSV",
          "JSON",
          "YAML"
         ],
         "description": "`query-options` for the specified `services` in the specified `export_format`."
        }
       },
       "additionalProperties": false,
       "_name_": "audit_export",
       "title": "audit_export",
       "default": {},
       "_attrs_order_": [
        "services",
        "query-filters",
        "query-options",
        "remote_controller",
        "export_format"
       ]
      },
      "return_schema_of_audit_export": {
       "_name_": "audit_file_path",
       "title": "audit_file_path",
       "type": "string"
      },
      "audit_query": {
       "type": "object",
       "properties": {
        "services": {
         "_name_": "services",
         "title": "services",
         "default": [
          "MIDDLEWARE",
          "SUDO"
         ],
         "type": "array",
         "items": {
          "_name_": "db_name",
          "title": "db_name",
          "_required_": false,
          "type": "string",
          "enum": [
           "MIDDLEWARE",
           "SMB",
           "SUDO",
           "SYSTEM"
          ]
         },
         "description": "Query contents of audit databases specified by `services`.\n`services` - Name of the service that generated the message. This will\nbe one of the names specified in `services`."
        },
        "query-filters": {
         "_name_": "query-filters",
         "title": "query-filters",
         "default": [],
         "type": "array",
         "items": {
          "_name_": "query-filter",
          "title": "query-filter",
          "default": [],
          "_required_": false,
          "type": "array",
          "items": []
         }
        },
        "query-options": {
         "type": "object",
         "properties": {
          "relationships": {
           "type": "boolean",
           "_name_": "relationships",
           "title": "relationships",
           "default": true
          },
          "extend": {
           "_name_": "extend",
           "title": "extend",
           "default": null,
           "type": "string",
           "nullable": true
          },
          "extend_context": {
           "_name_": "extend_context",
           "title": "extend_context",
           "default": null,
           "type": "string",
           "nullable": true
          },
          "prefix": {
           "_name_": "prefix",
           "title": "prefix",
           "default": null,
           "type": "string",
           "nullable": true
          },
          "extra": {
           "type": "object",
           "properties": {},
           "additionalProperties": true,
           "_name_": "extra",
           "title": "extra",
           "default": {},
           "_attrs_order_": []
          },
          "order_by": {
           "_name_": "order_by",
           "title": "order_by",
           "default": [],
           "type": "array",
           "items": {}
          },
          "select": {
           "_name_": "select",
           "title": "select",
           "default": [],
           "type": "array",
           "items": {}
          },
          "count": {
           "type": "boolean",
           "_name_": "count",
           "title": "count",
           "default": false
          },
          "get": {
           "type": "boolean",
           "_name_": "get",
           "title": "get",
           "default": false
          },
          "offset": {
           "type": "integer",
           "_name_": "offset",
           "title": "offset",
           "default": 0
          },
          "limit": {
           "type": "integer",
           "_name_": "limit",
           "title": "limit",
           "default": 0
          },
          "force_sql_filters": {
           "type": "boolean",
           "_name_": "force_sql_filters",
           "title": "force_sql_filters",
           "default": false
          }
         },
         "additionalProperties": false,
         "_name_": "query-options",
         "title": "query-options",
         "default": {},
         "_attrs_order_": [
          "relationships",
          "extend",
          "extend_context",
          "prefix",
          "extra",
          "order_by",
          "select",
          "count",
          "get",
          "offset",
          "limit",
          "force_sql_filters"
         ]
        },
        "remote_controller": {
         "type": "boolean",
         "_name_": "remote_controller",
         "title": "remote_controller",
         "default": false
        }
       },
       "additionalProperties": false,
       "_name_": "audit_query",
       "title": "audit_query",
       "default": {},
       "_attrs_order_": [
        "services",
        "query-filters",
        "query-options",
        "remote_controller"
       ]
      },
      "return_schema_of_audit_query": {
       "anyOf": [
        {
         "type": "integer",
         "_name_": "count",
         "title": "count",
         "_required_": false
        },
        {
         "type": "object",
         "properties": {
          "audit_id": {
           "_name_": "audit_id",
           "title": "audit_id",
           "_required_": false,
           "type": "string"
          },
          "message_timestamp": {
           "type": "integer",
           "_name_": "message_timestamp",
           "title": "message_timestamp",
           "_required_": false
          },
          "timestamp": {
           "_name_": "timestamp",
           "title": "timestamp",
           "_required_": false,
           "type": "string"
          },
          "address": {
           "_name_": "address",
           "title": "address",
           "_required_": false,
           "type": "string"
          },
          "username": {
           "_name_": "username",
           "title": "username",
           "_required_": false,
           "type": "string"
          },
          "session": {
           "_name_": "session",
           "title": "session",
           "_required_": false,
           "type": "string"
          },
          "service": {
           "_name_": "service",
           "title": "service",
           "_required_": false,
           "type": "string",
           "enum": [
            "MIDDLEWARE",
            "SMB",
            "SUDO",
            "SYSTEM"
           ]
          },
          "service_data": {
           "type": "object",
           "properties": {},
           "additionalProperties": true,
           "_name_": "service_data",
           "title": "service_data",
           "default": {},
           "_required_": false,
           "_attrs_order_": []
          },
          "event": {
           "_name_": "event",
           "title": "event",
           "_required_": false,
           "type": "string"
          },
          "event_data": {
           "type": "object",
           "properties": {},
           "additionalProperties": true,
           "_name_": "event_data",
           "title": "event_data",
           "default": {},
           "_required_": false,
           "_attrs_order_": []
          },
          "success": {
           "type": "boolean",
           "_name_": "success",
           "title": "success",
           "_required_": false
          }
         },
         "additionalProperties": false,
         "_name_": "audit_entry",
         "title": "audit_entry",
         "default": {},
         "_required_": false,
         "_attrs_order_": [
          "audit_id",
          "message_timestamp",
          "timestamp",
          "address",
          "username",
          "session",
          "service",
          "service_data",
          "event",
          "event_data",
          "success"
         ]
        },
        {
         "_name_": "query_result",
         "title": "query_result",
         "default": [],
         "_required_": false,
         "type": "array",
         "items": [
          {
           "type": "object",
           "properties": {
            "audit_id": {
             "_name_": "audit_id",
             "title": "audit_id",
             "_required_": false,
             "type": "string"
            },
            "message_timestamp": {
             "type": "integer",
             "_name_": "message_timestamp",
             "title": "message_timestamp",
             "_required_": false
            },
            "timestamp": {
             "_name_": "timestamp",
             "title": "timestamp",
             "_required_": false,
             "type": "string"
            },
            "address": {
             "_name_": "address",
             "title": "address",
             "_required_": false,
             "type": "string"
            },
            "username": {
             "_name_": "username",
             "title": "username",
             "_required_": false,
             "type": "string"
            },
            "session": {
             "_name_": "session",
             "title": "session",
             "_required_": false,
             "type": "string"
            },
            "service": {
             "_name_": "service",
             "title": "service",
             "_required_": false,
             "type": "string",
             "enum": [
              "MIDDLEWARE",
              "SMB",
              "SUDO",
              "SYSTEM"
             ]
            },
            "service_data": {
             "type": "object",
             "properties": {},
             "additionalProperties": true,
             "_name_": "service_data",
             "title": "service_data",
             "default": {},
             "_required_": false,
             "_attrs_order_": []
            },
            "event": {
             "_name_": "event",
             "title": "event",
             "_required_": false,
             "type": "string"
            },
            "event_data": {
             "type": "object",
             "properties": {},
             "additionalProperties": true,
             "_name_": "event_data",
             "title": "event_data",
             "default": {},
             "_required_": false,
             "_attrs_order_": []
            },
            "success": {
             "type": "boolean",
             "_name_": "success",
             "title": "success",
             "_required_": false
            }
           },
           "additionalProperties": false,
           "_name_": "audit_entry",
           "title": "audit_entry",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "audit_id",
            "message_timestamp",
            "timestamp",
            "address",
            "username",
            "session",
            "service",
            "service_data",
            "event",
            "event_data",
            "success"
           ]
          }
         ]
        }
       ],
       "nullable": false,
       "_name_": "filterable_result",
       "description": null
      },
      "auth_generate_onetime_password": {
       "additionalProperties": false,
       "properties": {
        "username": {
         "title": "username",
         "type": "string",
         "_name_": "username"
        }
       },
       "required": [
        "username"
       ],
       "title": "generate_single_use_password",
       "type": "object",
       "_name_": "generate_single_use_password",
       "_attrs_order_": [
        "username"
       ]
      },
      "return_schema_of_auth_generate_onetime_password": {
       "title": "result",
       "type": "string",
       "_name_": "result"
      },
      "auth_generate_token_0": {
       "anyOf": [
        {
         "type": "integer"
        },
        {
         "type": "null"
        }
       ],
       "default": 600,
       "title": "ttl",
       "_name_": "ttl"
      },
      "auth_generate_token_1": {
       "default": {},
       "title": "attrs",
       "type": "object",
       "_name_": "attrs"
      },
      "auth_generate_token_2": {
       "default": true,
       "title": "match_origin",
       "type": "boolean",
       "_name_": "match_origin"
      },
      "auth_generate_token_3": {
       "default": false,
       "title": "single_use",
       "type": "boolean",
       "_name_": "single_use"
      },
      "auth_generate_token": {
       "type": "object",
       "properties": {
        "ttl": {
         "$ref": "#/components/schemas/auth_generate_token_0"
        },
        "attrs": {
         "$ref": "#/components/schemas/auth_generate_token_1"
        },
        "match_origin": {
         "$ref": "#/components/schemas/auth_generate_token_2"
        },
        "single_use": {
         "$ref": "#/components/schemas/auth_generate_token_3"
        }
       }
      },
      "return_schema_of_auth_generate_token": {
       "title": "result",
       "type": "string",
       "_name_": "result"
      },
      "return_schema_of_auth_mechanism_choices": {
       "items": {
        "type": "string"
       },
       "title": "result",
       "type": "array",
       "_name_": "result"
      },
      "auth_terminate_session": {
       "title": "id",
       "type": "string",
       "_name_": "id"
      },
      "return_schema_of_auth_terminate_session": {
       "title": "result",
       "type": "boolean",
       "_name_": "result"
      },
      "return_schema_of_auth_twofactor_config": {
       "type": "object",
       "properties": {
        "enabled": {
         "type": "boolean",
         "_name_": "enabled",
         "title": "enabled"
        },
        "services": {
         "type": "object",
         "properties": {
          "ssh": {
           "type": "boolean",
           "_name_": "ssh",
           "title": "ssh",
           "default": false
          }
         },
         "additionalProperties": false,
         "_name_": "services",
         "title": "services",
         "default": {},
         "_attrs_order_": [
          "ssh"
         ]
        },
        "window": {
         "type": "integer",
         "_name_": "window",
         "title": "window"
        },
        "id": {
         "type": "integer",
         "_name_": "id",
         "title": "id"
        }
       },
       "additionalProperties": false,
       "_name_": "auth_twofactor_entry",
       "title": "auth_twofactor_entry",
       "default": {},
       "_attrs_order_": [
        "enabled",
        "services",
        "window",
        "id"
       ]
      },
      "auth_twofactor_update": {
       "type": "object",
       "properties": {
        "enabled": {
         "type": "boolean",
         "_name_": "enabled",
         "title": "enabled"
        },
        "services": {
         "type": "object",
         "properties": {
          "ssh": {
           "type": "boolean",
           "_name_": "ssh",
           "title": "ssh",
           "default": false
          }
         },
         "additionalProperties": false,
         "_name_": "services",
         "title": "services",
         "default": {},
         "_attrs_order_": [
          "ssh"
         ]
        },
        "window": {
         "type": "integer",
         "_name_": "window",
         "title": "window",
         "description": "`window` extends the validity to `window` many counter ticks before and after the current one."
        }
       },
       "additionalProperties": false,
       "_name_": "auth_twofactor_update",
       "title": "auth_twofactor_update",
       "default": {},
       "_attrs_order_": [
        "enabled",
        "services",
        "window"
       ]
      },
      "return_schema_of_auth_twofactor_update": {
       "type": "object",
       "properties": {
        "enabled": {
         "type": "boolean",
         "_name_": "enabled",
         "title": "enabled"
        },
        "services": {
         "type": "object",
         "properties": {
          "ssh": {
           "type": "boolean",
           "_name_": "ssh",
           "title": "ssh",
           "default": false
          }
         },
         "additionalProperties": false,
         "_name_": "services",
         "title": "services",
         "default": {},
         "_attrs_order_": [
          "ssh"
         ]
        },
        "window": {
         "type": "integer",
         "_name_": "window",
         "title": "window",
         "description": "`window` extends the validity to `window` many counter ticks before and after the current one."
        },
        "id": {
         "type": "integer",
         "_name_": "id",
         "title": "id"
        }
       },
       "additionalProperties": false,
       "_name_": "auth_twofactor_update_returns",
       "title": "auth_twofactor_update_returns",
       "default": {},
       "_attrs_order_": [
        "enabled",
        "services",
        "window",
        "id"
       ]
      },
      "boot_attach_0": {
       "_name_": "dev",
       "title": "dev",
       "type": "string"
      },
      "boot_attach_1": {
       "type": "object",
       "properties": {
        "expand": {
         "type": "boolean",
         "_name_": "expand",
         "title": "expand",
         "default": false
        }
       },
       "additionalProperties": false,
       "_name_": "options",
       "title": "options",
       "default": {},
       "_attrs_order_": [
        "expand"
       ]
      },
      "boot_attach": {
       "type": "object",
       "properties": {
        "dev": {
         "$ref": "#/components/schemas/boot_attach_0"
        },
        "options": {
         "$ref": "#/components/schemas/boot_attach_1"
        }
       }
      },
      "boot_detach": {
       "_name_": "dev",
       "title": "dev",
       "type": "string"
      },
      "return_schema_of_boot_get_disks": {
       "_name_": "disks",
       "title": "disks",
       "default": [],
       "type": "array",
       "items": {
        "_name_": "disk",
        "title": "disk",
        "_required_": false,
        "type": "string"
       }
      },
      "return_schema_of_boot_get_state": {
       "type": "object",
       "properties": {
        "name": {
         "_name_": "name",
         "title": "name",
         "type": "string"
        },
        "status": {
         "_name_": "status",
         "title": "status",
         "type": "string"
        },
        "path": {
         "_name_": "path",
         "title": "path",
         "type": "string"
        },
        "scan": {
         "type": "object",
         "properties": {},
         "additionalProperties": true,
         "_name_": "scan",
         "title": "scan",
         "description": "\n\nExample(s):\n```\n{\n    \"function\": null,\n    \"state\": null,\n    \"start_time\": null,\n    \"end_time\": null,\n    \"percentage\": null,\n    \"bytes_to_process\": null,\n    \"bytes_processed\": null,\n    \"bytes_issued\": null,\n    \"pause\": null,\n    \"errors\": null,\n    \"total_secs_left\": null\n}\n```\n",
         "default": {},
         "_attrs_order_": []
        },
        "expand": {
         "type": "object",
         "properties": {},
         "additionalProperties": true,
         "_name_": "expand",
         "title": "expand",
         "description": "\n\nExample(s):\n```\n{\n    \"state\": \"FINISHED\",\n    \"expanding_vdev\": 0,\n    \"start_time\": null,\n    \"end_time\": null,\n    \"bytes_to_reflow\": 835584,\n    \"bytes_reflowed\": 978944,\n    \"waiting_for_resilver\": 0,\n    \"total_secs_left\": null,\n    \"percentage\": 85.35564853556485\n}\n```\n",
         "default": {},
         "_attrs_order_": []
        },
        "is_upgraded": {
         "type": "boolean",
         "_name_": "is_upgraded",
         "title": "is_upgraded"
        },
        "healthy": {
         "type": "boolean",
         "_name_": "healthy",
         "title": "healthy"
        },
        "warning": {
         "type": "boolean",
         "_name_": "warning",
         "title": "warning"
        },
        "status_code": {
         "_name_": "status_code",
         "title": "status_code",
         "type": "string",
         "nullable": true
        },
        "status_detail": {
         "_name_": "status_detail",
         "title": "status_detail",
         "type": "string",
         "nullable": true
        },
        "size": {
         "type": "integer",
         "_name_": "size",
         "title": "size",
         "nullable": true
        },
        "allocated": {
         "type": "integer",
         "_name_": "allocated",
         "title": "allocated",
         "nullable": true
        },
        "free": {
         "type": "integer",
         "_name_": "free",
         "title": "free",
         "nullable": true
        },
        "freeing": {
         "type": "integer",
         "_name_": "freeing",
         "title": "freeing",
         "nullable": true
        },
        "dedup_table_size": {
         "type": "integer",
         "_name_": "dedup_table_size",
         "title": "dedup_table_size",
         "nullable": true
        },
        "dedup_table_quota": {
         "_name_": "dedup_table_quota",
         "title": "dedup_table_quota",
         "type": "string",
         "nullable": true
        },
        "fragmentation": {
         "_name_": "fragmentation",
         "title": "fragmentation",
         "type": "string",
         "nullable": true
        },
        "size_str": {
         "_name_": "size_str",
         "title": "size_str",
         "type": "string",
         "nullable": true
        },
        "allocated_str": {
         "_name_": "allocated_str",
         "title": "allocated_str",
         "type": "string",
         "nullable": true
        },
        "free_str": {
         "_name_": "free_str",
         "title": "free_str",
         "type": "string",
         "nullable": true
        },
        "freeing_str": {
         "_name_": "freeing_str",
         "title": "freeing_str",
         "type": "string",
         "nullable": true
        },
        "autotrim": {
         "type": "object",
         "properties": {},
         "additionalProperties": true,
         "_name_": "autotrim",
         "title": "autotrim",
         "description": "\n\nExample(s):\n```\n{\n    \"parsed\": \"off\",\n    \"rawvalue\": \"off\",\n    \"source\": \"DEFAULT\",\n    \"value\": \"off\"\n}\n```\n",
         "default": {},
         "_attrs_order_": []
        },
        "topology": {
         "type": "object",
         "properties": {
          "data": {
           "_name_": "data",
           "title": "data",
           "default": [],
           "type": "array",
           "items": {}
          },
          "log": {
           "_name_": "log",
           "title": "log",
           "default": [],
           "type": "array",
           "items": {}
          },
          "cache": {
           "_name_": "cache",
           "title": "cache",
           "default": [],
           "type": "array",
           "items": {}
          },
          "spare": {
           "_name_": "spare",
           "title": "spare",
           "default": [],
           "type": "array",
           "items": {}
          },
          "special": {
           "_name_": "special",
           "title": "special",
           "default": [],
           "type": "array",
           "items": {}
          },
          "dedup": {
           "_name_": "dedup",
           "title": "dedup",
           "default": [],
           "type": "array",
           "items": {}
          }
         },
         "additionalProperties": false,
         "_name_": "topology",
         "title": "topology",
         "default": {},
         "_attrs_order_": [
          "data",
          "log",
          "cache",
          "spare",
          "special",
          "dedup"
         ]
        }
       },
       "additionalProperties": false,
       "_name_": "get_state",
       "title": "get_state",
       "default": {},
       "_attrs_order_": [
        "name",
        "status",
        "path",
        "scan",
        "expand",
        "is_upgraded",
        "healthy",
        "warning",
        "status_code",
        "status_detail",
        "size",
        "allocated",
        "free",
        "freeing",
        "dedup_table_size",
        "dedup_table_quota",
        "fragmentation",
        "size_str",
        "allocated_str",
        "free_str",
        "freeing_str",
        "autotrim",
        "topology"
       ]
      },
      "boot_replace_0": {
       "_name_": "label",
       "title": "label",
       "type": "string"
      },
      "boot_replace_1": {
       "_name_": "dev",
       "title": "dev",
       "type": "string"
      },
      "boot_replace": {
       "type": "object",
       "properties": {
        "label": {
         "$ref": "#/components/schemas/boot_replace_0"
        },
        "dev": {
         "$ref": "#/components/schemas/boot_replace_1"
        }
       }
      },
      "boot_set_scrub_interval": {
       "type": "integer",
       "_name_": "interval",
       "title": "interval"
      },
      "return_schema_of_boot_set_scrub_interval": {
       "type": "integer",
       "_name_": "interval",
       "title": "interval"
      },
      "boot_environment_activate": {
       "additionalProperties": false,
       "properties": {
        "id": {
         "minLength": 1,
         "title": "id",
         "type": "string",
         "_name_": "id"
        }
       },
       "required": [
        "id"
       ],
       "title": "boot_environment_activate",
       "type": "object",
       "_name_": "boot_environment_activate",
       "_attrs_order_": [
        "id"
       ]
      },
      "return_schema_of_boot_environment_activate": {
       "additionalProperties": false,
       "properties": {
        "id": {
         "description": "The name of the boot environment referenced by the boot environment tool.",
         "minLength": 1,
         "title": "id",
         "type": "string",
         "_name_": "id"
        },
        "dataset": {
         "description": "The name of the zfs dataset that represents the boot environment.",
         "minLength": 1,
         "title": "dataset",
         "type": "string",
         "_name_": "dataset"
        },
        "active": {
         "description": "If active is True, this is the currently running boot environment.",
         "title": "active",
         "type": "boolean",
         "_name_": "active"
        },
        "activated": {
         "description": "If True, this will be the boot environment that is used at next boot.",
         "title": "activated",
         "type": "boolean",
         "_name_": "activated"
        },
        "created": {
         "description": "The date when the boot environment was created.",
         "format": "date-time",
         "title": "created",
         "type": "string",
         "_name_": "created"
        },
        "used_bytes": {
         "description": "The total amount of bytes used by the boot environment.",
         "title": "used_bytes",
         "type": "integer",
         "_name_": "used_bytes"
        },
        "used": {
         "description": "The boot environment's used space in human readable format.",
         "minLength": 1,
         "title": "used",
         "type": "string",
         "_name_": "used"
        },
        "keep": {
         "description": "When set to false, this makes the boot environment subject to\nautomatic deletion if the TrueNAS updater needs space for an update.\nOtherwise, the updater will not delete this boot environment if it is\nset to true.",
         "title": "keep",
         "type": "boolean",
         "_name_": "keep"
        },
        "can_activate": {
         "description": "If set to true, the given boot environment may be activated.",
         "title": "can_activate",
         "type": "boolean",
         "_name_": "can_activate"
        }
       },
       "required": [
        "id",
        "dataset",
        "active",
        "activated",
        "created",
        "used_bytes",
        "used",
        "keep",
        "can_activate"
       ],
       "title": "result",
       "type": "object",
       "_name_": "result",
       "_attrs_order_": [
        "id",
        "dataset",
        "active",
        "activated",
        "created",
        "used_bytes",
        "used",
        "keep",
        "can_activate"
       ]
      },
      "boot_environment_clone": {
       "additionalProperties": false,
       "properties": {
        "id": {
         "minLength": 1,
         "title": "id",
         "type": "string",
         "_name_": "id"
        },
        "target": {
         "minLength": 1,
         "title": "target",
         "type": "string",
         "_name_": "target"
        }
       },
       "required": [
        "id",
        "target"
       ],
       "title": "boot_environment_clone",
       "type": "object",
       "_name_": "boot_environment_clone",
       "_attrs_order_": [
        "id",
        "target"
       ]
      },
      "return_schema_of_boot_environment_clone": {
       "additionalProperties": false,
       "properties": {
        "id": {
         "description": "The name of the boot environment referenced by the boot environment tool.",
         "minLength": 1,
         "title": "id",
         "type": "string",
         "_name_": "id"
        },
        "dataset": {
         "description": "The name of the zfs dataset that represents the boot environment.",
         "minLength": 1,
         "title": "dataset",
         "type": "string",
         "_name_": "dataset"
        },
        "active": {
         "description": "If active is True, this is the currently running boot environment.",
         "title": "active",
         "type": "boolean",
         "_name_": "active"
        },
        "activated": {
         "description": "If True, this will be the boot environment that is used at next boot.",
         "title": "activated",
         "type": "boolean",
         "_name_": "activated"
        },
        "created": {
         "description": "The date when the boot environment was created.",
         "format": "date-time",
         "title": "created",
         "type": "string",
         "_name_": "created"
        },
        "used_bytes": {
         "description": "The total amount of bytes used by the boot environment.",
         "title": "used_bytes",
         "type": "integer",
         "_name_": "used_bytes"
        },
        "used": {
         "description": "The boot environment's used space in human readable format.",
         "minLength": 1,
         "title": "used",
         "type": "string",
         "_name_": "used"
        },
        "keep": {
         "description": "When set to false, this makes the boot environment subject to\nautomatic deletion if the TrueNAS updater needs space for an update.\nOtherwise, the updater will not delete this boot environment if it is\nset to true.",
         "title": "keep",
         "type": "boolean",
         "_name_": "keep"
        },
        "can_activate": {
         "description": "If set to true, the given boot environment may be activated.",
         "title": "can_activate",
         "type": "boolean",
         "_name_": "can_activate"
        }
       },
       "required": [
        "id",
        "dataset",
        "active",
        "activated",
        "created",
        "used_bytes",
        "used",
        "keep",
        "can_activate"
       ],
       "title": "result",
       "type": "object",
       "_name_": "result",
       "_attrs_order_": [
        "id",
        "dataset",
        "active",
        "activated",
        "created",
        "used_bytes",
        "used",
        "keep",
        "can_activate"
       ]
      },
      "boot_environment_destroy": {
       "additionalProperties": false,
       "properties": {
        "id": {
         "minLength": 1,
         "title": "id",
         "type": "string",
         "_name_": "id"
        }
       },
       "required": [
        "id"
       ],
       "title": "boot_environment_destroy",
       "type": "object",
       "_name_": "boot_environment_destroy",
       "_attrs_order_": [
        "id"
       ]
      },
      "return_schema_of_boot_environment_destroy": {
       "title": "result",
       "type": "null",
       "_name_": "result"
      },
      "boot_environment_keep": {
       "additionalProperties": false,
       "properties": {
        "id": {
         "minLength": 1,
         "title": "id",
         "type": "string",
         "_name_": "id"
        },
        "value": {
         "title": "value",
         "type": "boolean",
         "_name_": "value"
        }
       },
       "required": [
        "id",
        "value"
       ],
       "title": "boot_environment_destroy",
       "type": "object",
       "_name_": "boot_environment_destroy",
       "_attrs_order_": [
        "id",
        "value"
       ]
      },
      "return_schema_of_boot_environment_keep": {
       "additionalProperties": false,
       "properties": {
        "id": {
         "description": "The name of the boot environment referenced by the boot environment tool.",
         "minLength": 1,
         "title": "id",
         "type": "string",
         "_name_": "id"
        },
        "dataset": {
         "description": "The name of the zfs dataset that represents the boot environment.",
         "minLength": 1,
         "title": "dataset",
         "type": "string",
         "_name_": "dataset"
        },
        "active": {
         "description": "If active is True, this is the currently running boot environment.",
         "title": "active",
         "type": "boolean",
         "_name_": "active"
        },
        "activated": {
         "description": "If True, this will be the boot environment that is used at next boot.",
         "title": "activated",
         "type": "boolean",
         "_name_": "activated"
        },
        "created": {
         "description": "The date when the boot environment was created.",
         "format": "date-time",
         "title": "created",
         "type": "string",
         "_name_": "created"
        },
        "used_bytes": {
         "description": "The total amount of bytes used by the boot environment.",
         "title": "used_bytes",
         "type": "integer",
         "_name_": "used_bytes"
        },
        "used": {
         "description": "The boot environment's used space in human readable format.",
         "minLength": 1,
         "title": "used",
         "type": "string",
         "_name_": "used"
        },
        "keep": {
         "description": "When set to false, this makes the boot environment subject to\nautomatic deletion if the TrueNAS updater needs space for an update.\nOtherwise, the updater will not delete this boot environment if it is\nset to true.",
         "title": "keep",
         "type": "boolean",
         "_name_": "keep"
        },
        "can_activate": {
         "description": "If set to true, the given boot environment may be activated.",
         "title": "can_activate",
         "type": "boolean",
         "_name_": "can_activate"
        }
       },
       "required": [
        "id",
        "dataset",
        "active",
        "activated",
        "created",
        "used_bytes",
        "used",
        "keep",
        "can_activate"
       ],
       "title": "result",
       "type": "object",
       "_name_": "result",
       "_attrs_order_": [
        "id",
        "dataset",
        "active",
        "activated",
        "created",
        "used_bytes",
        "used",
        "keep",
        "can_activate"
       ]
      },
      "return_schema_of_boot_environment_query": {
       "anyOf": [
        {
         "items": [
          {
           "additionalProperties": false,
           "properties": {
            "id": {
             "description": "The name of the boot environment referenced by the boot environment tool.",
             "minLength": 1,
             "title": "id",
             "type": "string",
             "_name_": "id",
             "_required_": false
            },
            "dataset": {
             "description": "The name of the zfs dataset that represents the boot environment.",
             "minLength": 1,
             "title": "dataset",
             "type": "string",
             "_name_": "dataset",
             "_required_": false
            },
            "active": {
             "description": "If active is True, this is the currently running boot environment.",
             "title": "active",
             "type": "boolean",
             "_name_": "active",
             "_required_": false
            },
            "activated": {
             "description": "If True, this will be the boot environment that is used at next boot.",
             "title": "activated",
             "type": "boolean",
             "_name_": "activated",
             "_required_": false
            },
            "created": {
             "description": "The date when the boot environment was created.",
             "format": "date-time",
             "title": "created",
             "type": "string",
             "_name_": "created",
             "_required_": false
            },
            "used_bytes": {
             "description": "The total amount of bytes used by the boot environment.",
             "title": "used_bytes",
             "type": "integer",
             "_name_": "used_bytes",
             "_required_": false
            },
            "used": {
             "description": "The boot environment's used space in human readable format.",
             "minLength": 1,
             "title": "used",
             "type": "string",
             "_name_": "used",
             "_required_": false
            },
            "keep": {
             "description": "When set to false, this makes the boot environment subject to\nautomatic deletion if the TrueNAS updater needs space for an update.\nOtherwise, the updater will not delete this boot environment if it is\nset to true.",
             "title": "keep",
             "type": "boolean",
             "_name_": "keep",
             "_required_": false
            },
            "can_activate": {
             "description": "If set to true, the given boot environment may be activated.",
             "title": "can_activate",
             "type": "boolean",
             "_name_": "can_activate",
             "_required_": false
            }
           },
           "title": "BootEnvironmentQueryResultItem",
           "type": "object",
           "_attrs_order_": [
            "id",
            "dataset",
            "active",
            "activated",
            "created",
            "used_bytes",
            "used",
            "keep",
            "can_activate"
           ]
          }
         ],
         "type": "array"
        },
        {
         "additionalProperties": false,
         "properties": {
          "id": {
           "description": "The name of the boot environment referenced by the boot environment tool.",
           "minLength": 1,
           "title": "id",
           "type": "string",
           "_name_": "id",
           "_required_": false
          },
          "dataset": {
           "description": "The name of the zfs dataset that represents the boot environment.",
           "minLength": 1,
           "title": "dataset",
           "type": "string",
           "_name_": "dataset",
           "_required_": false
          },
          "active": {
           "description": "If active is True, this is the currently running boot environment.",
           "title": "active",
           "type": "boolean",
           "_name_": "active",
           "_required_": false
          },
          "activated": {
           "description": "If True, this will be the boot environment that is used at next boot.",
           "title": "activated",
           "type": "boolean",
           "_name_": "activated",
           "_required_": false
          },
          "created": {
           "description": "The date when the boot environment was created.",
           "format": "date-time",
           "title": "created",
           "type": "string",
           "_name_": "created",
           "_required_": false
          },
          "used_bytes": {
           "description": "The total amount of bytes used by the boot environment.",
           "title": "used_bytes",
           "type": "integer",
           "_name_": "used_bytes",
           "_required_": false
          },
          "used": {
           "description": "The boot environment's used space in human readable format.",
           "minLength": 1,
           "title": "used",
           "type": "string",
           "_name_": "used",
           "_required_": false
          },
          "keep": {
           "description": "When set to false, this makes the boot environment subject to\nautomatic deletion if the TrueNAS updater needs space for an update.\nOtherwise, the updater will not delete this boot environment if it is\nset to true.",
           "title": "keep",
           "type": "boolean",
           "_name_": "keep",
           "_required_": false
          },
          "can_activate": {
           "description": "If set to true, the given boot environment may be activated.",
           "title": "can_activate",
           "type": "boolean",
           "_name_": "can_activate",
           "_required_": false
          }
         },
         "title": "BootEnvironmentQueryResultItem",
         "type": "object",
         "_attrs_order_": [
          "id",
          "dataset",
          "active",
          "activated",
          "created",
          "used_bytes",
          "used",
          "keep",
          "can_activate"
         ]
        },
        {
         "type": "integer"
        }
       ],
       "title": "result",
       "_name_": "result"
      },
      "return_schema_of_catalog_config": {
       "additionalProperties": false,
       "properties": {
        "id": {
         "minLength": 1,
         "title": "id",
         "type": "string",
         "_name_": "id"
        },
        "label": {
         "minLength": 1,
         "pattern": "^\\w+[\\w.-]*$",
         "title": "label",
         "type": "string",
         "_name_": "label"
        },
        "preferred_trains": {
         "items": {
          "minLength": 1,
          "type": "string"
         },
         "title": "preferred_trains",
         "type": "array",
         "_name_": "preferred_trains"
        },
        "location": {
         "minLength": 1,
         "title": "location",
         "type": "string",
         "_name_": "location"
        }
       },
       "required": [
        "id",
        "label",
        "preferred_trains",
        "location"
       ],
       "title": "result",
       "type": "object",
       "_name_": "result",
       "_attrs_order_": [
        "id",
        "label",
        "preferred_trains",
        "location"
       ]
      },
      "catalog_update": {
       "additionalProperties": false,
       "properties": {
        "preferred_trains": {
         "items": {
          "minLength": 1,
          "type": "string"
         },
         "title": "preferred_trains",
         "type": "array",
         "_name_": "preferred_trains"
        }
       },
       "title": "catalog_update",
       "type": "object",
       "_name_": "catalog_update",
       "_attrs_order_": [
        "preferred_trains"
       ]
      },
      "return_schema_of_catalog_update": {
       "additionalProperties": false,
       "properties": {
        "id": {
         "minLength": 1,
         "title": "id",
         "type": "string",
         "_name_": "id"
        },
        "label": {
         "minLength": 1,
         "pattern": "^\\w+[\\w.-]*$",
         "title": "label",
         "type": "string",
         "_name_": "label"
        },
        "preferred_trains": {
         "items": {
          "minLength": 1,
          "type": "string"
         },
         "title": "preferred_trains",
         "type": "array",
         "_name_": "preferred_trains"
        },
        "location": {
         "minLength": 1,
         "title": "location",
         "type": "string",
         "_name_": "location"
        }
       },
       "required": [
        "id",
        "label",
        "preferred_trains",
        "location"
       ],
       "title": "result",
       "type": "object",
       "_name_": "result",
       "_attrs_order_": [
        "id",
        "label",
        "preferred_trains",
        "location"
       ]
      },
      "catalog_apps": {
       "additionalProperties": false,
       "properties": {
        "cache": {
         "default": true,
         "title": "cache",
         "type": "boolean",
         "_name_": "cache"
        },
        "cache_only": {
         "default": false,
         "title": "cache_only",
         "type": "boolean",
         "_name_": "cache_only"
        },
        "retrieve_all_trains": {
         "default": true,
         "title": "retrieve_all_trains",
         "type": "boolean",
         "_name_": "retrieve_all_trains"
        },
        "trains": {
         "items": {
          "minLength": 1,
          "type": "string"
         },
         "title": "trains",
         "type": "array",
         "_name_": "trains"
        }
       },
       "title": "catalog_apps_options",
       "type": "object",
       "_name_": "catalog_apps_options",
       "_attrs_order_": [
        "cache",
        "cache_only",
        "retrieve_all_trains",
        "trains"
       ]
      },
      "return_schema_of_catalog_apps": {
       "additionalProperties": {
        "additionalProperties": {},
        "title": "CatalogTrainInfo",
        "type": "object"
       },
       "title": "result",
       "type": "object",
       "_name_": "result"
      },
      "catalog_get_app_details_0": {
       "minLength": 1,
       "title": "app_name",
       "type": "string",
       "_name_": "app_name"
      },
      "catalog_get_app_details_1": {
       "additionalProperties": false,
       "properties": {
        "train": {
         "minLength": 1,
         "title": "train",
         "type": "string",
         "_name_": "train"
        }
       },
       "required": [
        "train"
       ],
       "title": "app_version_details",
       "type": "object",
       "_name_": "app_version_details",
       "_attrs_order_": [
        "train"
       ]
      },
      "catalog_get_app_details": {
       "type": "object",
       "properties": {
        "app_name": {
         "$ref": "#/components/schemas/catalog_get_app_details_0"
        },
        "app_version_details": {
         "$ref": "#/components/schemas/catalog_get_app_details_1"
        }
       }
      },
      "return_schema_of_catalog_get_app_details": {
       "additionalProperties": true,
       "properties": {
        "app_readme": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "description": "HTML content of the app README.",
         "title": "app_readme",
         "_name_": "app_readme"
        },
        "categories": {
         "description": "List of categories for the app.",
         "items": {
          "type": "string"
         },
         "title": "categories",
         "type": "array",
         "_name_": "categories"
        },
        "description": {
         "description": "Short description of the app.",
         "title": "description",
         "type": "string",
         "_name_": "description"
        },
        "healthy": {
         "description": "Health status of the app.",
         "title": "healthy",
         "type": "boolean",
         "_name_": "healthy"
        },
        "healthy_error": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "description": "Error if app is not healthy.",
         "title": "healthy_error",
         "_name_": "healthy_error"
        },
        "home": {
         "description": "Homepage URL of the app.",
         "title": "home",
         "type": "string",
         "_name_": "home"
        },
        "location": {
         "description": "Local path to the app's location.",
         "title": "location",
         "type": "string",
         "_name_": "location"
        },
        "latest_version": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "description": "Latest available app version.",
         "title": "latest_version",
         "_name_": "latest_version"
        },
        "latest_app_version": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "description": "Latest available app version in repository.",
         "title": "latest_app_version",
         "_name_": "latest_app_version"
        },
        "latest_human_version": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "description": "Human-readable version of the app.",
         "title": "latest_human_version",
         "_name_": "latest_human_version"
        },
        "last_update": {
         "anyOf": [
          {
           "format": "date-time",
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "description": "Timestamp of the last update in ISO format.",
         "title": "last_update",
         "_name_": "last_update"
        },
        "name": {
         "description": "Name of the app.",
         "title": "name",
         "type": "string",
         "_name_": "name"
        },
        "recommended": {
         "description": "Indicates if the app is recommended.",
         "title": "recommended",
         "type": "boolean",
         "_name_": "recommended"
        },
        "title": {
         "description": "Title of the app.",
         "title": "title",
         "type": "string",
         "_name_": "title"
        },
        "maintainers": {
         "description": "List of app maintainers.",
         "items": {},
         "title": "maintainers",
         "type": "array",
         "_name_": "maintainers"
        },
        "tags": {
         "description": "Tags associated with the app.",
         "items": {
          "type": "string"
         },
         "title": "tags",
         "type": "array",
         "_name_": "tags"
        },
        "screenshots": {
         "description": "List of screenshot URLs.",
         "items": {
          "type": "string"
         },
         "title": "screenshots",
         "type": "array",
         "_name_": "screenshots"
        },
        "sources": {
         "description": "List of source URLs.",
         "items": {
          "type": "string"
         },
         "title": "sources",
         "type": "array",
         "_name_": "sources"
        },
        "icon_url": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "description": "URL of the app icon",
         "title": "icon_url",
         "_name_": "icon_url"
        }
       },
       "required": [
        "app_readme",
        "categories",
        "description",
        "healthy",
        "home",
        "location",
        "latest_version",
        "latest_app_version",
        "latest_human_version",
        "last_update",
        "name",
        "recommended",
        "title",
        "maintainers",
        "tags",
        "screenshots",
        "sources"
       ],
       "title": "result",
       "type": "object",
       "_name_": "result",
       "_attrs_order_": [
        "app_readme",
        "categories",
        "description",
        "healthy",
        "healthy_error",
        "home",
        "location",
        "latest_version",
        "latest_app_version",
        "latest_human_version",
        "last_update",
        "name",
        "recommended",
        "title",
        "maintainers",
        "tags",
        "screenshots",
        "sources",
        "icon_url"
       ]
      },
      "return_schema_of_catalog_sync": {
       "title": "result",
       "type": "null",
       "_name_": "result"
      },
      "return_schema_of_catalog_trains": {
       "items": {
        "minLength": 1,
        "type": "string"
       },
       "title": "result",
       "type": "array",
       "_name_": "result"
      },
      "return_schema_of_certificate_query": {
       "anyOf": [
        {
         "_name_": "query_result",
         "title": "query_result",
         "default": [],
         "_required_": false,
         "type": "array",
         "items": [
          {
           "type": "object",
           "properties": {
            "id": {
             "type": "integer",
             "_name_": "id",
             "title": "id",
             "_required_": false
            },
            "type": {
             "type": "integer",
             "_name_": "type",
             "title": "type",
             "_required_": false
            },
            "name": {
             "_name_": "name",
             "title": "name",
             "_required_": false,
             "type": "string"
            },
            "certificate": {
             "_name_": "certificate",
             "title": "certificate",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "privatekey": {
             "_name_": "privatekey",
             "title": "privatekey",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "CSR": {
             "_name_": "CSR",
             "title": "CSR",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "acme_uri": {
             "_name_": "acme_uri",
             "title": "acme_uri",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "domains_authenticators": {
             "type": "object",
             "properties": {},
             "additionalProperties": true,
             "_name_": "domains_authenticators",
             "title": "domains_authenticators",
             "default": {},
             "_required_": false,
             "_attrs_order_": []
            },
            "renew_days": {
             "type": "integer",
             "_name_": "renew_days",
             "title": "renew_days",
             "_required_": false
            },
            "revoked_date": {
             "_name_": "revoked_date",
             "title": "revoked_date",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "signedby": {
             "type": "object",
             "properties": {},
             "additionalProperties": true,
             "_name_": "signedby",
             "title": "signedby",
             "default": {},
             "_required_": false,
             "_attrs_order_": []
            },
            "root_path": {
             "_name_": "root_path",
             "title": "root_path",
             "_required_": false,
             "type": "string"
            },
            "acme": {
             "type": "object",
             "properties": {},
             "additionalProperties": true,
             "_name_": "acme",
             "title": "acme",
             "default": {},
             "_required_": false,
             "_attrs_order_": []
            },
            "certificate_path": {
             "_name_": "certificate_path",
             "title": "certificate_path",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "privatekey_path": {
             "_name_": "privatekey_path",
             "title": "privatekey_path",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "csr_path": {
             "_name_": "csr_path",
             "title": "csr_path",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "cert_type": {
             "_name_": "cert_type",
             "title": "cert_type",
             "_required_": false,
             "type": "string"
            },
            "revoked": {
             "type": "boolean",
             "_name_": "revoked",
             "title": "revoked",
             "_required_": false
            },
            "expired": {
             "type": [
              "boolean",
              "null"
             ],
             "_name_": "expired",
             "title": "expired",
             "_required_": false
            },
            "issuer": {
             "anyOf": [
              {
               "_name_": "issuer",
               "title": "issuer",
               "_required_": false,
               "type": [
                "string",
                "null"
               ]
              },
              {
               "type": "object",
               "properties": {},
               "additionalProperties": true,
               "_name_": "issuer",
               "title": "issuer",
               "default": {},
               "_required_": false,
               "_attrs_order_": []
              }
             ],
             "nullable": false,
             "_name_": "issuer",
             "description": null,
             "_required_": false
            },
            "chain_list": {
             "_name_": "chain_list",
             "title": "chain_list",
             "default": [],
             "_required_": false,
             "type": "array",
             "items": [
              {
               "_name_": "certificate",
               "title": "certificate",
               "_required_": false,
               "type": "string"
              }
             ]
            },
            "country": {
             "_name_": "country",
             "title": "country",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "state": {
             "_name_": "state",
             "title": "state",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "city": {
             "_name_": "city",
             "title": "city",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "organization": {
             "_name_": "organization",
             "title": "organization",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "organizational_unit": {
             "_name_": "organizational_unit",
             "title": "organizational_unit",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "san": {
             "_name_": "san",
             "title": "san",
             "default": [],
             "_required_": false,
             "type": [
              "array",
              "null"
             ],
             "items": [
              {
               "_name_": "san_entry",
               "title": "san_entry",
               "_required_": false,
               "type": "string"
              }
             ]
            },
            "email": {
             "_name_": "email",
             "title": "email",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "DN": {
             "_name_": "DN",
             "title": "DN",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "subject_name_hash": {
             "_name_": "subject_name_hash",
             "title": "subject_name_hash",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "digest_algorithm": {
             "_name_": "digest_algorithm",
             "title": "digest_algorithm",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "from": {
             "_name_": "from",
             "title": "from",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "common": {
             "_name_": "common",
             "title": "common",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "until": {
             "_name_": "until",
             "title": "until",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "fingerprint": {
             "_name_": "fingerprint",
             "title": "fingerprint",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "key_type": {
             "_name_": "key_type",
             "title": "key_type",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "internal": {
             "_name_": "internal",
             "title": "internal",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "lifetime": {
             "type": [
              "integer",
              "null"
             ],
             "_name_": "lifetime",
             "title": "lifetime",
             "_required_": false
            },
            "serial": {
             "type": [
              "integer",
              "null"
             ],
             "_name_": "serial",
             "title": "serial",
             "_required_": false
            },
            "key_length": {
             "type": [
              "integer",
              "null"
             ],
             "_name_": "key_length",
             "title": "key_length",
             "_required_": false
            },
            "add_to_trusted_store": {
             "type": "boolean",
             "_name_": "add_to_trusted_store",
             "title": "add_to_trusted_store",
             "default": false,
             "_required_": false
            },
            "chain": {
             "type": [
              "boolean",
              "null"
             ],
             "_name_": "chain",
             "title": "chain",
             "_required_": false
            },
            "CA_type_existing": {
             "type": "boolean",
             "_name_": "CA_type_existing",
             "title": "CA_type_existing",
             "_required_": false
            },
            "CA_type_internal": {
             "type": "boolean",
             "_name_": "CA_type_internal",
             "title": "CA_type_internal",
             "_required_": false
            },
            "CA_type_intermediate": {
             "type": "boolean",
             "_name_": "CA_type_intermediate",
             "title": "CA_type_intermediate",
             "_required_": false
            },
            "cert_type_existing": {
             "type": "boolean",
             "_name_": "cert_type_existing",
             "title": "cert_type_existing",
             "_required_": false
            },
            "cert_type_internal": {
             "type": "boolean",
             "_name_": "cert_type_internal",
             "title": "cert_type_internal",
             "_required_": false
            },
            "cert_type_CSR": {
             "type": "boolean",
             "_name_": "cert_type_CSR",
             "title": "cert_type_CSR",
             "_required_": false
            },
            "parsed": {
             "type": "boolean",
             "_name_": "parsed",
             "title": "parsed",
             "_required_": false
            },
            "can_be_revoked": {
             "type": "boolean",
             "_name_": "can_be_revoked",
             "title": "can_be_revoked",
             "_required_": false
            },
            "extensions": {
             "type": "object",
             "properties": {},
             "additionalProperties": true,
             "_name_": "extensions",
             "title": "extensions",
             "default": {},
             "_required_": false,
             "_attrs_order_": []
            },
            "revoked_certs": {
             "_name_": "revoked_certs",
             "title": "revoked_certs",
             "default": [],
             "_required_": false,
             "type": "array",
             "items": []
            },
            "crl_path": {
             "_name_": "crl_path",
             "title": "crl_path",
             "_required_": false,
             "type": "string"
            },
            "signed_certificates": {
             "type": "integer",
             "_name_": "signed_certificates",
             "title": "signed_certificates",
             "_required_": false
            }
           },
           "additionalProperties": false,
           "_name_": "certificate_entry",
           "title": "certificate_entry",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "id",
            "type",
            "name",
            "certificate",
            "privatekey",
            "CSR",
            "acme_uri",
            "domains_authenticators",
            "renew_days",
            "revoked_date",
            "signedby",
            "root_path",
            "acme",
            "certificate_path",
            "privatekey_path",
            "csr_path",
            "cert_type",
            "revoked",
            "expired",
            "issuer",
            "chain_list",
            "country",
            "state",
            "city",
            "organization",
            "organizational_unit",
            "san",
            "email",
            "DN",
            "subject_name_hash",
            "digest_algorithm",
            "from",
            "common",
            "until",
            "fingerprint",
            "key_type",
            "internal",
            "lifetime",
            "serial",
            "key_length",
            "add_to_trusted_store",
            "chain",
            "CA_type_existing",
            "CA_type_internal",
            "CA_type_intermediate",
            "cert_type_existing",
            "cert_type_internal",
            "cert_type_CSR",
            "parsed",
            "can_be_revoked",
            "extensions",
            "revoked_certs",
            "crl_path",
            "signed_certificates"
           ]
          }
         ]
        },
        {
         "type": "object",
         "properties": {
          "id": {
           "type": "integer",
           "_name_": "id",
           "title": "id",
           "_required_": false
          },
          "type": {
           "type": "integer",
           "_name_": "type",
           "title": "type",
           "_required_": false
          },
          "name": {
           "_name_": "name",
           "title": "name",
           "_required_": false,
           "type": "string"
          },
          "certificate": {
           "_name_": "certificate",
           "title": "certificate",
           "_required_": false,
           "type": [
            "string",
            "null"
           ]
          },
          "privatekey": {
           "_name_": "privatekey",
           "title": "privatekey",
           "_required_": false,
           "type": [
            "string",
            "null"
           ]
          },
          "CSR": {
           "_name_": "CSR",
           "title": "CSR",
           "_required_": false,
           "type": [
            "string",
            "null"
           ]
          },
          "acme_uri": {
           "_name_": "acme_uri",
           "title": "acme_uri",
           "_required_": false,
           "type": [
            "string",
            "null"
           ]
          },
          "domains_authenticators": {
           "type": "object",
           "properties": {},
           "additionalProperties": true,
           "_name_": "domains_authenticators",
           "title": "domains_authenticators",
           "default": {},
           "_required_": false,
           "_attrs_order_": []
          },
          "renew_days": {
           "type": "integer",
           "_name_": "renew_days",
           "title": "renew_days",
           "_required_": false
          },
          "revoked_date": {
           "_name_": "revoked_date",
           "title": "revoked_date",
           "_required_": false,
           "type": [
            "string",
            "null"
           ]
          },
          "signedby": {
           "type": "object",
           "properties": {},
           "additionalProperties": true,
           "_name_": "signedby",
           "title": "signedby",
           "default": {},
           "_required_": false,
           "_attrs_order_": []
          },
          "root_path": {
           "_name_": "root_path",
           "title": "root_path",
           "_required_": false,
           "type": "string"
          },
          "acme": {
           "type": "object",
           "properties": {},
           "additionalProperties": true,
           "_name_": "acme",
           "title": "acme",
           "default": {},
           "_required_": false,
           "_attrs_order_": []
          },
          "certificate_path": {
           "_name_": "certificate_path",
           "title": "certificate_path",
           "_required_": false,
           "type": [
            "string",
            "null"
           ]
          },
          "privatekey_path": {
           "_name_": "privatekey_path",
           "title": "privatekey_path",
           "_required_": false,
           "type": [
            "string",
            "null"
           ]
          },
          "csr_path": {
           "_name_": "csr_path",
           "title": "csr_path",
           "_required_": false,
           "type": [
            "string",
            "null"
           ]
          },
          "cert_type": {
           "_name_": "cert_type",
           "title": "cert_type",
           "_required_": false,
           "type": "string"
          },
          "revoked": {
           "type": "boolean",
           "_name_": "revoked",
           "title": "revoked",
           "_required_": false
          },
          "expired": {
           "type": [
            "boolean",
            "null"
           ],
           "_name_": "expired",
           "title": "expired",
           "_required_": false
          },
          "issuer": {
           "anyOf": [
            {
             "_name_": "issuer",
             "title": "issuer",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            {
             "type": "object",
             "properties": {},
             "additionalProperties": true,
             "_name_": "issuer",
             "title": "issuer",
             "default": {},
             "_required_": false,
             "_attrs_order_": []
            }
           ],
           "nullable": false,
           "_name_": "issuer",
           "description": null,
           "_required_": false
          },
          "chain_list": {
           "_name_": "chain_list",
           "title": "chain_list",
           "default": [],
           "_required_": false,
           "type": "array",
           "items": [
            {
             "_name_": "certificate",
             "title": "certificate",
             "_required_": false,
             "type": "string"
            }
           ]
          },
          "country": {
           "_name_": "country",
           "title": "country",
           "_required_": false,
           "type": [
            "string",
            "null"
           ]
          },
          "state": {
           "_name_": "state",
           "title": "state",
           "_required_": false,
           "type": [
            "string",
            "null"
           ]
          },
          "city": {
           "_name_": "city",
           "title": "city",
           "_required_": false,
           "type": [
            "string",
            "null"
           ]
          },
          "organization": {
           "_name_": "organization",
           "title": "organization",
           "_required_": false,
           "type": [
            "string",
            "null"
           ]
          },
          "organizational_unit": {
           "_name_": "organizational_unit",
           "title": "organizational_unit",
           "_required_": false,
           "type": [
            "string",
            "null"
           ]
          },
          "san": {
           "_name_": "san",
           "title": "san",
           "default": [],
           "_required_": false,
           "type": [
            "array",
            "null"
           ],
           "items": [
            {
             "_name_": "san_entry",
             "title": "san_entry",
             "_required_": false,
             "type": "string"
            }
           ]
          },
          "email": {
           "_name_": "email",
           "title": "email",
           "_required_": false,
           "type": [
            "string",
            "null"
           ]
          },
          "DN": {
           "_name_": "DN",
           "title": "DN",
           "_required_": false,
           "type": [
            "string",
            "null"
           ]
          },
          "subject_name_hash": {
           "_name_": "subject_name_hash",
           "title": "subject_name_hash",
           "_required_": false,
           "type": [
            "string",
            "null"
           ]
          },
          "digest_algorithm": {
           "_name_": "digest_algorithm",
           "title": "digest_algorithm",
           "_required_": false,
           "type": [
            "string",
            "null"
           ]
          },
          "from": {
           "_name_": "from",
           "title": "from",
           "_required_": false,
           "type": [
            "string",
            "null"
           ]
          },
          "common": {
           "_name_": "common",
           "title": "common",
           "_required_": false,
           "type": [
            "string",
            "null"
           ]
          },
          "until": {
           "_name_": "until",
           "title": "until",
           "_required_": false,
           "type": [
            "string",
            "null"
           ]
          },
          "fingerprint": {
           "_name_": "fingerprint",
           "title": "fingerprint",
           "_required_": false,
           "type": [
            "string",
            "null"
           ]
          },
          "key_type": {
           "_name_": "key_type",
           "title": "key_type",
           "_required_": false,
           "type": [
            "string",
            "null"
           ]
          },
          "internal": {
           "_name_": "internal",
           "title": "internal",
           "_required_": false,
           "type": [
            "string",
            "null"
           ]
          },
          "lifetime": {
           "type": [
            "integer",
            "null"
           ],
           "_name_": "lifetime",
           "title": "lifetime",
           "_required_": false
          },
          "serial": {
           "type": [
            "integer",
            "null"
           ],
           "_name_": "serial",
           "title": "serial",
           "_required_": false
          },
          "key_length": {
           "type": [
            "integer",
            "null"
           ],
           "_name_": "key_length",
           "title": "key_length",
           "_required_": false
          },
          "add_to_trusted_store": {
           "type": "boolean",
           "_name_": "add_to_trusted_store",
           "title": "add_to_trusted_store",
           "default": false,
           "_required_": false
          },
          "chain": {
           "type": [
            "boolean",
            "null"
           ],
           "_name_": "chain",
           "title": "chain",
           "_required_": false
          },
          "CA_type_existing": {
           "type": "boolean",
           "_name_": "CA_type_existing",
           "title": "CA_type_existing",
           "_required_": false
          },
          "CA_type_internal": {
           "type": "boolean",
           "_name_": "CA_type_internal",
           "title": "CA_type_internal",
           "_required_": false
          },
          "CA_type_intermediate": {
           "type": "boolean",
           "_name_": "CA_type_intermediate",
           "title": "CA_type_intermediate",
           "_required_": false
          },
          "cert_type_existing": {
           "type": "boolean",
           "_name_": "cert_type_existing",
           "title": "cert_type_existing",
           "_required_": false
          },
          "cert_type_internal": {
           "type": "boolean",
           "_name_": "cert_type_internal",
           "title": "cert_type_internal",
           "_required_": false
          },
          "cert_type_CSR": {
           "type": "boolean",
           "_name_": "cert_type_CSR",
           "title": "cert_type_CSR",
           "_required_": false
          },
          "parsed": {
           "type": "boolean",
           "_name_": "parsed",
           "title": "parsed",
           "_required_": false
          },
          "can_be_revoked": {
           "type": "boolean",
           "_name_": "can_be_revoked",
           "title": "can_be_revoked",
           "_required_": false
          },
          "extensions": {
           "type": "object",
           "properties": {},
           "additionalProperties": true,
           "_name_": "extensions",
           "title": "extensions",
           "default": {},
           "_required_": false,
           "_attrs_order_": []
          },
          "revoked_certs": {
           "_name_": "revoked_certs",
           "title": "revoked_certs",
           "default": [],
           "_required_": false,
           "type": "array",
           "items": []
          },
          "crl_path": {
           "_name_": "crl_path",
           "title": "crl_path",
           "_required_": false,
           "type": "string"
          },
          "signed_certificates": {
           "type": "integer",
           "_name_": "signed_certificates",
           "title": "signed_certificates",
           "_required_": false
          }
         },
         "additionalProperties": false,
         "_name_": "certificate_entry",
         "title": "certificate_entry",
         "default": {},
         "_required_": false,
         "_attrs_order_": [
          "id",
          "type",
          "name",
          "certificate",
          "privatekey",
          "CSR",
          "acme_uri",
          "domains_authenticators",
          "renew_days",
          "revoked_date",
          "signedby",
          "root_path",
          "acme",
          "certificate_path",
          "privatekey_path",
          "csr_path",
          "cert_type",
          "revoked",
          "expired",
          "issuer",
          "chain_list",
          "country",
          "state",
          "city",
          "organization",
          "organizational_unit",
          "san",
          "email",
          "DN",
          "subject_name_hash",
          "digest_algorithm",
          "from",
          "common",
          "until",
          "fingerprint",
          "key_type",
          "internal",
          "lifetime",
          "serial",
          "key_length",
          "add_to_trusted_store",
          "chain",
          "CA_type_existing",
          "CA_type_internal",
          "CA_type_intermediate",
          "cert_type_existing",
          "cert_type_internal",
          "cert_type_CSR",
          "parsed",
          "can_be_revoked",
          "extensions",
          "revoked_certs",
          "crl_path",
          "signed_certificates"
         ]
        },
        {
         "type": "integer",
         "_name_": "count",
         "title": "count",
         "_required_": false
        },
        {
         "type": "object",
         "properties": {
          "id": {
           "type": "integer",
           "_name_": "id",
           "title": "id",
           "_required_": false
          },
          "type": {
           "type": "integer",
           "_name_": "type",
           "title": "type",
           "_required_": false
          },
          "name": {
           "_name_": "name",
           "title": "name",
           "_required_": false,
           "type": "string"
          },
          "certificate": {
           "_name_": "certificate",
           "title": "certificate",
           "_required_": false,
           "type": [
            "string",
            "null"
           ]
          },
          "privatekey": {
           "_name_": "privatekey",
           "title": "privatekey",
           "_required_": false,
           "type": [
            "string",
            "null"
           ]
          },
          "CSR": {
           "_name_": "CSR",
           "title": "CSR",
           "_required_": false,
           "type": [
            "string",
            "null"
           ]
          },
          "acme_uri": {
           "_name_": "acme_uri",
           "title": "acme_uri",
           "_required_": false,
           "type": [
            "string",
            "null"
           ]
          },
          "domains_authenticators": {
           "type": "object",
           "properties": {},
           "additionalProperties": true,
           "_name_": "domains_authenticators",
           "title": "domains_authenticators",
           "default": {},
           "_required_": false,
           "_attrs_order_": []
          },
          "renew_days": {
           "type": "integer",
           "_name_": "renew_days",
           "title": "renew_days",
           "_required_": false
          },
          "revoked_date": {
           "_name_": "revoked_date",
           "title": "revoked_date",
           "_required_": false,
           "type": [
            "string",
            "null"
           ]
          },
          "signedby": {
           "type": "object",
           "properties": {},
           "additionalProperties": true,
           "_name_": "signedby",
           "title": "signedby",
           "default": {},
           "_required_": false,
           "_attrs_order_": []
          },
          "root_path": {
           "_name_": "root_path",
           "title": "root_path",
           "_required_": false,
           "type": "string"
          },
          "acme": {
           "type": "object",
           "properties": {},
           "additionalProperties": true,
           "_name_": "acme",
           "title": "acme",
           "default": {},
           "_required_": false,
           "_attrs_order_": []
          },
          "certificate_path": {
           "_name_": "certificate_path",
           "title": "certificate_path",
           "_required_": false,
           "type": [
            "string",
            "null"
           ]
          },
          "privatekey_path": {
           "_name_": "privatekey_path",
           "title": "privatekey_path",
           "_required_": false,
           "type": [
            "string",
            "null"
           ]
          },
          "csr_path": {
           "_name_": "csr_path",
           "title": "csr_path",
           "_required_": false,
           "type": [
            "string",
            "null"
           ]
          },
          "cert_type": {
           "_name_": "cert_type",
           "title": "cert_type",
           "_required_": false,
           "type": "string"
          },
          "revoked": {
           "type": "boolean",
           "_name_": "revoked",
           "title": "revoked",
           "_required_": false
          },
          "expired": {
           "type": [
            "boolean",
            "null"
           ],
           "_name_": "expired",
           "title": "expired",
           "_required_": false
          },
          "issuer": {
           "anyOf": [
            {
             "_name_": "issuer",
             "title": "issuer",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            {
             "type": "object",
             "properties": {},
             "additionalProperties": true,
             "_name_": "issuer",
             "title": "issuer",
             "default": {},
             "_required_": false,
             "_attrs_order_": []
            }
           ],
           "nullable": false,
           "_name_": "issuer",
           "description": null,
           "_required_": false
          },
          "chain_list": {
           "_name_": "chain_list",
           "title": "chain_list",
           "default": [],
           "_required_": false,
           "type": "array",
           "items": [
            {
             "_name_": "certificate",
             "title": "certificate",
             "_required_": false,
             "type": "string"
            }
           ]
          },
          "country": {
           "_name_": "country",
           "title": "country",
           "_required_": false,
           "type": [
            "string",
            "null"
           ]
          },
          "state": {
           "_name_": "state",
           "title": "state",
           "_required_": false,
           "type": [
            "string",
            "null"
           ]
          },
          "city": {
           "_name_": "city",
           "title": "city",
           "_required_": false,
           "type": [
            "string",
            "null"
           ]
          },
          "organization": {
           "_name_": "organization",
           "title": "organization",
           "_required_": false,
           "type": [
            "string",
            "null"
           ]
          },
          "organizational_unit": {
           "_name_": "organizational_unit",
           "title": "organizational_unit",
           "_required_": false,
           "type": [
            "string",
            "null"
           ]
          },
          "san": {
           "_name_": "san",
           "title": "san",
           "default": [],
           "_required_": false,
           "type": [
            "array",
            "null"
           ],
           "items": [
            {
             "_name_": "san_entry",
             "title": "san_entry",
             "_required_": false,
             "type": "string"
            }
           ]
          },
          "email": {
           "_name_": "email",
           "title": "email",
           "_required_": false,
           "type": [
            "string",
            "null"
           ]
          },
          "DN": {
           "_name_": "DN",
           "title": "DN",
           "_required_": false,
           "type": [
            "string",
            "null"
           ]
          },
          "subject_name_hash": {
           "_name_": "subject_name_hash",
           "title": "subject_name_hash",
           "_required_": false,
           "type": [
            "string",
            "null"
           ]
          },
          "digest_algorithm": {
           "_name_": "digest_algorithm",
           "title": "digest_algorithm",
           "_required_": false,
           "type": [
            "string",
            "null"
           ]
          },
          "from": {
           "_name_": "from",
           "title": "from",
           "_required_": false,
           "type": [
            "string",
            "null"
           ]
          },
          "common": {
           "_name_": "common",
           "title": "common",
           "_required_": false,
           "type": [
            "string",
            "null"
           ]
          },
          "until": {
           "_name_": "until",
           "title": "until",
           "_required_": false,
           "type": [
            "string",
            "null"
           ]
          },
          "fingerprint": {
           "_name_": "fingerprint",
           "title": "fingerprint",
           "_required_": false,
           "type": [
            "string",
            "null"
           ]
          },
          "key_type": {
           "_name_": "key_type",
           "title": "key_type",
           "_required_": false,
           "type": [
            "string",
            "null"
           ]
          },
          "internal": {
           "_name_": "internal",
           "title": "internal",
           "_required_": false,
           "type": [
            "string",
            "null"
           ]
          },
          "lifetime": {
           "type": [
            "integer",
            "null"
           ],
           "_name_": "lifetime",
           "title": "lifetime",
           "_required_": false
          },
          "serial": {
           "type": [
            "integer",
            "null"
           ],
           "_name_": "serial",
           "title": "serial",
           "_required_": false
          },
          "key_length": {
           "type": [
            "integer",
            "null"
           ],
           "_name_": "key_length",
           "title": "key_length",
           "_required_": false
          },
          "add_to_trusted_store": {
           "type": "boolean",
           "_name_": "add_to_trusted_store",
           "title": "add_to_trusted_store",
           "default": false,
           "_required_": false
          },
          "chain": {
           "type": [
            "boolean",
            "null"
           ],
           "_name_": "chain",
           "title": "chain",
           "_required_": false
          },
          "CA_type_existing": {
           "type": "boolean",
           "_name_": "CA_type_existing",
           "title": "CA_type_existing",
           "_required_": false
          },
          "CA_type_internal": {
           "type": "boolean",
           "_name_": "CA_type_internal",
           "title": "CA_type_internal",
           "_required_": false
          },
          "CA_type_intermediate": {
           "type": "boolean",
           "_name_": "CA_type_intermediate",
           "title": "CA_type_intermediate",
           "_required_": false
          },
          "cert_type_existing": {
           "type": "boolean",
           "_name_": "cert_type_existing",
           "title": "cert_type_existing",
           "_required_": false
          },
          "cert_type_internal": {
           "type": "boolean",
           "_name_": "cert_type_internal",
           "title": "cert_type_internal",
           "_required_": false
          },
          "cert_type_CSR": {
           "type": "boolean",
           "_name_": "cert_type_CSR",
           "title": "cert_type_CSR",
           "_required_": false
          },
          "parsed": {
           "type": "boolean",
           "_name_": "parsed",
           "title": "parsed",
           "_required_": false
          },
          "can_be_revoked": {
           "type": "boolean",
           "_name_": "can_be_revoked",
           "title": "can_be_revoked",
           "_required_": false
          },
          "extensions": {
           "type": "object",
           "properties": {},
           "additionalProperties": true,
           "_name_": "extensions",
           "title": "extensions",
           "default": {},
           "_required_": false,
           "_attrs_order_": []
          },
          "revoked_certs": {
           "_name_": "revoked_certs",
           "title": "revoked_certs",
           "default": [],
           "_required_": false,
           "type": "array",
           "items": []
          },
          "crl_path": {
           "_name_": "crl_path",
           "title": "crl_path",
           "_required_": false,
           "type": "string"
          },
          "signed_certificates": {
           "type": "integer",
           "_name_": "signed_certificates",
           "title": "signed_certificates",
           "_required_": false
          }
         },
         "additionalProperties": false,
         "_name_": "certificate_entry",
         "title": "certificate_entry",
         "default": {},
         "_required_": false,
         "_attrs_order_": [
          "id",
          "type",
          "name",
          "certificate",
          "privatekey",
          "CSR",
          "acme_uri",
          "domains_authenticators",
          "renew_days",
          "revoked_date",
          "signedby",
          "root_path",
          "acme",
          "certificate_path",
          "privatekey_path",
          "csr_path",
          "cert_type",
          "revoked",
          "expired",
          "issuer",
          "chain_list",
          "country",
          "state",
          "city",
          "organization",
          "organizational_unit",
          "san",
          "email",
          "DN",
          "subject_name_hash",
          "digest_algorithm",
          "from",
          "common",
          "until",
          "fingerprint",
          "key_type",
          "internal",
          "lifetime",
          "serial",
          "key_length",
          "add_to_trusted_store",
          "chain",
          "CA_type_existing",
          "CA_type_internal",
          "CA_type_intermediate",
          "cert_type_existing",
          "cert_type_internal",
          "cert_type_CSR",
          "parsed",
          "can_be_revoked",
          "extensions",
          "revoked_certs",
          "crl_path",
          "signed_certificates"
         ]
        }
       ],
       "nullable": false,
       "_name_": "query_result",
       "description": null
      },
      "certificate_create": {
       "type": "object",
       "properties": {
        "tos": {
         "type": "boolean",
         "_name_": "tos",
         "title": "tos"
        },
        "dns_mapping": {
         "type": "object",
         "properties": {},
         "additionalProperties": true,
         "_name_": "dns_mapping",
         "title": "dns_mapping",
         "default": {},
         "_attrs_order_": []
        },
        "csr_id": {
         "type": "integer",
         "_name_": "csr_id",
         "title": "csr_id"
        },
        "signedby": {
         "type": "integer",
         "_name_": "signedby",
         "title": "signedby"
        },
        "key_length": {
         "type": "integer",
         "_name_": "key_length",
         "title": "key_length"
        },
        "renew_days": {
         "type": "integer",
         "_name_": "renew_days",
         "title": "renew_days"
        },
        "type": {
         "type": "integer",
         "_name_": "type",
         "title": "type"
        },
        "lifetime": {
         "type": "integer",
         "_name_": "lifetime",
         "title": "lifetime"
        },
        "serial": {
         "type": "integer",
         "_name_": "serial",
         "title": "serial"
        },
        "acme_directory_uri": {
         "_name_": "acme_directory_uri",
         "title": "acme_directory_uri",
         "type": "string"
        },
        "certificate": {
         "_name_": "certificate",
         "title": "certificate",
         "type": "string"
        },
        "city": {
         "_name_": "city",
         "title": "city",
         "type": "string"
        },
        "common": {
         "_name_": "common",
         "title": "common",
         "type": "string",
         "nullable": true
        },
        "country": {
         "_name_": "country",
         "title": "country",
         "type": "string"
        },
        "CSR": {
         "_name_": "CSR",
         "title": "CSR",
         "type": "string"
        },
        "ec_curve": {
         "_name_": "ec_curve",
         "title": "ec_curve",
         "default": "SECP384R1",
         "type": "string",
         "enum": [
          "SECP256R1",
          "SECP384R1",
          "SECP521R1",
          "ed25519"
         ],
         "description": "`key_type` attribute. If the `ec_curve` attribute is not specified for the Elliptic Curve Key, then default to\nusing \"SECP384R1\" curve."
        },
        "email": {
         "_name_": "email",
         "title": "email",
         "type": "string"
        },
        "key_type": {
         "_name_": "key_type",
         "title": "key_type",
         "default": "RSA",
         "type": "string",
         "enum": [
          "RSA",
          "EC"
         ],
         "description": "`key_type` attribute. If the `ec_curve` attribute is not specified for the Elliptic Curve Key, then default to\nusing \"SECP384R1\" curve."
        },
        "name": {
         "_name_": "name",
         "title": "name",
         "type": "string"
        },
        "organization": {
         "_name_": "organization",
         "title": "organization",
         "type": "string"
        },
        "organizational_unit": {
         "_name_": "organizational_unit",
         "title": "organizational_unit",
         "type": "string"
        },
        "passphrase": {
         "_name_": "passphrase",
         "title": "passphrase",
         "type": "string"
        },
        "privatekey": {
         "_name_": "privatekey",
         "title": "privatekey",
         "type": "string"
        },
        "state": {
         "_name_": "state",
         "title": "state",
         "type": "string"
        },
        "create_type": {
         "_name_": "create_type",
         "title": "create_type",
         "type": "string",
         "enum": [
          "CERTIFICATE_CREATE_INTERNAL",
          "CERTIFICATE_CREATE_IMPORTED",
          "CERTIFICATE_CREATE_CSR",
          "CERTIFICATE_CREATE_IMPORTED_CSR",
          "CERTIFICATE_CREATE_ACME"
         ],
         "description": "Certificates are classified under following types and the necessary keywords to be passed\nfor `create_type` attribute to create the respective type of certificate\nA type is selected by the Certificate Service based on `create_type`. The rest of the values in `data` are\nvalidated accordingly and finally a certificate is made based on the selected type."
        },
        "digest_algorithm": {
         "_name_": "digest_algorithm",
         "title": "digest_algorithm",
         "type": "string",
         "enum": [
          "SHA224",
          "SHA256",
          "SHA384",
          "SHA512"
         ]
        },
        "san": {
         "_name_": "san",
         "title": "san",
         "default": [],
         "type": "array",
         "items": {
          "_name_": "san",
          "title": "san",
          "_required_": false,
          "type": "string"
         }
        },
        "cert_extensions": {
         "type": "object",
         "properties": {
          "BasicConstraints": {
           "type": "object",
           "properties": {
            "ca": {
             "type": "boolean",
             "_name_": "ca",
             "title": "ca",
             "default": false
            },
            "enabled": {
             "type": "boolean",
             "_name_": "enabled",
             "title": "enabled",
             "default": false
            },
            "path_length": {
             "type": "integer",
             "_name_": "path_length",
             "title": "path_length",
             "default": null,
             "nullable": true
            },
            "extension_critical": {
             "type": "boolean",
             "_name_": "extension_critical",
             "title": "extension_critical",
             "default": false
            }
           },
           "additionalProperties": false,
           "_name_": "BasicConstraints",
           "title": "BasicConstraints",
           "default": {},
           "_attrs_order_": [
            "ca",
            "enabled",
            "path_length",
            "extension_critical"
           ]
          },
          "AuthorityKeyIdentifier": {
           "type": "object",
           "properties": {
            "authority_cert_issuer": {
             "type": "boolean",
             "_name_": "authority_cert_issuer",
             "title": "authority_cert_issuer",
             "default": false
            },
            "enabled": {
             "type": "boolean",
             "_name_": "enabled",
             "title": "enabled",
             "default": false
            },
            "extension_critical": {
             "type": "boolean",
             "_name_": "extension_critical",
             "title": "extension_critical",
             "default": false
            }
           },
           "additionalProperties": false,
           "_name_": "AuthorityKeyIdentifier",
           "title": "AuthorityKeyIdentifier",
           "default": {},
           "_attrs_order_": [
            "authority_cert_issuer",
            "enabled",
            "extension_critical"
           ]
          },
          "ExtendedKeyUsage": {
           "type": "object",
           "properties": {
            "usages": {
             "_name_": "usages",
             "title": "usages",
             "default": [],
             "type": "array",
             "items": {
              "_name_": "usage",
              "title": "usage",
              "_required_": false,
              "type": "string",
              "enum": [
               "ANY_EXTENDED_KEY_USAGE",
               "CERTIFICATE_TRANSPARENCY",
               "CLIENT_AUTH",
               "CODE_SIGNING",
               "EMAIL_PROTECTION",
               "IPSEC_IKE",
               "KERBEROS_PKINIT_KDC",
               "OCSP_SIGNING",
               "SERVER_AUTH",
               "SMARTCARD_LOGON",
               "TIME_STAMPING"
              ]
             }
            },
            "enabled": {
             "type": "boolean",
             "_name_": "enabled",
             "title": "enabled",
             "default": false
            },
            "extension_critical": {
             "type": "boolean",
             "_name_": "extension_critical",
             "title": "extension_critical",
             "default": false
            }
           },
           "additionalProperties": false,
           "_name_": "ExtendedKeyUsage",
           "title": "ExtendedKeyUsage",
           "default": {},
           "_attrs_order_": [
            "usages",
            "enabled",
            "extension_critical"
           ]
          },
          "KeyUsage": {
           "type": "object",
           "properties": {
            "enabled": {
             "type": "boolean",
             "_name_": "enabled",
             "title": "enabled",
             "default": false
            },
            "digital_signature": {
             "type": "boolean",
             "_name_": "digital_signature",
             "title": "digital_signature",
             "default": false
            },
            "content_commitment": {
             "type": "boolean",
             "_name_": "content_commitment",
             "title": "content_commitment",
             "default": false
            },
            "key_encipherment": {
             "type": "boolean",
             "_name_": "key_encipherment",
             "title": "key_encipherment",
             "default": false
            },
            "data_encipherment": {
             "type": "boolean",
             "_name_": "data_encipherment",
             "title": "data_encipherment",
             "default": false
            },
            "key_agreement": {
             "type": "boolean",
             "_name_": "key_agreement",
             "title": "key_agreement",
             "default": false
            },
            "key_cert_sign": {
             "type": "boolean",
             "_name_": "key_cert_sign",
             "title": "key_cert_sign",
             "default": false
            },
            "crl_sign": {
             "type": "boolean",
             "_name_": "crl_sign",
             "title": "crl_sign",
             "default": false
            },
            "encipher_only": {
             "type": "boolean",
             "_name_": "encipher_only",
             "title": "encipher_only",
             "default": false
            },
            "decipher_only": {
             "type": "boolean",
             "_name_": "decipher_only",
             "title": "decipher_only",
             "default": false
            },
            "extension_critical": {
             "type": "boolean",
             "_name_": "extension_critical",
             "title": "extension_critical",
             "default": false
            }
           },
           "additionalProperties": false,
           "_name_": "KeyUsage",
           "title": "KeyUsage",
           "default": {},
           "_attrs_order_": [
            "enabled",
            "digital_signature",
            "content_commitment",
            "key_encipherment",
            "data_encipherment",
            "key_agreement",
            "key_cert_sign",
            "crl_sign",
            "encipher_only",
            "decipher_only",
            "extension_critical"
           ]
          }
         },
         "additionalProperties": false,
         "_name_": "cert_extensions",
         "title": "cert_extensions",
         "default": {},
         "_attrs_order_": [
          "BasicConstraints",
          "AuthorityKeyIdentifier",
          "ExtendedKeyUsage",
          "KeyUsage"
         ],
         "description": "`cert_extensions` can be specified to set X509v3 extensions."
        },
        "add_to_trusted_store": {
         "type": "boolean",
         "_name_": "add_to_trusted_store",
         "title": "add_to_trusted_store",
         "default": false
        }
       },
       "additionalProperties": false,
       "_name_": "certificate_create",
       "title": "certificate_create",
       "default": {},
       "_attrs_order_": [
        "tos",
        "dns_mapping",
        "csr_id",
        "signedby",
        "key_length",
        "renew_days",
        "type",
        "lifetime",
        "serial",
        "acme_directory_uri",
        "certificate",
        "city",
        "common",
        "country",
        "CSR",
        "ec_curve",
        "email",
        "key_type",
        "name",
        "organization",
        "organizational_unit",
        "passphrase",
        "privatekey",
        "state",
        "create_type",
        "digest_algorithm",
        "san",
        "cert_extensions",
        "add_to_trusted_store"
       ]
      },
      "return_schema_of_certificate_create": {
       "type": "object",
       "properties": {
        "id": {
         "type": "integer",
         "_name_": "id",
         "title": "id"
        },
        "type": {
         "type": "integer",
         "_name_": "type",
         "title": "type"
        },
        "name": {
         "_name_": "name",
         "title": "name",
         "type": "string"
        },
        "certificate": {
         "_name_": "certificate",
         "title": "certificate",
         "type": "string",
         "nullable": true
        },
        "privatekey": {
         "_name_": "privatekey",
         "title": "privatekey",
         "type": "string",
         "nullable": true
        },
        "CSR": {
         "_name_": "CSR",
         "title": "CSR",
         "type": "string",
         "nullable": true
        },
        "acme_uri": {
         "_name_": "acme_uri",
         "title": "acme_uri",
         "type": "string",
         "nullable": true
        },
        "domains_authenticators": {
         "type": "object",
         "properties": {},
         "additionalProperties": true,
         "_name_": "domains_authenticators",
         "title": "domains_authenticators",
         "default": {},
         "_attrs_order_": []
        },
        "renew_days": {
         "type": "integer",
         "_name_": "renew_days",
         "title": "renew_days"
        },
        "revoked_date": {
         "_name_": "revoked_date",
         "title": "revoked_date",
         "type": "string",
         "nullable": true
        },
        "signedby": {
         "type": "object",
         "properties": {},
         "additionalProperties": true,
         "_name_": "signedby",
         "title": "signedby",
         "default": {},
         "_attrs_order_": []
        },
        "root_path": {
         "_name_": "root_path",
         "title": "root_path",
         "type": "string"
        },
        "acme": {
         "type": "object",
         "properties": {},
         "additionalProperties": true,
         "_name_": "acme",
         "title": "acme",
         "default": {},
         "_attrs_order_": []
        },
        "certificate_path": {
         "_name_": "certificate_path",
         "title": "certificate_path",
         "type": "string",
         "nullable": true
        },
        "privatekey_path": {
         "_name_": "privatekey_path",
         "title": "privatekey_path",
         "type": "string",
         "nullable": true
        },
        "csr_path": {
         "_name_": "csr_path",
         "title": "csr_path",
         "type": "string",
         "nullable": true
        },
        "cert_type": {
         "_name_": "cert_type",
         "title": "cert_type",
         "type": "string"
        },
        "revoked": {
         "type": "boolean",
         "_name_": "revoked",
         "title": "revoked"
        },
        "expired": {
         "type": "boolean",
         "_name_": "expired",
         "title": "expired",
         "nullable": true
        },
        "issuer": {
         "anyOf": [
          {
           "_name_": "issuer",
           "title": "issuer",
           "_required_": false,
           "type": [
            "string",
            "null"
           ]
          },
          {
           "type": "object",
           "properties": {},
           "additionalProperties": true,
           "_name_": "issuer",
           "title": "issuer",
           "default": {},
           "_required_": false,
           "_attrs_order_": []
          }
         ],
         "nullable": false,
         "_name_": "issuer",
         "description": null
        },
        "chain_list": {
         "_name_": "chain_list",
         "title": "chain_list",
         "default": [],
         "type": "array",
         "items": {
          "_name_": "certificate",
          "title": "certificate",
          "_required_": false,
          "type": "string"
         }
        },
        "country": {
         "_name_": "country",
         "title": "country",
         "type": "string",
         "nullable": true
        },
        "state": {
         "_name_": "state",
         "title": "state",
         "type": "string",
         "nullable": true
        },
        "city": {
         "_name_": "city",
         "title": "city",
         "type": "string",
         "nullable": true
        },
        "organization": {
         "_name_": "organization",
         "title": "organization",
         "type": "string",
         "nullable": true
        },
        "organizational_unit": {
         "_name_": "organizational_unit",
         "title": "organizational_unit",
         "type": "string",
         "nullable": true
        },
        "san": {
         "_name_": "san",
         "title": "san",
         "default": [],
         "type": "array",
         "items": {
          "_name_": "san_entry",
          "title": "san_entry",
          "_required_": false,
          "type": "string"
         },
         "nullable": true
        },
        "email": {
         "_name_": "email",
         "title": "email",
         "type": "string",
         "nullable": true
        },
        "DN": {
         "_name_": "DN",
         "title": "DN",
         "type": "string",
         "nullable": true
        },
        "subject_name_hash": {
         "_name_": "subject_name_hash",
         "title": "subject_name_hash",
         "type": "string",
         "nullable": true
        },
        "digest_algorithm": {
         "_name_": "digest_algorithm",
         "title": "digest_algorithm",
         "type": "string",
         "nullable": true
        },
        "from": {
         "_name_": "from",
         "title": "from",
         "type": "string",
         "nullable": true
        },
        "common": {
         "_name_": "common",
         "title": "common",
         "type": "string",
         "nullable": true
        },
        "until": {
         "_name_": "until",
         "title": "until",
         "type": "string",
         "nullable": true
        },
        "fingerprint": {
         "_name_": "fingerprint",
         "title": "fingerprint",
         "type": "string",
         "nullable": true
        },
        "key_type": {
         "_name_": "key_type",
         "title": "key_type",
         "type": "string",
         "description": "`key_type` attribute. If the `ec_curve` attribute is not specified for the Elliptic Curve Key, then default to\nusing \"SECP384R1\" curve.",
         "nullable": true
        },
        "internal": {
         "_name_": "internal",
         "title": "internal",
         "type": "string",
         "nullable": true
        },
        "lifetime": {
         "type": "integer",
         "_name_": "lifetime",
         "title": "lifetime",
         "nullable": true
        },
        "serial": {
         "type": "integer",
         "_name_": "serial",
         "title": "serial",
         "nullable": true
        },
        "key_length": {
         "type": "integer",
         "_name_": "key_length",
         "title": "key_length",
         "nullable": true
        },
        "add_to_trusted_store": {
         "type": "boolean",
         "_name_": "add_to_trusted_store",
         "title": "add_to_trusted_store",
         "default": false
        },
        "chain": {
         "type": "boolean",
         "_name_": "chain",
         "title": "chain",
         "nullable": true
        },
        "CA_type_existing": {
         "type": "boolean",
         "_name_": "CA_type_existing",
         "title": "CA_type_existing"
        },
        "CA_type_internal": {
         "type": "boolean",
         "_name_": "CA_type_internal",
         "title": "CA_type_internal"
        },
        "CA_type_intermediate": {
         "type": "boolean",
         "_name_": "CA_type_intermediate",
         "title": "CA_type_intermediate"
        },
        "cert_type_existing": {
         "type": "boolean",
         "_name_": "cert_type_existing",
         "title": "cert_type_existing"
        },
        "cert_type_internal": {
         "type": "boolean",
         "_name_": "cert_type_internal",
         "title": "cert_type_internal"
        },
        "cert_type_CSR": {
         "type": "boolean",
         "_name_": "cert_type_CSR",
         "title": "cert_type_CSR"
        },
        "parsed": {
         "type": "boolean",
         "_name_": "parsed",
         "title": "parsed"
        },
        "can_be_revoked": {
         "type": "boolean",
         "_name_": "can_be_revoked",
         "title": "can_be_revoked"
        },
        "extensions": {
         "type": "object",
         "properties": {},
         "additionalProperties": true,
         "_name_": "extensions",
         "title": "extensions",
         "default": {},
         "_attrs_order_": []
        },
        "revoked_certs": {
         "_name_": "revoked_certs",
         "title": "revoked_certs",
         "default": [],
         "type": "array",
         "items": {}
        },
        "crl_path": {
         "_name_": "crl_path",
         "title": "crl_path",
         "type": "string"
        },
        "signed_certificates": {
         "type": "integer",
         "_name_": "signed_certificates",
         "title": "signed_certificates"
        }
       },
       "additionalProperties": false,
       "_name_": "certificate_create_returns",
       "title": "certificate_create_returns",
       "default": {},
       "_attrs_order_": [
        "id",
        "type",
        "name",
        "certificate",
        "privatekey",
        "CSR",
        "acme_uri",
        "domains_authenticators",
        "renew_days",
        "revoked_date",
        "signedby",
        "root_path",
        "acme",
        "certificate_path",
        "privatekey_path",
        "csr_path",
        "cert_type",
        "revoked",
        "expired",
        "issuer",
        "chain_list",
        "country",
        "state",
        "city",
        "organization",
        "organizational_unit",
        "san",
        "email",
        "DN",
        "subject_name_hash",
        "digest_algorithm",
        "from",
        "common",
        "until",
        "fingerprint",
        "key_type",
        "internal",
        "lifetime",
        "serial",
        "key_length",
        "add_to_trusted_store",
        "chain",
        "CA_type_existing",
        "CA_type_internal",
        "CA_type_intermediate",
        "cert_type_existing",
        "cert_type_internal",
        "cert_type_CSR",
        "parsed",
        "can_be_revoked",
        "extensions",
        "revoked_certs",
        "crl_path",
        "signed_certificates"
       ]
      },
      "certificate_delete": {
       "type": "boolean",
       "_name_": "force",
       "title": "force",
       "default": false,
       "description": "If the certificate is an ACME based certificate, certificate service will try to\nrevoke the certificate by updating it's status with the ACME server, if it fails an exception is raised\nand the certificate is not deleted from the system. However, if `force` is set to True, certificate is deleted\nfrom the system even if some error occurred while revoking the certificate with the ACME Server"
      },
      "return_schema_of_certificate_delete": {
       "type": "boolean",
       "_name_": "deleted",
       "title": "deleted",
       "description": "Will return `true` if `id` is deleted successfully"
      },
      "certificate_update": {
       "type": "object",
       "properties": {
        "revoked": {
         "type": "boolean",
         "_name_": "revoked",
         "title": "revoked",
         "description": "When `revoked` is enabled, the specified cert `id` is revoked and if it belongs to a CA chain which\nexists on this system, its serial number is added to the CA's certificate revocation list."
        },
        "renew_days": {
         "type": "integer",
         "_name_": "renew_days",
         "title": "renew_days"
        },
        "add_to_trusted_store": {
         "type": "boolean",
         "_name_": "add_to_trusted_store",
         "title": "add_to_trusted_store"
        },
        "name": {
         "_name_": "name",
         "title": "name",
         "type": "string"
        }
       },
       "additionalProperties": false,
       "_name_": "certificate_update",
       "title": "certificate_update",
       "default": {},
       "_attrs_order_": [
        "revoked",
        "renew_days",
        "add_to_trusted_store",
        "name"
       ]
      },
      "return_schema_of_certificate_update": {
       "type": "object",
       "properties": {
        "id": {
         "type": "integer",
         "_name_": "id",
         "title": "id",
         "description": "Update certificate of `id`\nWhen `revoked` is enabled, the specified cert `id` is revoked and if it belongs to a CA chain which\nexists on this system, its serial number is added to the CA's certificate revocation list."
        },
        "type": {
         "type": "integer",
         "_name_": "type",
         "title": "type"
        },
        "name": {
         "_name_": "name",
         "title": "name",
         "type": "string"
        },
        "certificate": {
         "_name_": "certificate",
         "title": "certificate",
         "type": "string",
         "nullable": true
        },
        "privatekey": {
         "_name_": "privatekey",
         "title": "privatekey",
         "type": "string",
         "nullable": true
        },
        "CSR": {
         "_name_": "CSR",
         "title": "CSR",
         "type": "string",
         "nullable": true
        },
        "acme_uri": {
         "_name_": "acme_uri",
         "title": "acme_uri",
         "type": "string",
         "nullable": true
        },
        "domains_authenticators": {
         "type": "object",
         "properties": {},
         "additionalProperties": true,
         "_name_": "domains_authenticators",
         "title": "domains_authenticators",
         "default": {},
         "_attrs_order_": []
        },
        "renew_days": {
         "type": "integer",
         "_name_": "renew_days",
         "title": "renew_days"
        },
        "revoked_date": {
         "_name_": "revoked_date",
         "title": "revoked_date",
         "type": "string",
         "nullable": true
        },
        "signedby": {
         "type": "object",
         "properties": {},
         "additionalProperties": true,
         "_name_": "signedby",
         "title": "signedby",
         "default": {},
         "_attrs_order_": []
        },
        "root_path": {
         "_name_": "root_path",
         "title": "root_path",
         "type": "string"
        },
        "acme": {
         "type": "object",
         "properties": {},
         "additionalProperties": true,
         "_name_": "acme",
         "title": "acme",
         "default": {},
         "_attrs_order_": []
        },
        "certificate_path": {
         "_name_": "certificate_path",
         "title": "certificate_path",
         "type": "string",
         "nullable": true
        },
        "privatekey_path": {
         "_name_": "privatekey_path",
         "title": "privatekey_path",
         "type": "string",
         "nullable": true
        },
        "csr_path": {
         "_name_": "csr_path",
         "title": "csr_path",
         "type": "string",
         "nullable": true
        },
        "cert_type": {
         "_name_": "cert_type",
         "title": "cert_type",
         "type": "string"
        },
        "revoked": {
         "type": "boolean",
         "_name_": "revoked",
         "title": "revoked",
         "description": "When `revoked` is enabled, the specified cert `id` is revoked and if it belongs to a CA chain which\nexists on this system, its serial number is added to the CA's certificate revocation list."
        },
        "expired": {
         "type": "boolean",
         "_name_": "expired",
         "title": "expired",
         "nullable": true
        },
        "issuer": {
         "anyOf": [
          {
           "_name_": "issuer",
           "title": "issuer",
           "_required_": false,
           "type": [
            "string",
            "null"
           ]
          },
          {
           "type": "object",
           "properties": {},
           "additionalProperties": true,
           "_name_": "issuer",
           "title": "issuer",
           "default": {},
           "_required_": false,
           "_attrs_order_": []
          }
         ],
         "nullable": false,
         "_name_": "issuer",
         "description": null
        },
        "chain_list": {
         "_name_": "chain_list",
         "title": "chain_list",
         "default": [],
         "type": "array",
         "items": {
          "_name_": "certificate",
          "title": "certificate",
          "_required_": false,
          "type": "string"
         }
        },
        "country": {
         "_name_": "country",
         "title": "country",
         "type": "string",
         "nullable": true
        },
        "state": {
         "_name_": "state",
         "title": "state",
         "type": "string",
         "nullable": true
        },
        "city": {
         "_name_": "city",
         "title": "city",
         "type": "string",
         "nullable": true
        },
        "organization": {
         "_name_": "organization",
         "title": "organization",
         "type": "string",
         "nullable": true
        },
        "organizational_unit": {
         "_name_": "organizational_unit",
         "title": "organizational_unit",
         "type": "string",
         "nullable": true
        },
        "san": {
         "_name_": "san",
         "title": "san",
         "default": [],
         "type": "array",
         "items": {
          "_name_": "san_entry",
          "title": "san_entry",
          "_required_": false,
          "type": "string"
         },
         "nullable": true
        },
        "email": {
         "_name_": "email",
         "title": "email",
         "type": "string",
         "nullable": true
        },
        "DN": {
         "_name_": "DN",
         "title": "DN",
         "type": "string",
         "nullable": true
        },
        "subject_name_hash": {
         "_name_": "subject_name_hash",
         "title": "subject_name_hash",
         "type": "string",
         "nullable": true
        },
        "digest_algorithm": {
         "_name_": "digest_algorithm",
         "title": "digest_algorithm",
         "type": "string",
         "nullable": true
        },
        "from": {
         "_name_": "from",
         "title": "from",
         "type": "string",
         "nullable": true
        },
        "common": {
         "_name_": "common",
         "title": "common",
         "type": "string",
         "nullable": true
        },
        "until": {
         "_name_": "until",
         "title": "until",
         "type": "string",
         "nullable": true
        },
        "fingerprint": {
         "_name_": "fingerprint",
         "title": "fingerprint",
         "type": "string",
         "nullable": true
        },
        "key_type": {
         "_name_": "key_type",
         "title": "key_type",
         "type": "string",
         "description": "`key_type` attribute. If the `ec_curve` attribute is not specified for the Elliptic Curve Key, then default to\nusing \"SECP384R1\" curve.",
         "nullable": true
        },
        "internal": {
         "_name_": "internal",
         "title": "internal",
         "type": "string",
         "nullable": true
        },
        "lifetime": {
         "type": "integer",
         "_name_": "lifetime",
         "title": "lifetime",
         "nullable": true
        },
        "serial": {
         "type": "integer",
         "_name_": "serial",
         "title": "serial",
         "nullable": true
        },
        "key_length": {
         "type": "integer",
         "_name_": "key_length",
         "title": "key_length",
         "nullable": true
        },
        "add_to_trusted_store": {
         "type": "boolean",
         "_name_": "add_to_trusted_store",
         "title": "add_to_trusted_store",
         "default": false
        },
        "chain": {
         "type": "boolean",
         "_name_": "chain",
         "title": "chain",
         "nullable": true
        },
        "CA_type_existing": {
         "type": "boolean",
         "_name_": "CA_type_existing",
         "title": "CA_type_existing"
        },
        "CA_type_internal": {
         "type": "boolean",
         "_name_": "CA_type_internal",
         "title": "CA_type_internal"
        },
        "CA_type_intermediate": {
         "type": "boolean",
         "_name_": "CA_type_intermediate",
         "title": "CA_type_intermediate"
        },
        "cert_type_existing": {
         "type": "boolean",
         "_name_": "cert_type_existing",
         "title": "cert_type_existing"
        },
        "cert_type_internal": {
         "type": "boolean",
         "_name_": "cert_type_internal",
         "title": "cert_type_internal"
        },
        "cert_type_CSR": {
         "type": "boolean",
         "_name_": "cert_type_CSR",
         "title": "cert_type_CSR"
        },
        "parsed": {
         "type": "boolean",
         "_name_": "parsed",
         "title": "parsed"
        },
        "can_be_revoked": {
         "type": "boolean",
         "_name_": "can_be_revoked",
         "title": "can_be_revoked"
        },
        "extensions": {
         "type": "object",
         "properties": {},
         "additionalProperties": true,
         "_name_": "extensions",
         "title": "extensions",
         "default": {},
         "_attrs_order_": []
        },
        "revoked_certs": {
         "_name_": "revoked_certs",
         "title": "revoked_certs",
         "default": [],
         "type": "array",
         "items": {}
        },
        "crl_path": {
         "_name_": "crl_path",
         "title": "crl_path",
         "type": "string"
        },
        "signed_certificates": {
         "type": "integer",
         "_name_": "signed_certificates",
         "title": "signed_certificates"
        }
       },
       "additionalProperties": false,
       "_name_": "certificate_update_returns",
       "title": "certificate_update_returns",
       "default": {},
       "_attrs_order_": [
        "id",
        "type",
        "name",
        "certificate",
        "privatekey",
        "CSR",
        "acme_uri",
        "domains_authenticators",
        "renew_days",
        "revoked_date",
        "signedby",
        "root_path",
        "acme",
        "certificate_path",
        "privatekey_path",
        "csr_path",
        "cert_type",
        "revoked",
        "expired",
        "issuer",
        "chain_list",
        "country",
        "state",
        "city",
        "organization",
        "organizational_unit",
        "san",
        "email",
        "DN",
        "subject_name_hash",
        "digest_algorithm",
        "from",
        "common",
        "until",
        "fingerprint",
        "key_type",
        "internal",
        "lifetime",
        "serial",
        "key_length",
        "add_to_trusted_store",
        "chain",
        "CA_type_existing",
        "CA_type_internal",
        "CA_type_intermediate",
        "cert_type_existing",
        "cert_type_internal",
        "cert_type_CSR",
        "parsed",
        "can_be_revoked",
        "extensions",
        "revoked_certs",
        "crl_path",
        "signed_certificates"
       ]
      },
      "return_schema_of_certificate_acme_server_choices": {
       "additionalProperties": {
        "type": "string"
       },
       "title": "result",
       "type": "object",
       "_name_": "result"
      },
      "return_schema_of_certificate_country_choices": {
       "additionalProperties": {
        "type": "string"
       },
       "title": "result",
       "type": "object",
       "_name_": "result"
      },
      "return_schema_of_certificate_ec_curve_choices": {
       "additionalProperties": {
        "type": "string"
       },
       "title": "result",
       "type": "object",
       "_name_": "result"
      },
      "return_schema_of_certificate_extended_key_usage_choices": {
       "additionalProperties": {
        "type": "string"
       },
       "title": "result",
       "type": "object",
       "_name_": "result"
      },
      "certificate_get_instance_0": {
       "anyOf": [
        {
         "type": "string"
        },
        {
         "type": "integer"
        },
        {
         "type": "boolean"
        },
        {
         "type": "object"
        },
        {
         "type": "array"
        }
       ],
       "nullable": false,
       "_name_": "id",
       "title": "id",
       "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised."
      },
      "certificate_get_instance_1": {
       "type": "object",
       "properties": {
        "relationships": {
         "type": "boolean",
         "_name_": "relationships",
         "title": "relationships",
         "default": true
        },
        "extend": {
         "_name_": "extend",
         "title": "extend",
         "default": null,
         "type": "string",
         "nullable": true
        },
        "extend_context": {
         "_name_": "extend_context",
         "title": "extend_context",
         "default": null,
         "type": "string",
         "nullable": true
        },
        "prefix": {
         "_name_": "prefix",
         "title": "prefix",
         "default": null,
         "type": "string",
         "nullable": true
        },
        "extra": {
         "type": "object",
         "properties": {},
         "additionalProperties": true,
         "_name_": "extra",
         "title": "extra",
         "default": {},
         "_attrs_order_": []
        },
        "order_by": {
         "_name_": "order_by",
         "title": "order_by",
         "default": [],
         "type": "array",
         "items": {}
        },
        "select": {
         "_name_": "select",
         "title": "select",
         "default": [],
         "type": "array",
         "items": {}
        },
        "count": {
         "type": "boolean",
         "_name_": "count",
         "title": "count",
         "default": false
        },
        "get": {
         "type": "boolean",
         "_name_": "get",
         "title": "get",
         "default": false
        },
        "offset": {
         "type": "integer",
         "_name_": "offset",
         "title": "offset",
         "default": 0
        },
        "limit": {
         "type": "integer",
         "_name_": "limit",
         "title": "limit",
         "default": 0
        },
        "force_sql_filters": {
         "type": "boolean",
         "_name_": "force_sql_filters",
         "title": "force_sql_filters",
         "default": true
        }
       },
       "additionalProperties": false,
       "_name_": "query-options-get_instance",
       "title": "query-options-get_instance",
       "default": {},
       "_attrs_order_": [
        "relationships",
        "extend",
        "extend_context",
        "prefix",
        "extra",
        "order_by",
        "select",
        "count",
        "get",
        "offset",
        "limit",
        "force_sql_filters"
       ]
      },
      "certificate_get_instance": {
       "type": "object",
       "properties": {
        "id": {
         "$ref": "#/components/schemas/certificate_get_instance_0"
        },
        "query-options-get_instance": {
         "$ref": "#/components/schemas/certificate_get_instance_1"
        }
       }
      },
      "return_schema_of_certificate_get_instance": {
       "type": "object",
       "properties": {
        "id": {
         "type": "integer",
         "_name_": "id",
         "title": "id",
         "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised."
        },
        "type": {
         "type": "integer",
         "_name_": "type",
         "title": "type"
        },
        "name": {
         "_name_": "name",
         "title": "name",
         "type": "string"
        },
        "certificate": {
         "_name_": "certificate",
         "title": "certificate",
         "type": "string",
         "nullable": true
        },
        "privatekey": {
         "_name_": "privatekey",
         "title": "privatekey",
         "type": "string",
         "nullable": true
        },
        "CSR": {
         "_name_": "CSR",
         "title": "CSR",
         "type": "string",
         "nullable": true
        },
        "acme_uri": {
         "_name_": "acme_uri",
         "title": "acme_uri",
         "type": "string",
         "nullable": true
        },
        "domains_authenticators": {
         "type": "object",
         "properties": {},
         "additionalProperties": true,
         "_name_": "domains_authenticators",
         "title": "domains_authenticators",
         "default": {},
         "_attrs_order_": []
        },
        "renew_days": {
         "type": "integer",
         "_name_": "renew_days",
         "title": "renew_days"
        },
        "revoked_date": {
         "_name_": "revoked_date",
         "title": "revoked_date",
         "type": "string",
         "nullable": true
        },
        "signedby": {
         "type": "object",
         "properties": {},
         "additionalProperties": true,
         "_name_": "signedby",
         "title": "signedby",
         "default": {},
         "_attrs_order_": []
        },
        "root_path": {
         "_name_": "root_path",
         "title": "root_path",
         "type": "string"
        },
        "acme": {
         "type": "object",
         "properties": {},
         "additionalProperties": true,
         "_name_": "acme",
         "title": "acme",
         "default": {},
         "_attrs_order_": []
        },
        "certificate_path": {
         "_name_": "certificate_path",
         "title": "certificate_path",
         "type": "string",
         "nullable": true
        },
        "privatekey_path": {
         "_name_": "privatekey_path",
         "title": "privatekey_path",
         "type": "string",
         "nullable": true
        },
        "csr_path": {
         "_name_": "csr_path",
         "title": "csr_path",
         "type": "string",
         "nullable": true
        },
        "cert_type": {
         "_name_": "cert_type",
         "title": "cert_type",
         "type": "string"
        },
        "revoked": {
         "type": "boolean",
         "_name_": "revoked",
         "title": "revoked"
        },
        "expired": {
         "type": "boolean",
         "_name_": "expired",
         "title": "expired",
         "nullable": true
        },
        "issuer": {
         "anyOf": [
          {
           "_name_": "issuer",
           "title": "issuer",
           "_required_": false,
           "type": [
            "string",
            "null"
           ]
          },
          {
           "type": "object",
           "properties": {},
           "additionalProperties": true,
           "_name_": "issuer",
           "title": "issuer",
           "default": {},
           "_required_": false,
           "_attrs_order_": []
          }
         ],
         "nullable": false,
         "_name_": "issuer",
         "description": null
        },
        "chain_list": {
         "_name_": "chain_list",
         "title": "chain_list",
         "default": [],
         "type": "array",
         "items": {
          "_name_": "certificate",
          "title": "certificate",
          "_required_": false,
          "type": "string"
         }
        },
        "country": {
         "_name_": "country",
         "title": "country",
         "type": "string",
         "nullable": true
        },
        "state": {
         "_name_": "state",
         "title": "state",
         "type": "string",
         "nullable": true
        },
        "city": {
         "_name_": "city",
         "title": "city",
         "type": "string",
         "nullable": true
        },
        "organization": {
         "_name_": "organization",
         "title": "organization",
         "type": "string",
         "nullable": true
        },
        "organizational_unit": {
         "_name_": "organizational_unit",
         "title": "organizational_unit",
         "type": "string",
         "nullable": true
        },
        "san": {
         "_name_": "san",
         "title": "san",
         "default": [],
         "type": "array",
         "items": {
          "_name_": "san_entry",
          "title": "san_entry",
          "_required_": false,
          "type": "string"
         },
         "nullable": true
        },
        "email": {
         "_name_": "email",
         "title": "email",
         "type": "string",
         "nullable": true
        },
        "DN": {
         "_name_": "DN",
         "title": "DN",
         "type": "string",
         "nullable": true
        },
        "subject_name_hash": {
         "_name_": "subject_name_hash",
         "title": "subject_name_hash",
         "type": "string",
         "nullable": true
        },
        "digest_algorithm": {
         "_name_": "digest_algorithm",
         "title": "digest_algorithm",
         "type": "string",
         "nullable": true
        },
        "from": {
         "_name_": "from",
         "title": "from",
         "type": "string",
         "nullable": true
        },
        "common": {
         "_name_": "common",
         "title": "common",
         "type": "string",
         "nullable": true
        },
        "until": {
         "_name_": "until",
         "title": "until",
         "type": "string",
         "nullable": true
        },
        "fingerprint": {
         "_name_": "fingerprint",
         "title": "fingerprint",
         "type": "string",
         "nullable": true
        },
        "key_type": {
         "_name_": "key_type",
         "title": "key_type",
         "type": "string",
         "nullable": true
        },
        "internal": {
         "_name_": "internal",
         "title": "internal",
         "type": "string",
         "nullable": true
        },
        "lifetime": {
         "type": "integer",
         "_name_": "lifetime",
         "title": "lifetime",
         "nullable": true
        },
        "serial": {
         "type": "integer",
         "_name_": "serial",
         "title": "serial",
         "nullable": true
        },
        "key_length": {
         "type": "integer",
         "_name_": "key_length",
         "title": "key_length",
         "nullable": true
        },
        "add_to_trusted_store": {
         "type": "boolean",
         "_name_": "add_to_trusted_store",
         "title": "add_to_trusted_store",
         "default": false
        },
        "chain": {
         "type": "boolean",
         "_name_": "chain",
         "title": "chain",
         "nullable": true
        },
        "CA_type_existing": {
         "type": "boolean",
         "_name_": "CA_type_existing",
         "title": "CA_type_existing"
        },
        "CA_type_internal": {
         "type": "boolean",
         "_name_": "CA_type_internal",
         "title": "CA_type_internal"
        },
        "CA_type_intermediate": {
         "type": "boolean",
         "_name_": "CA_type_intermediate",
         "title": "CA_type_intermediate"
        },
        "cert_type_existing": {
         "type": "boolean",
         "_name_": "cert_type_existing",
         "title": "cert_type_existing"
        },
        "cert_type_internal": {
         "type": "boolean",
         "_name_": "cert_type_internal",
         "title": "cert_type_internal"
        },
        "cert_type_CSR": {
         "type": "boolean",
         "_name_": "cert_type_CSR",
         "title": "cert_type_CSR"
        },
        "parsed": {
         "type": "boolean",
         "_name_": "parsed",
         "title": "parsed"
        },
        "can_be_revoked": {
         "type": "boolean",
         "_name_": "can_be_revoked",
         "title": "can_be_revoked"
        },
        "extensions": {
         "type": "object",
         "properties": {},
         "additionalProperties": true,
         "_name_": "extensions",
         "title": "extensions",
         "default": {},
         "_attrs_order_": []
        },
        "revoked_certs": {
         "_name_": "revoked_certs",
         "title": "revoked_certs",
         "default": [],
         "type": "array",
         "items": {}
        },
        "crl_path": {
         "_name_": "crl_path",
         "title": "crl_path",
         "type": "string"
        },
        "signed_certificates": {
         "type": "integer",
         "_name_": "signed_certificates",
         "title": "signed_certificates"
        }
       },
       "additionalProperties": false,
       "_name_": "certificate_entry",
       "title": "certificate_entry",
       "default": {},
       "_attrs_order_": [
        "id",
        "type",
        "name",
        "certificate",
        "privatekey",
        "CSR",
        "acme_uri",
        "domains_authenticators",
        "renew_days",
        "revoked_date",
        "signedby",
        "root_path",
        "acme",
        "certificate_path",
        "privatekey_path",
        "csr_path",
        "cert_type",
        "revoked",
        "expired",
        "issuer",
        "chain_list",
        "country",
        "state",
        "city",
        "organization",
        "organizational_unit",
        "san",
        "email",
        "DN",
        "subject_name_hash",
        "digest_algorithm",
        "from",
        "common",
        "until",
        "fingerprint",
        "key_type",
        "internal",
        "lifetime",
        "serial",
        "key_length",
        "add_to_trusted_store",
        "chain",
        "CA_type_existing",
        "CA_type_internal",
        "CA_type_intermediate",
        "cert_type_existing",
        "cert_type_internal",
        "cert_type_CSR",
        "parsed",
        "can_be_revoked",
        "extensions",
        "revoked_certs",
        "crl_path",
        "signed_certificates"
       ]
      },
      "return_schema_of_certificateauthority_query": {
       "anyOf": [
        {
         "_name_": "query_result",
         "title": "query_result",
         "default": [],
         "_required_": false,
         "type": "array",
         "items": [
          {
           "type": "object",
           "properties": {
            "id": {
             "type": "integer",
             "_name_": "id",
             "title": "id",
             "_required_": false
            },
            "type": {
             "type": "integer",
             "_name_": "type",
             "title": "type",
             "_required_": false
            },
            "name": {
             "_name_": "name",
             "title": "name",
             "_required_": false,
             "type": "string"
            },
            "certificate": {
             "_name_": "certificate",
             "title": "certificate",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "privatekey": {
             "_name_": "privatekey",
             "title": "privatekey",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "CSR": {
             "_name_": "CSR",
             "title": "CSR",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "acme_uri": {
             "_name_": "acme_uri",
             "title": "acme_uri",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "domains_authenticators": {
             "type": "object",
             "properties": {},
             "additionalProperties": true,
             "_name_": "domains_authenticators",
             "title": "domains_authenticators",
             "default": {},
             "_required_": false,
             "_attrs_order_": []
            },
            "renew_days": {
             "type": "integer",
             "_name_": "renew_days",
             "title": "renew_days",
             "_required_": false
            },
            "revoked_date": {
             "_name_": "revoked_date",
             "title": "revoked_date",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "signedby": {
             "type": "object",
             "properties": {},
             "additionalProperties": true,
             "_name_": "signedby",
             "title": "signedby",
             "default": {},
             "_required_": false,
             "_attrs_order_": []
            },
            "root_path": {
             "_name_": "root_path",
             "title": "root_path",
             "_required_": false,
             "type": "string"
            },
            "acme": {
             "type": "object",
             "properties": {},
             "additionalProperties": true,
             "_name_": "acme",
             "title": "acme",
             "default": {},
             "_required_": false,
             "_attrs_order_": []
            },
            "certificate_path": {
             "_name_": "certificate_path",
             "title": "certificate_path",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "privatekey_path": {
             "_name_": "privatekey_path",
             "title": "privatekey_path",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "csr_path": {
             "_name_": "csr_path",
             "title": "csr_path",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "cert_type": {
             "_name_": "cert_type",
             "title": "cert_type",
             "_required_": false,
             "type": "string"
            },
            "revoked": {
             "type": "boolean",
             "_name_": "revoked",
             "title": "revoked",
             "_required_": false
            },
            "expired": {
             "type": [
              "boolean",
              "null"
             ],
             "_name_": "expired",
             "title": "expired",
             "_required_": false
            },
            "issuer": {
             "anyOf": [
              {
               "_name_": "issuer",
               "title": "issuer",
               "_required_": false,
               "type": [
                "string",
                "null"
               ]
              },
              {
               "type": "object",
               "properties": {},
               "additionalProperties": true,
               "_name_": "issuer",
               "title": "issuer",
               "default": {},
               "_required_": false,
               "_attrs_order_": []
              }
             ],
             "nullable": false,
             "_name_": "issuer",
             "description": null,
             "_required_": false
            },
            "chain_list": {
             "_name_": "chain_list",
             "title": "chain_list",
             "default": [],
             "_required_": false,
             "type": "array",
             "items": [
              {
               "_name_": "certificate",
               "title": "certificate",
               "_required_": false,
               "type": "string"
              }
             ]
            },
            "country": {
             "_name_": "country",
             "title": "country",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "state": {
             "_name_": "state",
             "title": "state",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "city": {
             "_name_": "city",
             "title": "city",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "organization": {
             "_name_": "organization",
             "title": "organization",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "organizational_unit": {
             "_name_": "organizational_unit",
             "title": "organizational_unit",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "san": {
             "_name_": "san",
             "title": "san",
             "default": [],
             "_required_": false,
             "type": [
              "array",
              "null"
             ],
             "items": [
              {
               "_name_": "san_entry",
               "title": "san_entry",
               "_required_": false,
               "type": "string"
              }
             ]
            },
            "email": {
             "_name_": "email",
             "title": "email",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "DN": {
             "_name_": "DN",
             "title": "DN",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "subject_name_hash": {
             "_name_": "subject_name_hash",
             "title": "subject_name_hash",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "digest_algorithm": {
             "_name_": "digest_algorithm",
             "title": "digest_algorithm",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "from": {
             "_name_": "from",
             "title": "from",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "common": {
             "_name_": "common",
             "title": "common",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "until": {
             "_name_": "until",
             "title": "until",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "fingerprint": {
             "_name_": "fingerprint",
             "title": "fingerprint",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "key_type": {
             "_name_": "key_type",
             "title": "key_type",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "internal": {
             "_name_": "internal",
             "title": "internal",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "lifetime": {
             "type": [
              "integer",
              "null"
             ],
             "_name_": "lifetime",
             "title": "lifetime",
             "_required_": false
            },
            "serial": {
             "type": [
              "integer",
              "null"
             ],
             "_name_": "serial",
             "title": "serial",
             "_required_": false
            },
            "key_length": {
             "type": [
              "integer",
              "null"
             ],
             "_name_": "key_length",
             "title": "key_length",
             "_required_": false
            },
            "add_to_trusted_store": {
             "type": "boolean",
             "_name_": "add_to_trusted_store",
             "title": "add_to_trusted_store",
             "default": false,
             "_required_": false
            },
            "chain": {
             "type": [
              "boolean",
              "null"
             ],
             "_name_": "chain",
             "title": "chain",
             "_required_": false
            },
            "CA_type_existing": {
             "type": "boolean",
             "_name_": "CA_type_existing",
             "title": "CA_type_existing",
             "_required_": false
            },
            "CA_type_internal": {
             "type": "boolean",
             "_name_": "CA_type_internal",
             "title": "CA_type_internal",
             "_required_": false
            },
            "CA_type_intermediate": {
             "type": "boolean",
             "_name_": "CA_type_intermediate",
             "title": "CA_type_intermediate",
             "_required_": false
            },
            "cert_type_existing": {
             "type": "boolean",
             "_name_": "cert_type_existing",
             "title": "cert_type_existing",
             "_required_": false
            },
            "cert_type_internal": {
             "type": "boolean",
             "_name_": "cert_type_internal",
             "title": "cert_type_internal",
             "_required_": false
            },
            "cert_type_CSR": {
             "type": "boolean",
             "_name_": "cert_type_CSR",
             "title": "cert_type_CSR",
             "_required_": false
            },
            "parsed": {
             "type": "boolean",
             "_name_": "parsed",
             "title": "parsed",
             "_required_": false
            },
            "can_be_revoked": {
             "type": "boolean",
             "_name_": "can_be_revoked",
             "title": "can_be_revoked",
             "_required_": false
            },
            "extensions": {
             "type": "object",
             "properties": {},
             "additionalProperties": true,
             "_name_": "extensions",
             "title": "extensions",
             "default": {},
             "_required_": false,
             "_attrs_order_": []
            },
            "revoked_certs": {
             "_name_": "revoked_certs",
             "title": "revoked_certs",
             "default": [],
             "_required_": false,
             "type": "array",
             "items": []
            },
            "crl_path": {
             "_name_": "crl_path",
             "title": "crl_path",
             "_required_": false,
             "type": "string"
            },
            "signed_certificates": {
             "type": "integer",
             "_name_": "signed_certificates",
             "title": "signed_certificates",
             "_required_": false
            }
           },
           "additionalProperties": false,
           "_name_": "certificateauthority_entry",
           "title": "certificate_entry",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "id",
            "type",
            "name",
            "certificate",
            "privatekey",
            "CSR",
            "acme_uri",
            "domains_authenticators",
            "renew_days",
            "revoked_date",
            "signedby",
            "root_path",
            "acme",
            "certificate_path",
            "privatekey_path",
            "csr_path",
            "cert_type",
            "revoked",
            "expired",
            "issuer",
            "chain_list",
            "country",
            "state",
            "city",
            "organization",
            "organizational_unit",
            "san",
            "email",
            "DN",
            "subject_name_hash",
            "digest_algorithm",
            "from",
            "common",
            "until",
            "fingerprint",
            "key_type",
            "internal",
            "lifetime",
            "serial",
            "key_length",
            "add_to_trusted_store",
            "chain",
            "CA_type_existing",
            "CA_type_internal",
            "CA_type_intermediate",
            "cert_type_existing",
            "cert_type_internal",
            "cert_type_CSR",
            "parsed",
            "can_be_revoked",
            "extensions",
            "revoked_certs",
            "crl_path",
            "signed_certificates"
           ]
          }
         ]
        },
        {
         "type": "object",
         "properties": {
          "id": {
           "type": "integer",
           "_name_": "id",
           "title": "id",
           "_required_": false
          },
          "type": {
           "type": "integer",
           "_name_": "type",
           "title": "type",
           "_required_": false
          },
          "name": {
           "_name_": "name",
           "title": "name",
           "_required_": false,
           "type": "string"
          },
          "certificate": {
           "_name_": "certificate",
           "title": "certificate",
           "_required_": false,
           "type": [
            "string",
            "null"
           ]
          },
          "privatekey": {
           "_name_": "privatekey",
           "title": "privatekey",
           "_required_": false,
           "type": [
            "string",
            "null"
           ]
          },
          "CSR": {
           "_name_": "CSR",
           "title": "CSR",
           "_required_": false,
           "type": [
            "string",
            "null"
           ]
          },
          "acme_uri": {
           "_name_": "acme_uri",
           "title": "acme_uri",
           "_required_": false,
           "type": [
            "string",
            "null"
           ]
          },
          "domains_authenticators": {
           "type": "object",
           "properties": {},
           "additionalProperties": true,
           "_name_": "domains_authenticators",
           "title": "domains_authenticators",
           "default": {},
           "_required_": false,
           "_attrs_order_": []
          },
          "renew_days": {
           "type": "integer",
           "_name_": "renew_days",
           "title": "renew_days",
           "_required_": false
          },
          "revoked_date": {
           "_name_": "revoked_date",
           "title": "revoked_date",
           "_required_": false,
           "type": [
            "string",
            "null"
           ]
          },
          "signedby": {
           "type": "object",
           "properties": {},
           "additionalProperties": true,
           "_name_": "signedby",
           "title": "signedby",
           "default": {},
           "_required_": false,
           "_attrs_order_": []
          },
          "root_path": {
           "_name_": "root_path",
           "title": "root_path",
           "_required_": false,
           "type": "string"
          },
          "acme": {
           "type": "object",
           "properties": {},
           "additionalProperties": true,
           "_name_": "acme",
           "title": "acme",
           "default": {},
           "_required_": false,
           "_attrs_order_": []
          },
          "certificate_path": {
           "_name_": "certificate_path",
           "title": "certificate_path",
           "_required_": false,
           "type": [
            "string",
            "null"
           ]
          },
          "privatekey_path": {
           "_name_": "privatekey_path",
           "title": "privatekey_path",
           "_required_": false,
           "type": [
            "string",
            "null"
           ]
          },
          "csr_path": {
           "_name_": "csr_path",
           "title": "csr_path",
           "_required_": false,
           "type": [
            "string",
            "null"
           ]
          },
          "cert_type": {
           "_name_": "cert_type",
           "title": "cert_type",
           "_required_": false,
           "type": "string"
          },
          "revoked": {
           "type": "boolean",
           "_name_": "revoked",
           "title": "revoked",
           "_required_": false
          },
          "expired": {
           "type": [
            "boolean",
            "null"
           ],
           "_name_": "expired",
           "title": "expired",
           "_required_": false
          },
          "issuer": {
           "anyOf": [
            {
             "_name_": "issuer",
             "title": "issuer",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            {
             "type": "object",
             "properties": {},
             "additionalProperties": true,
             "_name_": "issuer",
             "title": "issuer",
             "default": {},
             "_required_": false,
             "_attrs_order_": []
            }
           ],
           "nullable": false,
           "_name_": "issuer",
           "description": null,
           "_required_": false
          },
          "chain_list": {
           "_name_": "chain_list",
           "title": "chain_list",
           "default": [],
           "_required_": false,
           "type": "array",
           "items": [
            {
             "_name_": "certificate",
             "title": "certificate",
             "_required_": false,
             "type": "string"
            }
           ]
          },
          "country": {
           "_name_": "country",
           "title": "country",
           "_required_": false,
           "type": [
            "string",
            "null"
           ]
          },
          "state": {
           "_name_": "state",
           "title": "state",
           "_required_": false,
           "type": [
            "string",
            "null"
           ]
          },
          "city": {
           "_name_": "city",
           "title": "city",
           "_required_": false,
           "type": [
            "string",
            "null"
           ]
          },
          "organization": {
           "_name_": "organization",
           "title": "organization",
           "_required_": false,
           "type": [
            "string",
            "null"
           ]
          },
          "organizational_unit": {
           "_name_": "organizational_unit",
           "title": "organizational_unit",
           "_required_": false,
           "type": [
            "string",
            "null"
           ]
          },
          "san": {
           "_name_": "san",
           "title": "san",
           "default": [],
           "_required_": false,
           "type": [
            "array",
            "null"
           ],
           "items": [
            {
             "_name_": "san_entry",
             "title": "san_entry",
             "_required_": false,
             "type": "string"
            }
           ]
          },
          "email": {
           "_name_": "email",
           "title": "email",
           "_required_": false,
           "type": [
            "string",
            "null"
           ]
          },
          "DN": {
           "_name_": "DN",
           "title": "DN",
           "_required_": false,
           "type": [
            "string",
            "null"
           ]
          },
          "subject_name_hash": {
           "_name_": "subject_name_hash",
           "title": "subject_name_hash",
           "_required_": false,
           "type": [
            "string",
            "null"
           ]
          },
          "digest_algorithm": {
           "_name_": "digest_algorithm",
           "title": "digest_algorithm",
           "_required_": false,
           "type": [
            "string",
            "null"
           ]
          },
          "from": {
           "_name_": "from",
           "title": "from",
           "_required_": false,
           "type": [
            "string",
            "null"
           ]
          },
          "common": {
           "_name_": "common",
           "title": "common",
           "_required_": false,
           "type": [
            "string",
            "null"
           ]
          },
          "until": {
           "_name_": "until",
           "title": "until",
           "_required_": false,
           "type": [
            "string",
            "null"
           ]
          },
          "fingerprint": {
           "_name_": "fingerprint",
           "title": "fingerprint",
           "_required_": false,
           "type": [
            "string",
            "null"
           ]
          },
          "key_type": {
           "_name_": "key_type",
           "title": "key_type",
           "_required_": false,
           "type": [
            "string",
            "null"
           ]
          },
          "internal": {
           "_name_": "internal",
           "title": "internal",
           "_required_": false,
           "type": [
            "string",
            "null"
           ]
          },
          "lifetime": {
           "type": [
            "integer",
            "null"
           ],
           "_name_": "lifetime",
           "title": "lifetime",
           "_required_": false
          },
          "serial": {
           "type": [
            "integer",
            "null"
           ],
           "_name_": "serial",
           "title": "serial",
           "_required_": false
          },
          "key_length": {
           "type": [
            "integer",
            "null"
           ],
           "_name_": "key_length",
           "title": "key_length",
           "_required_": false
          },
          "add_to_trusted_store": {
           "type": "boolean",
           "_name_": "add_to_trusted_store",
           "title": "add_to_trusted_store",
           "default": false,
           "_required_": false
          },
          "chain": {
           "type": [
            "boolean",
            "null"
           ],
           "_name_": "chain",
           "title": "chain",
           "_required_": false
          },
          "CA_type_existing": {
           "type": "boolean",
           "_name_": "CA_type_existing",
           "title": "CA_type_existing",
           "_required_": false
          },
          "CA_type_internal": {
           "type": "boolean",
           "_name_": "CA_type_internal",
           "title": "CA_type_internal",
           "_required_": false
          },
          "CA_type_intermediate": {
           "type": "boolean",
           "_name_": "CA_type_intermediate",
           "title": "CA_type_intermediate",
           "_required_": false
          },
          "cert_type_existing": {
           "type": "boolean",
           "_name_": "cert_type_existing",
           "title": "cert_type_existing",
           "_required_": false
          },
          "cert_type_internal": {
           "type": "boolean",
           "_name_": "cert_type_internal",
           "title": "cert_type_internal",
           "_required_": false
          },
          "cert_type_CSR": {
           "type": "boolean",
           "_name_": "cert_type_CSR",
           "title": "cert_type_CSR",
           "_required_": false
          },
          "parsed": {
           "type": "boolean",
           "_name_": "parsed",
           "title": "parsed",
           "_required_": false
          },
          "can_be_revoked": {
           "type": "boolean",
           "_name_": "can_be_revoked",
           "title": "can_be_revoked",
           "_required_": false
          },
          "extensions": {
           "type": "object",
           "properties": {},
           "additionalProperties": true,
           "_name_": "extensions",
           "title": "extensions",
           "default": {},
           "_required_": false,
           "_attrs_order_": []
          },
          "revoked_certs": {
           "_name_": "revoked_certs",
           "title": "revoked_certs",
           "default": [],
           "_required_": false,
           "type": "array",
           "items": []
          },
          "crl_path": {
           "_name_": "crl_path",
           "title": "crl_path",
           "_required_": false,
           "type": "string"
          },
          "signed_certificates": {
           "type": "integer",
           "_name_": "signed_certificates",
           "title": "signed_certificates",
           "_required_": false
          }
         },
         "additionalProperties": false,
         "_name_": "certificateauthority_entry",
         "title": "certificate_entry",
         "default": {},
         "_required_": false,
         "_attrs_order_": [
          "id",
          "type",
          "name",
          "certificate",
          "privatekey",
          "CSR",
          "acme_uri",
          "domains_authenticators",
          "renew_days",
          "revoked_date",
          "signedby",
          "root_path",
          "acme",
          "certificate_path",
          "privatekey_path",
          "csr_path",
          "cert_type",
          "revoked",
          "expired",
          "issuer",
          "chain_list",
          "country",
          "state",
          "city",
          "organization",
          "organizational_unit",
          "san",
          "email",
          "DN",
          "subject_name_hash",
          "digest_algorithm",
          "from",
          "common",
          "until",
          "fingerprint",
          "key_type",
          "internal",
          "lifetime",
          "serial",
          "key_length",
          "add_to_trusted_store",
          "chain",
          "CA_type_existing",
          "CA_type_internal",
          "CA_type_intermediate",
          "cert_type_existing",
          "cert_type_internal",
          "cert_type_CSR",
          "parsed",
          "can_be_revoked",
          "extensions",
          "revoked_certs",
          "crl_path",
          "signed_certificates"
         ]
        },
        {
         "type": "integer",
         "_name_": "count",
         "title": "count",
         "_required_": false
        },
        {
         "type": "object",
         "properties": {
          "id": {
           "type": "integer",
           "_name_": "id",
           "title": "id",
           "_required_": false
          },
          "type": {
           "type": "integer",
           "_name_": "type",
           "title": "type",
           "_required_": false
          },
          "name": {
           "_name_": "name",
           "title": "name",
           "_required_": false,
           "type": "string"
          },
          "certificate": {
           "_name_": "certificate",
           "title": "certificate",
           "_required_": false,
           "type": [
            "string",
            "null"
           ]
          },
          "privatekey": {
           "_name_": "privatekey",
           "title": "privatekey",
           "_required_": false,
           "type": [
            "string",
            "null"
           ]
          },
          "CSR": {
           "_name_": "CSR",
           "title": "CSR",
           "_required_": false,
           "type": [
            "string",
            "null"
           ]
          },
          "acme_uri": {
           "_name_": "acme_uri",
           "title": "acme_uri",
           "_required_": false,
           "type": [
            "string",
            "null"
           ]
          },
          "domains_authenticators": {
           "type": "object",
           "properties": {},
           "additionalProperties": true,
           "_name_": "domains_authenticators",
           "title": "domains_authenticators",
           "default": {},
           "_required_": false,
           "_attrs_order_": []
          },
          "renew_days": {
           "type": "integer",
           "_name_": "renew_days",
           "title": "renew_days",
           "_required_": false
          },
          "revoked_date": {
           "_name_": "revoked_date",
           "title": "revoked_date",
           "_required_": false,
           "type": [
            "string",
            "null"
           ]
          },
          "signedby": {
           "type": "object",
           "properties": {},
           "additionalProperties": true,
           "_name_": "signedby",
           "title": "signedby",
           "default": {},
           "_required_": false,
           "_attrs_order_": []
          },
          "root_path": {
           "_name_": "root_path",
           "title": "root_path",
           "_required_": false,
           "type": "string"
          },
          "acme": {
           "type": "object",
           "properties": {},
           "additionalProperties": true,
           "_name_": "acme",
           "title": "acme",
           "default": {},
           "_required_": false,
           "_attrs_order_": []
          },
          "certificate_path": {
           "_name_": "certificate_path",
           "title": "certificate_path",
           "_required_": false,
           "type": [
            "string",
            "null"
           ]
          },
          "privatekey_path": {
           "_name_": "privatekey_path",
           "title": "privatekey_path",
           "_required_": false,
           "type": [
            "string",
            "null"
           ]
          },
          "csr_path": {
           "_name_": "csr_path",
           "title": "csr_path",
           "_required_": false,
           "type": [
            "string",
            "null"
           ]
          },
          "cert_type": {
           "_name_": "cert_type",
           "title": "cert_type",
           "_required_": false,
           "type": "string"
          },
          "revoked": {
           "type": "boolean",
           "_name_": "revoked",
           "title": "revoked",
           "_required_": false
          },
          "expired": {
           "type": [
            "boolean",
            "null"
           ],
           "_name_": "expired",
           "title": "expired",
           "_required_": false
          },
          "issuer": {
           "anyOf": [
            {
             "_name_": "issuer",
             "title": "issuer",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            {
             "type": "object",
             "properties": {},
             "additionalProperties": true,
             "_name_": "issuer",
             "title": "issuer",
             "default": {},
             "_required_": false,
             "_attrs_order_": []
            }
           ],
           "nullable": false,
           "_name_": "issuer",
           "description": null,
           "_required_": false
          },
          "chain_list": {
           "_name_": "chain_list",
           "title": "chain_list",
           "default": [],
           "_required_": false,
           "type": "array",
           "items": [
            {
             "_name_": "certificate",
             "title": "certificate",
             "_required_": false,
             "type": "string"
            }
           ]
          },
          "country": {
           "_name_": "country",
           "title": "country",
           "_required_": false,
           "type": [
            "string",
            "null"
           ]
          },
          "state": {
           "_name_": "state",
           "title": "state",
           "_required_": false,
           "type": [
            "string",
            "null"
           ]
          },
          "city": {
           "_name_": "city",
           "title": "city",
           "_required_": false,
           "type": [
            "string",
            "null"
           ]
          },
          "organization": {
           "_name_": "organization",
           "title": "organization",
           "_required_": false,
           "type": [
            "string",
            "null"
           ]
          },
          "organizational_unit": {
           "_name_": "organizational_unit",
           "title": "organizational_unit",
           "_required_": false,
           "type": [
            "string",
            "null"
           ]
          },
          "san": {
           "_name_": "san",
           "title": "san",
           "default": [],
           "_required_": false,
           "type": [
            "array",
            "null"
           ],
           "items": [
            {
             "_name_": "san_entry",
             "title": "san_entry",
             "_required_": false,
             "type": "string"
            }
           ]
          },
          "email": {
           "_name_": "email",
           "title": "email",
           "_required_": false,
           "type": [
            "string",
            "null"
           ]
          },
          "DN": {
           "_name_": "DN",
           "title": "DN",
           "_required_": false,
           "type": [
            "string",
            "null"
           ]
          },
          "subject_name_hash": {
           "_name_": "subject_name_hash",
           "title": "subject_name_hash",
           "_required_": false,
           "type": [
            "string",
            "null"
           ]
          },
          "digest_algorithm": {
           "_name_": "digest_algorithm",
           "title": "digest_algorithm",
           "_required_": false,
           "type": [
            "string",
            "null"
           ]
          },
          "from": {
           "_name_": "from",
           "title": "from",
           "_required_": false,
           "type": [
            "string",
            "null"
           ]
          },
          "common": {
           "_name_": "common",
           "title": "common",
           "_required_": false,
           "type": [
            "string",
            "null"
           ]
          },
          "until": {
           "_name_": "until",
           "title": "until",
           "_required_": false,
           "type": [
            "string",
            "null"
           ]
          },
          "fingerprint": {
           "_name_": "fingerprint",
           "title": "fingerprint",
           "_required_": false,
           "type": [
            "string",
            "null"
           ]
          },
          "key_type": {
           "_name_": "key_type",
           "title": "key_type",
           "_required_": false,
           "type": [
            "string",
            "null"
           ]
          },
          "internal": {
           "_name_": "internal",
           "title": "internal",
           "_required_": false,
           "type": [
            "string",
            "null"
           ]
          },
          "lifetime": {
           "type": [
            "integer",
            "null"
           ],
           "_name_": "lifetime",
           "title": "lifetime",
           "_required_": false
          },
          "serial": {
           "type": [
            "integer",
            "null"
           ],
           "_name_": "serial",
           "title": "serial",
           "_required_": false
          },
          "key_length": {
           "type": [
            "integer",
            "null"
           ],
           "_name_": "key_length",
           "title": "key_length",
           "_required_": false
          },
          "add_to_trusted_store": {
           "type": "boolean",
           "_name_": "add_to_trusted_store",
           "title": "add_to_trusted_store",
           "default": false,
           "_required_": false
          },
          "chain": {
           "type": [
            "boolean",
            "null"
           ],
           "_name_": "chain",
           "title": "chain",
           "_required_": false
          },
          "CA_type_existing": {
           "type": "boolean",
           "_name_": "CA_type_existing",
           "title": "CA_type_existing",
           "_required_": false
          },
          "CA_type_internal": {
           "type": "boolean",
           "_name_": "CA_type_internal",
           "title": "CA_type_internal",
           "_required_": false
          },
          "CA_type_intermediate": {
           "type": "boolean",
           "_name_": "CA_type_intermediate",
           "title": "CA_type_intermediate",
           "_required_": false
          },
          "cert_type_existing": {
           "type": "boolean",
           "_name_": "cert_type_existing",
           "title": "cert_type_existing",
           "_required_": false
          },
          "cert_type_internal": {
           "type": "boolean",
           "_name_": "cert_type_internal",
           "title": "cert_type_internal",
           "_required_": false
          },
          "cert_type_CSR": {
           "type": "boolean",
           "_name_": "cert_type_CSR",
           "title": "cert_type_CSR",
           "_required_": false
          },
          "parsed": {
           "type": "boolean",
           "_name_": "parsed",
           "title": "parsed",
           "_required_": false
          },
          "can_be_revoked": {
           "type": "boolean",
           "_name_": "can_be_revoked",
           "title": "can_be_revoked",
           "_required_": false
          },
          "extensions": {
           "type": "object",
           "properties": {},
           "additionalProperties": true,
           "_name_": "extensions",
           "title": "extensions",
           "default": {},
           "_required_": false,
           "_attrs_order_": []
          },
          "revoked_certs": {
           "_name_": "revoked_certs",
           "title": "revoked_certs",
           "default": [],
           "_required_": false,
           "type": "array",
           "items": []
          },
          "crl_path": {
           "_name_": "crl_path",
           "title": "crl_path",
           "_required_": false,
           "type": "string"
          },
          "signed_certificates": {
           "type": "integer",
           "_name_": "signed_certificates",
           "title": "signed_certificates",
           "_required_": false
          }
         },
         "additionalProperties": false,
         "_name_": "certificateauthority_entry",
         "title": "certificate_entry",
         "default": {},
         "_required_": false,
         "_attrs_order_": [
          "id",
          "type",
          "name",
          "certificate",
          "privatekey",
          "CSR",
          "acme_uri",
          "domains_authenticators",
          "renew_days",
          "revoked_date",
          "signedby",
          "root_path",
          "acme",
          "certificate_path",
          "privatekey_path",
          "csr_path",
          "cert_type",
          "revoked",
          "expired",
          "issuer",
          "chain_list",
          "country",
          "state",
          "city",
          "organization",
          "organizational_unit",
          "san",
          "email",
          "DN",
          "subject_name_hash",
          "digest_algorithm",
          "from",
          "common",
          "until",
          "fingerprint",
          "key_type",
          "internal",
          "lifetime",
          "serial",
          "key_length",
          "add_to_trusted_store",
          "chain",
          "CA_type_existing",
          "CA_type_internal",
          "CA_type_intermediate",
          "cert_type_existing",
          "cert_type_internal",
          "cert_type_CSR",
          "parsed",
          "can_be_revoked",
          "extensions",
          "revoked_certs",
          "crl_path",
          "signed_certificates"
         ]
        }
       ],
       "nullable": false,
       "_name_": "query_result",
       "description": null
      },
      "certificateauthority_create": {
       "type": "object",
       "properties": {
        "tos": {
         "type": "boolean",
         "_name_": "tos",
         "title": "tos"
        },
        "csr_id": {
         "type": "integer",
         "_name_": "csr_id",
         "title": "csr_id"
        },
        "signedby": {
         "type": "integer",
         "_name_": "signedby",
         "title": "signedby"
        },
        "key_length": {
         "type": "integer",
         "_name_": "key_length",
         "title": "key_length"
        },
        "renew_days": {
         "type": "integer",
         "_name_": "renew_days",
         "title": "renew_days"
        },
        "type": {
         "type": "integer",
         "_name_": "type",
         "title": "type"
        },
        "lifetime": {
         "type": "integer",
         "_name_": "lifetime",
         "title": "lifetime"
        },
        "serial": {
         "type": "integer",
         "_name_": "serial",
         "title": "serial"
        },
        "acme_directory_uri": {
         "_name_": "acme_directory_uri",
         "title": "acme_directory_uri",
         "type": "string"
        },
        "certificate": {
         "_name_": "certificate",
         "title": "certificate",
         "type": "string"
        },
        "city": {
         "_name_": "city",
         "title": "city",
         "type": "string"
        },
        "common": {
         "_name_": "common",
         "title": "common",
         "type": "string",
         "nullable": true
        },
        "country": {
         "_name_": "country",
         "title": "country",
         "type": "string"
        },
        "CSR": {
         "_name_": "CSR",
         "title": "CSR",
         "type": "string"
        },
        "ec_curve": {
         "_name_": "ec_curve",
         "title": "ec_curve",
         "default": "SECP384R1",
         "type": "string",
         "enum": [
          "SECP256R1",
          "SECP384R1",
          "SECP521R1",
          "ed25519"
         ],
         "description": "Created certificate authorities use RSA keys by default. If an Elliptic Curve Key is desired, then it can be\nspecified with the `key_type` attribute. If the `ec_curve` attribute is not specified for the Elliptic\nCurve Key, default to using \"SECP384R1\" curve."
        },
        "email": {
         "_name_": "email",
         "title": "email",
         "type": "string"
        },
        "key_type": {
         "_name_": "key_type",
         "title": "key_type",
         "default": "RSA",
         "type": "string",
         "enum": [
          "RSA",
          "EC"
         ],
         "description": "Created certificate authorities use RSA keys by default. If an Elliptic Curve Key is desired, then it can be\nspecified with the `key_type` attribute. If the `ec_curve` attribute is not specified for the Elliptic\nCurve Key, default to using \"SECP384R1\" curve."
        },
        "name": {
         "_name_": "name",
         "title": "name",
         "type": "string"
        },
        "organization": {
         "_name_": "organization",
         "title": "organization",
         "type": "string"
        },
        "organizational_unit": {
         "_name_": "organizational_unit",
         "title": "organizational_unit",
         "type": "string"
        },
        "passphrase": {
         "_name_": "passphrase",
         "title": "passphrase",
         "type": "string"
        },
        "privatekey": {
         "_name_": "privatekey",
         "title": "privatekey",
         "type": "string"
        },
        "state": {
         "_name_": "state",
         "title": "state",
         "type": "string"
        },
        "create_type": {
         "_name_": "create_type",
         "title": "create_type",
         "type": "string",
         "enum": [
          "CA_CREATE_INTERNAL",
          "CA_CREATE_IMPORTED",
          "CA_CREATE_INTERMEDIATE"
         ],
         "description": "Certificate Authorities are classified under following types with the necessary keywords to be passed\nfor `create_type` attribute to create the respective type of certificate authority\nA type is selected by the Certificate Authority Service based on `create_type`. The rest of the values\nare validated accordingly and finally a certificate is made based on the selected type."
        },
        "digest_algorithm": {
         "_name_": "digest_algorithm",
         "title": "digest_algorithm",
         "type": "string",
         "enum": [
          "SHA224",
          "SHA256",
          "SHA384",
          "SHA512"
         ]
        },
        "san": {
         "_name_": "san",
         "title": "san",
         "default": [],
         "type": "array",
         "items": {
          "_name_": "san",
          "title": "san",
          "_required_": false,
          "type": "string"
         }
        },
        "cert_extensions": {
         "type": "object",
         "properties": {
          "BasicConstraints": {
           "type": "object",
           "properties": {
            "ca": {
             "type": "boolean",
             "_name_": "ca",
             "title": "ca",
             "default": true
            },
            "enabled": {
             "type": "boolean",
             "_name_": "enabled",
             "title": "enabled",
             "default": true
            },
            "path_length": {
             "type": "integer",
             "_name_": "path_length",
             "title": "path_length",
             "default": null,
             "nullable": true
            },
            "extension_critical": {
             "type": "boolean",
             "_name_": "extension_critical",
             "title": "extension_critical",
             "default": true
            }
           },
           "additionalProperties": false,
           "_name_": "BasicConstraints",
           "title": "BasicConstraints",
           "default": {},
           "_attrs_order_": [
            "ca",
            "enabled",
            "path_length",
            "extension_critical"
           ]
          },
          "AuthorityKeyIdentifier": {
           "type": "object",
           "properties": {
            "authority_cert_issuer": {
             "type": "boolean",
             "_name_": "authority_cert_issuer",
             "title": "authority_cert_issuer",
             "default": false
            },
            "enabled": {
             "type": "boolean",
             "_name_": "enabled",
             "title": "enabled",
             "default": false
            },
            "extension_critical": {
             "type": "boolean",
             "_name_": "extension_critical",
             "title": "extension_critical",
             "default": false
            }
           },
           "additionalProperties": false,
           "_name_": "AuthorityKeyIdentifier",
           "title": "AuthorityKeyIdentifier",
           "default": {},
           "_attrs_order_": [
            "authority_cert_issuer",
            "enabled",
            "extension_critical"
           ]
          },
          "ExtendedKeyUsage": {
           "type": "object",
           "properties": {
            "usages": {
             "_name_": "usages",
             "title": "usages",
             "default": [
              "SERVER_AUTH"
             ],
             "type": "array",
             "items": {
              "_name_": "usage",
              "title": "usage",
              "_required_": false,
              "type": "string",
              "enum": [
               "ANY_EXTENDED_KEY_USAGE",
               "CERTIFICATE_TRANSPARENCY",
               "CLIENT_AUTH",
               "CODE_SIGNING",
               "EMAIL_PROTECTION",
               "IPSEC_IKE",
               "KERBEROS_PKINIT_KDC",
               "OCSP_SIGNING",
               "SERVER_AUTH",
               "SMARTCARD_LOGON",
               "TIME_STAMPING"
              ]
             }
            },
            "enabled": {
             "type": "boolean",
             "_name_": "enabled",
             "title": "enabled",
             "default": true
            },
            "extension_critical": {
             "type": "boolean",
             "_name_": "extension_critical",
             "title": "extension_critical",
             "default": false
            }
           },
           "additionalProperties": false,
           "_name_": "ExtendedKeyUsage",
           "title": "ExtendedKeyUsage",
           "default": {},
           "_attrs_order_": [
            "usages",
            "enabled",
            "extension_critical"
           ]
          },
          "KeyUsage": {
           "type": "object",
           "properties": {
            "enabled": {
             "type": "boolean",
             "_name_": "enabled",
             "title": "enabled",
             "default": true
            },
            "digital_signature": {
             "type": "boolean",
             "_name_": "digital_signature",
             "title": "digital_signature",
             "default": false
            },
            "content_commitment": {
             "type": "boolean",
             "_name_": "content_commitment",
             "title": "content_commitment",
             "default": false
            },
            "key_encipherment": {
             "type": "boolean",
             "_name_": "key_encipherment",
             "title": "key_encipherment",
             "default": false
            },
            "data_encipherment": {
             "type": "boolean",
             "_name_": "data_encipherment",
             "title": "data_encipherment",
             "default": false
            },
            "key_agreement": {
             "type": "boolean",
             "_name_": "key_agreement",
             "title": "key_agreement",
             "default": false
            },
            "key_cert_sign": {
             "type": "boolean",
             "_name_": "key_cert_sign",
             "title": "key_cert_sign",
             "default": true
            },
            "crl_sign": {
             "type": "boolean",
             "_name_": "crl_sign",
             "title": "crl_sign",
             "default": true
            },
            "encipher_only": {
             "type": "boolean",
             "_name_": "encipher_only",
             "title": "encipher_only",
             "default": false
            },
            "decipher_only": {
             "type": "boolean",
             "_name_": "decipher_only",
             "title": "decipher_only",
             "default": false
            },
            "extension_critical": {
             "type": "boolean",
             "_name_": "extension_critical",
             "title": "extension_critical",
             "default": true
            }
           },
           "additionalProperties": false,
           "_name_": "KeyUsage",
           "title": "KeyUsage",
           "default": {},
           "_attrs_order_": [
            "enabled",
            "digital_signature",
            "content_commitment",
            "key_encipherment",
            "data_encipherment",
            "key_agreement",
            "key_cert_sign",
            "crl_sign",
            "encipher_only",
            "decipher_only",
            "extension_critical"
           ]
          }
         },
         "additionalProperties": false,
         "_name_": "cert_extensions",
         "title": "cert_extensions",
         "default": {},
         "_attrs_order_": [
          "BasicConstraints",
          "AuthorityKeyIdentifier",
          "ExtendedKeyUsage",
          "KeyUsage"
         ],
         "description": "`cert_extensions` can be specified to set X509v3 extensions."
        },
        "add_to_trusted_store": {
         "type": "boolean",
         "_name_": "add_to_trusted_store",
         "title": "add_to_trusted_store",
         "default": false
        }
       },
       "additionalProperties": false,
       "_name_": "ca_create",
       "title": "ca_create",
       "default": {},
       "_attrs_order_": [
        "tos",
        "csr_id",
        "signedby",
        "key_length",
        "renew_days",
        "type",
        "lifetime",
        "serial",
        "acme_directory_uri",
        "certificate",
        "city",
        "common",
        "country",
        "CSR",
        "ec_curve",
        "email",
        "key_type",
        "name",
        "organization",
        "organizational_unit",
        "passphrase",
        "privatekey",
        "state",
        "create_type",
        "digest_algorithm",
        "san",
        "cert_extensions",
        "add_to_trusted_store"
       ]
      },
      "return_schema_of_certificateauthority_create": {
       "type": "object",
       "properties": {
        "id": {
         "type": "integer",
         "_name_": "id",
         "title": "id"
        },
        "type": {
         "type": "integer",
         "_name_": "type",
         "title": "type"
        },
        "name": {
         "_name_": "name",
         "title": "name",
         "type": "string"
        },
        "certificate": {
         "_name_": "certificate",
         "title": "certificate",
         "type": "string",
         "nullable": true
        },
        "privatekey": {
         "_name_": "privatekey",
         "title": "privatekey",
         "type": "string",
         "nullable": true
        },
        "CSR": {
         "_name_": "CSR",
         "title": "CSR",
         "type": "string",
         "nullable": true
        },
        "acme_uri": {
         "_name_": "acme_uri",
         "title": "acme_uri",
         "type": "string",
         "nullable": true
        },
        "domains_authenticators": {
         "type": "object",
         "properties": {},
         "additionalProperties": true,
         "_name_": "domains_authenticators",
         "title": "domains_authenticators",
         "default": {},
         "_attrs_order_": []
        },
        "renew_days": {
         "type": "integer",
         "_name_": "renew_days",
         "title": "renew_days"
        },
        "revoked_date": {
         "_name_": "revoked_date",
         "title": "revoked_date",
         "type": "string",
         "nullable": true
        },
        "signedby": {
         "type": "object",
         "properties": {},
         "additionalProperties": true,
         "_name_": "signedby",
         "title": "signedby",
         "default": {},
         "_attrs_order_": []
        },
        "root_path": {
         "_name_": "root_path",
         "title": "root_path",
         "type": "string"
        },
        "acme": {
         "type": "object",
         "properties": {},
         "additionalProperties": true,
         "_name_": "acme",
         "title": "acme",
         "default": {},
         "_attrs_order_": []
        },
        "certificate_path": {
         "_name_": "certificate_path",
         "title": "certificate_path",
         "type": "string",
         "nullable": true
        },
        "privatekey_path": {
         "_name_": "privatekey_path",
         "title": "privatekey_path",
         "type": "string",
         "nullable": true
        },
        "csr_path": {
         "_name_": "csr_path",
         "title": "csr_path",
         "type": "string",
         "nullable": true
        },
        "cert_type": {
         "_name_": "cert_type",
         "title": "cert_type",
         "type": "string"
        },
        "revoked": {
         "type": "boolean",
         "_name_": "revoked",
         "title": "revoked"
        },
        "expired": {
         "type": "boolean",
         "_name_": "expired",
         "title": "expired",
         "nullable": true
        },
        "issuer": {
         "anyOf": [
          {
           "_name_": "issuer",
           "title": "issuer",
           "_required_": false,
           "type": [
            "string",
            "null"
           ]
          },
          {
           "type": "object",
           "properties": {},
           "additionalProperties": true,
           "_name_": "issuer",
           "title": "issuer",
           "default": {},
           "_required_": false,
           "_attrs_order_": []
          }
         ],
         "nullable": false,
         "_name_": "issuer",
         "description": null
        },
        "chain_list": {
         "_name_": "chain_list",
         "title": "chain_list",
         "default": [],
         "type": "array",
         "items": {
          "_name_": "certificate",
          "title": "certificate",
          "_required_": false,
          "type": "string"
         }
        },
        "country": {
         "_name_": "country",
         "title": "country",
         "type": "string",
         "nullable": true
        },
        "state": {
         "_name_": "state",
         "title": "state",
         "type": "string",
         "nullable": true
        },
        "city": {
         "_name_": "city",
         "title": "city",
         "type": "string",
         "nullable": true
        },
        "organization": {
         "_name_": "organization",
         "title": "organization",
         "type": "string",
         "nullable": true
        },
        "organizational_unit": {
         "_name_": "organizational_unit",
         "title": "organizational_unit",
         "type": "string",
         "nullable": true
        },
        "san": {
         "_name_": "san",
         "title": "san",
         "default": [],
         "type": "array",
         "items": {
          "_name_": "san_entry",
          "title": "san_entry",
          "_required_": false,
          "type": "string"
         },
         "nullable": true
        },
        "email": {
         "_name_": "email",
         "title": "email",
         "type": "string",
         "nullable": true
        },
        "DN": {
         "_name_": "DN",
         "title": "DN",
         "type": "string",
         "nullable": true
        },
        "subject_name_hash": {
         "_name_": "subject_name_hash",
         "title": "subject_name_hash",
         "type": "string",
         "nullable": true
        },
        "digest_algorithm": {
         "_name_": "digest_algorithm",
         "title": "digest_algorithm",
         "type": "string",
         "nullable": true
        },
        "from": {
         "_name_": "from",
         "title": "from",
         "type": "string",
         "nullable": true
        },
        "common": {
         "_name_": "common",
         "title": "common",
         "type": "string",
         "nullable": true
        },
        "until": {
         "_name_": "until",
         "title": "until",
         "type": "string",
         "nullable": true
        },
        "fingerprint": {
         "_name_": "fingerprint",
         "title": "fingerprint",
         "type": "string",
         "nullable": true
        },
        "key_type": {
         "_name_": "key_type",
         "title": "key_type",
         "type": "string",
         "description": "Created certificate authorities use RSA keys by default. If an Elliptic Curve Key is desired, then it can be\nspecified with the `key_type` attribute. If the `ec_curve` attribute is not specified for the Elliptic\nCurve Key, default to using \"SECP384R1\" curve.",
         "nullable": true
        },
        "internal": {
         "_name_": "internal",
         "title": "internal",
         "type": "string",
         "nullable": true
        },
        "lifetime": {
         "type": "integer",
         "_name_": "lifetime",
         "title": "lifetime",
         "nullable": true
        },
        "serial": {
         "type": "integer",
         "_name_": "serial",
         "title": "serial",
         "nullable": true
        },
        "key_length": {
         "type": "integer",
         "_name_": "key_length",
         "title": "key_length",
         "nullable": true
        },
        "add_to_trusted_store": {
         "type": "boolean",
         "_name_": "add_to_trusted_store",
         "title": "add_to_trusted_store",
         "default": false
        },
        "chain": {
         "type": "boolean",
         "_name_": "chain",
         "title": "chain",
         "nullable": true
        },
        "CA_type_existing": {
         "type": "boolean",
         "_name_": "CA_type_existing",
         "title": "CA_type_existing"
        },
        "CA_type_internal": {
         "type": "boolean",
         "_name_": "CA_type_internal",
         "title": "CA_type_internal"
        },
        "CA_type_intermediate": {
         "type": "boolean",
         "_name_": "CA_type_intermediate",
         "title": "CA_type_intermediate"
        },
        "cert_type_existing": {
         "type": "boolean",
         "_name_": "cert_type_existing",
         "title": "cert_type_existing"
        },
        "cert_type_internal": {
         "type": "boolean",
         "_name_": "cert_type_internal",
         "title": "cert_type_internal"
        },
        "cert_type_CSR": {
         "type": "boolean",
         "_name_": "cert_type_CSR",
         "title": "cert_type_CSR"
        },
        "parsed": {
         "type": "boolean",
         "_name_": "parsed",
         "title": "parsed"
        },
        "can_be_revoked": {
         "type": "boolean",
         "_name_": "can_be_revoked",
         "title": "can_be_revoked"
        },
        "extensions": {
         "type": "object",
         "properties": {},
         "additionalProperties": true,
         "_name_": "extensions",
         "title": "extensions",
         "default": {},
         "_attrs_order_": []
        },
        "revoked_certs": {
         "_name_": "revoked_certs",
         "title": "revoked_certs",
         "default": [],
         "type": "array",
         "items": {}
        },
        "crl_path": {
         "_name_": "crl_path",
         "title": "crl_path",
         "type": "string"
        },
        "signed_certificates": {
         "type": "integer",
         "_name_": "signed_certificates",
         "title": "signed_certificates"
        }
       },
       "additionalProperties": false,
       "_name_": "certificateauthority_create_returns",
       "title": "certificateauthority_create_returns",
       "default": {},
       "_attrs_order_": [
        "id",
        "type",
        "name",
        "certificate",
        "privatekey",
        "CSR",
        "acme_uri",
        "domains_authenticators",
        "renew_days",
        "revoked_date",
        "signedby",
        "root_path",
        "acme",
        "certificate_path",
        "privatekey_path",
        "csr_path",
        "cert_type",
        "revoked",
        "expired",
        "issuer",
        "chain_list",
        "country",
        "state",
        "city",
        "organization",
        "organizational_unit",
        "san",
        "email",
        "DN",
        "subject_name_hash",
        "digest_algorithm",
        "from",
        "common",
        "until",
        "fingerprint",
        "key_type",
        "internal",
        "lifetime",
        "serial",
        "key_length",
        "add_to_trusted_store",
        "chain",
        "CA_type_existing",
        "CA_type_internal",
        "CA_type_intermediate",
        "cert_type_existing",
        "cert_type_internal",
        "cert_type_CSR",
        "parsed",
        "can_be_revoked",
        "extensions",
        "revoked_certs",
        "crl_path",
        "signed_certificates"
       ]
      },
      "return_schema_of_certificateauthority_delete": {
       "type": "boolean",
       "_name_": "deleted",
       "title": "deleted",
       "description": "Will return `true` if `id` is deleted successfully"
      },
      "certificateauthority_update": {
       "type": "object",
       "properties": {
        "revoked": {
         "type": "boolean",
         "_name_": "revoked",
         "title": "revoked",
         "description": "Only `name` and `revoked` attribute can be updated.\nIf `revoked` is enabled, the CA and its complete chain is marked as revoked and added to the CA's\ncertificate revocation list."
        },
        "add_to_trusted_store": {
         "type": "boolean",
         "_name_": "add_to_trusted_store",
         "title": "add_to_trusted_store"
        },
        "ca_id": {
         "type": "integer",
         "_name_": "ca_id",
         "title": "ca_id"
        },
        "csr_cert_id": {
         "type": "integer",
         "_name_": "csr_cert_id",
         "title": "csr_cert_id"
        },
        "create_type": {
         "_name_": "create_type",
         "title": "create_type",
         "type": "string",
         "enum": [
          "CA_SIGN_CSR"
         ],
         "description": "Certificate Authorities are classified under following types with the necessary keywords to be passed\nfor `create_type` attribute to create the respective type of certificate authority\nA type is selected by the Certificate Authority Service based on `create_type`. The rest of the values\nare validated accordingly and finally a certificate is made based on the selected type."
        },
        "name": {
         "_name_": "name",
         "title": "name",
         "type": "string",
         "description": "Only `name` and `revoked` attribute can be updated."
        }
       },
       "additionalProperties": false,
       "_name_": "ca_update",
       "title": "ca_update",
       "default": {},
       "_attrs_order_": [
        "revoked",
        "add_to_trusted_store",
        "ca_id",
        "csr_cert_id",
        "create_type",
        "name"
       ]
      },
      "return_schema_of_certificateauthority_update": {
       "type": "object",
       "properties": {
        "id": {
         "type": "integer",
         "_name_": "id",
         "title": "id",
         "description": "Update Certificate Authority of `id`"
        },
        "type": {
         "type": "integer",
         "_name_": "type",
         "title": "type"
        },
        "name": {
         "_name_": "name",
         "title": "name",
         "type": "string",
         "description": "Only `name` and `revoked` attribute can be updated."
        },
        "certificate": {
         "_name_": "certificate",
         "title": "certificate",
         "type": "string",
         "nullable": true
        },
        "privatekey": {
         "_name_": "privatekey",
         "title": "privatekey",
         "type": "string",
         "nullable": true
        },
        "CSR": {
         "_name_": "CSR",
         "title": "CSR",
         "type": "string",
         "nullable": true
        },
        "acme_uri": {
         "_name_": "acme_uri",
         "title": "acme_uri",
         "type": "string",
         "nullable": true
        },
        "domains_authenticators": {
         "type": "object",
         "properties": {},
         "additionalProperties": true,
         "_name_": "domains_authenticators",
         "title": "domains_authenticators",
         "default": {},
         "_attrs_order_": []
        },
        "renew_days": {
         "type": "integer",
         "_name_": "renew_days",
         "title": "renew_days"
        },
        "revoked_date": {
         "_name_": "revoked_date",
         "title": "revoked_date",
         "type": "string",
         "nullable": true
        },
        "signedby": {
         "type": "object",
         "properties": {},
         "additionalProperties": true,
         "_name_": "signedby",
         "title": "signedby",
         "default": {},
         "_attrs_order_": []
        },
        "root_path": {
         "_name_": "root_path",
         "title": "root_path",
         "type": "string"
        },
        "acme": {
         "type": "object",
         "properties": {},
         "additionalProperties": true,
         "_name_": "acme",
         "title": "acme",
         "default": {},
         "_attrs_order_": []
        },
        "certificate_path": {
         "_name_": "certificate_path",
         "title": "certificate_path",
         "type": "string",
         "nullable": true
        },
        "privatekey_path": {
         "_name_": "privatekey_path",
         "title": "privatekey_path",
         "type": "string",
         "nullable": true
        },
        "csr_path": {
         "_name_": "csr_path",
         "title": "csr_path",
         "type": "string",
         "nullable": true
        },
        "cert_type": {
         "_name_": "cert_type",
         "title": "cert_type",
         "type": "string"
        },
        "revoked": {
         "type": "boolean",
         "_name_": "revoked",
         "title": "revoked",
         "description": "Only `name` and `revoked` attribute can be updated.\nIf `revoked` is enabled, the CA and its complete chain is marked as revoked and added to the CA's\ncertificate revocation list."
        },
        "expired": {
         "type": "boolean",
         "_name_": "expired",
         "title": "expired",
         "nullable": true
        },
        "issuer": {
         "anyOf": [
          {
           "_name_": "issuer",
           "title": "issuer",
           "_required_": false,
           "type": [
            "string",
            "null"
           ]
          },
          {
           "type": "object",
           "properties": {},
           "additionalProperties": true,
           "_name_": "issuer",
           "title": "issuer",
           "default": {},
           "_required_": false,
           "_attrs_order_": []
          }
         ],
         "nullable": false,
         "_name_": "issuer",
         "description": null
        },
        "chain_list": {
         "_name_": "chain_list",
         "title": "chain_list",
         "default": [],
         "type": "array",
         "items": {
          "_name_": "certificate",
          "title": "certificate",
          "_required_": false,
          "type": "string"
         }
        },
        "country": {
         "_name_": "country",
         "title": "country",
         "type": "string",
         "nullable": true
        },
        "state": {
         "_name_": "state",
         "title": "state",
         "type": "string",
         "nullable": true
        },
        "city": {
         "_name_": "city",
         "title": "city",
         "type": "string",
         "nullable": true
        },
        "organization": {
         "_name_": "organization",
         "title": "organization",
         "type": "string",
         "nullable": true
        },
        "organizational_unit": {
         "_name_": "organizational_unit",
         "title": "organizational_unit",
         "type": "string",
         "nullable": true
        },
        "san": {
         "_name_": "san",
         "title": "san",
         "default": [],
         "type": "array",
         "items": {
          "_name_": "san_entry",
          "title": "san_entry",
          "_required_": false,
          "type": "string"
         },
         "nullable": true
        },
        "email": {
         "_name_": "email",
         "title": "email",
         "type": "string",
         "nullable": true
        },
        "DN": {
         "_name_": "DN",
         "title": "DN",
         "type": "string",
         "nullable": true
        },
        "subject_name_hash": {
         "_name_": "subject_name_hash",
         "title": "subject_name_hash",
         "type": "string",
         "nullable": true
        },
        "digest_algorithm": {
         "_name_": "digest_algorithm",
         "title": "digest_algorithm",
         "type": "string",
         "nullable": true
        },
        "from": {
         "_name_": "from",
         "title": "from",
         "type": "string",
         "nullable": true
        },
        "common": {
         "_name_": "common",
         "title": "common",
         "type": "string",
         "nullable": true
        },
        "until": {
         "_name_": "until",
         "title": "until",
         "type": "string",
         "nullable": true
        },
        "fingerprint": {
         "_name_": "fingerprint",
         "title": "fingerprint",
         "type": "string",
         "nullable": true
        },
        "key_type": {
         "_name_": "key_type",
         "title": "key_type",
         "type": "string",
         "description": "Created certificate authorities use RSA keys by default. If an Elliptic Curve Key is desired, then it can be\nspecified with the `key_type` attribute. If the `ec_curve` attribute is not specified for the Elliptic\nCurve Key, default to using \"SECP384R1\" curve.",
         "nullable": true
        },
        "internal": {
         "_name_": "internal",
         "title": "internal",
         "type": "string",
         "nullable": true
        },
        "lifetime": {
         "type": "integer",
         "_name_": "lifetime",
         "title": "lifetime",
         "nullable": true
        },
        "serial": {
         "type": "integer",
         "_name_": "serial",
         "title": "serial",
         "nullable": true
        },
        "key_length": {
         "type": "integer",
         "_name_": "key_length",
         "title": "key_length",
         "nullable": true
        },
        "add_to_trusted_store": {
         "type": "boolean",
         "_name_": "add_to_trusted_store",
         "title": "add_to_trusted_store",
         "default": false
        },
        "chain": {
         "type": "boolean",
         "_name_": "chain",
         "title": "chain",
         "nullable": true
        },
        "CA_type_existing": {
         "type": "boolean",
         "_name_": "CA_type_existing",
         "title": "CA_type_existing"
        },
        "CA_type_internal": {
         "type": "boolean",
         "_name_": "CA_type_internal",
         "title": "CA_type_internal"
        },
        "CA_type_intermediate": {
         "type": "boolean",
         "_name_": "CA_type_intermediate",
         "title": "CA_type_intermediate"
        },
        "cert_type_existing": {
         "type": "boolean",
         "_name_": "cert_type_existing",
         "title": "cert_type_existing"
        },
        "cert_type_internal": {
         "type": "boolean",
         "_name_": "cert_type_internal",
         "title": "cert_type_internal"
        },
        "cert_type_CSR": {
         "type": "boolean",
         "_name_": "cert_type_CSR",
         "title": "cert_type_CSR"
        },
        "parsed": {
         "type": "boolean",
         "_name_": "parsed",
         "title": "parsed"
        },
        "can_be_revoked": {
         "type": "boolean",
         "_name_": "can_be_revoked",
         "title": "can_be_revoked"
        },
        "extensions": {
         "type": "object",
         "properties": {},
         "additionalProperties": true,
         "_name_": "extensions",
         "title": "extensions",
         "default": {},
         "_attrs_order_": []
        },
        "revoked_certs": {
         "_name_": "revoked_certs",
         "title": "revoked_certs",
         "default": [],
         "type": "array",
         "items": {}
        },
        "crl_path": {
         "_name_": "crl_path",
         "title": "crl_path",
         "type": "string"
        },
        "signed_certificates": {
         "type": "integer",
         "_name_": "signed_certificates",
         "title": "signed_certificates"
        }
       },
       "additionalProperties": false,
       "_name_": "certificateauthority_update_returns",
       "title": "certificateauthority_update_returns",
       "default": {},
       "_attrs_order_": [
        "id",
        "type",
        "name",
        "certificate",
        "privatekey",
        "CSR",
        "acme_uri",
        "domains_authenticators",
        "renew_days",
        "revoked_date",
        "signedby",
        "root_path",
        "acme",
        "certificate_path",
        "privatekey_path",
        "csr_path",
        "cert_type",
        "revoked",
        "expired",
        "issuer",
        "chain_list",
        "country",
        "state",
        "city",
        "organization",
        "organizational_unit",
        "san",
        "email",
        "DN",
        "subject_name_hash",
        "digest_algorithm",
        "from",
        "common",
        "until",
        "fingerprint",
        "key_type",
        "internal",
        "lifetime",
        "serial",
        "key_length",
        "add_to_trusted_store",
        "chain",
        "CA_type_existing",
        "CA_type_internal",
        "CA_type_intermediate",
        "cert_type_existing",
        "cert_type_internal",
        "cert_type_CSR",
        "parsed",
        "can_be_revoked",
        "extensions",
        "revoked_certs",
        "crl_path",
        "signed_certificates"
       ]
      },
      "certificateauthority_ca_sign_csr": {
       "type": "object",
       "properties": {
        "ca_id": {
         "type": "integer",
         "_name_": "ca_id",
         "title": "ca_id",
         "description": "Sign CSR by Certificate Authority of `ca_id`\nSign CSR's and generate a certificate from it. `ca_id` provides which CA is to be used for signing\na CSR of `csr_cert_id` which exists in the system"
        },
        "csr_cert_id": {
         "type": "integer",
         "_name_": "csr_cert_id",
         "title": "csr_cert_id",
         "description": "Sign CSR's and generate a certificate from it. `ca_id` provides which CA is to be used for signing\na CSR of `csr_cert_id` which exists in the system"
        },
        "name": {
         "_name_": "name",
         "title": "name",
         "type": "string"
        },
        "cert_extensions": {
         "type": "object",
         "properties": {
          "BasicConstraints": {
           "type": "object",
           "properties": {
            "ca": {
             "type": "boolean",
             "_name_": "ca",
             "title": "ca",
             "default": false
            },
            "enabled": {
             "type": "boolean",
             "_name_": "enabled",
             "title": "enabled",
             "default": false
            },
            "path_length": {
             "type": "integer",
             "_name_": "path_length",
             "title": "path_length",
             "default": null,
             "nullable": true
            },
            "extension_critical": {
             "type": "boolean",
             "_name_": "extension_critical",
             "title": "extension_critical",
             "default": false
            }
           },
           "additionalProperties": false,
           "_name_": "BasicConstraints",
           "title": "BasicConstraints",
           "default": {},
           "_attrs_order_": [
            "ca",
            "enabled",
            "path_length",
            "extension_critical"
           ]
          },
          "AuthorityKeyIdentifier": {
           "type": "object",
           "properties": {
            "authority_cert_issuer": {
             "type": "boolean",
             "_name_": "authority_cert_issuer",
             "title": "authority_cert_issuer",
             "default": false
            },
            "enabled": {
             "type": "boolean",
             "_name_": "enabled",
             "title": "enabled",
             "default": false
            },
            "extension_critical": {
             "type": "boolean",
             "_name_": "extension_critical",
             "title": "extension_critical",
             "default": false
            }
           },
           "additionalProperties": false,
           "_name_": "AuthorityKeyIdentifier",
           "title": "AuthorityKeyIdentifier",
           "default": {},
           "_attrs_order_": [
            "authority_cert_issuer",
            "enabled",
            "extension_critical"
           ]
          },
          "ExtendedKeyUsage": {
           "type": "object",
           "properties": {
            "usages": {
             "_name_": "usages",
             "title": "usages",
             "default": [],
             "type": "array",
             "items": {
              "_name_": "usage",
              "title": "usage",
              "_required_": false,
              "type": "string",
              "enum": [
               "ANY_EXTENDED_KEY_USAGE",
               "CERTIFICATE_TRANSPARENCY",
               "CLIENT_AUTH",
               "CODE_SIGNING",
               "EMAIL_PROTECTION",
               "IPSEC_IKE",
               "KERBEROS_PKINIT_KDC",
               "OCSP_SIGNING",
               "SERVER_AUTH",
               "SMARTCARD_LOGON",
               "TIME_STAMPING"
              ]
             }
            },
            "enabled": {
             "type": "boolean",
             "_name_": "enabled",
             "title": "enabled",
             "default": false
            },
            "extension_critical": {
             "type": "boolean",
             "_name_": "extension_critical",
             "title": "extension_critical",
             "default": false
            }
           },
           "additionalProperties": false,
           "_name_": "ExtendedKeyUsage",
           "title": "ExtendedKeyUsage",
           "default": {},
           "_attrs_order_": [
            "usages",
            "enabled",
            "extension_critical"
           ]
          },
          "KeyUsage": {
           "type": "object",
           "properties": {
            "enabled": {
             "type": "boolean",
             "_name_": "enabled",
             "title": "enabled",
             "default": false
            },
            "digital_signature": {
             "type": "boolean",
             "_name_": "digital_signature",
             "title": "digital_signature",
             "default": false
            },
            "content_commitment": {
             "type": "boolean",
             "_name_": "content_commitment",
             "title": "content_commitment",
             "default": false
            },
            "key_encipherment": {
             "type": "boolean",
             "_name_": "key_encipherment",
             "title": "key_encipherment",
             "default": false
            },
            "data_encipherment": {
             "type": "boolean",
             "_name_": "data_encipherment",
             "title": "data_encipherment",
             "default": false
            },
            "key_agreement": {
             "type": "boolean",
             "_name_": "key_agreement",
             "title": "key_agreement",
             "default": false
            },
            "key_cert_sign": {
             "type": "boolean",
             "_name_": "key_cert_sign",
             "title": "key_cert_sign",
             "default": false
            },
            "crl_sign": {
             "type": "boolean",
             "_name_": "crl_sign",
             "title": "crl_sign",
             "default": false
            },
            "encipher_only": {
             "type": "boolean",
             "_name_": "encipher_only",
             "title": "encipher_only",
             "default": false
            },
            "decipher_only": {
             "type": "boolean",
             "_name_": "decipher_only",
             "title": "decipher_only",
             "default": false
            },
            "extension_critical": {
             "type": "boolean",
             "_name_": "extension_critical",
             "title": "extension_critical",
             "default": false
            }
           },
           "additionalProperties": false,
           "_name_": "KeyUsage",
           "title": "KeyUsage",
           "default": {},
           "_attrs_order_": [
            "enabled",
            "digital_signature",
            "content_commitment",
            "key_encipherment",
            "data_encipherment",
            "key_agreement",
            "key_cert_sign",
            "crl_sign",
            "encipher_only",
            "decipher_only",
            "extension_critical"
           ]
          }
         },
         "additionalProperties": false,
         "_name_": "cert_extensions",
         "title": "cert_extensions",
         "default": {},
         "_attrs_order_": [
          "BasicConstraints",
          "AuthorityKeyIdentifier",
          "ExtendedKeyUsage",
          "KeyUsage"
         ],
         "description": "`cert_extensions` can be specified if specific extensions are to be set in the newly signed certificate."
        }
       },
       "additionalProperties": false,
       "_name_": "ca_sign_csr",
       "title": "ca_sign_csr",
       "default": {},
       "_attrs_order_": [
        "ca_id",
        "csr_cert_id",
        "name",
        "cert_extensions"
       ]
      },
      "return_schema_of_certificateauthority_ca_sign_csr": {
       "type": "object",
       "properties": {
        "id": {
         "type": "integer",
         "_name_": "id",
         "title": "id"
        },
        "type": {
         "type": "integer",
         "_name_": "type",
         "title": "type"
        },
        "name": {
         "_name_": "name",
         "title": "name",
         "type": "string"
        },
        "certificate": {
         "_name_": "certificate",
         "title": "certificate",
         "type": "string",
         "nullable": true
        },
        "privatekey": {
         "_name_": "privatekey",
         "title": "privatekey",
         "type": "string",
         "nullable": true
        },
        "CSR": {
         "_name_": "CSR",
         "title": "CSR",
         "type": "string",
         "nullable": true
        },
        "acme_uri": {
         "_name_": "acme_uri",
         "title": "acme_uri",
         "type": "string",
         "nullable": true
        },
        "domains_authenticators": {
         "type": "object",
         "properties": {},
         "additionalProperties": true,
         "_name_": "domains_authenticators",
         "title": "domains_authenticators",
         "default": {},
         "_attrs_order_": []
        },
        "renew_days": {
         "type": "integer",
         "_name_": "renew_days",
         "title": "renew_days"
        },
        "revoked_date": {
         "_name_": "revoked_date",
         "title": "revoked_date",
         "type": "string",
         "nullable": true
        },
        "signedby": {
         "type": "object",
         "properties": {},
         "additionalProperties": true,
         "_name_": "signedby",
         "title": "signedby",
         "default": {},
         "_attrs_order_": []
        },
        "root_path": {
         "_name_": "root_path",
         "title": "root_path",
         "type": "string"
        },
        "acme": {
         "type": "object",
         "properties": {},
         "additionalProperties": true,
         "_name_": "acme",
         "title": "acme",
         "default": {},
         "_attrs_order_": []
        },
        "certificate_path": {
         "_name_": "certificate_path",
         "title": "certificate_path",
         "type": "string",
         "nullable": true
        },
        "privatekey_path": {
         "_name_": "privatekey_path",
         "title": "privatekey_path",
         "type": "string",
         "nullable": true
        },
        "csr_path": {
         "_name_": "csr_path",
         "title": "csr_path",
         "type": "string",
         "nullable": true
        },
        "cert_type": {
         "_name_": "cert_type",
         "title": "cert_type",
         "type": "string"
        },
        "revoked": {
         "type": "boolean",
         "_name_": "revoked",
         "title": "revoked"
        },
        "expired": {
         "type": "boolean",
         "_name_": "expired",
         "title": "expired",
         "nullable": true
        },
        "issuer": {
         "anyOf": [
          {
           "_name_": "issuer",
           "title": "issuer",
           "_required_": false,
           "type": [
            "string",
            "null"
           ]
          },
          {
           "type": "object",
           "properties": {},
           "additionalProperties": true,
           "_name_": "issuer",
           "title": "issuer",
           "default": {},
           "_required_": false,
           "_attrs_order_": []
          }
         ],
         "nullable": false,
         "_name_": "issuer",
         "description": null
        },
        "chain_list": {
         "_name_": "chain_list",
         "title": "chain_list",
         "default": [],
         "type": "array",
         "items": {
          "_name_": "certificate",
          "title": "certificate",
          "_required_": false,
          "type": "string"
         }
        },
        "country": {
         "_name_": "country",
         "title": "country",
         "type": "string",
         "nullable": true
        },
        "state": {
         "_name_": "state",
         "title": "state",
         "type": "string",
         "nullable": true
        },
        "city": {
         "_name_": "city",
         "title": "city",
         "type": "string",
         "nullable": true
        },
        "organization": {
         "_name_": "organization",
         "title": "organization",
         "type": "string",
         "nullable": true
        },
        "organizational_unit": {
         "_name_": "organizational_unit",
         "title": "organizational_unit",
         "type": "string",
         "nullable": true
        },
        "san": {
         "_name_": "san",
         "title": "san",
         "default": [],
         "type": "array",
         "items": {
          "_name_": "san_entry",
          "title": "san_entry",
          "_required_": false,
          "type": "string"
         },
         "nullable": true
        },
        "email": {
         "_name_": "email",
         "title": "email",
         "type": "string",
         "nullable": true
        },
        "DN": {
         "_name_": "DN",
         "title": "DN",
         "type": "string",
         "nullable": true
        },
        "subject_name_hash": {
         "_name_": "subject_name_hash",
         "title": "subject_name_hash",
         "type": "string",
         "nullable": true
        },
        "digest_algorithm": {
         "_name_": "digest_algorithm",
         "title": "digest_algorithm",
         "type": "string",
         "nullable": true
        },
        "from": {
         "_name_": "from",
         "title": "from",
         "type": "string",
         "nullable": true
        },
        "common": {
         "_name_": "common",
         "title": "common",
         "type": "string",
         "nullable": true
        },
        "until": {
         "_name_": "until",
         "title": "until",
         "type": "string",
         "nullable": true
        },
        "fingerprint": {
         "_name_": "fingerprint",
         "title": "fingerprint",
         "type": "string",
         "nullable": true
        },
        "key_type": {
         "_name_": "key_type",
         "title": "key_type",
         "type": "string",
         "nullable": true
        },
        "internal": {
         "_name_": "internal",
         "title": "internal",
         "type": "string",
         "nullable": true
        },
        "lifetime": {
         "type": "integer",
         "_name_": "lifetime",
         "title": "lifetime",
         "nullable": true
        },
        "serial": {
         "type": "integer",
         "_name_": "serial",
         "title": "serial",
         "nullable": true
        },
        "key_length": {
         "type": "integer",
         "_name_": "key_length",
         "title": "key_length",
         "nullable": true
        },
        "add_to_trusted_store": {
         "type": "boolean",
         "_name_": "add_to_trusted_store",
         "title": "add_to_trusted_store",
         "default": false
        },
        "chain": {
         "type": "boolean",
         "_name_": "chain",
         "title": "chain",
         "nullable": true
        },
        "CA_type_existing": {
         "type": "boolean",
         "_name_": "CA_type_existing",
         "title": "CA_type_existing"
        },
        "CA_type_internal": {
         "type": "boolean",
         "_name_": "CA_type_internal",
         "title": "CA_type_internal"
        },
        "CA_type_intermediate": {
         "type": "boolean",
         "_name_": "CA_type_intermediate",
         "title": "CA_type_intermediate"
        },
        "cert_type_existing": {
         "type": "boolean",
         "_name_": "cert_type_existing",
         "title": "cert_type_existing"
        },
        "cert_type_internal": {
         "type": "boolean",
         "_name_": "cert_type_internal",
         "title": "cert_type_internal"
        },
        "cert_type_CSR": {
         "type": "boolean",
         "_name_": "cert_type_CSR",
         "title": "cert_type_CSR"
        },
        "parsed": {
         "type": "boolean",
         "_name_": "parsed",
         "title": "parsed"
        },
        "can_be_revoked": {
         "type": "boolean",
         "_name_": "can_be_revoked",
         "title": "can_be_revoked"
        },
        "extensions": {
         "type": "object",
         "properties": {},
         "additionalProperties": true,
         "_name_": "extensions",
         "title": "extensions",
         "default": {},
         "_attrs_order_": []
        },
        "revoked_certs": {
         "_name_": "revoked_certs",
         "title": "revoked_certs",
         "default": [],
         "type": "array",
         "items": {}
        },
        "crl_path": {
         "_name_": "crl_path",
         "title": "crl_path",
         "type": "string"
        },
        "signed_certificates": {
         "type": "integer",
         "_name_": "signed_certificates",
         "title": "signed_certificates"
        }
       },
       "additionalProperties": false,
       "_name_": "certificate_entry",
       "title": "certificate_entry",
       "default": {},
       "_attrs_order_": [
        "id",
        "type",
        "name",
        "certificate",
        "privatekey",
        "CSR",
        "acme_uri",
        "domains_authenticators",
        "renew_days",
        "revoked_date",
        "signedby",
        "root_path",
        "acme",
        "certificate_path",
        "privatekey_path",
        "csr_path",
        "cert_type",
        "revoked",
        "expired",
        "issuer",
        "chain_list",
        "country",
        "state",
        "city",
        "organization",
        "organizational_unit",
        "san",
        "email",
        "DN",
        "subject_name_hash",
        "digest_algorithm",
        "from",
        "common",
        "until",
        "fingerprint",
        "key_type",
        "internal",
        "lifetime",
        "serial",
        "key_length",
        "add_to_trusted_store",
        "chain",
        "CA_type_existing",
        "CA_type_internal",
        "CA_type_intermediate",
        "cert_type_existing",
        "cert_type_internal",
        "cert_type_CSR",
        "parsed",
        "can_be_revoked",
        "extensions",
        "revoked_certs",
        "crl_path",
        "signed_certificates"
       ]
      },
      "certificateauthority_get_instance_0": {
       "anyOf": [
        {
         "type": "string"
        },
        {
         "type": "integer"
        },
        {
         "type": "boolean"
        },
        {
         "type": "object"
        },
        {
         "type": "array"
        }
       ],
       "nullable": false,
       "_name_": "id",
       "title": "id",
       "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised."
      },
      "certificateauthority_get_instance_1": {
       "type": "object",
       "properties": {
        "relationships": {
         "type": "boolean",
         "_name_": "relationships",
         "title": "relationships",
         "default": true
        },
        "extend": {
         "_name_": "extend",
         "title": "extend",
         "default": null,
         "type": "string",
         "nullable": true
        },
        "extend_context": {
         "_name_": "extend_context",
         "title": "extend_context",
         "default": null,
         "type": "string",
         "nullable": true
        },
        "prefix": {
         "_name_": "prefix",
         "title": "prefix",
         "default": null,
         "type": "string",
         "nullable": true
        },
        "extra": {
         "type": "object",
         "properties": {},
         "additionalProperties": true,
         "_name_": "extra",
         "title": "extra",
         "default": {},
         "_attrs_order_": []
        },
        "order_by": {
         "_name_": "order_by",
         "title": "order_by",
         "default": [],
         "type": "array",
         "items": {}
        },
        "select": {
         "_name_": "select",
         "title": "select",
         "default": [],
         "type": "array",
         "items": {}
        },
        "count": {
         "type": "boolean",
         "_name_": "count",
         "title": "count",
         "default": false
        },
        "get": {
         "type": "boolean",
         "_name_": "get",
         "title": "get",
         "default": false
        },
        "offset": {
         "type": "integer",
         "_name_": "offset",
         "title": "offset",
         "default": 0
        },
        "limit": {
         "type": "integer",
         "_name_": "limit",
         "title": "limit",
         "default": 0
        },
        "force_sql_filters": {
         "type": "boolean",
         "_name_": "force_sql_filters",
         "title": "force_sql_filters",
         "default": true
        }
       },
       "additionalProperties": false,
       "_name_": "query-options-get_instance",
       "title": "query-options-get_instance",
       "default": {},
       "_attrs_order_": [
        "relationships",
        "extend",
        "extend_context",
        "prefix",
        "extra",
        "order_by",
        "select",
        "count",
        "get",
        "offset",
        "limit",
        "force_sql_filters"
       ]
      },
      "certificateauthority_get_instance": {
       "type": "object",
       "properties": {
        "id": {
         "$ref": "#/components/schemas/certificateauthority_get_instance_0"
        },
        "query-options-get_instance": {
         "$ref": "#/components/schemas/certificateauthority_get_instance_1"
        }
       }
      },
      "return_schema_of_certificateauthority_get_instance": {
       "type": "object",
       "properties": {
        "id": {
         "type": "integer",
         "_name_": "id",
         "title": "id",
         "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised."
        },
        "type": {
         "type": "integer",
         "_name_": "type",
         "title": "type"
        },
        "name": {
         "_name_": "name",
         "title": "name",
         "type": "string"
        },
        "certificate": {
         "_name_": "certificate",
         "title": "certificate",
         "type": "string",
         "nullable": true
        },
        "privatekey": {
         "_name_": "privatekey",
         "title": "privatekey",
         "type": "string",
         "nullable": true
        },
        "CSR": {
         "_name_": "CSR",
         "title": "CSR",
         "type": "string",
         "nullable": true
        },
        "acme_uri": {
         "_name_": "acme_uri",
         "title": "acme_uri",
         "type": "string",
         "nullable": true
        },
        "domains_authenticators": {
         "type": "object",
         "properties": {},
         "additionalProperties": true,
         "_name_": "domains_authenticators",
         "title": "domains_authenticators",
         "default": {},
         "_attrs_order_": []
        },
        "renew_days": {
         "type": "integer",
         "_name_": "renew_days",
         "title": "renew_days"
        },
        "revoked_date": {
         "_name_": "revoked_date",
         "title": "revoked_date",
         "type": "string",
         "nullable": true
        },
        "signedby": {
         "type": "object",
         "properties": {},
         "additionalProperties": true,
         "_name_": "signedby",
         "title": "signedby",
         "default": {},
         "_attrs_order_": []
        },
        "root_path": {
         "_name_": "root_path",
         "title": "root_path",
         "type": "string"
        },
        "acme": {
         "type": "object",
         "properties": {},
         "additionalProperties": true,
         "_name_": "acme",
         "title": "acme",
         "default": {},
         "_attrs_order_": []
        },
        "certificate_path": {
         "_name_": "certificate_path",
         "title": "certificate_path",
         "type": "string",
         "nullable": true
        },
        "privatekey_path": {
         "_name_": "privatekey_path",
         "title": "privatekey_path",
         "type": "string",
         "nullable": true
        },
        "csr_path": {
         "_name_": "csr_path",
         "title": "csr_path",
         "type": "string",
         "nullable": true
        },
        "cert_type": {
         "_name_": "cert_type",
         "title": "cert_type",
         "type": "string"
        },
        "revoked": {
         "type": "boolean",
         "_name_": "revoked",
         "title": "revoked"
        },
        "expired": {
         "type": "boolean",
         "_name_": "expired",
         "title": "expired",
         "nullable": true
        },
        "issuer": {
         "anyOf": [
          {
           "_name_": "issuer",
           "title": "issuer",
           "_required_": false,
           "type": [
            "string",
            "null"
           ]
          },
          {
           "type": "object",
           "properties": {},
           "additionalProperties": true,
           "_name_": "issuer",
           "title": "issuer",
           "default": {},
           "_required_": false,
           "_attrs_order_": []
          }
         ],
         "nullable": false,
         "_name_": "issuer",
         "description": null
        },
        "chain_list": {
         "_name_": "chain_list",
         "title": "chain_list",
         "default": [],
         "type": "array",
         "items": {
          "_name_": "certificate",
          "title": "certificate",
          "_required_": false,
          "type": "string"
         }
        },
        "country": {
         "_name_": "country",
         "title": "country",
         "type": "string",
         "nullable": true
        },
        "state": {
         "_name_": "state",
         "title": "state",
         "type": "string",
         "nullable": true
        },
        "city": {
         "_name_": "city",
         "title": "city",
         "type": "string",
         "nullable": true
        },
        "organization": {
         "_name_": "organization",
         "title": "organization",
         "type": "string",
         "nullable": true
        },
        "organizational_unit": {
         "_name_": "organizational_unit",
         "title": "organizational_unit",
         "type": "string",
         "nullable": true
        },
        "san": {
         "_name_": "san",
         "title": "san",
         "default": [],
         "type": "array",
         "items": {
          "_name_": "san_entry",
          "title": "san_entry",
          "_required_": false,
          "type": "string"
         },
         "nullable": true
        },
        "email": {
         "_name_": "email",
         "title": "email",
         "type": "string",
         "nullable": true
        },
        "DN": {
         "_name_": "DN",
         "title": "DN",
         "type": "string",
         "nullable": true
        },
        "subject_name_hash": {
         "_name_": "subject_name_hash",
         "title": "subject_name_hash",
         "type": "string",
         "nullable": true
        },
        "digest_algorithm": {
         "_name_": "digest_algorithm",
         "title": "digest_algorithm",
         "type": "string",
         "nullable": true
        },
        "from": {
         "_name_": "from",
         "title": "from",
         "type": "string",
         "nullable": true
        },
        "common": {
         "_name_": "common",
         "title": "common",
         "type": "string",
         "nullable": true
        },
        "until": {
         "_name_": "until",
         "title": "until",
         "type": "string",
         "nullable": true
        },
        "fingerprint": {
         "_name_": "fingerprint",
         "title": "fingerprint",
         "type": "string",
         "nullable": true
        },
        "key_type": {
         "_name_": "key_type",
         "title": "key_type",
         "type": "string",
         "nullable": true
        },
        "internal": {
         "_name_": "internal",
         "title": "internal",
         "type": "string",
         "nullable": true
        },
        "lifetime": {
         "type": "integer",
         "_name_": "lifetime",
         "title": "lifetime",
         "nullable": true
        },
        "serial": {
         "type": "integer",
         "_name_": "serial",
         "title": "serial",
         "nullable": true
        },
        "key_length": {
         "type": "integer",
         "_name_": "key_length",
         "title": "key_length",
         "nullable": true
        },
        "add_to_trusted_store": {
         "type": "boolean",
         "_name_": "add_to_trusted_store",
         "title": "add_to_trusted_store",
         "default": false
        },
        "chain": {
         "type": "boolean",
         "_name_": "chain",
         "title": "chain",
         "nullable": true
        },
        "CA_type_existing": {
         "type": "boolean",
         "_name_": "CA_type_existing",
         "title": "CA_type_existing"
        },
        "CA_type_internal": {
         "type": "boolean",
         "_name_": "CA_type_internal",
         "title": "CA_type_internal"
        },
        "CA_type_intermediate": {
         "type": "boolean",
         "_name_": "CA_type_intermediate",
         "title": "CA_type_intermediate"
        },
        "cert_type_existing": {
         "type": "boolean",
         "_name_": "cert_type_existing",
         "title": "cert_type_existing"
        },
        "cert_type_internal": {
         "type": "boolean",
         "_name_": "cert_type_internal",
         "title": "cert_type_internal"
        },
        "cert_type_CSR": {
         "type": "boolean",
         "_name_": "cert_type_CSR",
         "title": "cert_type_CSR"
        },
        "parsed": {
         "type": "boolean",
         "_name_": "parsed",
         "title": "parsed"
        },
        "can_be_revoked": {
         "type": "boolean",
         "_name_": "can_be_revoked",
         "title": "can_be_revoked"
        },
        "extensions": {
         "type": "object",
         "properties": {},
         "additionalProperties": true,
         "_name_": "extensions",
         "title": "extensions",
         "default": {},
         "_attrs_order_": []
        },
        "revoked_certs": {
         "_name_": "revoked_certs",
         "title": "revoked_certs",
         "default": [],
         "type": "array",
         "items": {}
        },
        "crl_path": {
         "_name_": "crl_path",
         "title": "crl_path",
         "type": "string"
        },
        "signed_certificates": {
         "type": "integer",
         "_name_": "signed_certificates",
         "title": "signed_certificates"
        }
       },
       "additionalProperties": false,
       "_name_": "certificateauthority_entry",
       "title": "certificate_entry",
       "default": {},
       "_attrs_order_": [
        "id",
        "type",
        "name",
        "certificate",
        "privatekey",
        "CSR",
        "acme_uri",
        "domains_authenticators",
        "renew_days",
        "revoked_date",
        "signedby",
        "root_path",
        "acme",
        "certificate_path",
        "privatekey_path",
        "csr_path",
        "cert_type",
        "revoked",
        "expired",
        "issuer",
        "chain_list",
        "country",
        "state",
        "city",
        "organization",
        "organizational_unit",
        "san",
        "email",
        "DN",
        "subject_name_hash",
        "digest_algorithm",
        "from",
        "common",
        "until",
        "fingerprint",
        "key_type",
        "internal",
        "lifetime",
        "serial",
        "key_length",
        "add_to_trusted_store",
        "chain",
        "CA_type_existing",
        "CA_type_internal",
        "CA_type_intermediate",
        "cert_type_existing",
        "cert_type_internal",
        "cert_type_CSR",
        "parsed",
        "can_be_revoked",
        "extensions",
        "revoked_certs",
        "crl_path",
        "signed_certificates"
       ]
      },
      "return_schema_of_cloud_backup_query": {
       "anyOf": [
        {
         "items": [
          {
           "additionalProperties": false,
           "properties": {
            "description": {
             "description": "The name of the task to display in the UI",
             "title": "description",
             "type": "string",
             "_name_": "description",
             "_required_": false
            },
            "path": {
             "description": "The local path to back up beginning with `/mnt` or `/dev/zvol`",
             "title": "path",
             "type": "string",
             "_name_": "path",
             "_required_": false
            },
            "credentials": {
             "description": "Cloud credentials to use for each backup",
             "title": "credentials",
             "_name_": "credentials",
             "_required_": false
            },
            "attributes": {
             "description": "Additional information for each backup, e.g. bucket name",
             "title": "attributes",
             "type": "object",
             "_name_": "attributes",
             "_required_": false
            },
            "schedule": {
             "description": "Cron schedule dictating when the task should run",
             "title": "schedule",
             "_name_": "schedule",
             "_required_": false
            },
            "pre_script": {
             "description": "A Bash script to run immediately before every backup",
             "title": "pre_script",
             "type": "string",
             "_name_": "pre_script",
             "_required_": false
            },
            "post_script": {
             "description": "A Bash script to run immediately after every backup if it succeeds",
             "title": "post_script",
             "type": "string",
             "_name_": "post_script",
             "_required_": false
            },
            "snapshot": {
             "description": "Whether to create a temporary snapshot of the dataset before every backup",
             "title": "snapshot",
             "type": "boolean",
             "_name_": "snapshot",
             "_required_": false
            },
            "include": {
             "description": "Paths to pass to `restic backup --include`",
             "items": [
              {
               "minLength": 1,
               "type": "string"
              }
             ],
             "title": "include",
             "type": "array",
             "_name_": "include",
             "_required_": false
            },
            "exclude": {
             "description": "Paths to pass to `restic backup --exclude`",
             "items": [
              {
               "minLength": 1,
               "type": "string"
              }
             ],
             "title": "exclude",
             "type": "array",
             "_name_": "exclude",
             "_required_": false
            },
            "args": {
             "description": "(Slated for removal)",
             "title": "args",
             "type": "string",
             "_name_": "args",
             "_required_": false
            },
            "enabled": {
             "description": "Can enable/disable the task",
             "title": "enabled",
             "type": "boolean",
             "_name_": "enabled",
             "_required_": false
            },
            "password": {
             "description": "Password for the remote repository",
             "minLength": 1,
             "title": "password",
             "type": "string",
             "_name_": "password",
             "_required_": false
            },
            "keep_last": {
             "description": "How many of the most recent backup snapshots to keep after each backup",
             "exclusiveMinimum": 0,
             "title": "keep_last",
             "type": "integer",
             "_name_": "keep_last",
             "_required_": false
            },
            "transfer_setting": {
             "description": "DEFAULT:\n- pack size given by `$RESTIC_PACK_SIZE` (default 16 MiB)\n- read concurrency given by `$RESTIC_READ_CONCURRENCY` (default 2 files)\nPERFORMANCE:\n- pack size = 29 MiB\n- read concurrency given by `$RESTIC_READ_CONCURRENCY` (default 2 files)\nFAST_STORAGE:\n- pack size = 58 MiB\n- read concurrency = 100 files",
             "enum": [
              "DEFAULT",
              "PERFORMANCE",
              "FAST_STORAGE"
             ],
             "title": "transfer_setting",
             "type": "string",
             "_name_": "transfer_setting",
             "_required_": false
            },
            "absolute_paths": {
             "description": "Whether to preserve absolute paths in each backup (cannot be set when `snapshot=True`)",
             "title": "absolute_paths",
             "type": "boolean",
             "_name_": "absolute_paths",
             "_required_": false
            },
            "id": {
             "title": "id",
             "type": "integer",
             "_name_": "id",
             "_required_": false
            },
            "job": {
             "anyOf": [
              {
               "type": "object"
              },
              {
               "type": "null"
              }
             ],
             "description": "Information regarding the task's job state, e.g. progress",
             "title": "job",
             "_name_": "job",
             "_required_": false
            },
            "locked": {
             "description": "A locked task cannot run",
             "title": "locked",
             "type": "boolean",
             "_name_": "locked",
             "_required_": false
            }
           },
           "title": "CloudBackupQueryResultItem",
           "type": "object",
           "_attrs_order_": [
            "description",
            "path",
            "credentials",
            "attributes",
            "schedule",
            "pre_script",
            "post_script",
            "snapshot",
            "include",
            "exclude",
            "args",
            "enabled",
            "password",
            "keep_last",
            "transfer_setting",
            "absolute_paths",
            "id",
            "job",
            "locked"
           ]
          }
         ],
         "type": "array"
        },
        {
         "additionalProperties": false,
         "properties": {
          "description": {
           "description": "The name of the task to display in the UI",
           "title": "description",
           "type": "string",
           "_name_": "description",
           "_required_": false
          },
          "path": {
           "description": "The local path to back up beginning with `/mnt` or `/dev/zvol`",
           "title": "path",
           "type": "string",
           "_name_": "path",
           "_required_": false
          },
          "credentials": {
           "description": "Cloud credentials to use for each backup",
           "title": "credentials",
           "_name_": "credentials",
           "_required_": false
          },
          "attributes": {
           "description": "Additional information for each backup, e.g. bucket name",
           "title": "attributes",
           "type": "object",
           "_name_": "attributes",
           "_required_": false
          },
          "schedule": {
           "description": "Cron schedule dictating when the task should run",
           "title": "schedule",
           "_name_": "schedule",
           "_required_": false
          },
          "pre_script": {
           "description": "A Bash script to run immediately before every backup",
           "title": "pre_script",
           "type": "string",
           "_name_": "pre_script",
           "_required_": false
          },
          "post_script": {
           "description": "A Bash script to run immediately after every backup if it succeeds",
           "title": "post_script",
           "type": "string",
           "_name_": "post_script",
           "_required_": false
          },
          "snapshot": {
           "description": "Whether to create a temporary snapshot of the dataset before every backup",
           "title": "snapshot",
           "type": "boolean",
           "_name_": "snapshot",
           "_required_": false
          },
          "include": {
           "description": "Paths to pass to `restic backup --include`",
           "items": [
            {
             "minLength": 1,
             "type": "string"
            }
           ],
           "title": "include",
           "type": "array",
           "_name_": "include",
           "_required_": false
          },
          "exclude": {
           "description": "Paths to pass to `restic backup --exclude`",
           "items": [
            {
             "minLength": 1,
             "type": "string"
            }
           ],
           "title": "exclude",
           "type": "array",
           "_name_": "exclude",
           "_required_": false
          },
          "args": {
           "description": "(Slated for removal)",
           "title": "args",
           "type": "string",
           "_name_": "args",
           "_required_": false
          },
          "enabled": {
           "description": "Can enable/disable the task",
           "title": "enabled",
           "type": "boolean",
           "_name_": "enabled",
           "_required_": false
          },
          "password": {
           "description": "Password for the remote repository",
           "minLength": 1,
           "title": "password",
           "type": "string",
           "_name_": "password",
           "_required_": false
          },
          "keep_last": {
           "description": "How many of the most recent backup snapshots to keep after each backup",
           "exclusiveMinimum": 0,
           "title": "keep_last",
           "type": "integer",
           "_name_": "keep_last",
           "_required_": false
          },
          "transfer_setting": {
           "description": "DEFAULT:\n- pack size given by `$RESTIC_PACK_SIZE` (default 16 MiB)\n- read concurrency given by `$RESTIC_READ_CONCURRENCY` (default 2 files)\nPERFORMANCE:\n- pack size = 29 MiB\n- read concurrency given by `$RESTIC_READ_CONCURRENCY` (default 2 files)\nFAST_STORAGE:\n- pack size = 58 MiB\n- read concurrency = 100 files",
           "enum": [
            "DEFAULT",
            "PERFORMANCE",
            "FAST_STORAGE"
           ],
           "title": "transfer_setting",
           "type": "string",
           "_name_": "transfer_setting",
           "_required_": false
          },
          "absolute_paths": {
           "description": "Whether to preserve absolute paths in each backup (cannot be set when `snapshot=True`)",
           "title": "absolute_paths",
           "type": "boolean",
           "_name_": "absolute_paths",
           "_required_": false
          },
          "id": {
           "title": "id",
           "type": "integer",
           "_name_": "id",
           "_required_": false
          },
          "job": {
           "anyOf": [
            {
             "type": "object"
            },
            {
             "type": "null"
            }
           ],
           "description": "Information regarding the task's job state, e.g. progress",
           "title": "job",
           "_name_": "job",
           "_required_": false
          },
          "locked": {
           "description": "A locked task cannot run",
           "title": "locked",
           "type": "boolean",
           "_name_": "locked",
           "_required_": false
          }
         },
         "title": "CloudBackupQueryResultItem",
         "type": "object",
         "_attrs_order_": [
          "description",
          "path",
          "credentials",
          "attributes",
          "schedule",
          "pre_script",
          "post_script",
          "snapshot",
          "include",
          "exclude",
          "args",
          "enabled",
          "password",
          "keep_last",
          "transfer_setting",
          "absolute_paths",
          "id",
          "job",
          "locked"
         ]
        },
        {
         "type": "integer"
        }
       ],
       "title": "result",
       "_name_": "result"
      },
      "cloud_backup_create": {
       "additionalProperties": false,
       "properties": {
        "description": {
         "default": "",
         "description": "The name of the task to display in the UI",
         "title": "description",
         "type": "string",
         "_name_": "description"
        },
        "path": {
         "description": "The local path to back up beginning with `/mnt` or `/dev/zvol`",
         "title": "path",
         "type": "string",
         "_name_": "path"
        },
        "credentials": {
         "description": "ID of the cloud credential to use for each backup",
         "title": "credentials",
         "type": "integer",
         "_name_": "credentials"
        },
        "attributes": {
         "description": "Additional information for each backup, e.g. bucket name",
         "title": "attributes",
         "type": "object",
         "_name_": "attributes"
        },
        "schedule": {
         "default": {
          "minute": "00",
          "hour": "*",
          "dom": "*",
          "month": "*",
          "dow": "*"
         },
         "description": "Cron schedule dictating when the task should run",
         "title": "schedule",
         "_name_": "schedule"
        },
        "pre_script": {
         "default": "",
         "description": "A Bash script to run immediately before every backup",
         "title": "pre_script",
         "type": "string",
         "_name_": "pre_script"
        },
        "post_script": {
         "default": "",
         "description": "A Bash script to run immediately after every backup if it succeeds",
         "title": "post_script",
         "type": "string",
         "_name_": "post_script"
        },
        "snapshot": {
         "default": false,
         "description": "Whether to create a temporary snapshot of the dataset before every backup",
         "title": "snapshot",
         "type": "boolean",
         "_name_": "snapshot"
        },
        "include": {
         "default": [],
         "description": "Paths to pass to `restic backup --include`",
         "items": {
          "minLength": 1,
          "type": "string"
         },
         "title": "include",
         "type": "array",
         "_name_": "include"
        },
        "exclude": {
         "default": [],
         "description": "Paths to pass to `restic backup --exclude`",
         "items": {
          "minLength": 1,
          "type": "string"
         },
         "title": "exclude",
         "type": "array",
         "_name_": "exclude"
        },
        "args": {
         "default": "",
         "description": "(Slated for removal)",
         "title": "args",
         "type": "string",
         "_name_": "args"
        },
        "enabled": {
         "default": true,
         "description": "Can enable/disable the task",
         "title": "enabled",
         "type": "boolean",
         "_name_": "enabled"
        },
        "password": {
         "description": "Password for the remote repository",
         "minLength": 1,
         "title": "password",
         "type": "string",
         "_name_": "password"
        },
        "keep_last": {
         "description": "How many of the most recent backup snapshots to keep after each backup",
         "exclusiveMinimum": 0,
         "title": "keep_last",
         "type": "integer",
         "_name_": "keep_last"
        },
        "transfer_setting": {
         "default": "DEFAULT",
         "description": "DEFAULT:\n- pack size given by `$RESTIC_PACK_SIZE` (default 16 MiB)\n- read concurrency given by `$RESTIC_READ_CONCURRENCY` (default 2 files)\nPERFORMANCE:\n- pack size = 29 MiB\n- read concurrency given by `$RESTIC_READ_CONCURRENCY` (default 2 files)\nFAST_STORAGE:\n- pack size = 58 MiB\n- read concurrency = 100 files",
         "enum": [
          "DEFAULT",
          "PERFORMANCE",
          "FAST_STORAGE"
         ],
         "title": "transfer_setting",
         "type": "string",
         "_name_": "transfer_setting"
        },
        "absolute_paths": {
         "default": false,
         "description": "Whether to preserve absolute paths in each backup (cannot be set when `snapshot=True`)",
         "title": "absolute_paths",
         "type": "boolean",
         "_name_": "absolute_paths"
        }
       },
       "required": [
        "path",
        "credentials",
        "attributes",
        "password",
        "keep_last"
       ],
       "title": "cloud_backup",
       "type": "object",
       "_name_": "cloud_backup",
       "_attrs_order_": [
        "description",
        "path",
        "credentials",
        "attributes",
        "schedule",
        "pre_script",
        "post_script",
        "snapshot",
        "include",
        "exclude",
        "args",
        "enabled",
        "password",
        "keep_last",
        "transfer_setting",
        "absolute_paths"
       ]
      },
      "return_schema_of_cloud_backup_create": {
       "additionalProperties": false,
       "properties": {
        "description": {
         "default": "",
         "description": "The name of the task to display in the UI",
         "title": "description",
         "type": "string",
         "_name_": "description"
        },
        "path": {
         "description": "The local path to back up beginning with `/mnt` or `/dev/zvol`",
         "title": "path",
         "type": "string",
         "_name_": "path"
        },
        "credentials": {
         "description": "Cloud credentials to use for each backup",
         "title": "credentials",
         "_name_": "credentials"
        },
        "attributes": {
         "description": "Additional information for each backup, e.g. bucket name",
         "title": "attributes",
         "type": "object",
         "_name_": "attributes"
        },
        "schedule": {
         "default": {
          "minute": "00",
          "hour": "*",
          "dom": "*",
          "month": "*",
          "dow": "*"
         },
         "description": "Cron schedule dictating when the task should run",
         "title": "schedule",
         "_name_": "schedule"
        },
        "pre_script": {
         "default": "",
         "description": "A Bash script to run immediately before every backup",
         "title": "pre_script",
         "type": "string",
         "_name_": "pre_script"
        },
        "post_script": {
         "default": "",
         "description": "A Bash script to run immediately after every backup if it succeeds",
         "title": "post_script",
         "type": "string",
         "_name_": "post_script"
        },
        "snapshot": {
         "default": false,
         "description": "Whether to create a temporary snapshot of the dataset before every backup",
         "title": "snapshot",
         "type": "boolean",
         "_name_": "snapshot"
        },
        "include": {
         "default": [],
         "description": "Paths to pass to `restic backup --include`",
         "items": {
          "minLength": 1,
          "type": "string"
         },
         "title": "include",
         "type": "array",
         "_name_": "include"
        },
        "exclude": {
         "default": [],
         "description": "Paths to pass to `restic backup --exclude`",
         "items": {
          "minLength": 1,
          "type": "string"
         },
         "title": "exclude",
         "type": "array",
         "_name_": "exclude"
        },
        "args": {
         "default": "",
         "description": "(Slated for removal)",
         "title": "args",
         "type": "string",
         "_name_": "args"
        },
        "enabled": {
         "default": true,
         "description": "Can enable/disable the task",
         "title": "enabled",
         "type": "boolean",
         "_name_": "enabled"
        },
        "password": {
         "description": "Password for the remote repository",
         "minLength": 1,
         "title": "password",
         "type": "string",
         "_name_": "password"
        },
        "keep_last": {
         "description": "How many of the most recent backup snapshots to keep after each backup",
         "exclusiveMinimum": 0,
         "title": "keep_last",
         "type": "integer",
         "_name_": "keep_last"
        },
        "transfer_setting": {
         "default": "DEFAULT",
         "description": "DEFAULT:\n- pack size given by `$RESTIC_PACK_SIZE` (default 16 MiB)\n- read concurrency given by `$RESTIC_READ_CONCURRENCY` (default 2 files)\nPERFORMANCE:\n- pack size = 29 MiB\n- read concurrency given by `$RESTIC_READ_CONCURRENCY` (default 2 files)\nFAST_STORAGE:\n- pack size = 58 MiB\n- read concurrency = 100 files",
         "enum": [
          "DEFAULT",
          "PERFORMANCE",
          "FAST_STORAGE"
         ],
         "title": "transfer_setting",
         "type": "string",
         "_name_": "transfer_setting"
        },
        "absolute_paths": {
         "default": false,
         "description": "Whether to preserve absolute paths in each backup (cannot be set when `snapshot=True`)",
         "title": "absolute_paths",
         "type": "boolean",
         "_name_": "absolute_paths"
        },
        "id": {
         "title": "id",
         "type": "integer",
         "_name_": "id"
        },
        "job": {
         "anyOf": [
          {
           "type": "object"
          },
          {
           "type": "null"
          }
         ],
         "description": "Information regarding the task's job state, e.g. progress",
         "title": "job",
         "_name_": "job"
        },
        "locked": {
         "description": "A locked task cannot run",
         "title": "locked",
         "type": "boolean",
         "_name_": "locked"
        }
       },
       "required": [
        "path",
        "credentials",
        "attributes",
        "password",
        "keep_last",
        "id",
        "job",
        "locked"
       ],
       "title": "result",
       "type": "object",
       "description": "The new cloud backup task",
       "_name_": "result",
       "_attrs_order_": [
        "description",
        "path",
        "credentials",
        "attributes",
        "schedule",
        "pre_script",
        "post_script",
        "snapshot",
        "include",
        "exclude",
        "args",
        "enabled",
        "password",
        "keep_last",
        "transfer_setting",
        "absolute_paths",
        "id",
        "job",
        "locked"
       ]
      },
      "return_schema_of_cloud_backup_delete": {
       "const": true,
       "description": "Task successfully deleted",
       "enum": [
        true
       ],
       "title": "result",
       "type": "boolean",
       "_name_": "result"
      },
      "cloud_backup_update": {
       "additionalProperties": false,
       "properties": {
        "description": {
         "description": "The name of the task to display in the UI",
         "title": "description",
         "type": "string",
         "_name_": "description"
        },
        "path": {
         "description": "The local path to back up beginning with `/mnt` or `/dev/zvol`",
         "title": "path",
         "type": "string",
         "_name_": "path"
        },
        "credentials": {
         "description": "ID of the cloud credential to use for each backup",
         "title": "credentials",
         "type": "integer",
         "_name_": "credentials"
        },
        "attributes": {
         "description": "Additional information for each backup, e.g. bucket name",
         "title": "attributes",
         "type": "object",
         "_name_": "attributes"
        },
        "schedule": {
         "description": "Cron schedule dictating when the task should run",
         "title": "schedule",
         "_name_": "schedule"
        },
        "pre_script": {
         "description": "A Bash script to run immediately before every backup",
         "title": "pre_script",
         "type": "string",
         "_name_": "pre_script"
        },
        "post_script": {
         "description": "A Bash script to run immediately after every backup if it succeeds",
         "title": "post_script",
         "type": "string",
         "_name_": "post_script"
        },
        "snapshot": {
         "description": "Whether to create a temporary snapshot of the dataset before every backup",
         "title": "snapshot",
         "type": "boolean",
         "_name_": "snapshot"
        },
        "include": {
         "description": "Paths to pass to `restic backup --include`",
         "items": {
          "minLength": 1,
          "type": "string"
         },
         "title": "include",
         "type": "array",
         "_name_": "include"
        },
        "exclude": {
         "description": "Paths to pass to `restic backup --exclude`",
         "items": {
          "minLength": 1,
          "type": "string"
         },
         "title": "exclude",
         "type": "array",
         "_name_": "exclude"
        },
        "args": {
         "description": "(Slated for removal)",
         "title": "args",
         "type": "string",
         "_name_": "args"
        },
        "enabled": {
         "description": "Can enable/disable the task",
         "title": "enabled",
         "type": "boolean",
         "_name_": "enabled"
        },
        "password": {
         "description": "Password for the remote repository",
         "minLength": 1,
         "title": "password",
         "type": "string",
         "_name_": "password"
        },
        "keep_last": {
         "description": "How many of the most recent backup snapshots to keep after each backup",
         "exclusiveMinimum": 0,
         "title": "keep_last",
         "type": "integer",
         "_name_": "keep_last"
        },
        "transfer_setting": {
         "description": "DEFAULT:\n- pack size given by `$RESTIC_PACK_SIZE` (default 16 MiB)\n- read concurrency given by `$RESTIC_READ_CONCURRENCY` (default 2 files)\nPERFORMANCE:\n- pack size = 29 MiB\n- read concurrency given by `$RESTIC_READ_CONCURRENCY` (default 2 files)\nFAST_STORAGE:\n- pack size = 58 MiB\n- read concurrency = 100 files",
         "enum": [
          "DEFAULT",
          "PERFORMANCE",
          "FAST_STORAGE"
         ],
         "title": "transfer_setting",
         "type": "string",
         "_name_": "transfer_setting"
        }
       },
       "title": "data",
       "type": "object",
       "_name_": "data",
       "_attrs_order_": [
        "description",
        "path",
        "credentials",
        "attributes",
        "schedule",
        "pre_script",
        "post_script",
        "snapshot",
        "include",
        "exclude",
        "args",
        "enabled",
        "password",
        "keep_last",
        "transfer_setting"
       ]
      },
      "return_schema_of_cloud_backup_update": {
       "additionalProperties": false,
       "properties": {
        "description": {
         "default": "",
         "description": "The name of the task to display in the UI",
         "title": "description",
         "type": "string",
         "_name_": "description"
        },
        "path": {
         "description": "The local path to back up beginning with `/mnt` or `/dev/zvol`",
         "title": "path",
         "type": "string",
         "_name_": "path"
        },
        "credentials": {
         "description": "Cloud credentials to use for each backup",
         "title": "credentials",
         "_name_": "credentials"
        },
        "attributes": {
         "description": "Additional information for each backup, e.g. bucket name",
         "title": "attributes",
         "type": "object",
         "_name_": "attributes"
        },
        "schedule": {
         "default": {
          "minute": "00",
          "hour": "*",
          "dom": "*",
          "month": "*",
          "dow": "*"
         },
         "description": "Cron schedule dictating when the task should run",
         "title": "schedule",
         "_name_": "schedule"
        },
        "pre_script": {
         "default": "",
         "description": "A Bash script to run immediately before every backup",
         "title": "pre_script",
         "type": "string",
         "_name_": "pre_script"
        },
        "post_script": {
         "default": "",
         "description": "A Bash script to run immediately after every backup if it succeeds",
         "title": "post_script",
         "type": "string",
         "_name_": "post_script"
        },
        "snapshot": {
         "default": false,
         "description": "Whether to create a temporary snapshot of the dataset before every backup",
         "title": "snapshot",
         "type": "boolean",
         "_name_": "snapshot"
        },
        "include": {
         "default": [],
         "description": "Paths to pass to `restic backup --include`",
         "items": {
          "minLength": 1,
          "type": "string"
         },
         "title": "include",
         "type": "array",
         "_name_": "include"
        },
        "exclude": {
         "default": [],
         "description": "Paths to pass to `restic backup --exclude`",
         "items": {
          "minLength": 1,
          "type": "string"
         },
         "title": "exclude",
         "type": "array",
         "_name_": "exclude"
        },
        "args": {
         "default": "",
         "description": "(Slated for removal)",
         "title": "args",
         "type": "string",
         "_name_": "args"
        },
        "enabled": {
         "default": true,
         "description": "Can enable/disable the task",
         "title": "enabled",
         "type": "boolean",
         "_name_": "enabled"
        },
        "password": {
         "description": "Password for the remote repository",
         "minLength": 1,
         "title": "password",
         "type": "string",
         "_name_": "password"
        },
        "keep_last": {
         "description": "How many of the most recent backup snapshots to keep after each backup",
         "exclusiveMinimum": 0,
         "title": "keep_last",
         "type": "integer",
         "_name_": "keep_last"
        },
        "transfer_setting": {
         "default": "DEFAULT",
         "description": "DEFAULT:\n- pack size given by `$RESTIC_PACK_SIZE` (default 16 MiB)\n- read concurrency given by `$RESTIC_READ_CONCURRENCY` (default 2 files)\nPERFORMANCE:\n- pack size = 29 MiB\n- read concurrency given by `$RESTIC_READ_CONCURRENCY` (default 2 files)\nFAST_STORAGE:\n- pack size = 58 MiB\n- read concurrency = 100 files",
         "enum": [
          "DEFAULT",
          "PERFORMANCE",
          "FAST_STORAGE"
         ],
         "title": "transfer_setting",
         "type": "string",
         "_name_": "transfer_setting"
        },
        "absolute_paths": {
         "default": false,
         "description": "Whether to preserve absolute paths in each backup (cannot be set when `snapshot=True`)",
         "title": "absolute_paths",
         "type": "boolean",
         "_name_": "absolute_paths"
        },
        "id": {
         "title": "id",
         "type": "integer",
         "_name_": "id"
        },
        "job": {
         "anyOf": [
          {
           "type": "object"
          },
          {
           "type": "null"
          }
         ],
         "description": "Information regarding the task's job state, e.g. progress",
         "title": "job",
         "_name_": "job"
        },
        "locked": {
         "description": "A locked task cannot run",
         "title": "locked",
         "type": "boolean",
         "_name_": "locked"
        }
       },
       "required": [
        "path",
        "credentials",
        "attributes",
        "password",
        "keep_last",
        "id",
        "job",
        "locked"
       ],
       "title": "result",
       "type": "object",
       "description": "The updated cloud backup task",
       "_name_": "result",
       "_attrs_order_": [
        "description",
        "path",
        "credentials",
        "attributes",
        "schedule",
        "pre_script",
        "post_script",
        "snapshot",
        "include",
        "exclude",
        "args",
        "enabled",
        "password",
        "keep_last",
        "transfer_setting",
        "absolute_paths",
        "id",
        "job",
        "locked"
       ]
      },
      "cloud_backup_abort": {
       "type": "object",
       "properties": {}
      },
      "return_schema_of_cloud_backup_abort": {
       "description": "Whether the backup was successfully aborted",
       "title": "result",
       "type": "boolean",
       "_name_": "result"
      },
      "cloud_backup_delete_snapshot_0": {
       "description": "The cloud backup task ID",
       "title": "id",
       "type": "integer",
       "_name_": "id"
      },
      "cloud_backup_delete_snapshot_1": {
       "description": "ID of the snapshot to delete",
       "pattern": "^[^-]",
       "title": "snapshot_id",
       "type": "string",
       "_name_": "snapshot_id"
      },
      "cloud_backup_delete_snapshot": {
       "type": "object",
       "properties": {
        "id": {
         "$ref": "#/components/schemas/cloud_backup_delete_snapshot_0"
        },
        "snapshot_id": {
         "$ref": "#/components/schemas/cloud_backup_delete_snapshot_1"
        }
       }
      },
      "return_schema_of_cloud_backup_delete_snapshot": {
       "title": "result",
       "type": "null",
       "_name_": "result"
      },
      "cloud_backup_get_instance_0": {
       "title": "id",
       "type": "integer",
       "_name_": "id"
      },
      "cloud_backup_get_instance_1": {
       "additionalProperties": false,
       "properties": {
        "relationships": {
         "default": true,
         "title": "relationships",
         "type": "boolean",
         "_name_": "relationships"
        },
        "extend": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "extend",
         "_name_": "extend"
        },
        "extend_context": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "extend_context",
         "_name_": "extend_context"
        },
        "prefix": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "prefix",
         "_name_": "prefix"
        },
        "extra": {
         "default": {},
         "title": "extra",
         "type": "object",
         "_name_": "extra"
        },
        "order_by": {
         "default": [],
         "items": {
          "type": "string"
         },
         "title": "order_by",
         "type": "array",
         "_name_": "order_by"
        },
        "select": {
         "default": [],
         "items": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "items": [
             {}
            ],
            "type": "array"
           }
          ]
         },
         "title": "select",
         "type": "array",
         "_name_": "select"
        },
        "count": {
         "default": false,
         "title": "count",
         "type": "boolean",
         "_name_": "count"
        },
        "get": {
         "default": false,
         "title": "get",
         "type": "boolean",
         "_name_": "get"
        },
        "offset": {
         "default": 0,
         "title": "offset",
         "type": "integer",
         "_name_": "offset"
        },
        "limit": {
         "default": 0,
         "title": "limit",
         "type": "integer",
         "_name_": "limit"
        },
        "force_sql_filters": {
         "default": false,
         "title": "force_sql_filters",
         "type": "boolean",
         "_name_": "force_sql_filters"
        }
       },
       "title": "options",
       "type": "object",
       "default": {},
       "_name_": "options",
       "_attrs_order_": [
        "relationships",
        "extend",
        "extend_context",
        "prefix",
        "extra",
        "order_by",
        "select",
        "count",
        "get",
        "offset",
        "limit",
        "force_sql_filters"
       ]
      },
      "cloud_backup_get_instance": {
       "type": "object",
       "properties": {
        "id": {
         "$ref": "#/components/schemas/cloud_backup_get_instance_0"
        },
        "options": {
         "$ref": "#/components/schemas/cloud_backup_get_instance_1"
        }
       }
      },
      "return_schema_of_cloud_backup_get_instance": {
       "additionalProperties": false,
       "properties": {
        "description": {
         "default": "",
         "description": "The name of the task to display in the UI",
         "title": "description",
         "type": "string",
         "_name_": "description"
        },
        "path": {
         "description": "The local path to back up beginning with `/mnt` or `/dev/zvol`",
         "title": "path",
         "type": "string",
         "_name_": "path"
        },
        "credentials": {
         "description": "Cloud credentials to use for each backup",
         "title": "credentials",
         "_name_": "credentials"
        },
        "attributes": {
         "description": "Additional information for each backup, e.g. bucket name",
         "title": "attributes",
         "type": "object",
         "_name_": "attributes"
        },
        "schedule": {
         "default": {
          "minute": "00",
          "hour": "*",
          "dom": "*",
          "month": "*",
          "dow": "*"
         },
         "description": "Cron schedule dictating when the task should run",
         "title": "schedule",
         "_name_": "schedule"
        },
        "pre_script": {
         "default": "",
         "description": "A Bash script to run immediately before every backup",
         "title": "pre_script",
         "type": "string",
         "_name_": "pre_script"
        },
        "post_script": {
         "default": "",
         "description": "A Bash script to run immediately after every backup if it succeeds",
         "title": "post_script",
         "type": "string",
         "_name_": "post_script"
        },
        "snapshot": {
         "default": false,
         "description": "Whether to create a temporary snapshot of the dataset before every backup",
         "title": "snapshot",
         "type": "boolean",
         "_name_": "snapshot"
        },
        "include": {
         "default": [],
         "description": "Paths to pass to `restic backup --include`",
         "items": {
          "minLength": 1,
          "type": "string"
         },
         "title": "include",
         "type": "array",
         "_name_": "include"
        },
        "exclude": {
         "default": [],
         "description": "Paths to pass to `restic backup --exclude`",
         "items": {
          "minLength": 1,
          "type": "string"
         },
         "title": "exclude",
         "type": "array",
         "_name_": "exclude"
        },
        "args": {
         "default": "",
         "description": "(Slated for removal)",
         "title": "args",
         "type": "string",
         "_name_": "args"
        },
        "enabled": {
         "default": true,
         "description": "Can enable/disable the task",
         "title": "enabled",
         "type": "boolean",
         "_name_": "enabled"
        },
        "password": {
         "description": "Password for the remote repository",
         "minLength": 1,
         "title": "password",
         "type": "string",
         "_name_": "password"
        },
        "keep_last": {
         "description": "How many of the most recent backup snapshots to keep after each backup",
         "exclusiveMinimum": 0,
         "title": "keep_last",
         "type": "integer",
         "_name_": "keep_last"
        },
        "transfer_setting": {
         "default": "DEFAULT",
         "description": "DEFAULT:\n- pack size given by `$RESTIC_PACK_SIZE` (default 16 MiB)\n- read concurrency given by `$RESTIC_READ_CONCURRENCY` (default 2 files)\nPERFORMANCE:\n- pack size = 29 MiB\n- read concurrency given by `$RESTIC_READ_CONCURRENCY` (default 2 files)\nFAST_STORAGE:\n- pack size = 58 MiB\n- read concurrency = 100 files",
         "enum": [
          "DEFAULT",
          "PERFORMANCE",
          "FAST_STORAGE"
         ],
         "title": "transfer_setting",
         "type": "string",
         "_name_": "transfer_setting"
        },
        "absolute_paths": {
         "default": false,
         "description": "Whether to preserve absolute paths in each backup (cannot be set when `snapshot=True`)",
         "title": "absolute_paths",
         "type": "boolean",
         "_name_": "absolute_paths"
        },
        "id": {
         "title": "id",
         "type": "integer",
         "_name_": "id"
        },
        "job": {
         "anyOf": [
          {
           "type": "object"
          },
          {
           "type": "null"
          }
         ],
         "description": "Information regarding the task's job state, e.g. progress",
         "title": "job",
         "_name_": "job"
        },
        "locked": {
         "description": "A locked task cannot run",
         "title": "locked",
         "type": "boolean",
         "_name_": "locked"
        }
       },
       "required": [
        "path",
        "credentials",
        "attributes",
        "password",
        "keep_last",
        "id",
        "job",
        "locked"
       ],
       "title": "result",
       "type": "object",
       "_name_": "result",
       "_attrs_order_": [
        "description",
        "path",
        "credentials",
        "attributes",
        "schedule",
        "pre_script",
        "post_script",
        "snapshot",
        "include",
        "exclude",
        "args",
        "enabled",
        "password",
        "keep_last",
        "transfer_setting",
        "absolute_paths",
        "id",
        "job",
        "locked"
       ]
      },
      "cloud_backup_list_snapshot_directory_0": {
       "description": "The cloud backup task ID",
       "title": "id",
       "type": "integer",
       "_name_": "id"
      },
      "cloud_backup_list_snapshot_directory_1": {
       "description": "ID of the snapshot whose contents to list",
       "pattern": "^[^-]",
       "title": "snapshot_id",
       "type": "string",
       "_name_": "snapshot_id"
      },
      "cloud_backup_list_snapshot_directory_2": {
       "description": "Path within the snapshot to list the contents of",
       "pattern": "^[^-]",
       "title": "path",
       "type": "string",
       "_name_": "path"
      },
      "cloud_backup_list_snapshot_directory": {
       "type": "object",
       "properties": {
        "id": {
         "$ref": "#/components/schemas/cloud_backup_list_snapshot_directory_0"
        },
        "snapshot_id": {
         "$ref": "#/components/schemas/cloud_backup_list_snapshot_directory_1"
        },
        "path": {
         "$ref": "#/components/schemas/cloud_backup_list_snapshot_directory_2"
        }
       }
      },
      "return_schema_of_cloud_backup_list_snapshot_directory": {
       "description": "All files and directories at the given snapshot path",
       "items": {
        "additionalProperties": true,
        "properties": {
         "name": {
          "description": "Name of the item",
          "title": "name",
          "type": "string",
          "_name_": "name",
          "_required_": true
         },
         "path": {
          "description": "Item's path in the snapshot",
          "title": "path",
          "type": "string",
          "_name_": "path",
          "_required_": true
         },
         "type": {
          "description": "Directory or file",
          "enum": [
           "dir",
           "file"
          ],
          "title": "type",
          "type": "string",
          "_name_": "type",
          "_required_": true
         },
         "size": {
          "anyOf": [
           {
            "type": "integer"
           },
           {
            "type": "null"
           }
          ],
          "description": "Size of the file in bytes",
          "title": "size",
          "_name_": "size",
          "_required_": true
         },
         "mtime": {
          "description": "Last modified time",
          "format": "date-time",
          "title": "mtime",
          "type": "string",
          "_name_": "mtime",
          "_required_": true
         }
        },
        "required": [
         "name",
         "path",
         "type",
         "size",
         "mtime"
        ],
        "title": "CloudBackupSnapshotItem",
        "type": "object",
        "_attrs_order_": [
         "name",
         "path",
         "type",
         "size",
         "mtime"
        ]
       },
       "title": "result",
       "type": "array",
       "_name_": "result"
      },
      "cloud_backup_list_snapshots": {
       "description": "The cloud backup task ID",
       "title": "id",
       "type": "integer",
       "_name_": "id"
      },
      "return_schema_of_cloud_backup_list_snapshots": {
       "description": "All retained backup snapshots",
       "items": {
        "additionalProperties": true,
        "properties": {
         "id": {
          "title": "id",
          "type": "string",
          "_name_": "id",
          "_required_": true
         },
         "hostname": {
          "description": "Host that created the snapshot",
          "title": "hostname",
          "type": "string",
          "_name_": "hostname",
          "_required_": true
         },
         "time": {
          "description": "Time that the snapshot was created",
          "format": "date-time",
          "title": "time",
          "type": "string",
          "_name_": "time",
          "_required_": true
         },
         "paths": {
          "description": "Paths that the snapshot includes",
          "items": [
           {
            "type": "string"
           }
          ],
          "title": "paths",
          "type": "array",
          "_name_": "paths",
          "_required_": true
         }
        },
        "required": [
         "id",
         "hostname",
         "time",
         "paths"
        ],
        "title": "CloudBackupSnapshot",
        "type": "object",
        "_attrs_order_": [
         "id",
         "hostname",
         "time",
         "paths"
        ]
       },
       "title": "result",
       "type": "array",
       "_name_": "result"
      },
      "cloud_backup_restore_0": {
       "description": "ID of the cloud backup task",
       "title": "id",
       "type": "integer",
       "_name_": "id"
      },
      "cloud_backup_restore_1": {
       "description": "ID of the snapshot to restore",
       "pattern": "^[^-]",
       "title": "snapshot_id",
       "type": "string",
       "_name_": "snapshot_id"
      },
      "cloud_backup_restore_2": {
       "description": "Path within the snapshot to restore",
       "title": "subfolder",
       "type": "string",
       "_name_": "subfolder"
      },
      "cloud_backup_restore_3": {
       "description": "Local path to restore to",
       "title": "destination_path",
       "type": "string",
       "_name_": "destination_path"
      },
      "cloud_backup_restore_4": {
       "additionalProperties": false,
       "properties": {
        "exclude": {
         "default": [],
         "description": "Paths to exclude from a restore using `restic restore --exclude`",
         "items": {
          "type": "string"
         },
         "title": "exclude",
         "type": "array",
         "_name_": "exclude"
        },
        "include": {
         "default": [],
         "description": "Paths to include in a restore using `restic restore --include`",
         "items": {
          "type": "string"
         },
         "title": "include",
         "type": "array",
         "_name_": "include"
        }
       },
       "title": "options",
       "type": "object",
       "default": {
        "exclude": [],
        "include": []
       },
       "description": "Additional restore options",
       "_name_": "options",
       "_attrs_order_": [
        "exclude",
        "include"
       ]
      },
      "cloud_backup_restore": {
       "type": "object",
       "properties": {
        "id": {
         "$ref": "#/components/schemas/cloud_backup_restore_0"
        },
        "snapshot_id": {
         "$ref": "#/components/schemas/cloud_backup_restore_1"
        },
        "subfolder": {
         "$ref": "#/components/schemas/cloud_backup_restore_2"
        },
        "destination_path": {
         "$ref": "#/components/schemas/cloud_backup_restore_3"
        },
        "options": {
         "$ref": "#/components/schemas/cloud_backup_restore_4"
        }
       }
      },
      "return_schema_of_cloud_backup_restore": {
       "title": "result",
       "type": "null",
       "_name_": "result"
      },
      "cloud_backup_sync": {
       "additionalProperties": false,
       "properties": {
        "dry_run": {
         "default": false,
         "description": "Whether to simulate the backup without actually writing to the remote repository",
         "title": "dry_run",
         "type": "boolean",
         "_name_": "dry_run"
        }
       },
       "title": "options",
       "type": "object",
       "description": "Sync options",
       "_name_": "options",
       "_attrs_order_": [
        "dry_run"
       ]
      },
      "return_schema_of_cloud_backup_sync": {
       "title": "result",
       "type": "null",
       "_name_": "result"
      },
      "return_schema_of_cloud_backup_transfer_setting_choices": {
       "description": "All possible values for `cloud_backup.create.transfer_setting`",
       "items": {
        "enum": [
         "DEFAULT",
         "PERFORMANCE",
         "FAST_STORAGE"
        ],
        "type": "string"
       },
       "title": "result",
       "type": "array",
       "_name_": "result"
      },
      "return_schema_of_cloudsync_query": {
       "anyOf": [
        {
         "_name_": "query_result",
         "title": "query_result",
         "default": [],
         "_required_": false,
         "type": "array",
         "items": [
          {
           "type": "object",
           "properties": {
            "description": {
             "_name_": "description",
             "title": "description",
             "default": "",
             "_required_": false,
             "type": "string"
            },
            "path": {
             "_name_": "path",
             "title": "path",
             "_required_": true,
             "type": "string"
            },
            "attributes": {
             "type": "object",
             "properties": {},
             "additionalProperties": true,
             "_name_": "attributes",
             "title": "attributes",
             "default": {},
             "_required_": true,
             "_attrs_order_": []
            },
            "schedule": {
             "type": "object",
             "properties": {
              "minute": {
               "_name_": "minute",
               "title": "minute",
               "default": "00",
               "_required_": false,
               "type": "string"
              },
              "hour": {
               "_name_": "hour",
               "title": "hour",
               "default": "*",
               "_required_": false,
               "type": "string"
              },
              "dom": {
               "_name_": "dom",
               "title": "dom",
               "default": "*",
               "_required_": false,
               "type": "string"
              },
              "month": {
               "_name_": "month",
               "title": "month",
               "default": "*",
               "_required_": false,
               "type": "string"
              },
              "dow": {
               "_name_": "dow",
               "title": "dow",
               "default": "*",
               "_required_": false,
               "type": "string"
              }
             },
             "additionalProperties": false,
             "_name_": "schedule",
             "title": "schedule",
             "default": {},
             "_required_": true,
             "_attrs_order_": [
              "minute",
              "hour",
              "dom",
              "month",
              "dow"
             ]
            },
            "pre_script": {
             "_name_": "pre_script",
             "title": "pre_script",
             "default": "",
             "_required_": false,
             "type": "string"
            },
            "post_script": {
             "_name_": "post_script",
             "title": "post_script",
             "default": "",
             "_required_": false,
             "type": "string"
            },
            "snapshot": {
             "type": "boolean",
             "_name_": "snapshot",
             "title": "snapshot",
             "default": false,
             "_required_": false
            },
            "include": {
             "_name_": "include",
             "title": "include",
             "default": [],
             "_required_": false,
             "type": "array",
             "items": [
              {
               "_name_": "path",
               "title": "path",
               "_required_": false,
               "type": "string"
              }
             ]
            },
            "exclude": {
             "_name_": "exclude",
             "title": "exclude",
             "default": [],
             "_required_": false,
             "type": "array",
             "items": [
              {
               "_name_": "path",
               "title": "path",
               "_required_": false,
               "type": "string"
              }
             ]
            },
            "args": {
             "_name_": "args",
             "title": "args",
             "default": "",
             "_required_": false,
             "type": "string"
            },
            "enabled": {
             "type": "boolean",
             "_name_": "enabled",
             "title": "enabled",
             "default": true,
             "_required_": false
            },
            "bwlimit": {
             "_name_": "bwlimit",
             "title": "bwlimit",
             "default": [],
             "_required_": false,
             "type": "array",
             "items": [
              {
               "type": "object",
               "properties": {
                "time": {
                 "_name_": "time",
                 "title": "time",
                 "_required_": false,
                 "type": "string"
                },
                "bandwidth": {
                 "type": [
                  "integer",
                  "null"
                 ],
                 "_name_": "bandwidth",
                 "title": "bandwidth",
                 "_required_": false
                }
               },
               "additionalProperties": false,
               "_name_": "cloud_sync_bwlimit",
               "title": "cloud_sync_bwlimit",
               "default": {},
               "_required_": false,
               "_attrs_order_": [
                "time",
                "bandwidth"
               ]
              }
             ]
            },
            "transfers": {
             "type": [
              "integer",
              "null"
             ],
             "_name_": "transfers",
             "title": "transfers",
             "default": null,
             "_required_": false
            },
            "direction": {
             "_name_": "direction",
             "title": "direction",
             "_required_": true,
             "type": "string",
             "enum": [
              "PUSH",
              "PULL"
             ]
            },
            "transfer_mode": {
             "_name_": "transfer_mode",
             "title": "transfer_mode",
             "_required_": true,
             "type": "string",
             "enum": [
              "SYNC",
              "COPY",
              "MOVE"
             ]
            },
            "encryption": {
             "type": "boolean",
             "_name_": "encryption",
             "title": "encryption",
             "default": false,
             "_required_": false
            },
            "filename_encryption": {
             "type": "boolean",
             "_name_": "filename_encryption",
             "title": "filename_encryption",
             "default": false,
             "_required_": false
            },
            "encryption_password": {
             "_name_": "encryption_password",
             "title": "encryption_password",
             "default": "",
             "_required_": false,
             "type": "string"
            },
            "encryption_salt": {
             "_name_": "encryption_salt",
             "title": "encryption_salt",
             "default": "",
             "_required_": false,
             "type": "string"
            },
            "create_empty_src_dirs": {
             "type": "boolean",
             "_name_": "create_empty_src_dirs",
             "title": "create_empty_src_dirs",
             "default": false,
             "_required_": false
            },
            "follow_symlinks": {
             "type": "boolean",
             "_name_": "follow_symlinks",
             "title": "follow_symlinks",
             "default": false,
             "_required_": false
            },
            "id": {
             "type": "integer",
             "_name_": "id",
             "title": "id",
             "_required_": false
            },
            "credentials": {
             "type": "object",
             "properties": {},
             "additionalProperties": true,
             "_name_": "credentials",
             "title": "credentials",
             "default": {},
             "_required_": false,
             "_attrs_order_": []
            },
            "job": {
             "type": "object",
             "properties": {},
             "additionalProperties": true,
             "_name_": "job",
             "title": "job",
             "default": {},
             "_required_": false,
             "_attrs_order_": []
            },
            "locked": {
             "type": "boolean",
             "_name_": "locked",
             "title": "locked",
             "_required_": false
            }
           },
           "additionalProperties": false,
           "_name_": "cloud_sync_entry",
           "title": "cloud_sync_entry",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "description",
            "path",
            "attributes",
            "schedule",
            "pre_script",
            "post_script",
            "snapshot",
            "include",
            "exclude",
            "args",
            "enabled",
            "bwlimit",
            "transfers",
            "direction",
            "transfer_mode",
            "encryption",
            "filename_encryption",
            "encryption_password",
            "encryption_salt",
            "create_empty_src_dirs",
            "follow_symlinks",
            "id",
            "credentials",
            "job",
            "locked"
           ]
          }
         ]
        },
        {
         "type": "object",
         "properties": {
          "description": {
           "_name_": "description",
           "title": "description",
           "default": "",
           "_required_": false,
           "type": "string"
          },
          "path": {
           "_name_": "path",
           "title": "path",
           "_required_": true,
           "type": "string"
          },
          "attributes": {
           "type": "object",
           "properties": {},
           "additionalProperties": true,
           "_name_": "attributes",
           "title": "attributes",
           "default": {},
           "_required_": true,
           "_attrs_order_": []
          },
          "schedule": {
           "type": "object",
           "properties": {
            "minute": {
             "_name_": "minute",
             "title": "minute",
             "default": "00",
             "_required_": false,
             "type": "string"
            },
            "hour": {
             "_name_": "hour",
             "title": "hour",
             "default": "*",
             "_required_": false,
             "type": "string"
            },
            "dom": {
             "_name_": "dom",
             "title": "dom",
             "default": "*",
             "_required_": false,
             "type": "string"
            },
            "month": {
             "_name_": "month",
             "title": "month",
             "default": "*",
             "_required_": false,
             "type": "string"
            },
            "dow": {
             "_name_": "dow",
             "title": "dow",
             "default": "*",
             "_required_": false,
             "type": "string"
            }
           },
           "additionalProperties": false,
           "_name_": "schedule",
           "title": "schedule",
           "default": {},
           "_required_": true,
           "_attrs_order_": [
            "minute",
            "hour",
            "dom",
            "month",
            "dow"
           ]
          },
          "pre_script": {
           "_name_": "pre_script",
           "title": "pre_script",
           "default": "",
           "_required_": false,
           "type": "string"
          },
          "post_script": {
           "_name_": "post_script",
           "title": "post_script",
           "default": "",
           "_required_": false,
           "type": "string"
          },
          "snapshot": {
           "type": "boolean",
           "_name_": "snapshot",
           "title": "snapshot",
           "default": false,
           "_required_": false
          },
          "include": {
           "_name_": "include",
           "title": "include",
           "default": [],
           "_required_": false,
           "type": "array",
           "items": [
            {
             "_name_": "path",
             "title": "path",
             "_required_": false,
             "type": "string"
            }
           ]
          },
          "exclude": {
           "_name_": "exclude",
           "title": "exclude",
           "default": [],
           "_required_": false,
           "type": "array",
           "items": [
            {
             "_name_": "path",
             "title": "path",
             "_required_": false,
             "type": "string"
            }
           ]
          },
          "args": {
           "_name_": "args",
           "title": "args",
           "default": "",
           "_required_": false,
           "type": "string"
          },
          "enabled": {
           "type": "boolean",
           "_name_": "enabled",
           "title": "enabled",
           "default": true,
           "_required_": false
          },
          "bwlimit": {
           "_name_": "bwlimit",
           "title": "bwlimit",
           "default": [],
           "_required_": false,
           "type": "array",
           "items": [
            {
             "type": "object",
             "properties": {
              "time": {
               "_name_": "time",
               "title": "time",
               "_required_": false,
               "type": "string"
              },
              "bandwidth": {
               "type": [
                "integer",
                "null"
               ],
               "_name_": "bandwidth",
               "title": "bandwidth",
               "_required_": false
              }
             },
             "additionalProperties": false,
             "_name_": "cloud_sync_bwlimit",
             "title": "cloud_sync_bwlimit",
             "default": {},
             "_required_": false,
             "_attrs_order_": [
              "time",
              "bandwidth"
             ]
            }
           ]
          },
          "transfers": {
           "type": [
            "integer",
            "null"
           ],
           "_name_": "transfers",
           "title": "transfers",
           "default": null,
           "_required_": false
          },
          "direction": {
           "_name_": "direction",
           "title": "direction",
           "_required_": true,
           "type": "string",
           "enum": [
            "PUSH",
            "PULL"
           ]
          },
          "transfer_mode": {
           "_name_": "transfer_mode",
           "title": "transfer_mode",
           "_required_": true,
           "type": "string",
           "enum": [
            "SYNC",
            "COPY",
            "MOVE"
           ]
          },
          "encryption": {
           "type": "boolean",
           "_name_": "encryption",
           "title": "encryption",
           "default": false,
           "_required_": false
          },
          "filename_encryption": {
           "type": "boolean",
           "_name_": "filename_encryption",
           "title": "filename_encryption",
           "default": false,
           "_required_": false
          },
          "encryption_password": {
           "_name_": "encryption_password",
           "title": "encryption_password",
           "default": "",
           "_required_": false,
           "type": "string"
          },
          "encryption_salt": {
           "_name_": "encryption_salt",
           "title": "encryption_salt",
           "default": "",
           "_required_": false,
           "type": "string"
          },
          "create_empty_src_dirs": {
           "type": "boolean",
           "_name_": "create_empty_src_dirs",
           "title": "create_empty_src_dirs",
           "default": false,
           "_required_": false
          },
          "follow_symlinks": {
           "type": "boolean",
           "_name_": "follow_symlinks",
           "title": "follow_symlinks",
           "default": false,
           "_required_": false
          },
          "id": {
           "type": "integer",
           "_name_": "id",
           "title": "id",
           "_required_": false
          },
          "credentials": {
           "type": "object",
           "properties": {},
           "additionalProperties": true,
           "_name_": "credentials",
           "title": "credentials",
           "default": {},
           "_required_": false,
           "_attrs_order_": []
          },
          "job": {
           "type": "object",
           "properties": {},
           "additionalProperties": true,
           "_name_": "job",
           "title": "job",
           "default": {},
           "_required_": false,
           "_attrs_order_": []
          },
          "locked": {
           "type": "boolean",
           "_name_": "locked",
           "title": "locked",
           "_required_": false
          }
         },
         "additionalProperties": false,
         "_name_": "cloud_sync_entry",
         "title": "cloud_sync_entry",
         "default": {},
         "_required_": false,
         "_attrs_order_": [
          "description",
          "path",
          "attributes",
          "schedule",
          "pre_script",
          "post_script",
          "snapshot",
          "include",
          "exclude",
          "args",
          "enabled",
          "bwlimit",
          "transfers",
          "direction",
          "transfer_mode",
          "encryption",
          "filename_encryption",
          "encryption_password",
          "encryption_salt",
          "create_empty_src_dirs",
          "follow_symlinks",
          "id",
          "credentials",
          "job",
          "locked"
         ]
        },
        {
         "type": "integer",
         "_name_": "count",
         "title": "count",
         "_required_": false
        },
        {
         "type": "object",
         "properties": {
          "description": {
           "_name_": "description",
           "title": "description",
           "default": "",
           "_required_": false,
           "type": "string"
          },
          "path": {
           "_name_": "path",
           "title": "path",
           "_required_": true,
           "type": "string"
          },
          "attributes": {
           "type": "object",
           "properties": {},
           "additionalProperties": true,
           "_name_": "attributes",
           "title": "attributes",
           "default": {},
           "_required_": true,
           "_attrs_order_": []
          },
          "schedule": {
           "type": "object",
           "properties": {
            "minute": {
             "_name_": "minute",
             "title": "minute",
             "default": "00",
             "_required_": false,
             "type": "string"
            },
            "hour": {
             "_name_": "hour",
             "title": "hour",
             "default": "*",
             "_required_": false,
             "type": "string"
            },
            "dom": {
             "_name_": "dom",
             "title": "dom",
             "default": "*",
             "_required_": false,
             "type": "string"
            },
            "month": {
             "_name_": "month",
             "title": "month",
             "default": "*",
             "_required_": false,
             "type": "string"
            },
            "dow": {
             "_name_": "dow",
             "title": "dow",
             "default": "*",
             "_required_": false,
             "type": "string"
            }
           },
           "additionalProperties": false,
           "_name_": "schedule",
           "title": "schedule",
           "default": {},
           "_required_": true,
           "_attrs_order_": [
            "minute",
            "hour",
            "dom",
            "month",
            "dow"
           ]
          },
          "pre_script": {
           "_name_": "pre_script",
           "title": "pre_script",
           "default": "",
           "_required_": false,
           "type": "string"
          },
          "post_script": {
           "_name_": "post_script",
           "title": "post_script",
           "default": "",
           "_required_": false,
           "type": "string"
          },
          "snapshot": {
           "type": "boolean",
           "_name_": "snapshot",
           "title": "snapshot",
           "default": false,
           "_required_": false
          },
          "include": {
           "_name_": "include",
           "title": "include",
           "default": [],
           "_required_": false,
           "type": "array",
           "items": [
            {
             "_name_": "path",
             "title": "path",
             "_required_": false,
             "type": "string"
            }
           ]
          },
          "exclude": {
           "_name_": "exclude",
           "title": "exclude",
           "default": [],
           "_required_": false,
           "type": "array",
           "items": [
            {
             "_name_": "path",
             "title": "path",
             "_required_": false,
             "type": "string"
            }
           ]
          },
          "args": {
           "_name_": "args",
           "title": "args",
           "default": "",
           "_required_": false,
           "type": "string"
          },
          "enabled": {
           "type": "boolean",
           "_name_": "enabled",
           "title": "enabled",
           "default": true,
           "_required_": false
          },
          "bwlimit": {
           "_name_": "bwlimit",
           "title": "bwlimit",
           "default": [],
           "_required_": false,
           "type": "array",
           "items": [
            {
             "type": "object",
             "properties": {
              "time": {
               "_name_": "time",
               "title": "time",
               "_required_": false,
               "type": "string"
              },
              "bandwidth": {
               "type": [
                "integer",
                "null"
               ],
               "_name_": "bandwidth",
               "title": "bandwidth",
               "_required_": false
              }
             },
             "additionalProperties": false,
             "_name_": "cloud_sync_bwlimit",
             "title": "cloud_sync_bwlimit",
             "default": {},
             "_required_": false,
             "_attrs_order_": [
              "time",
              "bandwidth"
             ]
            }
           ]
          },
          "transfers": {
           "type": [
            "integer",
            "null"
           ],
           "_name_": "transfers",
           "title": "transfers",
           "default": null,
           "_required_": false
          },
          "direction": {
           "_name_": "direction",
           "title": "direction",
           "_required_": true,
           "type": "string",
           "enum": [
            "PUSH",
            "PULL"
           ]
          },
          "transfer_mode": {
           "_name_": "transfer_mode",
           "title": "transfer_mode",
           "_required_": true,
           "type": "string",
           "enum": [
            "SYNC",
            "COPY",
            "MOVE"
           ]
          },
          "encryption": {
           "type": "boolean",
           "_name_": "encryption",
           "title": "encryption",
           "default": false,
           "_required_": false
          },
          "filename_encryption": {
           "type": "boolean",
           "_name_": "filename_encryption",
           "title": "filename_encryption",
           "default": false,
           "_required_": false
          },
          "encryption_password": {
           "_name_": "encryption_password",
           "title": "encryption_password",
           "default": "",
           "_required_": false,
           "type": "string"
          },
          "encryption_salt": {
           "_name_": "encryption_salt",
           "title": "encryption_salt",
           "default": "",
           "_required_": false,
           "type": "string"
          },
          "create_empty_src_dirs": {
           "type": "boolean",
           "_name_": "create_empty_src_dirs",
           "title": "create_empty_src_dirs",
           "default": false,
           "_required_": false
          },
          "follow_symlinks": {
           "type": "boolean",
           "_name_": "follow_symlinks",
           "title": "follow_symlinks",
           "default": false,
           "_required_": false
          },
          "id": {
           "type": "integer",
           "_name_": "id",
           "title": "id",
           "_required_": false
          },
          "credentials": {
           "type": "object",
           "properties": {},
           "additionalProperties": true,
           "_name_": "credentials",
           "title": "credentials",
           "default": {},
           "_required_": false,
           "_attrs_order_": []
          },
          "job": {
           "type": "object",
           "properties": {},
           "additionalProperties": true,
           "_name_": "job",
           "title": "job",
           "default": {},
           "_required_": false,
           "_attrs_order_": []
          },
          "locked": {
           "type": "boolean",
           "_name_": "locked",
           "title": "locked",
           "_required_": false
          }
         },
         "additionalProperties": false,
         "_name_": "cloud_sync_entry",
         "title": "cloud_sync_entry",
         "default": {},
         "_required_": false,
         "_attrs_order_": [
          "description",
          "path",
          "attributes",
          "schedule",
          "pre_script",
          "post_script",
          "snapshot",
          "include",
          "exclude",
          "args",
          "enabled",
          "bwlimit",
          "transfers",
          "direction",
          "transfer_mode",
          "encryption",
          "filename_encryption",
          "encryption_password",
          "encryption_salt",
          "create_empty_src_dirs",
          "follow_symlinks",
          "id",
          "credentials",
          "job",
          "locked"
         ]
        }
       ],
       "nullable": false,
       "_name_": "query_result",
       "description": null
      },
      "cloudsync_create": {
       "type": "object",
       "properties": {
        "description": {
         "_name_": "description",
         "title": "description",
         "default": "",
         "type": "string"
        },
        "path": {
         "_name_": "path",
         "title": "path",
         "type": "string"
        },
        "credentials": {
         "type": "integer",
         "_name_": "credentials",
         "title": "credentials"
        },
        "attributes": {
         "type": "object",
         "properties": {},
         "additionalProperties": true,
         "_name_": "attributes",
         "title": "attributes",
         "default": {},
         "_attrs_order_": []
        },
        "schedule": {
         "type": "object",
         "properties": {
          "minute": {
           "_name_": "minute",
           "title": "minute",
           "default": "00",
           "type": "string"
          },
          "hour": {
           "_name_": "hour",
           "title": "hour",
           "default": "*",
           "type": "string"
          },
          "dom": {
           "_name_": "dom",
           "title": "dom",
           "default": "*",
           "type": "string"
          },
          "month": {
           "_name_": "month",
           "title": "month",
           "default": "*",
           "type": "string"
          },
          "dow": {
           "_name_": "dow",
           "title": "dow",
           "default": "*",
           "type": "string"
          }
         },
         "additionalProperties": false,
         "_name_": "schedule",
         "title": "schedule",
         "default": {},
         "_attrs_order_": [
          "minute",
          "hour",
          "dom",
          "month",
          "dow"
         ]
        },
        "pre_script": {
         "_name_": "pre_script",
         "title": "pre_script",
         "default": "",
         "type": "string"
        },
        "post_script": {
         "_name_": "post_script",
         "title": "post_script",
         "default": "",
         "type": "string"
        },
        "snapshot": {
         "type": "boolean",
         "_name_": "snapshot",
         "title": "snapshot",
         "default": false
        },
        "include": {
         "_name_": "include",
         "title": "include",
         "default": [],
         "type": "array",
         "items": {
          "_name_": "path",
          "title": "path",
          "_required_": false,
          "type": "string"
         }
        },
        "exclude": {
         "_name_": "exclude",
         "title": "exclude",
         "default": [],
         "type": "array",
         "items": {
          "_name_": "path",
          "title": "path",
          "_required_": false,
          "type": "string"
         }
        },
        "args": {
         "_name_": "args",
         "title": "args",
         "default": "",
         "type": "string"
        },
        "enabled": {
         "type": "boolean",
         "_name_": "enabled",
         "title": "enabled",
         "default": true
        },
        "bwlimit": {
         "_name_": "bwlimit",
         "title": "bwlimit",
         "default": [],
         "type": "array",
         "items": {
          "type": "object",
          "properties": {
           "time": {
            "_name_": "time",
            "title": "time",
            "_required_": false,
            "type": "string"
           },
           "bandwidth": {
            "type": [
             "integer",
             "null"
            ],
            "_name_": "bandwidth",
            "title": "bandwidth",
            "_required_": false
           }
          },
          "additionalProperties": false,
          "_name_": "cloud_sync_bwlimit",
          "title": "cloud_sync_bwlimit",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "time",
           "bandwidth"
          ]
         }
        },
        "transfers": {
         "type": "integer",
         "_name_": "transfers",
         "title": "transfers",
         "default": null,
         "nullable": true
        },
        "direction": {
         "_name_": "direction",
         "title": "direction",
         "type": "string",
         "enum": [
          "PUSH",
          "PULL"
         ]
        },
        "transfer_mode": {
         "_name_": "transfer_mode",
         "title": "transfer_mode",
         "type": "string",
         "enum": [
          "SYNC",
          "COPY",
          "MOVE"
         ]
        },
        "encryption": {
         "type": "boolean",
         "_name_": "encryption",
         "title": "encryption",
         "default": false
        },
        "filename_encryption": {
         "type": "boolean",
         "_name_": "filename_encryption",
         "title": "filename_encryption",
         "default": false
        },
        "encryption_password": {
         "_name_": "encryption_password",
         "title": "encryption_password",
         "default": "",
         "type": "string"
        },
        "encryption_salt": {
         "_name_": "encryption_salt",
         "title": "encryption_salt",
         "default": "",
         "type": "string"
        },
        "create_empty_src_dirs": {
         "type": "boolean",
         "_name_": "create_empty_src_dirs",
         "title": "create_empty_src_dirs",
         "default": false
        },
        "follow_symlinks": {
         "type": "boolean",
         "_name_": "follow_symlinks",
         "title": "follow_symlinks",
         "default": false
        }
       },
       "additionalProperties": false,
       "_name_": "cloud_sync_create",
       "title": "cloud_sync_create",
       "default": {},
       "_attrs_order_": [
        "description",
        "path",
        "credentials",
        "attributes",
        "schedule",
        "pre_script",
        "post_script",
        "snapshot",
        "include",
        "exclude",
        "args",
        "enabled",
        "bwlimit",
        "transfers",
        "direction",
        "transfer_mode",
        "encryption",
        "filename_encryption",
        "encryption_password",
        "encryption_salt",
        "create_empty_src_dirs",
        "follow_symlinks"
       ]
      },
      "return_schema_of_cloudsync_create": {
       "type": "object",
       "properties": {
        "description": {
         "_name_": "description",
         "title": "description",
         "default": "",
         "type": "string"
        },
        "path": {
         "_name_": "path",
         "title": "path",
         "type": "string"
        },
        "attributes": {
         "type": "object",
         "properties": {},
         "additionalProperties": true,
         "_name_": "attributes",
         "title": "attributes",
         "default": {},
         "_attrs_order_": []
        },
        "schedule": {
         "type": "object",
         "properties": {
          "minute": {
           "_name_": "minute",
           "title": "minute",
           "default": "00",
           "type": "string"
          },
          "hour": {
           "_name_": "hour",
           "title": "hour",
           "default": "*",
           "type": "string"
          },
          "dom": {
           "_name_": "dom",
           "title": "dom",
           "default": "*",
           "type": "string"
          },
          "month": {
           "_name_": "month",
           "title": "month",
           "default": "*",
           "type": "string"
          },
          "dow": {
           "_name_": "dow",
           "title": "dow",
           "default": "*",
           "type": "string"
          }
         },
         "additionalProperties": false,
         "_name_": "schedule",
         "title": "schedule",
         "default": {},
         "_attrs_order_": [
          "minute",
          "hour",
          "dom",
          "month",
          "dow"
         ]
        },
        "pre_script": {
         "_name_": "pre_script",
         "title": "pre_script",
         "default": "",
         "type": "string"
        },
        "post_script": {
         "_name_": "post_script",
         "title": "post_script",
         "default": "",
         "type": "string"
        },
        "snapshot": {
         "type": "boolean",
         "_name_": "snapshot",
         "title": "snapshot",
         "default": false
        },
        "include": {
         "_name_": "include",
         "title": "include",
         "default": [],
         "type": "array",
         "items": {
          "_name_": "path",
          "title": "path",
          "_required_": false,
          "type": "string"
         }
        },
        "exclude": {
         "_name_": "exclude",
         "title": "exclude",
         "default": [],
         "type": "array",
         "items": {
          "_name_": "path",
          "title": "path",
          "_required_": false,
          "type": "string"
         }
        },
        "args": {
         "_name_": "args",
         "title": "args",
         "default": "",
         "type": "string"
        },
        "enabled": {
         "type": "boolean",
         "_name_": "enabled",
         "title": "enabled",
         "default": true
        },
        "bwlimit": {
         "_name_": "bwlimit",
         "title": "bwlimit",
         "default": [],
         "type": "array",
         "items": {
          "type": "object",
          "properties": {
           "time": {
            "_name_": "time",
            "title": "time",
            "_required_": false,
            "type": "string"
           },
           "bandwidth": {
            "type": [
             "integer",
             "null"
            ],
            "_name_": "bandwidth",
            "title": "bandwidth",
            "_required_": false
           }
          },
          "additionalProperties": false,
          "_name_": "cloud_sync_bwlimit",
          "title": "cloud_sync_bwlimit",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "time",
           "bandwidth"
          ]
         }
        },
        "transfers": {
         "type": "integer",
         "_name_": "transfers",
         "title": "transfers",
         "default": null,
         "nullable": true
        },
        "direction": {
         "_name_": "direction",
         "title": "direction",
         "type": "string",
         "enum": [
          "PUSH",
          "PULL"
         ]
        },
        "transfer_mode": {
         "_name_": "transfer_mode",
         "title": "transfer_mode",
         "type": "string",
         "enum": [
          "SYNC",
          "COPY",
          "MOVE"
         ]
        },
        "encryption": {
         "type": "boolean",
         "_name_": "encryption",
         "title": "encryption",
         "default": false
        },
        "filename_encryption": {
         "type": "boolean",
         "_name_": "filename_encryption",
         "title": "filename_encryption",
         "default": false
        },
        "encryption_password": {
         "_name_": "encryption_password",
         "title": "encryption_password",
         "default": "",
         "type": "string"
        },
        "encryption_salt": {
         "_name_": "encryption_salt",
         "title": "encryption_salt",
         "default": "",
         "type": "string"
        },
        "create_empty_src_dirs": {
         "type": "boolean",
         "_name_": "create_empty_src_dirs",
         "title": "create_empty_src_dirs",
         "default": false
        },
        "follow_symlinks": {
         "type": "boolean",
         "_name_": "follow_symlinks",
         "title": "follow_symlinks",
         "default": false
        },
        "id": {
         "type": "integer",
         "_name_": "id",
         "title": "id"
        },
        "credentials": {
         "type": "object",
         "properties": {},
         "additionalProperties": true,
         "_name_": "credentials",
         "title": "credentials",
         "default": {},
         "_attrs_order_": []
        },
        "job": {
         "type": "object",
         "properties": {},
         "additionalProperties": true,
         "_name_": "job",
         "title": "job",
         "default": {},
         "_attrs_order_": []
        },
        "locked": {
         "type": "boolean",
         "_name_": "locked",
         "title": "locked"
        }
       },
       "additionalProperties": false,
       "_name_": "cloudsync_create_returns",
       "title": "cloudsync_create_returns",
       "default": {},
       "_attrs_order_": [
        "description",
        "path",
        "attributes",
        "schedule",
        "pre_script",
        "post_script",
        "snapshot",
        "include",
        "exclude",
        "args",
        "enabled",
        "bwlimit",
        "transfers",
        "direction",
        "transfer_mode",
        "encryption",
        "filename_encryption",
        "encryption_password",
        "encryption_salt",
        "create_empty_src_dirs",
        "follow_symlinks",
        "id",
        "credentials",
        "job",
        "locked"
       ]
      },
      "return_schema_of_cloudsync_delete": {
       "type": "boolean",
       "_name_": "deleted",
       "title": "deleted",
       "description": "Will return `true` if `id` is deleted successfully"
      },
      "cloudsync_update": {
       "type": "object",
       "properties": {
        "description": {
         "_name_": "description",
         "title": "description",
         "default": "",
         "type": "string"
        },
        "path": {
         "_name_": "path",
         "title": "path",
         "type": "string"
        },
        "credentials": {
         "type": "integer",
         "_name_": "credentials",
         "title": "credentials"
        },
        "attributes": {
         "type": "object",
         "properties": {},
         "additionalProperties": true,
         "_name_": "attributes",
         "title": "attributes",
         "default": {},
         "_attrs_order_": []
        },
        "schedule": {
         "type": "object",
         "properties": {
          "minute": {
           "_name_": "minute",
           "title": "minute",
           "default": "00",
           "type": "string"
          },
          "hour": {
           "_name_": "hour",
           "title": "hour",
           "default": "*",
           "type": "string"
          },
          "dom": {
           "_name_": "dom",
           "title": "dom",
           "default": "*",
           "type": "string"
          },
          "month": {
           "_name_": "month",
           "title": "month",
           "default": "*",
           "type": "string"
          },
          "dow": {
           "_name_": "dow",
           "title": "dow",
           "default": "*",
           "type": "string"
          }
         },
         "additionalProperties": false,
         "_name_": "schedule",
         "title": "schedule",
         "default": {},
         "_attrs_order_": [
          "minute",
          "hour",
          "dom",
          "month",
          "dow"
         ]
        },
        "pre_script": {
         "_name_": "pre_script",
         "title": "pre_script",
         "default": "",
         "type": "string"
        },
        "post_script": {
         "_name_": "post_script",
         "title": "post_script",
         "default": "",
         "type": "string"
        },
        "snapshot": {
         "type": "boolean",
         "_name_": "snapshot",
         "title": "snapshot",
         "default": false
        },
        "include": {
         "_name_": "include",
         "title": "include",
         "default": [],
         "type": "array",
         "items": {
          "_name_": "path",
          "title": "path",
          "_required_": false,
          "type": "string"
         }
        },
        "exclude": {
         "_name_": "exclude",
         "title": "exclude",
         "default": [],
         "type": "array",
         "items": {
          "_name_": "path",
          "title": "path",
          "_required_": false,
          "type": "string"
         }
        },
        "args": {
         "_name_": "args",
         "title": "args",
         "default": "",
         "type": "string"
        },
        "enabled": {
         "type": "boolean",
         "_name_": "enabled",
         "title": "enabled",
         "default": true
        },
        "bwlimit": {
         "_name_": "bwlimit",
         "title": "bwlimit",
         "default": [],
         "type": "array",
         "items": {
          "type": "object",
          "properties": {
           "time": {
            "_name_": "time",
            "title": "time",
            "_required_": false,
            "type": "string"
           },
           "bandwidth": {
            "type": [
             "integer",
             "null"
            ],
            "_name_": "bandwidth",
            "title": "bandwidth",
            "_required_": false
           }
          },
          "additionalProperties": false,
          "_name_": "cloud_sync_bwlimit",
          "title": "cloud_sync_bwlimit",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "time",
           "bandwidth"
          ]
         }
        },
        "transfers": {
         "type": "integer",
         "_name_": "transfers",
         "title": "transfers",
         "default": null,
         "nullable": true
        },
        "direction": {
         "_name_": "direction",
         "title": "direction",
         "type": "string",
         "enum": [
          "PUSH",
          "PULL"
         ]
        },
        "transfer_mode": {
         "_name_": "transfer_mode",
         "title": "transfer_mode",
         "type": "string",
         "enum": [
          "SYNC",
          "COPY",
          "MOVE"
         ]
        },
        "encryption": {
         "type": "boolean",
         "_name_": "encryption",
         "title": "encryption",
         "default": false
        },
        "filename_encryption": {
         "type": "boolean",
         "_name_": "filename_encryption",
         "title": "filename_encryption",
         "default": false
        },
        "encryption_password": {
         "_name_": "encryption_password",
         "title": "encryption_password",
         "default": "",
         "type": "string"
        },
        "encryption_salt": {
         "_name_": "encryption_salt",
         "title": "encryption_salt",
         "default": "",
         "type": "string"
        },
        "create_empty_src_dirs": {
         "type": "boolean",
         "_name_": "create_empty_src_dirs",
         "title": "create_empty_src_dirs",
         "default": false
        },
        "follow_symlinks": {
         "type": "boolean",
         "_name_": "follow_symlinks",
         "title": "follow_symlinks",
         "default": false
        }
       },
       "additionalProperties": false,
       "_name_": "cloud_sync_update",
       "title": "cloud_sync_update",
       "default": {},
       "_attrs_order_": [
        "description",
        "path",
        "credentials",
        "attributes",
        "schedule",
        "pre_script",
        "post_script",
        "snapshot",
        "include",
        "exclude",
        "args",
        "enabled",
        "bwlimit",
        "transfers",
        "direction",
        "transfer_mode",
        "encryption",
        "filename_encryption",
        "encryption_password",
        "encryption_salt",
        "create_empty_src_dirs",
        "follow_symlinks"
       ]
      },
      "return_schema_of_cloudsync_update": {
       "type": "object",
       "properties": {
        "description": {
         "_name_": "description",
         "title": "description",
         "default": "",
         "type": "string"
        },
        "path": {
         "_name_": "path",
         "title": "path",
         "type": "string"
        },
        "attributes": {
         "type": "object",
         "properties": {},
         "additionalProperties": true,
         "_name_": "attributes",
         "title": "attributes",
         "default": {},
         "_attrs_order_": []
        },
        "schedule": {
         "type": "object",
         "properties": {
          "minute": {
           "_name_": "minute",
           "title": "minute",
           "default": "00",
           "type": "string"
          },
          "hour": {
           "_name_": "hour",
           "title": "hour",
           "default": "*",
           "type": "string"
          },
          "dom": {
           "_name_": "dom",
           "title": "dom",
           "default": "*",
           "type": "string"
          },
          "month": {
           "_name_": "month",
           "title": "month",
           "default": "*",
           "type": "string"
          },
          "dow": {
           "_name_": "dow",
           "title": "dow",
           "default": "*",
           "type": "string"
          }
         },
         "additionalProperties": false,
         "_name_": "schedule",
         "title": "schedule",
         "default": {},
         "_attrs_order_": [
          "minute",
          "hour",
          "dom",
          "month",
          "dow"
         ]
        },
        "pre_script": {
         "_name_": "pre_script",
         "title": "pre_script",
         "default": "",
         "type": "string"
        },
        "post_script": {
         "_name_": "post_script",
         "title": "post_script",
         "default": "",
         "type": "string"
        },
        "snapshot": {
         "type": "boolean",
         "_name_": "snapshot",
         "title": "snapshot",
         "default": false
        },
        "include": {
         "_name_": "include",
         "title": "include",
         "default": [],
         "type": "array",
         "items": {
          "_name_": "path",
          "title": "path",
          "_required_": false,
          "type": "string"
         }
        },
        "exclude": {
         "_name_": "exclude",
         "title": "exclude",
         "default": [],
         "type": "array",
         "items": {
          "_name_": "path",
          "title": "path",
          "_required_": false,
          "type": "string"
         }
        },
        "args": {
         "_name_": "args",
         "title": "args",
         "default": "",
         "type": "string"
        },
        "enabled": {
         "type": "boolean",
         "_name_": "enabled",
         "title": "enabled",
         "default": true
        },
        "bwlimit": {
         "_name_": "bwlimit",
         "title": "bwlimit",
         "default": [],
         "type": "array",
         "items": {
          "type": "object",
          "properties": {
           "time": {
            "_name_": "time",
            "title": "time",
            "_required_": false,
            "type": "string"
           },
           "bandwidth": {
            "type": [
             "integer",
             "null"
            ],
            "_name_": "bandwidth",
            "title": "bandwidth",
            "_required_": false
           }
          },
          "additionalProperties": false,
          "_name_": "cloud_sync_bwlimit",
          "title": "cloud_sync_bwlimit",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "time",
           "bandwidth"
          ]
         }
        },
        "transfers": {
         "type": "integer",
         "_name_": "transfers",
         "title": "transfers",
         "default": null,
         "nullable": true
        },
        "direction": {
         "_name_": "direction",
         "title": "direction",
         "type": "string",
         "enum": [
          "PUSH",
          "PULL"
         ]
        },
        "transfer_mode": {
         "_name_": "transfer_mode",
         "title": "transfer_mode",
         "type": "string",
         "enum": [
          "SYNC",
          "COPY",
          "MOVE"
         ]
        },
        "encryption": {
         "type": "boolean",
         "_name_": "encryption",
         "title": "encryption",
         "default": false
        },
        "filename_encryption": {
         "type": "boolean",
         "_name_": "filename_encryption",
         "title": "filename_encryption",
         "default": false
        },
        "encryption_password": {
         "_name_": "encryption_password",
         "title": "encryption_password",
         "default": "",
         "type": "string"
        },
        "encryption_salt": {
         "_name_": "encryption_salt",
         "title": "encryption_salt",
         "default": "",
         "type": "string"
        },
        "create_empty_src_dirs": {
         "type": "boolean",
         "_name_": "create_empty_src_dirs",
         "title": "create_empty_src_dirs",
         "default": false
        },
        "follow_symlinks": {
         "type": "boolean",
         "_name_": "follow_symlinks",
         "title": "follow_symlinks",
         "default": false
        },
        "id": {
         "type": "integer",
         "_name_": "id",
         "title": "id",
         "description": "Updates the cloud_sync entry `id` with `data`.\nCreates a new cloud_sync entry."
        },
        "credentials": {
         "type": "object",
         "properties": {},
         "additionalProperties": true,
         "_name_": "credentials",
         "title": "credentials",
         "default": {},
         "_attrs_order_": []
        },
        "job": {
         "type": "object",
         "properties": {},
         "additionalProperties": true,
         "_name_": "job",
         "title": "job",
         "default": {},
         "_attrs_order_": []
        },
        "locked": {
         "type": "boolean",
         "_name_": "locked",
         "title": "locked"
        }
       },
       "additionalProperties": false,
       "_name_": "cloudsync_update_returns",
       "title": "cloudsync_update_returns",
       "default": {},
       "_attrs_order_": [
        "description",
        "path",
        "attributes",
        "schedule",
        "pre_script",
        "post_script",
        "snapshot",
        "include",
        "exclude",
        "args",
        "enabled",
        "bwlimit",
        "transfers",
        "direction",
        "transfer_mode",
        "encryption",
        "filename_encryption",
        "encryption_password",
        "encryption_salt",
        "create_empty_src_dirs",
        "follow_symlinks",
        "id",
        "credentials",
        "job",
        "locked"
       ]
      },
      "cloudsync_abort": {
       "type": "object",
       "properties": {}
      },
      "cloudsync_create_bucket_0": {
       "type": "integer",
       "_name_": "credentials_id",
       "title": "credentials_id"
      },
      "cloudsync_create_bucket_1": {
       "_name_": "name",
       "title": "name",
       "type": "string"
      },
      "cloudsync_create_bucket": {
       "type": "object",
       "properties": {
        "credentials_id": {
         "$ref": "#/components/schemas/cloudsync_create_bucket_0"
        },
        "name": {
         "$ref": "#/components/schemas/cloudsync_create_bucket_1"
        }
       }
      },
      "cloudsync_get_instance_0": {
       "anyOf": [
        {
         "type": "string"
        },
        {
         "type": "integer"
        },
        {
         "type": "boolean"
        },
        {
         "type": "object"
        },
        {
         "type": "array"
        }
       ],
       "nullable": false,
       "_name_": "id",
       "title": "id",
       "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised."
      },
      "cloudsync_get_instance_1": {
       "type": "object",
       "properties": {
        "relationships": {
         "type": "boolean",
         "_name_": "relationships",
         "title": "relationships",
         "default": true
        },
        "extend": {
         "_name_": "extend",
         "title": "extend",
         "default": null,
         "type": "string",
         "nullable": true
        },
        "extend_context": {
         "_name_": "extend_context",
         "title": "extend_context",
         "default": null,
         "type": "string",
         "nullable": true
        },
        "prefix": {
         "_name_": "prefix",
         "title": "prefix",
         "default": null,
         "type": "string",
         "nullable": true
        },
        "extra": {
         "type": "object",
         "properties": {},
         "additionalProperties": true,
         "_name_": "extra",
         "title": "extra",
         "default": {},
         "_attrs_order_": []
        },
        "order_by": {
         "_name_": "order_by",
         "title": "order_by",
         "default": [],
         "type": "array",
         "items": {}
        },
        "select": {
         "_name_": "select",
         "title": "select",
         "default": [],
         "type": "array",
         "items": {}
        },
        "count": {
         "type": "boolean",
         "_name_": "count",
         "title": "count",
         "default": false
        },
        "get": {
         "type": "boolean",
         "_name_": "get",
         "title": "get",
         "default": false
        },
        "offset": {
         "type": "integer",
         "_name_": "offset",
         "title": "offset",
         "default": 0
        },
        "limit": {
         "type": "integer",
         "_name_": "limit",
         "title": "limit",
         "default": 0
        },
        "force_sql_filters": {
         "type": "boolean",
         "_name_": "force_sql_filters",
         "title": "force_sql_filters",
         "default": true
        }
       },
       "additionalProperties": false,
       "_name_": "query-options-get_instance",
       "title": "query-options-get_instance",
       "default": {},
       "_attrs_order_": [
        "relationships",
        "extend",
        "extend_context",
        "prefix",
        "extra",
        "order_by",
        "select",
        "count",
        "get",
        "offset",
        "limit",
        "force_sql_filters"
       ]
      },
      "cloudsync_get_instance": {
       "type": "object",
       "properties": {
        "id": {
         "$ref": "#/components/schemas/cloudsync_get_instance_0"
        },
        "query-options-get_instance": {
         "$ref": "#/components/schemas/cloudsync_get_instance_1"
        }
       }
      },
      "return_schema_of_cloudsync_get_instance": {
       "type": "object",
       "properties": {
        "description": {
         "_name_": "description",
         "title": "description",
         "default": "",
         "type": "string"
        },
        "path": {
         "_name_": "path",
         "title": "path",
         "type": "string"
        },
        "attributes": {
         "type": "object",
         "properties": {},
         "additionalProperties": true,
         "_name_": "attributes",
         "title": "attributes",
         "default": {},
         "_attrs_order_": []
        },
        "schedule": {
         "type": "object",
         "properties": {
          "minute": {
           "_name_": "minute",
           "title": "minute",
           "default": "00",
           "type": "string"
          },
          "hour": {
           "_name_": "hour",
           "title": "hour",
           "default": "*",
           "type": "string"
          },
          "dom": {
           "_name_": "dom",
           "title": "dom",
           "default": "*",
           "type": "string"
          },
          "month": {
           "_name_": "month",
           "title": "month",
           "default": "*",
           "type": "string"
          },
          "dow": {
           "_name_": "dow",
           "title": "dow",
           "default": "*",
           "type": "string"
          }
         },
         "additionalProperties": false,
         "_name_": "schedule",
         "title": "schedule",
         "default": {},
         "_attrs_order_": [
          "minute",
          "hour",
          "dom",
          "month",
          "dow"
         ]
        },
        "pre_script": {
         "_name_": "pre_script",
         "title": "pre_script",
         "default": "",
         "type": "string"
        },
        "post_script": {
         "_name_": "post_script",
         "title": "post_script",
         "default": "",
         "type": "string"
        },
        "snapshot": {
         "type": "boolean",
         "_name_": "snapshot",
         "title": "snapshot",
         "default": false
        },
        "include": {
         "_name_": "include",
         "title": "include",
         "default": [],
         "type": "array",
         "items": {
          "_name_": "path",
          "title": "path",
          "_required_": false,
          "type": "string"
         }
        },
        "exclude": {
         "_name_": "exclude",
         "title": "exclude",
         "default": [],
         "type": "array",
         "items": {
          "_name_": "path",
          "title": "path",
          "_required_": false,
          "type": "string"
         }
        },
        "args": {
         "_name_": "args",
         "title": "args",
         "default": "",
         "type": "string"
        },
        "enabled": {
         "type": "boolean",
         "_name_": "enabled",
         "title": "enabled",
         "default": true
        },
        "bwlimit": {
         "_name_": "bwlimit",
         "title": "bwlimit",
         "default": [],
         "type": "array",
         "items": {
          "type": "object",
          "properties": {
           "time": {
            "_name_": "time",
            "title": "time",
            "_required_": false,
            "type": "string"
           },
           "bandwidth": {
            "type": [
             "integer",
             "null"
            ],
            "_name_": "bandwidth",
            "title": "bandwidth",
            "_required_": false
           }
          },
          "additionalProperties": false,
          "_name_": "cloud_sync_bwlimit",
          "title": "cloud_sync_bwlimit",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "time",
           "bandwidth"
          ]
         }
        },
        "transfers": {
         "type": "integer",
         "_name_": "transfers",
         "title": "transfers",
         "default": null,
         "nullable": true
        },
        "direction": {
         "_name_": "direction",
         "title": "direction",
         "type": "string",
         "enum": [
          "PUSH",
          "PULL"
         ]
        },
        "transfer_mode": {
         "_name_": "transfer_mode",
         "title": "transfer_mode",
         "type": "string",
         "enum": [
          "SYNC",
          "COPY",
          "MOVE"
         ]
        },
        "encryption": {
         "type": "boolean",
         "_name_": "encryption",
         "title": "encryption",
         "default": false
        },
        "filename_encryption": {
         "type": "boolean",
         "_name_": "filename_encryption",
         "title": "filename_encryption",
         "default": false
        },
        "encryption_password": {
         "_name_": "encryption_password",
         "title": "encryption_password",
         "default": "",
         "type": "string"
        },
        "encryption_salt": {
         "_name_": "encryption_salt",
         "title": "encryption_salt",
         "default": "",
         "type": "string"
        },
        "create_empty_src_dirs": {
         "type": "boolean",
         "_name_": "create_empty_src_dirs",
         "title": "create_empty_src_dirs",
         "default": false
        },
        "follow_symlinks": {
         "type": "boolean",
         "_name_": "follow_symlinks",
         "title": "follow_symlinks",
         "default": false
        },
        "id": {
         "type": "integer",
         "_name_": "id",
         "title": "id",
         "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised."
        },
        "credentials": {
         "type": "object",
         "properties": {},
         "additionalProperties": true,
         "_name_": "credentials",
         "title": "credentials",
         "default": {},
         "_attrs_order_": []
        },
        "job": {
         "type": "object",
         "properties": {},
         "additionalProperties": true,
         "_name_": "job",
         "title": "job",
         "default": {},
         "_attrs_order_": []
        },
        "locked": {
         "type": "boolean",
         "_name_": "locked",
         "title": "locked"
        }
       },
       "additionalProperties": false,
       "_name_": "cloud_sync_entry",
       "title": "cloud_sync_entry",
       "default": {},
       "_attrs_order_": [
        "description",
        "path",
        "attributes",
        "schedule",
        "pre_script",
        "post_script",
        "snapshot",
        "include",
        "exclude",
        "args",
        "enabled",
        "bwlimit",
        "transfers",
        "direction",
        "transfer_mode",
        "encryption",
        "filename_encryption",
        "encryption_password",
        "encryption_salt",
        "create_empty_src_dirs",
        "follow_symlinks",
        "id",
        "credentials",
        "job",
        "locked"
       ]
      },
      "cloudsync_list_buckets": {
       "type": "integer",
       "_name_": "credentials_id",
       "title": "credentials_id"
      },
      "cloudsync_list_directory": {
       "type": "object",
       "properties": {
        "credentials": {
         "type": "integer",
         "_name_": "credentials",
         "title": "credentials"
        },
        "encryption": {
         "type": "boolean",
         "_name_": "encryption",
         "title": "encryption",
         "default": false
        },
        "filename_encryption": {
         "type": "boolean",
         "_name_": "filename_encryption",
         "title": "filename_encryption",
         "default": false
        },
        "encryption_password": {
         "_name_": "encryption_password",
         "title": "encryption_password",
         "default": "",
         "type": "string"
        },
        "encryption_salt": {
         "_name_": "encryption_salt",
         "title": "encryption_salt",
         "default": "",
         "type": "string"
        },
        "attributes": {
         "type": "object",
         "properties": {},
         "additionalProperties": true,
         "_name_": "attributes",
         "title": "attributes",
         "default": {},
         "_attrs_order_": [],
         "description": "If remote supports buckets, path is constructed by two keys \"bucket\"/\"folder\" in `attributes`.\nIf remote does not support buckets, path is constructed using \"folder\" key only in `attributes`.\n\"folder\" is directory name and \"bucket\" is bucket name for remote."
        },
        "args": {
         "_name_": "args",
         "title": "args",
         "default": "",
         "type": "string"
        }
       },
       "additionalProperties": false,
       "_name_": "cloud_sync_ls",
       "title": "cloud_sync_ls",
       "default": {},
       "_attrs_order_": [
        "credentials",
        "encryption",
        "filename_encryption",
        "encryption_password",
        "encryption_salt",
        "attributes",
        "args"
       ]
      },
      "cloudsync_onedrive_list_drives": {
       "additionalProperties": false,
       "properties": {
        "client_id": {
         "default": "",
         "title": "client_id",
         "type": "string",
         "_name_": "client_id"
        },
        "client_secret": {
         "default": "",
         "title": "client_secret",
         "type": "string",
         "_name_": "client_secret"
        },
        "token": {
         "minLength": 1,
         "title": "token",
         "type": "string",
         "_name_": "token"
        }
       },
       "required": [
        "token"
       ],
       "title": "onedrive_list_drives",
       "type": "object",
       "_name_": "onedrive_list_drives",
       "_attrs_order_": [
        "client_id",
        "client_secret",
        "token"
       ]
      },
      "return_schema_of_cloudsync_onedrive_list_drives": {
       "items": {
        "additionalProperties": false,
        "properties": {
         "drive_id": {
          "title": "drive_id",
          "type": "string",
          "_name_": "drive_id",
          "_required_": true
         },
         "drive_type": {
          "enum": [
           "PERSONAL",
           "BUSINESS",
           "DOCUMENT_LIBRARY"
          ],
          "title": "drive_type",
          "type": "string",
          "_name_": "drive_type",
          "_required_": true
         },
         "name": {
          "title": "name",
          "type": "string",
          "_name_": "name",
          "_required_": true
         },
         "description": {
          "title": "description",
          "type": "string",
          "_name_": "description",
          "_required_": true
         }
        },
        "required": [
         "drive_id",
         "drive_type",
         "name",
         "description"
        ],
        "title": "CloudSyncOneDriveListDrivesDrive",
        "type": "object",
        "_attrs_order_": [
         "drive_id",
         "drive_type",
         "name",
         "description"
        ]
       },
       "title": "result",
       "type": "array",
       "_name_": "result"
      },
      "cloudsync_restore": {
       "type": "object",
       "properties": {
        "description": {
         "_name_": "description",
         "title": "description",
         "type": "string"
        },
        "transfer_mode": {
         "_name_": "transfer_mode",
         "title": "transfer_mode",
         "type": "string",
         "enum": [
          "SYNC",
          "COPY"
         ]
        },
        "path": {
         "_name_": "path",
         "title": "path",
         "type": "string"
        }
       },
       "additionalProperties": false,
       "_name_": "cloud_sync_restore",
       "title": "cloud_sync_restore",
       "default": {},
       "_attrs_order_": [
        "description",
        "transfer_mode",
        "path"
       ]
      },
      "cloudsync_sync": {
       "type": "object",
       "properties": {
        "dry_run": {
         "type": "boolean",
         "_name_": "dry_run",
         "title": "dry_run",
         "default": false
        }
       },
       "additionalProperties": false,
       "_name_": "cloud_sync_sync_options",
       "title": "cloud_sync_sync_options",
       "default": {},
       "_attrs_order_": [
        "dry_run"
       ]
      },
      "cloudsync_sync_onetime_0": {
       "type": "object",
       "properties": {
        "description": {
         "_name_": "description",
         "title": "description",
         "default": "",
         "type": "string"
        },
        "path": {
         "_name_": "path",
         "title": "path",
         "type": "string"
        },
        "credentials": {
         "type": "integer",
         "_name_": "credentials",
         "title": "credentials"
        },
        "attributes": {
         "type": "object",
         "properties": {},
         "additionalProperties": true,
         "_name_": "attributes",
         "title": "attributes",
         "default": {},
         "_attrs_order_": []
        },
        "schedule": {
         "type": "object",
         "properties": {
          "minute": {
           "_name_": "minute",
           "title": "minute",
           "default": "00",
           "type": "string"
          },
          "hour": {
           "_name_": "hour",
           "title": "hour",
           "default": "*",
           "type": "string"
          },
          "dom": {
           "_name_": "dom",
           "title": "dom",
           "default": "*",
           "type": "string"
          },
          "month": {
           "_name_": "month",
           "title": "month",
           "default": "*",
           "type": "string"
          },
          "dow": {
           "_name_": "dow",
           "title": "dow",
           "default": "*",
           "type": "string"
          }
         },
         "additionalProperties": false,
         "_name_": "schedule",
         "title": "schedule",
         "default": {},
         "_attrs_order_": [
          "minute",
          "hour",
          "dom",
          "month",
          "dow"
         ]
        },
        "pre_script": {
         "_name_": "pre_script",
         "title": "pre_script",
         "default": "",
         "type": "string"
        },
        "post_script": {
         "_name_": "post_script",
         "title": "post_script",
         "default": "",
         "type": "string"
        },
        "snapshot": {
         "type": "boolean",
         "_name_": "snapshot",
         "title": "snapshot",
         "default": false
        },
        "include": {
         "_name_": "include",
         "title": "include",
         "default": [],
         "type": "array",
         "items": {
          "_name_": "path",
          "title": "path",
          "_required_": false,
          "type": "string"
         }
        },
        "exclude": {
         "_name_": "exclude",
         "title": "exclude",
         "default": [],
         "type": "array",
         "items": {
          "_name_": "path",
          "title": "path",
          "_required_": false,
          "type": "string"
         }
        },
        "args": {
         "_name_": "args",
         "title": "args",
         "default": "",
         "type": "string"
        },
        "enabled": {
         "type": "boolean",
         "_name_": "enabled",
         "title": "enabled",
         "default": true
        },
        "bwlimit": {
         "_name_": "bwlimit",
         "title": "bwlimit",
         "default": [],
         "type": "array",
         "items": {
          "type": "object",
          "properties": {
           "time": {
            "_name_": "time",
            "title": "time",
            "_required_": false,
            "type": "string"
           },
           "bandwidth": {
            "type": [
             "integer",
             "null"
            ],
            "_name_": "bandwidth",
            "title": "bandwidth",
            "_required_": false
           }
          },
          "additionalProperties": false,
          "_name_": "cloud_sync_bwlimit",
          "title": "cloud_sync_bwlimit",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "time",
           "bandwidth"
          ]
         }
        },
        "transfers": {
         "type": "integer",
         "_name_": "transfers",
         "title": "transfers",
         "default": null,
         "nullable": true
        },
        "direction": {
         "_name_": "direction",
         "title": "direction",
         "type": "string",
         "enum": [
          "PUSH",
          "PULL"
         ]
        },
        "transfer_mode": {
         "_name_": "transfer_mode",
         "title": "transfer_mode",
         "type": "string",
         "enum": [
          "SYNC",
          "COPY",
          "MOVE"
         ]
        },
        "encryption": {
         "type": "boolean",
         "_name_": "encryption",
         "title": "encryption",
         "default": false
        },
        "filename_encryption": {
         "type": "boolean",
         "_name_": "filename_encryption",
         "title": "filename_encryption",
         "default": false
        },
        "encryption_password": {
         "_name_": "encryption_password",
         "title": "encryption_password",
         "default": "",
         "type": "string"
        },
        "encryption_salt": {
         "_name_": "encryption_salt",
         "title": "encryption_salt",
         "default": "",
         "type": "string"
        },
        "create_empty_src_dirs": {
         "type": "boolean",
         "_name_": "create_empty_src_dirs",
         "title": "create_empty_src_dirs",
         "default": false
        },
        "follow_symlinks": {
         "type": "boolean",
         "_name_": "follow_symlinks",
         "title": "follow_symlinks",
         "default": false
        }
       },
       "additionalProperties": false,
       "_name_": "cloud_sync_sync_onetime",
       "title": "cloud_sync_sync_onetime",
       "default": {},
       "_attrs_order_": [
        "description",
        "path",
        "credentials",
        "attributes",
        "schedule",
        "pre_script",
        "post_script",
        "snapshot",
        "include",
        "exclude",
        "args",
        "enabled",
        "bwlimit",
        "transfers",
        "direction",
        "transfer_mode",
        "encryption",
        "filename_encryption",
        "encryption_password",
        "encryption_salt",
        "create_empty_src_dirs",
        "follow_symlinks"
       ]
      },
      "cloudsync_sync_onetime_1": {
       "type": "object",
       "properties": {
        "dry_run": {
         "type": "boolean",
         "_name_": "dry_run",
         "title": "dry_run",
         "default": false
        }
       },
       "additionalProperties": false,
       "_name_": "cloud_sync_sync_onetime_options",
       "title": "cloud_sync_sync_onetime_options",
       "default": {},
       "_attrs_order_": [
        "dry_run"
       ]
      },
      "cloudsync_sync_onetime": {
       "type": "object",
       "properties": {
        "cloud_sync_sync_onetime": {
         "$ref": "#/components/schemas/cloudsync_sync_onetime_0"
        },
        "cloud_sync_sync_onetime_options": {
         "$ref": "#/components/schemas/cloudsync_sync_onetime_1"
        }
       }
      },
      "return_schema_of_cloudsync_credentials_query": {
       "anyOf": [
        {
         "items": [
          {
           "additionalProperties": false,
           "properties": {
            "id": {
             "title": "id",
             "type": "integer",
             "_name_": "id",
             "_required_": false
            },
            "name": {
             "minLength": 1,
             "title": "name",
             "type": "string",
             "_name_": "name",
             "_required_": false
            },
            "provider": {
             "discriminator": {
              "mapping": {
               "AZUREBLOB": "#/$defs/AzureBlobCredentialsModel",
               "B2": "#/$defs/B2CredentialsModel",
               "BOX": "#/$defs/BoxCredentialsModel",
               "DROPBOX": "#/$defs/DropboxCredentialsModel",
               "FTP": "#/$defs/FTPCredentialsModel",
               "GOOGLE_CLOUD_STORAGE": "#/$defs/GoogleCloudStorageCredentialsModel",
               "GOOGLE_DRIVE": "#/$defs/GoogleDriveCredentialsModel",
               "GOOGLE_PHOTOS": "#/$defs/GooglePhotosCredentialsModel",
               "HTTP": "#/$defs/HTTPCredentialsModel",
               "HUBIC": "#/$defs/HubicCredentialsModel",
               "MEGA": "#/$defs/MegaCredentialsModel",
               "ONEDRIVE": "#/$defs/OneDriveCredentialsModel",
               "OPENSTACK_SWIFT": "#/$defs/SwiftCredentialsModel",
               "PCLOUD": "#/$defs/PCloudCredentialsModel",
               "S3": "#/$defs/S3CredentialsModel",
               "SFTP": "#/$defs/SFTPCredentialsModel",
               "STORJ_IX": "#/$defs/StorjIxCredentialsModel",
               "WEBDAV": "#/$defs/WebDavCredentialsModel",
               "YANDEX": "#/$defs/YandexCredentialsModel"
              },
              "propertyName": "type"
             },
             "oneOf": [
              {},
              {},
              {},
              {},
              {},
              {},
              {},
              {},
              {},
              {},
              {},
              {},
              {},
              {},
              {},
              {},
              {},
              {},
              {}
             ],
             "title": "provider",
             "_name_": "provider",
             "_required_": false
            }
           },
           "title": "CloudCredentialQueryResultItem",
           "type": "object",
           "_attrs_order_": [
            "id",
            "name",
            "provider"
           ]
          }
         ],
         "type": "array"
        },
        {
         "additionalProperties": false,
         "properties": {
          "id": {
           "title": "id",
           "type": "integer",
           "_name_": "id",
           "_required_": false
          },
          "name": {
           "minLength": 1,
           "title": "name",
           "type": "string",
           "_name_": "name",
           "_required_": false
          },
          "provider": {
           "discriminator": {
            "mapping": {
             "AZUREBLOB": "#/$defs/AzureBlobCredentialsModel",
             "B2": "#/$defs/B2CredentialsModel",
             "BOX": "#/$defs/BoxCredentialsModel",
             "DROPBOX": "#/$defs/DropboxCredentialsModel",
             "FTP": "#/$defs/FTPCredentialsModel",
             "GOOGLE_CLOUD_STORAGE": "#/$defs/GoogleCloudStorageCredentialsModel",
             "GOOGLE_DRIVE": "#/$defs/GoogleDriveCredentialsModel",
             "GOOGLE_PHOTOS": "#/$defs/GooglePhotosCredentialsModel",
             "HTTP": "#/$defs/HTTPCredentialsModel",
             "HUBIC": "#/$defs/HubicCredentialsModel",
             "MEGA": "#/$defs/MegaCredentialsModel",
             "ONEDRIVE": "#/$defs/OneDriveCredentialsModel",
             "OPENSTACK_SWIFT": "#/$defs/SwiftCredentialsModel",
             "PCLOUD": "#/$defs/PCloudCredentialsModel",
             "S3": "#/$defs/S3CredentialsModel",
             "SFTP": "#/$defs/SFTPCredentialsModel",
             "STORJ_IX": "#/$defs/StorjIxCredentialsModel",
             "WEBDAV": "#/$defs/WebDavCredentialsModel",
             "YANDEX": "#/$defs/YandexCredentialsModel"
            },
            "propertyName": "type"
           },
           "oneOf": [
            {},
            {},
            {},
            {},
            {},
            {},
            {},
            {},
            {},
            {},
            {},
            {},
            {},
            {},
            {},
            {},
            {},
            {},
            {}
           ],
           "title": "provider",
           "_name_": "provider",
           "_required_": false
          }
         },
         "title": "CloudCredentialQueryResultItem",
         "type": "object",
         "_attrs_order_": [
          "id",
          "name",
          "provider"
         ]
        },
        {
         "type": "integer"
        }
       ],
       "title": "result",
       "_name_": "result"
      },
      "cloudsync_credentials_create": {
       "additionalProperties": false,
       "properties": {
        "name": {
         "minLength": 1,
         "title": "name",
         "type": "string",
         "_name_": "name"
        },
        "provider": {
         "discriminator": {
          "mapping": {
           "AZUREBLOB": "#/$defs/AzureBlobCredentialsModel",
           "B2": "#/$defs/B2CredentialsModel",
           "BOX": "#/$defs/BoxCredentialsModel",
           "DROPBOX": "#/$defs/DropboxCredentialsModel",
           "FTP": "#/$defs/FTPCredentialsModel",
           "GOOGLE_CLOUD_STORAGE": "#/$defs/GoogleCloudStorageCredentialsModel",
           "GOOGLE_DRIVE": "#/$defs/GoogleDriveCredentialsModel",
           "GOOGLE_PHOTOS": "#/$defs/GooglePhotosCredentialsModel",
           "HTTP": "#/$defs/HTTPCredentialsModel",
           "HUBIC": "#/$defs/HubicCredentialsModel",
           "MEGA": "#/$defs/MegaCredentialsModel",
           "ONEDRIVE": "#/$defs/OneDriveCredentialsModel",
           "OPENSTACK_SWIFT": "#/$defs/SwiftCredentialsModel",
           "PCLOUD": "#/$defs/PCloudCredentialsModel",
           "S3": "#/$defs/S3CredentialsModel",
           "SFTP": "#/$defs/SFTPCredentialsModel",
           "STORJ_IX": "#/$defs/StorjIxCredentialsModel",
           "WEBDAV": "#/$defs/WebDavCredentialsModel",
           "YANDEX": "#/$defs/YandexCredentialsModel"
          },
          "propertyName": "type"
         },
         "oneOf": [
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {}
         ],
         "title": "provider",
         "_name_": "provider"
        }
       },
       "required": [
        "name",
        "provider"
       ],
       "title": "cloud_sync_credentials_create",
       "type": "object",
       "_name_": "cloud_sync_credentials_create",
       "_attrs_order_": [
        "name",
        "provider"
       ]
      },
      "return_schema_of_cloudsync_credentials_create": {
       "additionalProperties": false,
       "properties": {
        "id": {
         "title": "id",
         "type": "integer",
         "_name_": "id"
        },
        "name": {
         "minLength": 1,
         "title": "name",
         "type": "string",
         "_name_": "name"
        },
        "provider": {
         "discriminator": {
          "mapping": {
           "AZUREBLOB": "#/$defs/AzureBlobCredentialsModel",
           "B2": "#/$defs/B2CredentialsModel",
           "BOX": "#/$defs/BoxCredentialsModel",
           "DROPBOX": "#/$defs/DropboxCredentialsModel",
           "FTP": "#/$defs/FTPCredentialsModel",
           "GOOGLE_CLOUD_STORAGE": "#/$defs/GoogleCloudStorageCredentialsModel",
           "GOOGLE_DRIVE": "#/$defs/GoogleDriveCredentialsModel",
           "GOOGLE_PHOTOS": "#/$defs/GooglePhotosCredentialsModel",
           "HTTP": "#/$defs/HTTPCredentialsModel",
           "HUBIC": "#/$defs/HubicCredentialsModel",
           "MEGA": "#/$defs/MegaCredentialsModel",
           "ONEDRIVE": "#/$defs/OneDriveCredentialsModel",
           "OPENSTACK_SWIFT": "#/$defs/SwiftCredentialsModel",
           "PCLOUD": "#/$defs/PCloudCredentialsModel",
           "S3": "#/$defs/S3CredentialsModel",
           "SFTP": "#/$defs/SFTPCredentialsModel",
           "STORJ_IX": "#/$defs/StorjIxCredentialsModel",
           "WEBDAV": "#/$defs/WebDavCredentialsModel",
           "YANDEX": "#/$defs/YandexCredentialsModel"
          },
          "propertyName": "type"
         },
         "oneOf": [
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {}
         ],
         "title": "provider",
         "_name_": "provider"
        }
       },
       "required": [
        "id",
        "name",
        "provider"
       ],
       "title": "result",
       "type": "object",
       "_name_": "result",
       "_attrs_order_": [
        "id",
        "name",
        "provider"
       ]
      },
      "return_schema_of_cloudsync_credentials_delete": {
       "title": "result",
       "type": "boolean",
       "_name_": "result"
      },
      "cloudsync_credentials_update": {
       "additionalProperties": false,
       "properties": {
        "name": {
         "minLength": 1,
         "title": "name",
         "type": "string",
         "_name_": "name"
        },
        "provider": {
         "discriminator": {
          "mapping": {
           "AZUREBLOB": "#/$defs/AzureBlobCredentialsModel",
           "B2": "#/$defs/B2CredentialsModel",
           "BOX": "#/$defs/BoxCredentialsModel",
           "DROPBOX": "#/$defs/DropboxCredentialsModel",
           "FTP": "#/$defs/FTPCredentialsModel",
           "GOOGLE_CLOUD_STORAGE": "#/$defs/GoogleCloudStorageCredentialsModel",
           "GOOGLE_DRIVE": "#/$defs/GoogleDriveCredentialsModel",
           "GOOGLE_PHOTOS": "#/$defs/GooglePhotosCredentialsModel",
           "HTTP": "#/$defs/HTTPCredentialsModel",
           "HUBIC": "#/$defs/HubicCredentialsModel",
           "MEGA": "#/$defs/MegaCredentialsModel",
           "ONEDRIVE": "#/$defs/OneDriveCredentialsModel",
           "OPENSTACK_SWIFT": "#/$defs/SwiftCredentialsModel",
           "PCLOUD": "#/$defs/PCloudCredentialsModel",
           "S3": "#/$defs/S3CredentialsModel",
           "SFTP": "#/$defs/SFTPCredentialsModel",
           "STORJ_IX": "#/$defs/StorjIxCredentialsModel",
           "WEBDAV": "#/$defs/WebDavCredentialsModel",
           "YANDEX": "#/$defs/YandexCredentialsModel"
          },
          "propertyName": "type"
         },
         "oneOf": [
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {}
         ],
         "title": "provider",
         "_name_": "provider"
        }
       },
       "title": "cloud_sync_credentials_update",
       "type": "object",
       "_name_": "cloud_sync_credentials_update",
       "_attrs_order_": [
        "name",
        "provider"
       ]
      },
      "return_schema_of_cloudsync_credentials_update": {
       "additionalProperties": false,
       "properties": {
        "id": {
         "title": "id",
         "type": "integer",
         "_name_": "id"
        },
        "name": {
         "minLength": 1,
         "title": "name",
         "type": "string",
         "_name_": "name"
        },
        "provider": {
         "discriminator": {
          "mapping": {
           "AZUREBLOB": "#/$defs/AzureBlobCredentialsModel",
           "B2": "#/$defs/B2CredentialsModel",
           "BOX": "#/$defs/BoxCredentialsModel",
           "DROPBOX": "#/$defs/DropboxCredentialsModel",
           "FTP": "#/$defs/FTPCredentialsModel",
           "GOOGLE_CLOUD_STORAGE": "#/$defs/GoogleCloudStorageCredentialsModel",
           "GOOGLE_DRIVE": "#/$defs/GoogleDriveCredentialsModel",
           "GOOGLE_PHOTOS": "#/$defs/GooglePhotosCredentialsModel",
           "HTTP": "#/$defs/HTTPCredentialsModel",
           "HUBIC": "#/$defs/HubicCredentialsModel",
           "MEGA": "#/$defs/MegaCredentialsModel",
           "ONEDRIVE": "#/$defs/OneDriveCredentialsModel",
           "OPENSTACK_SWIFT": "#/$defs/SwiftCredentialsModel",
           "PCLOUD": "#/$defs/PCloudCredentialsModel",
           "S3": "#/$defs/S3CredentialsModel",
           "SFTP": "#/$defs/SFTPCredentialsModel",
           "STORJ_IX": "#/$defs/StorjIxCredentialsModel",
           "WEBDAV": "#/$defs/WebDavCredentialsModel",
           "YANDEX": "#/$defs/YandexCredentialsModel"
          },
          "propertyName": "type"
         },
         "oneOf": [
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {}
         ],
         "title": "provider",
         "_name_": "provider"
        }
       },
       "required": [
        "id",
        "name",
        "provider"
       ],
       "title": "result",
       "type": "object",
       "_name_": "result",
       "_attrs_order_": [
        "id",
        "name",
        "provider"
       ]
      },
      "cloudsync_credentials_get_instance_0": {
       "title": "id",
       "type": "integer",
       "_name_": "id"
      },
      "cloudsync_credentials_get_instance_1": {
       "additionalProperties": false,
       "properties": {
        "relationships": {
         "default": true,
         "title": "relationships",
         "type": "boolean",
         "_name_": "relationships"
        },
        "extend": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "extend",
         "_name_": "extend"
        },
        "extend_context": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "extend_context",
         "_name_": "extend_context"
        },
        "prefix": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "prefix",
         "_name_": "prefix"
        },
        "extra": {
         "default": {},
         "title": "extra",
         "type": "object",
         "_name_": "extra"
        },
        "order_by": {
         "default": [],
         "items": {
          "type": "string"
         },
         "title": "order_by",
         "type": "array",
         "_name_": "order_by"
        },
        "select": {
         "default": [],
         "items": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "items": [
             {}
            ],
            "type": "array"
           }
          ]
         },
         "title": "select",
         "type": "array",
         "_name_": "select"
        },
        "count": {
         "default": false,
         "title": "count",
         "type": "boolean",
         "_name_": "count"
        },
        "get": {
         "default": false,
         "title": "get",
         "type": "boolean",
         "_name_": "get"
        },
        "offset": {
         "default": 0,
         "title": "offset",
         "type": "integer",
         "_name_": "offset"
        },
        "limit": {
         "default": 0,
         "title": "limit",
         "type": "integer",
         "_name_": "limit"
        },
        "force_sql_filters": {
         "default": false,
         "title": "force_sql_filters",
         "type": "boolean",
         "_name_": "force_sql_filters"
        }
       },
       "title": "options",
       "type": "object",
       "default": {},
       "_name_": "options",
       "_attrs_order_": [
        "relationships",
        "extend",
        "extend_context",
        "prefix",
        "extra",
        "order_by",
        "select",
        "count",
        "get",
        "offset",
        "limit",
        "force_sql_filters"
       ]
      },
      "cloudsync_credentials_get_instance": {
       "type": "object",
       "properties": {
        "id": {
         "$ref": "#/components/schemas/cloudsync_credentials_get_instance_0"
        },
        "options": {
         "$ref": "#/components/schemas/cloudsync_credentials_get_instance_1"
        }
       }
      },
      "return_schema_of_cloudsync_credentials_get_instance": {
       "additionalProperties": false,
       "properties": {
        "id": {
         "title": "id",
         "type": "integer",
         "_name_": "id"
        },
        "name": {
         "minLength": 1,
         "title": "name",
         "type": "string",
         "_name_": "name"
        },
        "provider": {
         "discriminator": {
          "mapping": {
           "AZUREBLOB": "#/$defs/AzureBlobCredentialsModel",
           "B2": "#/$defs/B2CredentialsModel",
           "BOX": "#/$defs/BoxCredentialsModel",
           "DROPBOX": "#/$defs/DropboxCredentialsModel",
           "FTP": "#/$defs/FTPCredentialsModel",
           "GOOGLE_CLOUD_STORAGE": "#/$defs/GoogleCloudStorageCredentialsModel",
           "GOOGLE_DRIVE": "#/$defs/GoogleDriveCredentialsModel",
           "GOOGLE_PHOTOS": "#/$defs/GooglePhotosCredentialsModel",
           "HTTP": "#/$defs/HTTPCredentialsModel",
           "HUBIC": "#/$defs/HubicCredentialsModel",
           "MEGA": "#/$defs/MegaCredentialsModel",
           "ONEDRIVE": "#/$defs/OneDriveCredentialsModel",
           "OPENSTACK_SWIFT": "#/$defs/SwiftCredentialsModel",
           "PCLOUD": "#/$defs/PCloudCredentialsModel",
           "S3": "#/$defs/S3CredentialsModel",
           "SFTP": "#/$defs/SFTPCredentialsModel",
           "STORJ_IX": "#/$defs/StorjIxCredentialsModel",
           "WEBDAV": "#/$defs/WebDavCredentialsModel",
           "YANDEX": "#/$defs/YandexCredentialsModel"
          },
          "propertyName": "type"
         },
         "oneOf": [
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {}
         ],
         "title": "provider",
         "_name_": "provider"
        }
       },
       "required": [
        "id",
        "name",
        "provider"
       ],
       "title": "result",
       "type": "object",
       "_name_": "result",
       "_attrs_order_": [
        "id",
        "name",
        "provider"
       ]
      },
      "cloudsync_credentials_verify": {
       "discriminator": {
        "mapping": {
         "AZUREBLOB": "#/$defs/AzureBlobCredentialsModel",
         "B2": "#/$defs/B2CredentialsModel",
         "BOX": "#/$defs/BoxCredentialsModel",
         "DROPBOX": "#/$defs/DropboxCredentialsModel",
         "FTP": "#/$defs/FTPCredentialsModel",
         "GOOGLE_CLOUD_STORAGE": "#/$defs/GoogleCloudStorageCredentialsModel",
         "GOOGLE_DRIVE": "#/$defs/GoogleDriveCredentialsModel",
         "GOOGLE_PHOTOS": "#/$defs/GooglePhotosCredentialsModel",
         "HTTP": "#/$defs/HTTPCredentialsModel",
         "HUBIC": "#/$defs/HubicCredentialsModel",
         "MEGA": "#/$defs/MegaCredentialsModel",
         "ONEDRIVE": "#/$defs/OneDriveCredentialsModel",
         "OPENSTACK_SWIFT": "#/$defs/SwiftCredentialsModel",
         "PCLOUD": "#/$defs/PCloudCredentialsModel",
         "S3": "#/$defs/S3CredentialsModel",
         "SFTP": "#/$defs/SFTPCredentialsModel",
         "STORJ_IX": "#/$defs/StorjIxCredentialsModel",
         "WEBDAV": "#/$defs/WebDavCredentialsModel",
         "YANDEX": "#/$defs/YandexCredentialsModel"
        },
        "propertyName": "type"
       },
       "oneOf": [
        {
         "additionalProperties": false,
         "properties": {
          "type": {
           "const": "AZUREBLOB",
           "enum": [
            "AZUREBLOB"
           ],
           "title": "type",
           "type": "string",
           "_name_": "type",
           "_required_": true
          },
          "account": {
           "minLength": 1,
           "title": "account",
           "type": "string",
           "_name_": "account",
           "_required_": true
          },
          "key": {
           "minLength": 1,
           "title": "key",
           "type": "string",
           "_name_": "key",
           "_required_": true
          },
          "endpoint": {
           "anyOf": [
            {
             "const": "",
             "enum": [
              ""
             ],
             "type": "string"
            },
            {
             "format": "uri",
             "maxLength": 2083,
             "minLength": 1,
             "type": "string"
            }
           ],
           "default": "",
           "title": "endpoint",
           "_name_": "endpoint",
           "_required_": false
          }
         },
         "required": [
          "type",
          "account",
          "key"
         ],
         "title": "AzureBlobCredentialsModel",
         "type": "object",
         "_attrs_order_": [
          "type",
          "account",
          "key",
          "endpoint"
         ]
        },
        {
         "additionalProperties": false,
         "properties": {
          "type": {
           "const": "B2",
           "enum": [
            "B2"
           ],
           "title": "type",
           "type": "string",
           "_name_": "type",
           "_required_": true
          },
          "account": {
           "minLength": 1,
           "title": "account",
           "type": "string",
           "_name_": "account",
           "_required_": true
          },
          "key": {
           "minLength": 1,
           "title": "key",
           "type": "string",
           "_name_": "key",
           "_required_": true
          }
         },
         "required": [
          "type",
          "account",
          "key"
         ],
         "title": "B2CredentialsModel",
         "type": "object",
         "_attrs_order_": [
          "type",
          "account",
          "key"
         ]
        },
        {
         "additionalProperties": false,
         "properties": {
          "type": {
           "const": "BOX",
           "enum": [
            "BOX"
           ],
           "title": "type",
           "type": "string",
           "_name_": "type",
           "_required_": true
          },
          "client_id": {
           "default": "",
           "title": "client_id",
           "type": "string",
           "_name_": "client_id",
           "_required_": false
          },
          "client_secret": {
           "default": "",
           "title": "client_secret",
           "type": "string",
           "_name_": "client_secret",
           "_required_": false
          },
          "token": {
           "minLength": 1,
           "title": "token",
           "type": "string",
           "_name_": "token",
           "_required_": true
          }
         },
         "required": [
          "type",
          "token"
         ],
         "title": "BoxCredentialsModel",
         "type": "object",
         "_attrs_order_": [
          "type",
          "client_id",
          "client_secret",
          "token"
         ]
        },
        {
         "additionalProperties": false,
         "properties": {
          "type": {
           "const": "DROPBOX",
           "enum": [
            "DROPBOX"
           ],
           "title": "type",
           "type": "string",
           "_name_": "type",
           "_required_": true
          },
          "client_id": {
           "default": "",
           "title": "client_id",
           "type": "string",
           "_name_": "client_id",
           "_required_": false
          },
          "client_secret": {
           "default": "",
           "title": "client_secret",
           "type": "string",
           "_name_": "client_secret",
           "_required_": false
          },
          "token": {
           "minLength": 1,
           "title": "token",
           "type": "string",
           "_name_": "token",
           "_required_": true
          }
         },
         "required": [
          "type",
          "token"
         ],
         "title": "DropboxCredentialsModel",
         "type": "object",
         "_attrs_order_": [
          "type",
          "client_id",
          "client_secret",
          "token"
         ]
        },
        {
         "additionalProperties": false,
         "properties": {
          "type": {
           "const": "FTP",
           "enum": [
            "FTP"
           ],
           "title": "type",
           "type": "string",
           "_name_": "type",
           "_required_": true
          },
          "host": {
           "minLength": 1,
           "title": "host",
           "type": "string",
           "_name_": "host",
           "_required_": true
          },
          "port": {
           "default": 21,
           "title": "port",
           "type": "integer",
           "_name_": "port",
           "_required_": false
          },
          "user": {
           "minLength": 1,
           "title": "user",
           "type": "string",
           "_name_": "user",
           "_required_": true
          },
          "pass": {
           "title": "pass",
           "type": "string",
           "_name_": "pass",
           "_required_": true
          }
         },
         "required": [
          "type",
          "host",
          "user",
          "pass"
         ],
         "title": "FTPCredentialsModel",
         "type": "object",
         "_attrs_order_": [
          "type",
          "host",
          "port",
          "user",
          "pass"
         ]
        },
        {
         "additionalProperties": false,
         "properties": {
          "type": {
           "const": "GOOGLE_CLOUD_STORAGE",
           "enum": [
            "GOOGLE_CLOUD_STORAGE"
           ],
           "title": "type",
           "type": "string",
           "_name_": "type",
           "_required_": true
          },
          "service_account_credentials": {
           "minLength": 1,
           "title": "service_account_credentials",
           "type": "string",
           "_name_": "service_account_credentials",
           "_required_": true
          }
         },
         "required": [
          "type",
          "service_account_credentials"
         ],
         "title": "GoogleCloudStorageCredentialsModel",
         "type": "object",
         "_attrs_order_": [
          "type",
          "service_account_credentials"
         ]
        },
        {
         "additionalProperties": false,
         "properties": {
          "type": {
           "const": "GOOGLE_DRIVE",
           "enum": [
            "GOOGLE_DRIVE"
           ],
           "title": "type",
           "type": "string",
           "_name_": "type",
           "_required_": true
          },
          "client_id": {
           "default": "",
           "title": "client_id",
           "type": "string",
           "_name_": "client_id",
           "_required_": false
          },
          "client_secret": {
           "default": "",
           "title": "client_secret",
           "type": "string",
           "_name_": "client_secret",
           "_required_": false
          },
          "token": {
           "minLength": 1,
           "title": "token",
           "type": "string",
           "_name_": "token",
           "_required_": true
          },
          "team_drive": {
           "default": "",
           "title": "team_drive",
           "type": "string",
           "_name_": "team_drive",
           "_required_": false
          }
         },
         "required": [
          "type",
          "token"
         ],
         "title": "GoogleDriveCredentialsModel",
         "type": "object",
         "_attrs_order_": [
          "type",
          "client_id",
          "client_secret",
          "token",
          "team_drive"
         ]
        },
        {
         "additionalProperties": false,
         "properties": {
          "type": {
           "const": "GOOGLE_PHOTOS",
           "enum": [
            "GOOGLE_PHOTOS"
           ],
           "title": "type",
           "type": "string",
           "_name_": "type",
           "_required_": true
          },
          "client_id": {
           "default": "",
           "title": "client_id",
           "type": "string",
           "_name_": "client_id",
           "_required_": false
          },
          "client_secret": {
           "default": "",
           "title": "client_secret",
           "type": "string",
           "_name_": "client_secret",
           "_required_": false
          },
          "token": {
           "minLength": 1,
           "title": "token",
           "type": "string",
           "_name_": "token",
           "_required_": true
          }
         },
         "required": [
          "type",
          "token"
         ],
         "title": "GooglePhotosCredentialsModel",
         "type": "object",
         "_attrs_order_": [
          "type",
          "client_id",
          "client_secret",
          "token"
         ]
        },
        {
         "additionalProperties": false,
         "properties": {
          "type": {
           "const": "HTTP",
           "enum": [
            "HTTP"
           ],
           "title": "type",
           "type": "string",
           "_name_": "type",
           "_required_": true
          },
          "url": {
           "format": "uri",
           "maxLength": 2083,
           "minLength": 1,
           "title": "url",
           "type": "string",
           "_name_": "url",
           "_required_": true
          }
         },
         "required": [
          "type",
          "url"
         ],
         "title": "HTTPCredentialsModel",
         "type": "object",
         "_attrs_order_": [
          "type",
          "url"
         ]
        },
        {
         "additionalProperties": false,
         "properties": {
          "type": {
           "const": "HUBIC",
           "enum": [
            "HUBIC"
           ],
           "title": "type",
           "type": "string",
           "_name_": "type",
           "_required_": true
          },
          "token": {
           "minLength": 1,
           "title": "token",
           "type": "string",
           "_name_": "token",
           "_required_": true
          }
         },
         "required": [
          "type",
          "token"
         ],
         "title": "HubicCredentialsModel",
         "type": "object",
         "_attrs_order_": [
          "type",
          "token"
         ]
        },
        {
         "additionalProperties": false,
         "properties": {
          "type": {
           "const": "MEGA",
           "enum": [
            "MEGA"
           ],
           "title": "type",
           "type": "string",
           "_name_": "type",
           "_required_": true
          },
          "user": {
           "minLength": 1,
           "title": "user",
           "type": "string",
           "_name_": "user",
           "_required_": true
          },
          "pass": {
           "minLength": 1,
           "title": "pass",
           "type": "string",
           "_name_": "pass",
           "_required_": true
          }
         },
         "required": [
          "type",
          "user",
          "pass"
         ],
         "title": "MegaCredentialsModel",
         "type": "object",
         "_attrs_order_": [
          "type",
          "user",
          "pass"
         ]
        },
        {
         "additionalProperties": false,
         "properties": {
          "type": {
           "const": "ONEDRIVE",
           "enum": [
            "ONEDRIVE"
           ],
           "title": "type",
           "type": "string",
           "_name_": "type",
           "_required_": true
          },
          "client_id": {
           "default": "",
           "title": "client_id",
           "type": "string",
           "_name_": "client_id",
           "_required_": false
          },
          "client_secret": {
           "default": "",
           "title": "client_secret",
           "type": "string",
           "_name_": "client_secret",
           "_required_": false
          },
          "token": {
           "minLength": 1,
           "title": "token",
           "type": "string",
           "_name_": "token",
           "_required_": true
          },
          "drive_type": {
           "enum": [
            "PERSONAL",
            "BUSINESS",
            "DOCUMENT_LIBRARY"
           ],
           "title": "drive_type",
           "type": "string",
           "_name_": "drive_type",
           "_required_": true
          },
          "drive_id": {
           "title": "drive_id",
           "type": "string",
           "_name_": "drive_id",
           "_required_": true
          }
         },
         "required": [
          "type",
          "token",
          "drive_type",
          "drive_id"
         ],
         "title": "OneDriveCredentialsModel",
         "type": "object",
         "_attrs_order_": [
          "type",
          "client_id",
          "client_secret",
          "token",
          "drive_type",
          "drive_id"
         ]
        },
        {
         "additionalProperties": false,
         "properties": {
          "type": {
           "const": "PCLOUD",
           "enum": [
            "PCLOUD"
           ],
           "title": "type",
           "type": "string",
           "_name_": "type",
           "_required_": true
          },
          "client_id": {
           "default": "",
           "title": "client_id",
           "type": "string",
           "_name_": "client_id",
           "_required_": false
          },
          "client_secret": {
           "default": "",
           "title": "client_secret",
           "type": "string",
           "_name_": "client_secret",
           "_required_": false
          },
          "token": {
           "minLength": 1,
           "title": "token",
           "type": "string",
           "_name_": "token",
           "_required_": true
          },
          "hostname": {
           "default": "",
           "title": "hostname",
           "type": "string",
           "_name_": "hostname",
           "_required_": false
          }
         },
         "required": [
          "type",
          "token"
         ],
         "title": "PCloudCredentialsModel",
         "type": "object",
         "_attrs_order_": [
          "type",
          "client_id",
          "client_secret",
          "token",
          "hostname"
         ]
        },
        {
         "additionalProperties": false,
         "properties": {
          "type": {
           "const": "S3",
           "enum": [
            "S3"
           ],
           "title": "type",
           "type": "string",
           "_name_": "type",
           "_required_": true
          },
          "access_key_id": {
           "minLength": 1,
           "title": "access_key_id",
           "type": "string",
           "_name_": "access_key_id",
           "_required_": true
          },
          "secret_access_key": {
           "minLength": 1,
           "title": "secret_access_key",
           "type": "string",
           "_name_": "secret_access_key",
           "_required_": true
          },
          "endpoint": {
           "default": "",
           "title": "endpoint",
           "type": "string",
           "_name_": "endpoint",
           "_required_": false
          },
          "region": {
           "default": "",
           "title": "region",
           "type": "string",
           "_name_": "region",
           "_required_": false
          },
          "skip_region": {
           "default": false,
           "title": "skip_region",
           "type": "boolean",
           "_name_": "skip_region",
           "_required_": false
          },
          "signatures_v2": {
           "default": false,
           "title": "signatures_v2",
           "type": "boolean",
           "_name_": "signatures_v2",
           "_required_": false
          },
          "max_upload_parts": {
           "default": 10000,
           "title": "max_upload_parts",
           "type": "integer",
           "_name_": "max_upload_parts",
           "_required_": false
          }
         },
         "required": [
          "type",
          "access_key_id",
          "secret_access_key"
         ],
         "title": "S3CredentialsModel",
         "type": "object",
         "_attrs_order_": [
          "type",
          "access_key_id",
          "secret_access_key",
          "endpoint",
          "region",
          "skip_region",
          "signatures_v2",
          "max_upload_parts"
         ]
        },
        {
         "additionalProperties": false,
         "properties": {
          "type": {
           "const": "SFTP",
           "enum": [
            "SFTP"
           ],
           "title": "type",
           "type": "string",
           "_name_": "type",
           "_required_": true
          },
          "host": {
           "minLength": 1,
           "title": "host",
           "type": "string",
           "_name_": "host",
           "_required_": true
          },
          "port": {
           "default": 22,
           "title": "port",
           "type": "integer",
           "_name_": "port",
           "_required_": false
          },
          "user": {
           "minLength": 1,
           "title": "user",
           "type": "string",
           "_name_": "user",
           "_required_": true
          },
          "pass": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "null"
            }
           ],
           "default": null,
           "title": "pass",
           "_name_": "pass",
           "_required_": false
          },
          "private_key": {
           "anyOf": [
            {
             "type": "integer"
            },
            {
             "type": "null"
            }
           ],
           "default": null,
           "title": "private_key",
           "_name_": "private_key",
           "_required_": false
          }
         },
         "required": [
          "type",
          "host",
          "user"
         ],
         "title": "SFTPCredentialsModel",
         "type": "object",
         "_attrs_order_": [
          "type",
          "host",
          "port",
          "user",
          "pass",
          "private_key"
         ]
        },
        {
         "additionalProperties": false,
         "properties": {
          "type": {
           "const": "STORJ_IX",
           "enum": [
            "STORJ_IX"
           ],
           "title": "type",
           "type": "string",
           "_name_": "type",
           "_required_": true
          },
          "access_key_id": {
           "minLength": 1,
           "title": "access_key_id",
           "type": "string",
           "_name_": "access_key_id",
           "_required_": true
          },
          "secret_access_key": {
           "minLength": 1,
           "title": "secret_access_key",
           "type": "string",
           "_name_": "secret_access_key",
           "_required_": true
          }
         },
         "required": [
          "type",
          "access_key_id",
          "secret_access_key"
         ],
         "title": "StorjIxCredentialsModel",
         "type": "object",
         "_attrs_order_": [
          "type",
          "access_key_id",
          "secret_access_key"
         ]
        },
        {
         "additionalProperties": false,
         "properties": {
          "type": {
           "const": "OPENSTACK_SWIFT",
           "enum": [
            "OPENSTACK_SWIFT"
           ],
           "title": "type",
           "type": "string",
           "_name_": "type",
           "_required_": true
          },
          "user": {
           "minLength": 1,
           "title": "user",
           "type": "string",
           "_name_": "user",
           "_required_": true
          },
          "key": {
           "minLength": 1,
           "title": "key",
           "type": "string",
           "_name_": "key",
           "_required_": true
          },
          "auth": {
           "minLength": 1,
           "title": "auth",
           "type": "string",
           "_name_": "auth",
           "_required_": true
          },
          "user_id": {
           "default": "",
           "title": "user_id",
           "type": "string",
           "_name_": "user_id",
           "_required_": false
          },
          "domain": {
           "default": "",
           "title": "domain",
           "type": "string",
           "_name_": "domain",
           "_required_": false
          },
          "tenant": {
           "default": "",
           "title": "tenant",
           "type": "string",
           "_name_": "tenant",
           "_required_": false
          },
          "tenant_id": {
           "default": "",
           "title": "tenant_id",
           "type": "string",
           "_name_": "tenant_id",
           "_required_": false
          },
          "tenant_domain": {
           "default": "",
           "title": "tenant_domain",
           "type": "string",
           "_name_": "tenant_domain",
           "_required_": false
          },
          "region": {
           "default": "",
           "title": "region",
           "type": "string",
           "_name_": "region",
           "_required_": false
          },
          "storage_url": {
           "default": "",
           "title": "storage_url",
           "type": "string",
           "_name_": "storage_url",
           "_required_": false
          },
          "auth_token": {
           "default": "",
           "title": "auth_token",
           "type": "string",
           "_name_": "auth_token",
           "_required_": false
          },
          "application_credential_id": {
           "default": "",
           "title": "application_credential_id",
           "type": "string",
           "_name_": "application_credential_id",
           "_required_": false
          },
          "application_credential_name": {
           "default": "",
           "title": "application_credential_name",
           "type": "string",
           "_name_": "application_credential_name",
           "_required_": false
          },
          "application_credential_secret": {
           "default": "",
           "title": "application_credential_secret",
           "type": "string",
           "_name_": "application_credential_secret",
           "_required_": false
          },
          "auth_version": {
           "anyOf": [
            {
             "enum": [
              0,
              1,
              2,
              3
             ],
             "type": "integer"
            },
            {
             "type": "null"
            }
           ],
           "title": "auth_version",
           "_name_": "auth_version",
           "_required_": true
          },
          "endpoint_type": {
           "anyOf": [
            {
             "enum": [
              "public",
              "internal",
              "admin"
             ],
             "type": "string"
            },
            {
             "type": "null"
            }
           ],
           "title": "endpoint_type",
           "_name_": "endpoint_type",
           "_required_": true
          }
         },
         "required": [
          "type",
          "user",
          "key",
          "auth",
          "auth_version",
          "endpoint_type"
         ],
         "title": "SwiftCredentialsModel",
         "type": "object",
         "_attrs_order_": [
          "type",
          "user",
          "key",
          "auth",
          "user_id",
          "domain",
          "tenant",
          "tenant_id",
          "tenant_domain",
          "region",
          "storage_url",
          "auth_token",
          "application_credential_id",
          "application_credential_name",
          "application_credential_secret",
          "auth_version",
          "endpoint_type"
         ]
        },
        {
         "additionalProperties": false,
         "properties": {
          "type": {
           "const": "WEBDAV",
           "enum": [
            "WEBDAV"
           ],
           "title": "type",
           "type": "string",
           "_name_": "type",
           "_required_": true
          },
          "url": {
           "format": "uri",
           "maxLength": 2083,
           "minLength": 1,
           "title": "url",
           "type": "string",
           "_name_": "url",
           "_required_": true
          },
          "vendor": {
           "enum": [
            "NEXTCLOUD",
            "OWNCLOUD",
            "SHAREPOINT",
            "OTHER"
           ],
           "title": "vendor",
           "type": "string",
           "_name_": "vendor",
           "_required_": true
          },
          "user": {
           "title": "user",
           "type": "string",
           "_name_": "user",
           "_required_": true
          },
          "pass": {
           "title": "pass",
           "type": "string",
           "_name_": "pass",
           "_required_": true
          }
         },
         "required": [
          "type",
          "url",
          "vendor",
          "user",
          "pass"
         ],
         "title": "WebDavCredentialsModel",
         "type": "object",
         "_attrs_order_": [
          "type",
          "url",
          "vendor",
          "user",
          "pass"
         ]
        },
        {
         "additionalProperties": false,
         "properties": {
          "type": {
           "const": "YANDEX",
           "enum": [
            "YANDEX"
           ],
           "title": "type",
           "type": "string",
           "_name_": "type",
           "_required_": true
          },
          "client_id": {
           "default": "",
           "title": "client_id",
           "type": "string",
           "_name_": "client_id",
           "_required_": false
          },
          "client_secret": {
           "default": "",
           "title": "client_secret",
           "type": "string",
           "_name_": "client_secret",
           "_required_": false
          },
          "token": {
           "minLength": 1,
           "title": "token",
           "type": "string",
           "_name_": "token",
           "_required_": true
          }
         },
         "required": [
          "type",
          "token"
         ],
         "title": "YandexCredentialsModel",
         "type": "object",
         "_attrs_order_": [
          "type",
          "client_id",
          "client_secret",
          "token"
         ]
        }
       ],
       "title": "cloud_sync_credentials_create",
       "_name_": "cloud_sync_credentials_create"
      },
      "return_schema_of_cloudsync_credentials_verify": {
       "additionalProperties": false,
       "properties": {
        "valid": {
         "title": "valid",
         "type": "boolean",
         "_name_": "valid"
        },
        "error": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "error",
         "_name_": "error"
        },
        "excerpt": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "excerpt",
         "_name_": "excerpt"
        }
       },
       "required": [
        "valid"
       ],
       "title": "result",
       "type": "object",
       "_name_": "result",
       "_attrs_order_": [
        "valid",
        "error",
        "excerpt"
       ]
      },
      "config_reset": {
       "additionalProperties": false,
       "properties": {
        "reboot": {
         "default": true,
         "title": "reboot",
         "type": "boolean",
         "_name_": "reboot"
        }
       },
       "title": "options",
       "type": "object",
       "default": {
        "reboot": true
       },
       "_name_": "options",
       "_attrs_order_": [
        "reboot"
       ]
      },
      "return_schema_of_config_reset": {
       "title": "result",
       "type": "null",
       "_name_": "result"
      },
      "config_save": {
       "additionalProperties": false,
       "properties": {
        "secretseed": {
         "default": false,
         "title": "secretseed",
         "type": "boolean",
         "_name_": "secretseed"
        },
        "pool_keys": {
         "default": false,
         "title": "pool_keys",
         "type": "boolean",
         "_name_": "pool_keys"
        },
        "root_authorized_keys": {
         "default": false,
         "title": "root_authorized_keys",
         "type": "boolean",
         "_name_": "root_authorized_keys"
        }
       },
       "title": "options",
       "type": "object",
       "default": {
        "secretseed": false,
        "pool_keys": false,
        "root_authorized_keys": false
       },
       "_name_": "options",
       "_attrs_order_": [
        "secretseed",
        "pool_keys",
        "root_authorized_keys"
       ]
      },
      "return_schema_of_config_save": {
       "title": "result",
       "type": "null",
       "_name_": "result"
      },
      "return_schema_of_config_upload": {
       "title": "result",
       "type": "null",
       "_name_": "result"
      },
      "return_schema_of_cronjob_query": {
       "anyOf": [
        {
         "items": [
          {
           "additionalProperties": false,
           "properties": {
            "enabled": {
             "title": "enabled",
             "type": "boolean",
             "_name_": "enabled",
             "_required_": false
            },
            "stderr": {
             "title": "stderr",
             "type": "boolean",
             "_name_": "stderr",
             "_required_": false
            },
            "stdout": {
             "title": "stdout",
             "type": "boolean",
             "_name_": "stdout",
             "_required_": false
            },
            "schedule": {
             "title": "schedule",
             "_name_": "schedule",
             "_required_": false
            },
            "command": {
             "title": "command",
             "type": "string",
             "_name_": "command",
             "_required_": false
            },
            "description": {
             "title": "description",
             "type": "string",
             "_name_": "description",
             "_required_": false
            },
            "user": {
             "title": "user",
             "type": "string",
             "_name_": "user",
             "_required_": false
            },
            "id": {
             "title": "id",
             "type": "integer",
             "_name_": "id",
             "_required_": false
            }
           },
           "title": "CronJobQueryResultItem",
           "type": "object",
           "_attrs_order_": [
            "enabled",
            "stderr",
            "stdout",
            "schedule",
            "command",
            "description",
            "user",
            "id"
           ]
          }
         ],
         "type": "array"
        },
        {
         "additionalProperties": false,
         "properties": {
          "enabled": {
           "title": "enabled",
           "type": "boolean",
           "_name_": "enabled",
           "_required_": false
          },
          "stderr": {
           "title": "stderr",
           "type": "boolean",
           "_name_": "stderr",
           "_required_": false
          },
          "stdout": {
           "title": "stdout",
           "type": "boolean",
           "_name_": "stdout",
           "_required_": false
          },
          "schedule": {
           "title": "schedule",
           "_name_": "schedule",
           "_required_": false
          },
          "command": {
           "title": "command",
           "type": "string",
           "_name_": "command",
           "_required_": false
          },
          "description": {
           "title": "description",
           "type": "string",
           "_name_": "description",
           "_required_": false
          },
          "user": {
           "title": "user",
           "type": "string",
           "_name_": "user",
           "_required_": false
          },
          "id": {
           "title": "id",
           "type": "integer",
           "_name_": "id",
           "_required_": false
          }
         },
         "title": "CronJobQueryResultItem",
         "type": "object",
         "_attrs_order_": [
          "enabled",
          "stderr",
          "stdout",
          "schedule",
          "command",
          "description",
          "user",
          "id"
         ]
        },
        {
         "type": "integer"
        }
       ],
       "title": "result",
       "_name_": "result"
      },
      "cronjob_create": {
       "additionalProperties": false,
       "properties": {
        "enabled": {
         "default": true,
         "title": "enabled",
         "type": "boolean",
         "_name_": "enabled"
        },
        "stderr": {
         "default": false,
         "title": "stderr",
         "type": "boolean",
         "_name_": "stderr"
        },
        "stdout": {
         "default": true,
         "title": "stdout",
         "type": "boolean",
         "_name_": "stdout"
        },
        "schedule": {
         "default": {
          "minute": "00",
          "hour": "*",
          "dom": "*",
          "month": "*",
          "dow": "*"
         },
         "title": "schedule",
         "_name_": "schedule"
        },
        "command": {
         "title": "command",
         "type": "string",
         "_name_": "command"
        },
        "description": {
         "default": "",
         "title": "description",
         "type": "string",
         "_name_": "description"
        },
        "user": {
         "title": "user",
         "type": "string",
         "_name_": "user"
        }
       },
       "required": [
        "command",
        "user"
       ],
       "title": "data",
       "type": "object",
       "_name_": "data",
       "_attrs_order_": [
        "enabled",
        "stderr",
        "stdout",
        "schedule",
        "command",
        "description",
        "user"
       ]
      },
      "return_schema_of_cronjob_create": {
       "additionalProperties": false,
       "properties": {
        "enabled": {
         "default": true,
         "title": "enabled",
         "type": "boolean",
         "_name_": "enabled"
        },
        "stderr": {
         "default": false,
         "title": "stderr",
         "type": "boolean",
         "_name_": "stderr"
        },
        "stdout": {
         "default": true,
         "title": "stdout",
         "type": "boolean",
         "_name_": "stdout"
        },
        "schedule": {
         "default": {
          "minute": "00",
          "hour": "*",
          "dom": "*",
          "month": "*",
          "dow": "*"
         },
         "title": "schedule",
         "_name_": "schedule"
        },
        "command": {
         "title": "command",
         "type": "string",
         "_name_": "command"
        },
        "description": {
         "default": "",
         "title": "description",
         "type": "string",
         "_name_": "description"
        },
        "user": {
         "title": "user",
         "type": "string",
         "_name_": "user"
        },
        "id": {
         "title": "id",
         "type": "integer",
         "_name_": "id"
        }
       },
       "required": [
        "command",
        "user",
        "id"
       ],
       "title": "result",
       "type": "object",
       "_name_": "result",
       "_attrs_order_": [
        "enabled",
        "stderr",
        "stdout",
        "schedule",
        "command",
        "description",
        "user",
        "id"
       ]
      },
      "return_schema_of_cronjob_delete": {
       "const": true,
       "enum": [
        true
       ],
       "title": "result",
       "type": "boolean",
       "_name_": "result"
      },
      "cronjob_update": {
       "additionalProperties": false,
       "properties": {
        "enabled": {
         "title": "enabled",
         "type": "boolean",
         "_name_": "enabled"
        },
        "stderr": {
         "title": "stderr",
         "type": "boolean",
         "_name_": "stderr"
        },
        "stdout": {
         "title": "stdout",
         "type": "boolean",
         "_name_": "stdout"
        },
        "schedule": {
         "title": "schedule",
         "_name_": "schedule"
        },
        "command": {
         "title": "command",
         "type": "string",
         "_name_": "command"
        },
        "description": {
         "title": "description",
         "type": "string",
         "_name_": "description"
        },
        "user": {
         "title": "user",
         "type": "string",
         "_name_": "user"
        }
       },
       "title": "data",
       "type": "object",
       "_name_": "data",
       "_attrs_order_": [
        "enabled",
        "stderr",
        "stdout",
        "schedule",
        "command",
        "description",
        "user"
       ]
      },
      "return_schema_of_cronjob_update": {
       "additionalProperties": false,
       "properties": {
        "enabled": {
         "default": true,
         "title": "enabled",
         "type": "boolean",
         "_name_": "enabled"
        },
        "stderr": {
         "default": false,
         "title": "stderr",
         "type": "boolean",
         "_name_": "stderr"
        },
        "stdout": {
         "default": true,
         "title": "stdout",
         "type": "boolean",
         "_name_": "stdout"
        },
        "schedule": {
         "default": {
          "minute": "00",
          "hour": "*",
          "dom": "*",
          "month": "*",
          "dow": "*"
         },
         "title": "schedule",
         "_name_": "schedule"
        },
        "command": {
         "title": "command",
         "type": "string",
         "_name_": "command"
        },
        "description": {
         "default": "",
         "title": "description",
         "type": "string",
         "_name_": "description"
        },
        "user": {
         "title": "user",
         "type": "string",
         "_name_": "user"
        },
        "id": {
         "title": "id",
         "type": "integer",
         "_name_": "id"
        }
       },
       "required": [
        "command",
        "user",
        "id"
       ],
       "title": "result",
       "type": "object",
       "_name_": "result",
       "_attrs_order_": [
        "enabled",
        "stderr",
        "stdout",
        "schedule",
        "command",
        "description",
        "user",
        "id"
       ]
      },
      "cronjob_get_instance_0": {
       "title": "id",
       "type": "integer",
       "_name_": "id"
      },
      "cronjob_get_instance_1": {
       "additionalProperties": false,
       "properties": {
        "relationships": {
         "default": true,
         "title": "relationships",
         "type": "boolean",
         "_name_": "relationships"
        },
        "extend": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "extend",
         "_name_": "extend"
        },
        "extend_context": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "extend_context",
         "_name_": "extend_context"
        },
        "prefix": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "prefix",
         "_name_": "prefix"
        },
        "extra": {
         "default": {},
         "title": "extra",
         "type": "object",
         "_name_": "extra"
        },
        "order_by": {
         "default": [],
         "items": {
          "type": "string"
         },
         "title": "order_by",
         "type": "array",
         "_name_": "order_by"
        },
        "select": {
         "default": [],
         "items": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "items": [
             {}
            ],
            "type": "array"
           }
          ]
         },
         "title": "select",
         "type": "array",
         "_name_": "select"
        },
        "count": {
         "default": false,
         "title": "count",
         "type": "boolean",
         "_name_": "count"
        },
        "get": {
         "default": false,
         "title": "get",
         "type": "boolean",
         "_name_": "get"
        },
        "offset": {
         "default": 0,
         "title": "offset",
         "type": "integer",
         "_name_": "offset"
        },
        "limit": {
         "default": 0,
         "title": "limit",
         "type": "integer",
         "_name_": "limit"
        },
        "force_sql_filters": {
         "default": false,
         "title": "force_sql_filters",
         "type": "boolean",
         "_name_": "force_sql_filters"
        }
       },
       "title": "options",
       "type": "object",
       "default": {},
       "_name_": "options",
       "_attrs_order_": [
        "relationships",
        "extend",
        "extend_context",
        "prefix",
        "extra",
        "order_by",
        "select",
        "count",
        "get",
        "offset",
        "limit",
        "force_sql_filters"
       ]
      },
      "cronjob_get_instance": {
       "type": "object",
       "properties": {
        "id": {
         "$ref": "#/components/schemas/cronjob_get_instance_0"
        },
        "options": {
         "$ref": "#/components/schemas/cronjob_get_instance_1"
        }
       }
      },
      "return_schema_of_cronjob_get_instance": {
       "additionalProperties": false,
       "properties": {
        "enabled": {
         "default": true,
         "title": "enabled",
         "type": "boolean",
         "_name_": "enabled"
        },
        "stderr": {
         "default": false,
         "title": "stderr",
         "type": "boolean",
         "_name_": "stderr"
        },
        "stdout": {
         "default": true,
         "title": "stdout",
         "type": "boolean",
         "_name_": "stdout"
        },
        "schedule": {
         "default": {
          "minute": "00",
          "hour": "*",
          "dom": "*",
          "month": "*",
          "dow": "*"
         },
         "title": "schedule",
         "_name_": "schedule"
        },
        "command": {
         "title": "command",
         "type": "string",
         "_name_": "command"
        },
        "description": {
         "default": "",
         "title": "description",
         "type": "string",
         "_name_": "description"
        },
        "user": {
         "title": "user",
         "type": "string",
         "_name_": "user"
        },
        "id": {
         "title": "id",
         "type": "integer",
         "_name_": "id"
        }
       },
       "required": [
        "command",
        "user",
        "id"
       ],
       "title": "result",
       "type": "object",
       "_name_": "result",
       "_attrs_order_": [
        "enabled",
        "stderr",
        "stdout",
        "schedule",
        "command",
        "description",
        "user",
        "id"
       ]
      },
      "cronjob_run_0": {
       "title": "id",
       "type": "integer",
       "_name_": "id"
      },
      "cronjob_run_1": {
       "default": false,
       "title": "skip_disabled",
       "type": "boolean",
       "_name_": "skip_disabled"
      },
      "cronjob_run": {
       "type": "object",
       "properties": {
        "id": {
         "$ref": "#/components/schemas/cronjob_run_0"
        },
        "skip_disabled": {
         "$ref": "#/components/schemas/cronjob_run_1"
        }
       }
      },
      "return_schema_of_cronjob_run": {
       "title": "result",
       "type": "null",
       "_name_": "result"
      },
      "device_get_info": {
       "anyOf": [
        {
         "additionalProperties": false,
         "properties": {
          "type": {
           "const": "DISK",
           "description": "Get disk info.",
           "enum": [
            "DISK"
           ],
           "title": "type",
           "type": "string",
           "_name_": "type",
           "_required_": true
          },
          "get_partitions": {
           "default": false,
           "description": "If set, query partition information for the disks.\nNOTE: This can be expensive on systems with a large number of disks present.",
           "title": "get_partitions",
           "type": "boolean",
           "_name_": "get_partitions",
           "_required_": false
          },
          "serials_only": {
           "default": false,
           "description": "If set, query _ONLY_ serial information for the disks (overrides `get_partitions`).",
           "title": "serials_only",
           "type": "boolean",
           "_name_": "serials_only",
           "_required_": false
          }
         },
         "required": [
          "type"
         ],
         "title": "DeviceGetInfoDisk",
         "type": "object",
         "_attrs_order_": [
          "type",
          "get_partitions",
          "serials_only"
         ]
        },
        {
         "additionalProperties": false,
         "properties": {
          "type": {
           "description": "Get info for either serial devices or GPUs.",
           "enum": [
            "SERIAL",
            "GPU"
           ],
           "title": "type",
           "type": "string",
           "_name_": "type",
           "_required_": true
          }
         },
         "required": [
          "type"
         ],
         "title": "DeviceGetInfoOther",
         "type": "object",
         "_attrs_order_": [
          "type"
         ]
        }
       ],
       "title": "data",
       "_name_": "data"
      },
      "return_schema_of_device_get_info": {
       "anyOf": [
        {
         "additionalProperties": {
          "type": "string"
         },
         "type": "object"
        },
        {
         "additionalProperties": {
          "type": "object"
         },
         "type": "object"
        },
        {
         "items": [
          {
           "additionalProperties": false,
           "properties": {
            "name": {
             "title": "name",
             "type": "string",
             "_name_": "name",
             "_required_": true
            },
            "location": {
             "title": "location",
             "type": "string",
             "_name_": "location",
             "_required_": true
            },
            "drivername": {
             "title": "drivername",
             "type": "string",
             "_name_": "drivername",
             "_required_": true
            },
            "start": {
             "title": "start",
             "type": "string",
             "_name_": "start",
             "_required_": true
            },
            "size": {
             "title": "size",
             "type": "integer",
             "_name_": "size",
             "_required_": true
            },
            "description": {
             "title": "description",
             "type": "string",
             "_name_": "description",
             "_required_": true
            }
           },
           "required": [
            "name",
            "location",
            "drivername",
            "start",
            "size",
            "description"
           ],
           "title": "SerialInfo",
           "type": "object",
           "_attrs_order_": [
            "name",
            "location",
            "drivername",
            "start",
            "size",
            "description"
           ]
          }
         ],
         "type": "array"
        },
        {
         "items": [
          {
           "additionalProperties": true,
           "properties": {
            "addr": {
             "title": "addr",
             "_name_": "addr",
             "_required_": true
            },
            "description": {
             "title": "description",
             "type": "string",
             "_name_": "description",
             "_required_": true
            },
            "devices": {
             "items": [
              {}
             ],
             "title": "devices",
             "type": "array",
             "_name_": "devices",
             "_required_": true
            },
            "vendor": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "null"
              }
             ],
             "title": "vendor",
             "_name_": "vendor",
             "_required_": true
            },
            "available_to_host": {
             "title": "available_to_host",
             "type": "boolean",
             "_name_": "available_to_host",
             "_required_": true
            },
            "uses_system_critical_devices": {
             "title": "uses_system_critical_devices",
             "type": "boolean",
             "_name_": "uses_system_critical_devices",
             "_required_": true
            },
            "critical_reason": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "null"
              }
             ],
             "title": "critical_reason",
             "_name_": "critical_reason",
             "_required_": true
            }
           },
           "required": [
            "addr",
            "description",
            "devices",
            "vendor",
            "available_to_host",
            "uses_system_critical_devices",
            "critical_reason"
           ],
           "title": "GPUInfo",
           "type": "object",
           "_attrs_order_": [
            "addr",
            "description",
            "devices",
            "vendor",
            "available_to_host",
            "uses_system_critical_devices",
            "critical_reason"
           ]
          }
         ],
         "type": "array"
        }
       ],
       "description": "Return an object if `type=\"DISK\"` or an array otherwise.",
       "title": "result",
       "_name_": "result"
      },
      "return_schema_of_directoryservices_get_state": {
       "type": "object",
       "properties": {
        "activedirectory": {
         "_name_": "activedirectory",
         "title": "activedirectory",
         "type": "string",
         "enum": [
          "DISABLED",
          "FAULTED",
          "LEAVING",
          "JOINING",
          "HEALTHY"
         ]
        },
        "ldap": {
         "_name_": "ldap",
         "title": "ldap",
         "type": "string",
         "enum": [
          "DISABLED",
          "FAULTED",
          "LEAVING",
          "JOINING",
          "HEALTHY"
         ]
        }
       },
       "additionalProperties": false,
       "_name_": "directory_services_states",
       "title": "directory_services_states",
       "default": {},
       "_attrs_order_": [
        "activedirectory",
        "ldap"
       ]
      },
      "return_schema_of_directoryservices_status": {
       "type": "object",
       "properties": {
        "type": {
         "_name_": "type",
         "title": "type",
         "type": "string",
         "enum": [
          "ACTIVEDIRECTORY",
          "IPA",
          "LDAP"
         ],
         "nullable": true
        },
        "status": {
         "_name_": "status",
         "title": "status",
         "type": "string",
         "enum": [
          "DISABLED",
          "FAULTED",
          "LEAVING",
          "JOINING",
          "HEALTHY"
         ],
         "nullable": true
        },
        "status_msg": {
         "_name_": "status_msg",
         "title": "status_msg",
         "type": "string",
         "nullable": true
        }
       },
       "additionalProperties": false,
       "_name_": "directoryservices_status",
       "title": "directoryservices_status",
       "default": {},
       "_attrs_order_": [
        "type",
        "status",
        "status_msg"
       ]
      },
      "return_schema_of_disk_query": {
       "anyOf": [
        {
         "_name_": "query_result",
         "title": "query_result",
         "default": [],
         "_required_": false,
         "type": "array",
         "items": [
          {
           "type": "object",
           "properties": {
            "identifier": {
             "_name_": "identifier",
             "title": "identifier",
             "_required_": true,
             "type": "string"
            },
            "name": {
             "_name_": "name",
             "title": "name",
             "_required_": true,
             "type": "string"
            },
            "subsystem": {
             "_name_": "subsystem",
             "title": "subsystem",
             "_required_": true,
             "type": "string"
            },
            "number": {
             "type": "integer",
             "_name_": "number",
             "title": "number",
             "_required_": true
            },
            "serial": {
             "_name_": "serial",
             "title": "serial",
             "_required_": true,
             "type": "string"
            },
            "lunid": {
             "_name_": "lunid",
             "title": "lunid",
             "_required_": true,
             "type": [
              "string",
              "null"
             ]
            },
            "size": {
             "type": "integer",
             "_name_": "size",
             "title": "size",
             "_required_": true
            },
            "description": {
             "_name_": "description",
             "title": "description",
             "_required_": true,
             "type": "string"
            },
            "transfermode": {
             "_name_": "transfermode",
             "title": "transfermode",
             "_required_": true,
             "type": "string"
            },
            "hddstandby": {
             "_name_": "hddstandby",
             "title": "hddstandby",
             "_required_": true,
             "type": "string",
             "enum": [
              "ALWAYS ON",
              "5",
              "10",
              "20",
              "30",
              "60",
              "120",
              "180",
              "240",
              "300",
              "330"
             ]
            },
            "togglesmart": {
             "type": "boolean",
             "_name_": "togglesmart",
             "title": "togglesmart",
             "_required_": true
            },
            "advpowermgmt": {
             "_name_": "advpowermgmt",
             "title": "advpowermgmt",
             "_required_": true,
             "type": "string",
             "enum": [
              "DISABLED",
              "1",
              "64",
              "127",
              "128",
              "192",
              "254"
             ]
            },
            "smartoptions": {
             "_name_": "smartoptions",
             "title": "smartoptions",
             "_required_": true,
             "type": "string"
            },
            "expiretime": {
             "_name_": "expiretime",
             "title": "expiretime",
             "_required_": true,
             "type": [
              "string",
              "null"
             ]
            },
            "critical": {
             "type": [
              "integer",
              "null"
             ],
             "_name_": "critical",
             "title": "critical",
             "_required_": true
            },
            "difference": {
             "type": [
              "integer",
              "null"
             ],
             "_name_": "difference",
             "title": "difference",
             "_required_": true
            },
            "informational": {
             "type": [
              "integer",
              "null"
             ],
             "_name_": "informational",
             "title": "informational",
             "_required_": true
            },
            "model": {
             "_name_": "model",
             "title": "model",
             "_required_": true,
             "type": [
              "string",
              "null"
             ]
            },
            "rotationrate": {
             "type": [
              "integer",
              "null"
             ],
             "_name_": "rotationrate",
             "title": "rotationrate",
             "_required_": true
            },
            "type": {
             "_name_": "type",
             "title": "type",
             "_required_": true,
             "type": [
              "string",
              "null"
             ]
            },
            "zfs_guid": {
             "_name_": "zfs_guid",
             "title": "zfs_guid",
             "_required_": true,
             "type": [
              "string",
              "null"
             ]
            },
            "bus": {
             "_name_": "bus",
             "title": "bus",
             "_required_": true,
             "type": "string"
            },
            "devname": {
             "_name_": "devname",
             "title": "devname",
             "_required_": true,
             "type": "string"
            },
            "enclosure": {
             "type": "object",
             "properties": {
              "number": {
               "type": "integer",
               "_name_": "number",
               "title": "number",
               "_required_": false
              },
              "slot": {
               "type": "integer",
               "_name_": "slot",
               "title": "slot",
               "_required_": false
              }
             },
             "additionalProperties": false,
             "_name_": "enclosure",
             "title": "enclosure",
             "default": {},
             "_required_": true,
             "_attrs_order_": [
              "number",
              "slot"
             ]
            },
            "pool": {
             "_name_": "pool",
             "title": "pool",
             "_required_": true,
             "type": [
              "string",
              "null"
             ]
            },
            "passwd": {
             "_name_": "passwd",
             "title": "passwd",
             "_required_": false,
             "type": "string"
            },
            "kmip_uid": {
             "_name_": "kmip_uid",
             "title": "kmip_uid",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "supports_smart": {
             "type": [
              "boolean",
              "null"
             ],
             "_name_": "supports_smart",
             "title": "supports_smart",
             "_required_": false
            }
           },
           "additionalProperties": false,
           "_name_": "disk_entry",
           "title": "disk_entry",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "identifier",
            "name",
            "subsystem",
            "number",
            "serial",
            "lunid",
            "size",
            "description",
            "transfermode",
            "hddstandby",
            "togglesmart",
            "advpowermgmt",
            "smartoptions",
            "expiretime",
            "critical",
            "difference",
            "informational",
            "model",
            "rotationrate",
            "type",
            "zfs_guid",
            "bus",
            "devname",
            "enclosure",
            "pool",
            "passwd",
            "kmip_uid",
            "supports_smart"
           ]
          }
         ]
        },
        {
         "type": "object",
         "properties": {
          "identifier": {
           "_name_": "identifier",
           "title": "identifier",
           "_required_": true,
           "type": "string"
          },
          "name": {
           "_name_": "name",
           "title": "name",
           "_required_": true,
           "type": "string"
          },
          "subsystem": {
           "_name_": "subsystem",
           "title": "subsystem",
           "_required_": true,
           "type": "string"
          },
          "number": {
           "type": "integer",
           "_name_": "number",
           "title": "number",
           "_required_": true
          },
          "serial": {
           "_name_": "serial",
           "title": "serial",
           "_required_": true,
           "type": "string"
          },
          "lunid": {
           "_name_": "lunid",
           "title": "lunid",
           "_required_": true,
           "type": [
            "string",
            "null"
           ]
          },
          "size": {
           "type": "integer",
           "_name_": "size",
           "title": "size",
           "_required_": true
          },
          "description": {
           "_name_": "description",
           "title": "description",
           "_required_": true,
           "type": "string"
          },
          "transfermode": {
           "_name_": "transfermode",
           "title": "transfermode",
           "_required_": true,
           "type": "string"
          },
          "hddstandby": {
           "_name_": "hddstandby",
           "title": "hddstandby",
           "_required_": true,
           "type": "string",
           "enum": [
            "ALWAYS ON",
            "5",
            "10",
            "20",
            "30",
            "60",
            "120",
            "180",
            "240",
            "300",
            "330"
           ]
          },
          "togglesmart": {
           "type": "boolean",
           "_name_": "togglesmart",
           "title": "togglesmart",
           "_required_": true
          },
          "advpowermgmt": {
           "_name_": "advpowermgmt",
           "title": "advpowermgmt",
           "_required_": true,
           "type": "string",
           "enum": [
            "DISABLED",
            "1",
            "64",
            "127",
            "128",
            "192",
            "254"
           ]
          },
          "smartoptions": {
           "_name_": "smartoptions",
           "title": "smartoptions",
           "_required_": true,
           "type": "string"
          },
          "expiretime": {
           "_name_": "expiretime",
           "title": "expiretime",
           "_required_": true,
           "type": [
            "string",
            "null"
           ]
          },
          "critical": {
           "type": [
            "integer",
            "null"
           ],
           "_name_": "critical",
           "title": "critical",
           "_required_": true
          },
          "difference": {
           "type": [
            "integer",
            "null"
           ],
           "_name_": "difference",
           "title": "difference",
           "_required_": true
          },
          "informational": {
           "type": [
            "integer",
            "null"
           ],
           "_name_": "informational",
           "title": "informational",
           "_required_": true
          },
          "model": {
           "_name_": "model",
           "title": "model",
           "_required_": true,
           "type": [
            "string",
            "null"
           ]
          },
          "rotationrate": {
           "type": [
            "integer",
            "null"
           ],
           "_name_": "rotationrate",
           "title": "rotationrate",
           "_required_": true
          },
          "type": {
           "_name_": "type",
           "title": "type",
           "_required_": true,
           "type": [
            "string",
            "null"
           ]
          },
          "zfs_guid": {
           "_name_": "zfs_guid",
           "title": "zfs_guid",
           "_required_": true,
           "type": [
            "string",
            "null"
           ]
          },
          "bus": {
           "_name_": "bus",
           "title": "bus",
           "_required_": true,
           "type": "string"
          },
          "devname": {
           "_name_": "devname",
           "title": "devname",
           "_required_": true,
           "type": "string"
          },
          "enclosure": {
           "type": "object",
           "properties": {
            "number": {
             "type": "integer",
             "_name_": "number",
             "title": "number",
             "_required_": false
            },
            "slot": {
             "type": "integer",
             "_name_": "slot",
             "title": "slot",
             "_required_": false
            }
           },
           "additionalProperties": false,
           "_name_": "enclosure",
           "title": "enclosure",
           "default": {},
           "_required_": true,
           "_attrs_order_": [
            "number",
            "slot"
           ]
          },
          "pool": {
           "_name_": "pool",
           "title": "pool",
           "_required_": true,
           "type": [
            "string",
            "null"
           ]
          },
          "passwd": {
           "_name_": "passwd",
           "title": "passwd",
           "_required_": false,
           "type": "string"
          },
          "kmip_uid": {
           "_name_": "kmip_uid",
           "title": "kmip_uid",
           "_required_": false,
           "type": [
            "string",
            "null"
           ]
          },
          "supports_smart": {
           "type": [
            "boolean",
            "null"
           ],
           "_name_": "supports_smart",
           "title": "supports_smart",
           "_required_": false
          }
         },
         "additionalProperties": false,
         "_name_": "disk_entry",
         "title": "disk_entry",
         "default": {},
         "_required_": false,
         "_attrs_order_": [
          "identifier",
          "name",
          "subsystem",
          "number",
          "serial",
          "lunid",
          "size",
          "description",
          "transfermode",
          "hddstandby",
          "togglesmart",
          "advpowermgmt",
          "smartoptions",
          "expiretime",
          "critical",
          "difference",
          "informational",
          "model",
          "rotationrate",
          "type",
          "zfs_guid",
          "bus",
          "devname",
          "enclosure",
          "pool",
          "passwd",
          "kmip_uid",
          "supports_smart"
         ]
        },
        {
         "type": "integer",
         "_name_": "count",
         "title": "count",
         "_required_": false
        },
        {
         "type": "object",
         "properties": {
          "identifier": {
           "_name_": "identifier",
           "title": "identifier",
           "_required_": true,
           "type": "string"
          },
          "name": {
           "_name_": "name",
           "title": "name",
           "_required_": true,
           "type": "string"
          },
          "subsystem": {
           "_name_": "subsystem",
           "title": "subsystem",
           "_required_": true,
           "type": "string"
          },
          "number": {
           "type": "integer",
           "_name_": "number",
           "title": "number",
           "_required_": true
          },
          "serial": {
           "_name_": "serial",
           "title": "serial",
           "_required_": true,
           "type": "string"
          },
          "lunid": {
           "_name_": "lunid",
           "title": "lunid",
           "_required_": true,
           "type": [
            "string",
            "null"
           ]
          },
          "size": {
           "type": "integer",
           "_name_": "size",
           "title": "size",
           "_required_": true
          },
          "description": {
           "_name_": "description",
           "title": "description",
           "_required_": true,
           "type": "string"
          },
          "transfermode": {
           "_name_": "transfermode",
           "title": "transfermode",
           "_required_": true,
           "type": "string"
          },
          "hddstandby": {
           "_name_": "hddstandby",
           "title": "hddstandby",
           "_required_": true,
           "type": "string",
           "enum": [
            "ALWAYS ON",
            "5",
            "10",
            "20",
            "30",
            "60",
            "120",
            "180",
            "240",
            "300",
            "330"
           ]
          },
          "togglesmart": {
           "type": "boolean",
           "_name_": "togglesmart",
           "title": "togglesmart",
           "_required_": true
          },
          "advpowermgmt": {
           "_name_": "advpowermgmt",
           "title": "advpowermgmt",
           "_required_": true,
           "type": "string",
           "enum": [
            "DISABLED",
            "1",
            "64",
            "127",
            "128",
            "192",
            "254"
           ]
          },
          "smartoptions": {
           "_name_": "smartoptions",
           "title": "smartoptions",
           "_required_": true,
           "type": "string"
          },
          "expiretime": {
           "_name_": "expiretime",
           "title": "expiretime",
           "_required_": true,
           "type": [
            "string",
            "null"
           ]
          },
          "critical": {
           "type": [
            "integer",
            "null"
           ],
           "_name_": "critical",
           "title": "critical",
           "_required_": true
          },
          "difference": {
           "type": [
            "integer",
            "null"
           ],
           "_name_": "difference",
           "title": "difference",
           "_required_": true
          },
          "informational": {
           "type": [
            "integer",
            "null"
           ],
           "_name_": "informational",
           "title": "informational",
           "_required_": true
          },
          "model": {
           "_name_": "model",
           "title": "model",
           "_required_": true,
           "type": [
            "string",
            "null"
           ]
          },
          "rotationrate": {
           "type": [
            "integer",
            "null"
           ],
           "_name_": "rotationrate",
           "title": "rotationrate",
           "_required_": true
          },
          "type": {
           "_name_": "type",
           "title": "type",
           "_required_": true,
           "type": [
            "string",
            "null"
           ]
          },
          "zfs_guid": {
           "_name_": "zfs_guid",
           "title": "zfs_guid",
           "_required_": true,
           "type": [
            "string",
            "null"
           ]
          },
          "bus": {
           "_name_": "bus",
           "title": "bus",
           "_required_": true,
           "type": "string"
          },
          "devname": {
           "_name_": "devname",
           "title": "devname",
           "_required_": true,
           "type": "string"
          },
          "enclosure": {
           "type": "object",
           "properties": {
            "number": {
             "type": "integer",
             "_name_": "number",
             "title": "number",
             "_required_": false
            },
            "slot": {
             "type": "integer",
             "_name_": "slot",
             "title": "slot",
             "_required_": false
            }
           },
           "additionalProperties": false,
           "_name_": "enclosure",
           "title": "enclosure",
           "default": {},
           "_required_": true,
           "_attrs_order_": [
            "number",
            "slot"
           ]
          },
          "pool": {
           "_name_": "pool",
           "title": "pool",
           "_required_": true,
           "type": [
            "string",
            "null"
           ]
          },
          "passwd": {
           "_name_": "passwd",
           "title": "passwd",
           "_required_": false,
           "type": "string"
          },
          "kmip_uid": {
           "_name_": "kmip_uid",
           "title": "kmip_uid",
           "_required_": false,
           "type": [
            "string",
            "null"
           ]
          },
          "supports_smart": {
           "type": [
            "boolean",
            "null"
           ],
           "_name_": "supports_smart",
           "title": "supports_smart",
           "_required_": false
          }
         },
         "additionalProperties": false,
         "_name_": "disk_entry",
         "title": "disk_entry",
         "default": {},
         "_required_": false,
         "_attrs_order_": [
          "identifier",
          "name",
          "subsystem",
          "number",
          "serial",
          "lunid",
          "size",
          "description",
          "transfermode",
          "hddstandby",
          "togglesmart",
          "advpowermgmt",
          "smartoptions",
          "expiretime",
          "critical",
          "difference",
          "informational",
          "model",
          "rotationrate",
          "type",
          "zfs_guid",
          "bus",
          "devname",
          "enclosure",
          "pool",
          "passwd",
          "kmip_uid",
          "supports_smart"
         ]
        }
       ],
       "nullable": false,
       "_name_": "query_result",
       "description": null
      },
      "disk_update": {
       "type": "object",
       "properties": {
        "number": {
         "type": "integer",
         "_name_": "number",
         "title": "number"
        },
        "lunid": {
         "_name_": "lunid",
         "title": "lunid",
         "type": "string",
         "nullable": true
        },
        "description": {
         "_name_": "description",
         "title": "description",
         "type": "string"
        },
        "hddstandby": {
         "_name_": "hddstandby",
         "title": "hddstandby",
         "type": "string",
         "enum": [
          "ALWAYS ON",
          "5",
          "10",
          "20",
          "30",
          "60",
          "120",
          "180",
          "240",
          "300",
          "330"
         ]
        },
        "togglesmart": {
         "type": "boolean",
         "_name_": "togglesmart",
         "title": "togglesmart"
        },
        "advpowermgmt": {
         "_name_": "advpowermgmt",
         "title": "advpowermgmt",
         "type": "string",
         "enum": [
          "DISABLED",
          "1",
          "64",
          "127",
          "128",
          "192",
          "254"
         ]
        },
        "smartoptions": {
         "_name_": "smartoptions",
         "title": "smartoptions",
         "type": "string",
         "description": "`smartoptions`."
        },
        "critical": {
         "type": "integer",
         "_name_": "critical",
         "title": "critical",
         "description": "`critical`, `informational` and `difference` are integer values on which alerts for SMART are configured\nif the disk temperature crosses the assigned threshold for each respective attribute.\nIf they are set to null, then SMARTD config values are used as defaults.\nEmail of log level LOG_CRIT is issued when disk temperature crosses `critical`.",
         "nullable": true
        },
        "difference": {
         "type": "integer",
         "_name_": "difference",
         "title": "difference",
         "description": "`critical`, `informational` and `difference` are integer values on which alerts for SMART are configured\nif the disk temperature crosses the assigned threshold for each respective attribute.\nIf they are set to null, then SMARTD config values are used as defaults.",
         "nullable": true
        },
        "informational": {
         "type": "integer",
         "_name_": "informational",
         "title": "informational",
         "description": "`critical`, `informational` and `difference` are integer values on which alerts for SMART are configured\nif the disk temperature crosses the assigned threshold for each respective attribute.\nIf they are set to null, then SMARTD config values are used as defaults.\nEmail of log level LOG_INFO is issued when disk temperature crosses `informational`.",
         "nullable": true
        },
        "bus": {
         "_name_": "bus",
         "title": "bus",
         "type": "string"
        },
        "enclosure": {
         "type": "object",
         "properties": {
          "number": {
           "type": "integer",
           "_name_": "number",
           "title": "number"
          },
          "slot": {
           "type": "integer",
           "_name_": "slot",
           "title": "slot"
          }
         },
         "additionalProperties": false,
         "_name_": "enclosure",
         "title": "enclosure",
         "default": {},
         "_attrs_order_": [
          "number",
          "slot"
         ]
        },
        "pool": {
         "_name_": "pool",
         "title": "pool",
         "type": "string",
         "nullable": true
        },
        "passwd": {
         "_name_": "passwd",
         "title": "passwd",
         "type": "string"
        },
        "supports_smart": {
         "type": "boolean",
         "_name_": "supports_smart",
         "title": "supports_smart",
         "nullable": true
        }
       },
       "additionalProperties": false,
       "_name_": "disk_update",
       "title": "disk_update",
       "default": {},
       "_attrs_order_": [
        "number",
        "lunid",
        "description",
        "hddstandby",
        "togglesmart",
        "advpowermgmt",
        "smartoptions",
        "critical",
        "difference",
        "informational",
        "bus",
        "enclosure",
        "pool",
        "passwd",
        "supports_smart"
       ]
      },
      "return_schema_of_disk_update": {
       "type": "object",
       "properties": {
        "identifier": {
         "_name_": "identifier",
         "title": "identifier",
         "type": "string"
        },
        "name": {
         "_name_": "name",
         "title": "name",
         "type": "string"
        },
        "subsystem": {
         "_name_": "subsystem",
         "title": "subsystem",
         "type": "string"
        },
        "number": {
         "type": "integer",
         "_name_": "number",
         "title": "number"
        },
        "serial": {
         "_name_": "serial",
         "title": "serial",
         "type": "string"
        },
        "lunid": {
         "_name_": "lunid",
         "title": "lunid",
         "type": "string",
         "nullable": true
        },
        "size": {
         "type": "integer",
         "_name_": "size",
         "title": "size"
        },
        "description": {
         "_name_": "description",
         "title": "description",
         "type": "string"
        },
        "transfermode": {
         "_name_": "transfermode",
         "title": "transfermode",
         "type": "string"
        },
        "hddstandby": {
         "_name_": "hddstandby",
         "title": "hddstandby",
         "type": "string",
         "enum": [
          "ALWAYS ON",
          "5",
          "10",
          "20",
          "30",
          "60",
          "120",
          "180",
          "240",
          "300",
          "330"
         ]
        },
        "togglesmart": {
         "type": "boolean",
         "_name_": "togglesmart",
         "title": "togglesmart"
        },
        "advpowermgmt": {
         "_name_": "advpowermgmt",
         "title": "advpowermgmt",
         "type": "string",
         "enum": [
          "DISABLED",
          "1",
          "64",
          "127",
          "128",
          "192",
          "254"
         ]
        },
        "smartoptions": {
         "_name_": "smartoptions",
         "title": "smartoptions",
         "type": "string",
         "description": "`smartoptions`."
        },
        "expiretime": {
         "_name_": "expiretime",
         "title": "expiretime",
         "type": "string",
         "nullable": true
        },
        "critical": {
         "type": "integer",
         "_name_": "critical",
         "title": "critical",
         "description": "`critical`, `informational` and `difference` are integer values on which alerts for SMART are configured\nif the disk temperature crosses the assigned threshold for each respective attribute.\nIf they are set to null, then SMARTD config values are used as defaults.\nEmail of log level LOG_CRIT is issued when disk temperature crosses `critical`.",
         "nullable": true
        },
        "difference": {
         "type": "integer",
         "_name_": "difference",
         "title": "difference",
         "description": "`critical`, `informational` and `difference` are integer values on which alerts for SMART are configured\nif the disk temperature crosses the assigned threshold for each respective attribute.\nIf they are set to null, then SMARTD config values are used as defaults.",
         "nullable": true
        },
        "informational": {
         "type": "integer",
         "_name_": "informational",
         "title": "informational",
         "description": "`critical`, `informational` and `difference` are integer values on which alerts for SMART are configured\nif the disk temperature crosses the assigned threshold for each respective attribute.\nIf they are set to null, then SMARTD config values are used as defaults.\nEmail of log level LOG_INFO is issued when disk temperature crosses `informational`.",
         "nullable": true
        },
        "model": {
         "_name_": "model",
         "title": "model",
         "type": "string",
         "nullable": true
        },
        "rotationrate": {
         "type": "integer",
         "_name_": "rotationrate",
         "title": "rotationrate",
         "nullable": true
        },
        "type": {
         "_name_": "type",
         "title": "type",
         "type": "string",
         "nullable": true
        },
        "zfs_guid": {
         "_name_": "zfs_guid",
         "title": "zfs_guid",
         "type": "string",
         "nullable": true
        },
        "bus": {
         "_name_": "bus",
         "title": "bus",
         "type": "string"
        },
        "devname": {
         "_name_": "devname",
         "title": "devname",
         "type": "string"
        },
        "enclosure": {
         "type": "object",
         "properties": {
          "number": {
           "type": "integer",
           "_name_": "number",
           "title": "number"
          },
          "slot": {
           "type": "integer",
           "_name_": "slot",
           "title": "slot"
          }
         },
         "additionalProperties": false,
         "_name_": "enclosure",
         "title": "enclosure",
         "default": {},
         "_attrs_order_": [
          "number",
          "slot"
         ]
        },
        "pool": {
         "_name_": "pool",
         "title": "pool",
         "type": "string",
         "nullable": true
        },
        "passwd": {
         "_name_": "passwd",
         "title": "passwd",
         "type": "string"
        },
        "kmip_uid": {
         "_name_": "kmip_uid",
         "title": "kmip_uid",
         "type": "string",
         "nullable": true
        },
        "supports_smart": {
         "type": "boolean",
         "_name_": "supports_smart",
         "title": "supports_smart",
         "nullable": true
        }
       },
       "additionalProperties": false,
       "_name_": "disk_update_returns",
       "title": "disk_update_returns",
       "default": {},
       "_attrs_order_": [
        "identifier",
        "name",
        "subsystem",
        "number",
        "serial",
        "lunid",
        "size",
        "description",
        "transfermode",
        "hddstandby",
        "togglesmart",
        "advpowermgmt",
        "smartoptions",
        "expiretime",
        "critical",
        "difference",
        "informational",
        "model",
        "rotationrate",
        "type",
        "zfs_guid",
        "bus",
        "devname",
        "enclosure",
        "pool",
        "passwd",
        "kmip_uid",
        "supports_smart"
       ]
      },
      "disk_details": {
       "type": "object",
       "properties": {
        "join_partitions": {
         "type": "boolean",
         "_name_": "join_partitions",
         "title": "join_partitions",
         "default": false
        },
        "type": {
         "_name_": "type",
         "title": "type",
         "default": "BOTH",
         "type": "string",
         "enum": [
          "USED",
          "UNUSED",
          "BOTH"
         ]
        }
       },
       "additionalProperties": false,
       "_name_": "disk_details_args",
       "title": "disk_details_args",
       "default": {},
       "_attrs_order_": [
        "join_partitions",
        "type"
       ]
      },
      "disk_get_instance_0": {
       "anyOf": [
        {
         "type": "string"
        },
        {
         "type": "integer"
        },
        {
         "type": "boolean"
        },
        {
         "type": "object"
        },
        {
         "type": "array"
        }
       ],
       "nullable": false,
       "_name_": "id",
       "title": "id",
       "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised."
      },
      "disk_get_instance_1": {
       "type": "object",
       "properties": {
        "relationships": {
         "type": "boolean",
         "_name_": "relationships",
         "title": "relationships",
         "default": true
        },
        "extend": {
         "_name_": "extend",
         "title": "extend",
         "default": null,
         "type": "string",
         "nullable": true
        },
        "extend_context": {
         "_name_": "extend_context",
         "title": "extend_context",
         "default": null,
         "type": "string",
         "nullable": true
        },
        "prefix": {
         "_name_": "prefix",
         "title": "prefix",
         "default": null,
         "type": "string",
         "nullable": true
        },
        "extra": {
         "type": "object",
         "properties": {},
         "additionalProperties": true,
         "_name_": "extra",
         "title": "extra",
         "default": {},
         "_attrs_order_": []
        },
        "order_by": {
         "_name_": "order_by",
         "title": "order_by",
         "default": [],
         "type": "array",
         "items": {}
        },
        "select": {
         "_name_": "select",
         "title": "select",
         "default": [],
         "type": "array",
         "items": {}
        },
        "count": {
         "type": "boolean",
         "_name_": "count",
         "title": "count",
         "default": false
        },
        "get": {
         "type": "boolean",
         "_name_": "get",
         "title": "get",
         "default": false
        },
        "offset": {
         "type": "integer",
         "_name_": "offset",
         "title": "offset",
         "default": 0
        },
        "limit": {
         "type": "integer",
         "_name_": "limit",
         "title": "limit",
         "default": 0
        },
        "force_sql_filters": {
         "type": "boolean",
         "_name_": "force_sql_filters",
         "title": "force_sql_filters",
         "default": true
        }
       },
       "additionalProperties": false,
       "_name_": "query-options-get_instance",
       "title": "query-options-get_instance",
       "default": {},
       "_attrs_order_": [
        "relationships",
        "extend",
        "extend_context",
        "prefix",
        "extra",
        "order_by",
        "select",
        "count",
        "get",
        "offset",
        "limit",
        "force_sql_filters"
       ]
      },
      "disk_get_instance": {
       "type": "object",
       "properties": {
        "id": {
         "$ref": "#/components/schemas/disk_get_instance_0"
        },
        "query-options-get_instance": {
         "$ref": "#/components/schemas/disk_get_instance_1"
        }
       }
      },
      "return_schema_of_disk_get_instance": {
       "type": "object",
       "properties": {
        "identifier": {
         "_name_": "identifier",
         "title": "identifier",
         "type": "string"
        },
        "name": {
         "_name_": "name",
         "title": "name",
         "type": "string"
        },
        "subsystem": {
         "_name_": "subsystem",
         "title": "subsystem",
         "type": "string"
        },
        "number": {
         "type": "integer",
         "_name_": "number",
         "title": "number"
        },
        "serial": {
         "_name_": "serial",
         "title": "serial",
         "type": "string"
        },
        "lunid": {
         "_name_": "lunid",
         "title": "lunid",
         "type": "string",
         "nullable": true
        },
        "size": {
         "type": "integer",
         "_name_": "size",
         "title": "size"
        },
        "description": {
         "_name_": "description",
         "title": "description",
         "type": "string"
        },
        "transfermode": {
         "_name_": "transfermode",
         "title": "transfermode",
         "type": "string"
        },
        "hddstandby": {
         "_name_": "hddstandby",
         "title": "hddstandby",
         "type": "string",
         "enum": [
          "ALWAYS ON",
          "5",
          "10",
          "20",
          "30",
          "60",
          "120",
          "180",
          "240",
          "300",
          "330"
         ]
        },
        "togglesmart": {
         "type": "boolean",
         "_name_": "togglesmart",
         "title": "togglesmart"
        },
        "advpowermgmt": {
         "_name_": "advpowermgmt",
         "title": "advpowermgmt",
         "type": "string",
         "enum": [
          "DISABLED",
          "1",
          "64",
          "127",
          "128",
          "192",
          "254"
         ]
        },
        "smartoptions": {
         "_name_": "smartoptions",
         "title": "smartoptions",
         "type": "string"
        },
        "expiretime": {
         "_name_": "expiretime",
         "title": "expiretime",
         "type": "string",
         "nullable": true
        },
        "critical": {
         "type": "integer",
         "_name_": "critical",
         "title": "critical",
         "nullable": true
        },
        "difference": {
         "type": "integer",
         "_name_": "difference",
         "title": "difference",
         "nullable": true
        },
        "informational": {
         "type": "integer",
         "_name_": "informational",
         "title": "informational",
         "nullable": true
        },
        "model": {
         "_name_": "model",
         "title": "model",
         "type": "string",
         "nullable": true
        },
        "rotationrate": {
         "type": "integer",
         "_name_": "rotationrate",
         "title": "rotationrate",
         "nullable": true
        },
        "type": {
         "_name_": "type",
         "title": "type",
         "type": "string",
         "nullable": true
        },
        "zfs_guid": {
         "_name_": "zfs_guid",
         "title": "zfs_guid",
         "type": "string",
         "nullable": true
        },
        "bus": {
         "_name_": "bus",
         "title": "bus",
         "type": "string"
        },
        "devname": {
         "_name_": "devname",
         "title": "devname",
         "type": "string"
        },
        "enclosure": {
         "type": "object",
         "properties": {
          "number": {
           "type": "integer",
           "_name_": "number",
           "title": "number"
          },
          "slot": {
           "type": "integer",
           "_name_": "slot",
           "title": "slot"
          }
         },
         "additionalProperties": false,
         "_name_": "enclosure",
         "title": "enclosure",
         "default": {},
         "_attrs_order_": [
          "number",
          "slot"
         ]
        },
        "pool": {
         "_name_": "pool",
         "title": "pool",
         "type": "string",
         "nullable": true
        },
        "passwd": {
         "_name_": "passwd",
         "title": "passwd",
         "type": "string"
        },
        "kmip_uid": {
         "_name_": "kmip_uid",
         "title": "kmip_uid",
         "type": "string",
         "nullable": true
        },
        "supports_smart": {
         "type": "boolean",
         "_name_": "supports_smart",
         "title": "supports_smart",
         "nullable": true
        }
       },
       "additionalProperties": false,
       "_name_": "disk_entry",
       "title": "disk_entry",
       "default": {},
       "_attrs_order_": [
        "identifier",
        "name",
        "subsystem",
        "number",
        "serial",
        "lunid",
        "size",
        "description",
        "transfermode",
        "hddstandby",
        "togglesmart",
        "advpowermgmt",
        "smartoptions",
        "expiretime",
        "critical",
        "difference",
        "informational",
        "model",
        "rotationrate",
        "type",
        "zfs_guid",
        "bus",
        "devname",
        "enclosure",
        "pool",
        "passwd",
        "kmip_uid",
        "supports_smart"
       ]
      },
      "disk_get_used": {
       "type": "boolean",
       "_name_": "join_partitions",
       "title": "join_partitions",
       "default": false
      },
      "disk_resize_0": {
       "_name_": "disks",
       "title": "disks",
       "default": [],
       "type": "array",
       "items": {
        "type": "object",
        "properties": {
         "name": {
          "_name_": "name",
          "title": "name",
          "_required_": true,
          "type": "string"
         },
         "size": {
          "type": "integer",
          "_name_": "size",
          "title": "size",
          "default": null,
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "name",
         "size"
        ]
       }
      },
      "disk_resize_1": {
       "type": "boolean",
       "_name_": "sync",
       "title": "sync",
       "default": true,
       "description": "`sync`: boolean, when true (default) will synchronize the new size of the disk(s)\n    with the database cache."
      },
      "disk_resize_2": {
       "type": "boolean",
       "_name_": "raise_error",
       "title": "raise_error",
       "default": false,
       "description": "`raise_error`: boolean\n    when true, will raise a `CallError` if any failures occur\n    when false, will will log the errors if any failures occur"
      },
      "disk_resize": {
       "type": "object",
       "properties": {
        "disks": {
         "$ref": "#/components/schemas/disk_resize_0"
        },
        "sync": {
         "$ref": "#/components/schemas/disk_resize_1"
        },
        "raise_error": {
         "$ref": "#/components/schemas/disk_resize_2"
        }
       }
      },
      "disk_retaste": {
       "_name_": "disks",
       "title": "disks",
       "default": null,
       "type": "array",
       "items": {
        "_name_": "name",
        "title": "name",
        "_required_": true,
        "type": "string"
       }
      },
      "disk_smart_attributes": {
       "_name_": "name",
       "title": "name",
       "type": "string"
      },
      "return_schema_of_disk_smart_attributes": {
       "_name_": "smart_attributes",
       "title": "smart_attributes",
       "default": [],
       "type": "array",
       "items": {
        "type": "object",
        "properties": {
         "id": {
          "type": "integer",
          "_name_": "id",
          "title": "id",
          "_required_": true
         },
         "value": {
          "type": "integer",
          "_name_": "value",
          "title": "value",
          "_required_": true
         },
         "worst": {
          "type": "integer",
          "_name_": "worst",
          "title": "worst",
          "_required_": true
         },
         "thresh": {
          "type": "integer",
          "_name_": "thresh",
          "title": "thresh",
          "_required_": true
         },
         "name": {
          "_name_": "name",
          "title": "name",
          "_required_": true,
          "type": "string"
         },
         "when_failed": {
          "_name_": "when_failed",
          "title": "when_failed",
          "_required_": true,
          "type": "string"
         },
         "flags": {
          "type": "object",
          "properties": {
           "value": {
            "type": "integer",
            "_name_": "value",
            "title": "value",
            "_required_": true
           },
           "string": {
            "_name_": "string",
            "title": "string",
            "_required_": true,
            "type": "string"
           },
           "prefailure": {
            "type": "boolean",
            "_name_": "prefailure",
            "title": "prefailure",
            "_required_": true
           },
           "updated_online": {
            "type": "boolean",
            "_name_": "updated_online",
            "title": "updated_online",
            "_required_": true
           },
           "performance": {
            "type": "boolean",
            "_name_": "performance",
            "title": "performance",
            "_required_": true
           },
           "error_rate": {
            "type": "boolean",
            "_name_": "error_rate",
            "title": "error_rate",
            "_required_": true
           },
           "event_count": {
            "type": "boolean",
            "_name_": "event_count",
            "title": "event_count",
            "_required_": true
           },
           "auto_keep": {
            "type": "boolean",
            "_name_": "auto_keep",
            "title": "auto_keep",
            "_required_": true
           }
          },
          "additionalProperties": false,
          "_name_": "flags",
          "title": "flags",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "value",
           "string",
           "prefailure",
           "updated_online",
           "performance",
           "error_rate",
           "event_count",
           "auto_keep"
          ]
         },
         "raw": {
          "type": "object",
          "properties": {
           "value": {
            "type": "integer",
            "_name_": "value",
            "title": "value",
            "_required_": true
           },
           "string": {
            "_name_": "string",
            "title": "string",
            "_required_": true,
            "type": "string"
           }
          },
          "additionalProperties": false,
          "_name_": "raw",
          "title": "raw",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "value",
           "string"
          ]
         }
        },
        "additionalProperties": false,
        "_name_": "smart_attribute",
        "title": "smart_attribute",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "id",
         "value",
         "worst",
         "thresh",
         "name",
         "when_failed",
         "flags",
         "raw"
        ]
       }
      },
      "disk_temperature_0": {
       "_name_": "name",
       "title": "name",
       "type": "string"
      },
      "disk_temperature_1": {
       "type": "object",
       "properties": {
        "cache": {
         "type": "integer",
         "_name_": "cache",
         "title": "cache",
         "default": null,
         "nullable": true
        },
        "powermode": {
         "_name_": "powermode",
         "title": "powermode",
         "default": "NEVER",
         "type": "string",
         "enum": [
          "NEVER",
          "SLEEP",
          "STANDBY",
          "IDLE"
         ]
        }
       },
       "additionalProperties": false,
       "_name_": "options",
       "title": "options",
       "default": {},
       "_attrs_order_": [
        "cache",
        "powermode"
       ]
      },
      "disk_temperature": {
       "type": "object",
       "properties": {
        "name": {
         "$ref": "#/components/schemas/disk_temperature_0"
        },
        "options": {
         "$ref": "#/components/schemas/disk_temperature_1"
        }
       }
      },
      "return_schema_of_disk_temperature": {
       "type": "integer",
       "_name_": "temperature",
       "title": "temperature",
       "nullable": true
      },
      "disk_temperature_agg_0": {
       "_name_": "names",
       "title": "names",
       "default": [],
       "type": "array",
       "items": {
        "_name_": "name",
        "title": "name",
        "_required_": false,
        "type": "string"
       }
      },
      "disk_temperature_agg_1": {
       "type": "integer",
       "_name_": "days",
       "title": "days",
       "default": 7
      },
      "disk_temperature_agg": {
       "type": "object",
       "properties": {
        "names": {
         "$ref": "#/components/schemas/disk_temperature_agg_0"
        },
        "days": {
         "$ref": "#/components/schemas/disk_temperature_agg_1"
        }
       }
      },
      "return_schema_of_disk_temperature_agg": {
       "type": "object",
       "properties": {},
       "additionalProperties": true,
       "_name_": "temperatures",
       "title": "temperatures",
       "default": {},
       "_attrs_order_": []
      },
      "disk_temperature_alerts": {
       "items": {
        "type": "string"
       },
       "title": "names",
       "type": "array",
       "_name_": "names"
      },
      "return_schema_of_disk_temperature_alerts": {
       "items": {
        "additionalProperties": false,
        "properties": {
         "uuid": {
          "title": "uuid",
          "type": "string",
          "_name_": "uuid",
          "_required_": true
         },
         "source": {
          "title": "source",
          "type": "string",
          "_name_": "source",
          "_required_": true
         },
         "klass": {
          "title": "klass",
          "type": "string",
          "_name_": "klass",
          "_required_": true
         },
         "args": {
          "title": "args",
          "_name_": "args",
          "_required_": true
         },
         "node": {
          "title": "node",
          "type": "string",
          "_name_": "node",
          "_required_": true
         },
         "key": {
          "title": "key",
          "type": "string",
          "_name_": "key",
          "_required_": true
         },
         "datetime": {
          "format": "date-time",
          "title": "datetime",
          "type": "string",
          "_name_": "datetime",
          "_required_": true
         },
         "last_occurrence": {
          "format": "date-time",
          "title": "last_occurrence",
          "type": "string",
          "_name_": "last_occurrence",
          "_required_": true
         },
         "dismissed": {
          "title": "dismissed",
          "type": "boolean",
          "_name_": "dismissed",
          "_required_": true
         },
         "mail": {
          "title": "mail",
          "_name_": "mail",
          "_required_": true
         },
         "text": {
          "title": "text",
          "type": "string",
          "_name_": "text",
          "_required_": true
         },
         "id": {
          "title": "id",
          "type": "string",
          "_name_": "id",
          "_required_": true
         },
         "level": {
          "title": "level",
          "type": "string",
          "_name_": "level",
          "_required_": true
         },
         "formatted": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "null"
           }
          ],
          "title": "formatted",
          "_name_": "formatted",
          "_required_": true
         },
         "one_shot": {
          "title": "one_shot",
          "type": "boolean",
          "_name_": "one_shot",
          "_required_": true
         }
        },
        "required": [
         "uuid",
         "source",
         "klass",
         "args",
         "node",
         "key",
         "datetime",
         "last_occurrence",
         "dismissed",
         "mail",
         "text",
         "id",
         "level",
         "formatted",
         "one_shot"
        ],
        "title": "Alert",
        "type": "object",
        "_attrs_order_": [
         "uuid",
         "source",
         "klass",
         "args",
         "node",
         "key",
         "datetime",
         "last_occurrence",
         "dismissed",
         "mail",
         "text",
         "id",
         "level",
         "formatted",
         "one_shot"
        ]
       },
       "title": "result",
       "type": "array",
       "_name_": "result"
      },
      "disk_temperatures_0": {
       "_name_": "names",
       "title": "names",
       "default": [],
       "type": "array",
       "items": {
        "_name_": "name",
        "title": "name",
        "_required_": false,
        "type": "string"
       }
      },
      "disk_temperatures_1": {
       "type": "object",
       "properties": {
        "cache": {
         "type": "integer",
         "_name_": "cache",
         "title": "cache",
         "default": 290,
         "nullable": true
        },
        "only_cached": {
         "type": "boolean",
         "_name_": "only_cached",
         "title": "only_cached",
         "default": false
        },
        "powermode": {
         "_name_": "powermode",
         "title": "powermode",
         "default": "NEVER",
         "type": "string",
         "enum": [
          "NEVER",
          "SLEEP",
          "STANDBY",
          "IDLE"
         ]
        }
       },
       "additionalProperties": false,
       "_name_": "options",
       "title": "options",
       "default": {},
       "_attrs_order_": [
        "cache",
        "only_cached",
        "powermode"
       ]
      },
      "disk_temperatures": {
       "type": "object",
       "properties": {
        "names": {
         "$ref": "#/components/schemas/disk_temperatures_0"
        },
        "options": {
         "$ref": "#/components/schemas/disk_temperatures_1"
        }
       }
      },
      "return_schema_of_disk_temperatures": {
       "type": "object",
       "properties": {},
       "additionalProperties": true,
       "_name_": "disks_temperatures",
       "title": "disks_temperatures",
       "default": {},
       "_attrs_order_": []
      },
      "disk_wipe_0": {
       "_name_": "dev",
       "title": "dev",
       "type": "string"
      },
      "disk_wipe_1": {
       "_name_": "mode",
       "title": "mode",
       "type": "string",
       "enum": [
        "QUICK",
        "FULL",
        "FULL_RANDOM"
       ]
      },
      "disk_wipe_2": {
       "type": "boolean",
       "_name_": "synccache",
       "title": "synccache",
       "default": true
      },
      "disk_wipe": {
       "type": "object",
       "properties": {
        "dev": {
         "$ref": "#/components/schemas/disk_wipe_0"
        },
        "mode": {
         "$ref": "#/components/schemas/disk_wipe_1"
        },
        "synccache": {
         "$ref": "#/components/schemas/disk_wipe_2"
        }
       }
      },
      "return_schema_of_dns_query": {
       "anyOf": [
        {
         "type": "integer",
         "_name_": "count",
         "title": "count",
         "_required_": false
        },
        {
         "type": "object",
         "properties": {
          "nameserver": {
           "_name_": "nameserver",
           "title": "nameserver",
           "_required_": true,
           "type": "string"
          }
         },
         "additionalProperties": false,
         "_name_": "nameserver",
         "title": "nameserver",
         "default": {},
         "_required_": false,
         "_attrs_order_": [
          "nameserver"
         ]
        },
        {
         "_name_": "query_result",
         "title": "query_result",
         "default": [],
         "_required_": false,
         "type": "array",
         "items": [
          {
           "type": "object",
           "properties": {
            "nameserver": {
             "_name_": "nameserver",
             "title": "nameserver",
             "_required_": true,
             "type": "string"
            }
           },
           "additionalProperties": false,
           "_name_": "nameserver",
           "title": "nameserver",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "nameserver"
           ]
          }
         ]
        }
       ],
       "nullable": false,
       "_name_": "filterable_result",
       "description": null
      },
      "return_schema_of_docker_config": {
       "additionalProperties": false,
       "properties": {
        "id": {
         "title": "id",
         "type": "integer",
         "_name_": "id"
        },
        "enable_image_updates": {
         "title": "enable_image_updates",
         "type": "boolean",
         "_name_": "enable_image_updates"
        },
        "dataset": {
         "anyOf": [
          {
           "minLength": 1,
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "title": "dataset",
         "_name_": "dataset"
        },
        "pool": {
         "anyOf": [
          {
           "minLength": 1,
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "title": "pool",
         "_name_": "pool"
        },
        "nvidia": {
         "title": "nvidia",
         "type": "boolean",
         "_name_": "nvidia"
        },
        "address_pools": {
         "items": {
          "type": "object"
         },
         "title": "address_pools",
         "type": "array",
         "_name_": "address_pools"
        },
        "cidr_v6": {
         "title": "cidr_v6",
         "type": "string",
         "_name_": "cidr_v6"
        }
       },
       "required": [
        "id",
        "enable_image_updates",
        "dataset",
        "pool",
        "nvidia",
        "address_pools",
        "cidr_v6"
       ],
       "title": "result",
       "type": "object",
       "_name_": "result",
       "_attrs_order_": [
        "id",
        "enable_image_updates",
        "dataset",
        "pool",
        "nvidia",
        "address_pools",
        "cidr_v6"
       ]
      },
      "docker_update": {
       "additionalProperties": false,
       "properties": {
        "enable_image_updates": {
         "title": "enable_image_updates",
         "type": "boolean",
         "_name_": "enable_image_updates"
        },
        "pool": {
         "anyOf": [
          {
           "minLength": 1,
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "title": "pool",
         "_name_": "pool"
        },
        "nvidia": {
         "title": "nvidia",
         "type": "boolean",
         "_name_": "nvidia"
        },
        "address_pools": {
         "items": {},
         "title": "address_pools",
         "type": "array",
         "_name_": "address_pools"
        },
        "cidr_v6": {
         "format": "ipvanyinterface",
         "title": "cidr_v6",
         "type": "string",
         "_name_": "cidr_v6"
        }
       },
       "title": "docker_update",
       "type": "object",
       "_name_": "docker_update",
       "_attrs_order_": [
        "enable_image_updates",
        "pool",
        "nvidia",
        "address_pools",
        "cidr_v6"
       ]
      },
      "return_schema_of_docker_update": {
       "additionalProperties": false,
       "properties": {
        "id": {
         "title": "id",
         "type": "integer",
         "_name_": "id"
        },
        "enable_image_updates": {
         "title": "enable_image_updates",
         "type": "boolean",
         "_name_": "enable_image_updates"
        },
        "dataset": {
         "anyOf": [
          {
           "minLength": 1,
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "title": "dataset",
         "_name_": "dataset"
        },
        "pool": {
         "anyOf": [
          {
           "minLength": 1,
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "title": "pool",
         "_name_": "pool"
        },
        "nvidia": {
         "title": "nvidia",
         "type": "boolean",
         "_name_": "nvidia"
        },
        "address_pools": {
         "items": {
          "type": "object"
         },
         "title": "address_pools",
         "type": "array",
         "_name_": "address_pools"
        },
        "cidr_v6": {
         "title": "cidr_v6",
         "type": "string",
         "_name_": "cidr_v6"
        }
       },
       "required": [
        "id",
        "enable_image_updates",
        "dataset",
        "pool",
        "nvidia",
        "address_pools",
        "cidr_v6"
       ],
       "title": "result",
       "type": "object",
       "_name_": "result",
       "_attrs_order_": [
        "id",
        "enable_image_updates",
        "dataset",
        "pool",
        "nvidia",
        "address_pools",
        "cidr_v6"
       ]
      },
      "docker_backup": {
       "anyOf": [
        {
         "minLength": 1,
         "type": "string"
        },
        {
         "type": "null"
        }
       ],
       "default": null,
       "title": "backup_name",
       "_name_": "backup_name"
      },
      "return_schema_of_docker_backup": {
       "minLength": 1,
       "title": "result",
       "type": "string",
       "_name_": "result"
      },
      "docker_delete_backup": {
       "minLength": 1,
       "title": "backup_name",
       "type": "string",
       "_name_": "backup_name"
      },
      "return_schema_of_docker_delete_backup": {
       "title": "result",
       "type": "null",
       "_name_": "result"
      },
      "return_schema_of_docker_list_backups": {
       "additionalProperties": {},
       "title": "result",
       "type": "object",
       "_name_": "result"
      },
      "return_schema_of_docker_nvidia_present": {
       "title": "result",
       "type": "boolean",
       "_name_": "result"
      },
      "docker_restore_backup": {
       "minLength": 1,
       "title": "backup_name",
       "type": "string",
       "_name_": "backup_name"
      },
      "return_schema_of_docker_restore_backup": {
       "title": "result",
       "type": "null",
       "_name_": "result"
      },
      "return_schema_of_docker_status": {
       "additionalProperties": false,
       "properties": {
        "description": {
         "title": "description",
         "type": "string",
         "_name_": "description"
        },
        "status": {
         "enum": [
          "PENDING",
          "RUNNING",
          "STOPPED",
          "INITIALIZING",
          "STOPPING",
          "UNCONFIGURED",
          "FAILED"
         ],
         "title": "status",
         "type": "string",
         "_name_": "status"
        }
       },
       "required": [
        "description",
        "status"
       ],
       "title": "result",
       "type": "object",
       "_name_": "result",
       "_attrs_order_": [
        "description",
        "status"
       ]
      },
      "return_schema_of_docker_network_query": {
       "anyOf": [
        {
         "items": [
          {
           "additionalProperties": false,
           "properties": {
            "ipam": {
             "anyOf": [
              {
               "type": "object"
              },
              {
               "type": "null"
              }
             ],
             "title": "ipam",
             "_name_": "ipam",
             "_required_": false
            },
            "labels": {
             "anyOf": [
              {
               "type": "object"
              },
              {
               "type": "null"
              }
             ],
             "title": "labels",
             "_name_": "labels",
             "_required_": false
            },
            "created": {
             "anyOf": [
              {
               "minLength": 1,
               "type": "string"
              },
              {
               "type": "null"
              }
             ],
             "title": "created",
             "_name_": "created",
             "_required_": false
            },
            "driver": {
             "anyOf": [
              {
               "minLength": 1,
               "type": "string"
              },
              {
               "type": "null"
              }
             ],
             "title": "driver",
             "_name_": "driver",
             "_required_": false
            },
            "id": {
             "anyOf": [
              {
               "minLength": 1,
               "type": "string"
              },
              {
               "type": "null"
              }
             ],
             "title": "id",
             "_name_": "id",
             "_required_": false
            },
            "name": {
             "anyOf": [
              {
               "minLength": 1,
               "type": "string"
              },
              {
               "type": "null"
              }
             ],
             "title": "name",
             "_name_": "name",
             "_required_": false
            },
            "scope": {
             "anyOf": [
              {
               "minLength": 1,
               "type": "string"
              },
              {
               "type": "null"
              }
             ],
             "title": "scope",
             "_name_": "scope",
             "_required_": false
            },
            "short_id": {
             "anyOf": [
              {
               "minLength": 1,
               "type": "string"
              },
              {
               "type": "null"
              }
             ],
             "title": "short_id",
             "_name_": "short_id",
             "_required_": false
            }
           },
           "title": "DockerNetworkQueryResultItem",
           "type": "object",
           "_attrs_order_": [
            "ipam",
            "labels",
            "created",
            "driver",
            "id",
            "name",
            "scope",
            "short_id"
           ]
          }
         ],
         "type": "array"
        },
        {
         "additionalProperties": false,
         "properties": {
          "ipam": {
           "anyOf": [
            {
             "type": "object"
            },
            {
             "type": "null"
            }
           ],
           "title": "ipam",
           "_name_": "ipam",
           "_required_": false
          },
          "labels": {
           "anyOf": [
            {
             "type": "object"
            },
            {
             "type": "null"
            }
           ],
           "title": "labels",
           "_name_": "labels",
           "_required_": false
          },
          "created": {
           "anyOf": [
            {
             "minLength": 1,
             "type": "string"
            },
            {
             "type": "null"
            }
           ],
           "title": "created",
           "_name_": "created",
           "_required_": false
          },
          "driver": {
           "anyOf": [
            {
             "minLength": 1,
             "type": "string"
            },
            {
             "type": "null"
            }
           ],
           "title": "driver",
           "_name_": "driver",
           "_required_": false
          },
          "id": {
           "anyOf": [
            {
             "minLength": 1,
             "type": "string"
            },
            {
             "type": "null"
            }
           ],
           "title": "id",
           "_name_": "id",
           "_required_": false
          },
          "name": {
           "anyOf": [
            {
             "minLength": 1,
             "type": "string"
            },
            {
             "type": "null"
            }
           ],
           "title": "name",
           "_name_": "name",
           "_required_": false
          },
          "scope": {
           "anyOf": [
            {
             "minLength": 1,
             "type": "string"
            },
            {
             "type": "null"
            }
           ],
           "title": "scope",
           "_name_": "scope",
           "_required_": false
          },
          "short_id": {
           "anyOf": [
            {
             "minLength": 1,
             "type": "string"
            },
            {
             "type": "null"
            }
           ],
           "title": "short_id",
           "_name_": "short_id",
           "_required_": false
          }
         },
         "title": "DockerNetworkQueryResultItem",
         "type": "object",
         "_attrs_order_": [
          "ipam",
          "labels",
          "created",
          "driver",
          "id",
          "name",
          "scope",
          "short_id"
         ]
        },
        {
         "type": "integer"
        }
       ],
       "title": "result",
       "_name_": "result"
      },
      "docker_network_get_instance_0": {
       "anyOf": [
        {
         "minLength": 1,
         "type": "string"
        },
        {
         "type": "null"
        }
       ],
       "title": "id",
       "_name_": "id"
      },
      "docker_network_get_instance_1": {
       "additionalProperties": false,
       "properties": {
        "relationships": {
         "default": true,
         "title": "relationships",
         "type": "boolean",
         "_name_": "relationships"
        },
        "extend": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "extend",
         "_name_": "extend"
        },
        "extend_context": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "extend_context",
         "_name_": "extend_context"
        },
        "prefix": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "prefix",
         "_name_": "prefix"
        },
        "extra": {
         "default": {},
         "title": "extra",
         "type": "object",
         "_name_": "extra"
        },
        "order_by": {
         "default": [],
         "items": {
          "type": "string"
         },
         "title": "order_by",
         "type": "array",
         "_name_": "order_by"
        },
        "select": {
         "default": [],
         "items": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "items": [
             {}
            ],
            "type": "array"
           }
          ]
         },
         "title": "select",
         "type": "array",
         "_name_": "select"
        },
        "count": {
         "default": false,
         "title": "count",
         "type": "boolean",
         "_name_": "count"
        },
        "get": {
         "default": false,
         "title": "get",
         "type": "boolean",
         "_name_": "get"
        },
        "offset": {
         "default": 0,
         "title": "offset",
         "type": "integer",
         "_name_": "offset"
        },
        "limit": {
         "default": 0,
         "title": "limit",
         "type": "integer",
         "_name_": "limit"
        },
        "force_sql_filters": {
         "default": false,
         "title": "force_sql_filters",
         "type": "boolean",
         "_name_": "force_sql_filters"
        }
       },
       "title": "options",
       "type": "object",
       "default": {},
       "_name_": "options",
       "_attrs_order_": [
        "relationships",
        "extend",
        "extend_context",
        "prefix",
        "extra",
        "order_by",
        "select",
        "count",
        "get",
        "offset",
        "limit",
        "force_sql_filters"
       ]
      },
      "docker_network_get_instance": {
       "type": "object",
       "properties": {
        "id": {
         "$ref": "#/components/schemas/docker_network_get_instance_0"
        },
        "options": {
         "$ref": "#/components/schemas/docker_network_get_instance_1"
        }
       }
      },
      "return_schema_of_docker_network_get_instance": {
       "additionalProperties": false,
       "properties": {
        "ipam": {
         "anyOf": [
          {
           "type": "object"
          },
          {
           "type": "null"
          }
         ],
         "title": "ipam",
         "_name_": "ipam"
        },
        "labels": {
         "anyOf": [
          {
           "type": "object"
          },
          {
           "type": "null"
          }
         ],
         "title": "labels",
         "_name_": "labels"
        },
        "created": {
         "anyOf": [
          {
           "minLength": 1,
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "title": "created",
         "_name_": "created"
        },
        "driver": {
         "anyOf": [
          {
           "minLength": 1,
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "title": "driver",
         "_name_": "driver"
        },
        "id": {
         "anyOf": [
          {
           "minLength": 1,
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "title": "id",
         "_name_": "id"
        },
        "name": {
         "anyOf": [
          {
           "minLength": 1,
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "title": "name",
         "_name_": "name"
        },
        "scope": {
         "anyOf": [
          {
           "minLength": 1,
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "title": "scope",
         "_name_": "scope"
        },
        "short_id": {
         "anyOf": [
          {
           "minLength": 1,
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "title": "short_id",
         "_name_": "short_id"
        }
       },
       "required": [
        "ipam",
        "labels",
        "created",
        "driver",
        "id",
        "name",
        "scope",
        "short_id"
       ],
       "title": "result",
       "type": "object",
       "_name_": "result",
       "_attrs_order_": [
        "ipam",
        "labels",
        "created",
        "driver",
        "id",
        "name",
        "scope",
        "short_id"
       ]
      },
      "enclosure_label_set_0": {
       "title": "id",
       "type": "string",
       "_name_": "id"
      },
      "enclosure_label_set_1": {
       "title": "label",
       "type": "string",
       "_name_": "label"
      },
      "enclosure_label_set": {
       "type": "object",
       "properties": {
        "id": {
         "$ref": "#/components/schemas/enclosure_label_set_0"
        },
        "label": {
         "$ref": "#/components/schemas/enclosure_label_set_1"
        }
       }
      },
      "return_schema_of_enclosure_label_set": {
       "title": "result",
       "type": "null",
       "_name_": "result"
      },
      "return_schema_of_failover_config": {
       "type": "object",
       "properties": {
        "id": {
         "type": "integer",
         "_name_": "id",
         "title": "id"
        },
        "disabled": {
         "type": "boolean",
         "_name_": "disabled",
         "title": "disabled"
        },
        "timeout": {
         "type": "integer",
         "_name_": "timeout",
         "title": "timeout"
        },
        "master": {
         "type": "boolean",
         "_name_": "master",
         "title": "master"
        }
       },
       "additionalProperties": false,
       "_name_": "failover_entry",
       "title": "failover_entry",
       "default": {},
       "_attrs_order_": [
        "id",
        "disabled",
        "timeout",
        "master"
       ]
      },
      "failover_update": {
       "type": "object",
       "properties": {
        "disabled": {
         "type": "boolean",
         "_name_": "disabled",
         "title": "disabled",
         "description": "`disabled` When true indicates that HA will be disabled."
        },
        "timeout": {
         "type": "integer",
         "_name_": "timeout",
         "title": "timeout",
         "description": "`timeout` is the time to WAIT until a failover occurs when a network\n    event occurs on an interface that is marked critical for failover AND\n    HA is enabled and working appropriately."
        },
        "master": {
         "type": "boolean",
         "_name_": "master",
         "title": "master",
         "description": "`master`  Marks the particular node in the chassis as the master node.\n            The standby node will have the opposite value.",
         "nullable": true
        }
       },
       "additionalProperties": false,
       "_name_": "failover_update",
       "title": "failover_update",
       "default": {},
       "_attrs_order_": [
        "disabled",
        "timeout",
        "master"
       ]
      },
      "return_schema_of_failover_update": {
       "type": "object",
       "properties": {
        "id": {
         "type": "integer",
         "_name_": "id",
         "title": "id"
        },
        "disabled": {
         "type": "boolean",
         "_name_": "disabled",
         "title": "disabled",
         "description": "`disabled` When true indicates that HA will be disabled."
        },
        "timeout": {
         "type": "integer",
         "_name_": "timeout",
         "title": "timeout",
         "description": "`timeout` is the time to WAIT until a failover occurs when a network\n    event occurs on an interface that is marked critical for failover AND\n    HA is enabled and working appropriately."
        },
        "master": {
         "type": "boolean",
         "_name_": "master",
         "title": "master",
         "description": "`master`  Marks the particular node in the chassis as the master node.\n            The standby node will have the opposite value."
        }
       },
       "additionalProperties": false,
       "_name_": "failover_update_returns",
       "title": "failover_update_returns",
       "default": {},
       "_attrs_order_": [
        "id",
        "disabled",
        "timeout",
        "master"
       ]
      },
      "failover_call_remote_0": {
       "_name_": "method",
       "title": "method",
       "type": "string",
       "description": "`method` name of the method to be called\n`args` list of arguments to be passed to `method`"
      },
      "failover_call_remote_1": {
       "_name_": "args",
       "title": "args",
       "default": [],
       "type": "array",
       "items": {},
       "description": "`method` name of the method to be called\n`args` list of arguments to be passed to `method`"
      },
      "failover_call_remote_2": {
       "type": "object",
       "properties": {
        "timeout": {
         "type": "integer",
         "_name_": "timeout",
         "title": "timeout",
         "default": 60
        },
        "job": {
         "type": "boolean",
         "_name_": "job",
         "title": "job",
         "default": false
        },
        "job_return": {
         "type": "boolean",
         "_name_": "job_return",
         "title": "job_return",
         "default": null,
         "nullable": true
        },
        "callback": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "integer"
          },
          {
           "type": "boolean"
          },
          {
           "type": "object"
          },
          {
           "type": "array"
          }
         ],
         "nullable": true,
         "_name_": "callback",
         "title": "callback",
         "default": null
        },
        "connect_timeout": {
         "type": "float",
         "_name_": "connect_timeout",
         "title": "connect_timeout",
         "default": 2.0
        },
        "raise_connect_error": {
         "type": "boolean",
         "_name_": "raise_connect_error",
         "title": "raise_connect_error",
         "default": true
        }
       },
       "additionalProperties": false,
       "_name_": "options",
       "title": "options",
       "default": {},
       "_attrs_order_": [
        "timeout",
        "job",
        "job_return",
        "callback",
        "connect_timeout",
        "raise_connect_error"
       ]
      },
      "failover_call_remote": {
       "type": "object",
       "properties": {
        "method": {
         "$ref": "#/components/schemas/failover_call_remote_0"
        },
        "args": {
         "$ref": "#/components/schemas/failover_call_remote_1"
        },
        "options": {
         "$ref": "#/components/schemas/failover_call_remote_2"
        }
       }
      },
      "return_schema_of_failover_call_remote": {
       "anyOf": [
        {
         "type": "string"
        },
        {
         "type": "integer"
        },
        {
         "type": "boolean"
        },
        {
         "type": "object"
        },
        {
         "type": "array"
        }
       ],
       "nullable": true,
       "_name_": "call_remote",
       "title": "call_remote"
      },
      "failover_control_0": {
       "_name_": "action",
       "title": "action",
       "type": "string",
       "enum": [
        "ENABLE",
        "DISABLE"
       ]
      },
      "failover_control_1": {
       "type": "object",
       "properties": {
        "active": {
         "type": "boolean",
         "_name_": "active",
         "title": "active"
        }
       },
       "additionalProperties": false,
       "_name_": "options",
       "title": "options",
       "default": {},
       "_attrs_order_": [
        "active"
       ]
      },
      "failover_control": {
       "type": "object",
       "properties": {
        "action": {
         "$ref": "#/components/schemas/failover_control_0"
        },
        "options": {
         "$ref": "#/components/schemas/failover_control_1"
        }
       }
      },
      "return_schema_of_failover_force_master": {
       "type": "boolean",
       "_name_": "force_master",
       "title": "force_master"
      },
      "return_schema_of_failover_get_ips": {
       "_name_": "ips",
       "title": "ips",
       "default": [],
       "type": "array",
       "items": {
        "_name_": "ip",
        "title": "ip",
        "_required_": false,
        "type": "string"
       }
      },
      "return_schema_of_failover_hardware": {
       "_name_": "hardware",
       "title": "hardware",
       "type": "string"
      },
      "return_schema_of_failover_in_progress": {
       "type": "boolean",
       "_name_": "in_progress",
       "title": "in_progress"
      },
      "return_schema_of_failover_licensed": {
       "type": "boolean",
       "_name_": "licensed",
       "title": "licensed"
      },
      "return_schema_of_failover_node": {
       "_name_": "node",
       "title": "node",
       "type": "string"
      },
      "return_schema_of_failover_status": {
       "_name_": "status",
       "title": "status",
       "type": "string"
      },
      "failover_sync_to_peer": {
       "type": "object",
       "properties": {
        "reboot": {
         "type": "boolean",
         "_name_": "reboot",
         "title": "reboot",
         "default": false
        }
       },
       "additionalProperties": false,
       "_name_": "options",
       "title": "options",
       "default": {},
       "_attrs_order_": [
        "reboot"
       ]
      },
      "failover_unlock": {
       "type": "object",
       "properties": {
        "pools": {
         "_name_": "pools",
         "title": "pools",
         "default": [],
         "type": "array",
         "items": {
          "type": "object",
          "properties": {
           "name": {
            "_name_": "name",
            "title": "name",
            "_required_": true,
            "type": "string"
           },
           "passphrase": {
            "_name_": "passphrase",
            "title": "passphrase",
            "_required_": true,
            "type": "string"
           }
          },
          "additionalProperties": false,
          "_name_": "pool_keys",
          "title": "pool_keys",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "name",
           "passphrase"
          ]
         }
        },
        "datasets": {
         "_name_": "datasets",
         "title": "datasets",
         "default": [],
         "type": "array",
         "items": {
          "type": "object",
          "properties": {
           "name": {
            "_name_": "name",
            "title": "name",
            "_required_": true,
            "type": "string"
           },
           "passphrase": {
            "_name_": "passphrase",
            "title": "passphrase",
            "_required_": true,
            "type": "string"
           }
          },
          "additionalProperties": false,
          "_name_": "dataset_keys",
          "title": "dataset_keys",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "name",
           "passphrase"
          ]
         }
        }
       },
       "additionalProperties": false,
       "_name_": "options",
       "title": "options",
       "default": {},
       "_attrs_order_": [
        "pools",
        "datasets"
       ]
      },
      "return_schema_of_failover_unlock": {
       "type": "boolean",
       "_name_": "unlock",
       "title": "unlock"
      },
      "failover_upgrade": {
       "type": "object",
       "properties": {
        "train": {
         "_name_": "train",
         "title": "train",
         "type": "string"
        },
        "resume": {
         "type": "boolean",
         "_name_": "resume",
         "title": "resume",
         "default": false
        },
        "resume_manual": {
         "type": "boolean",
         "_name_": "resume_manual",
         "title": "resume_manual",
         "default": false
        }
       },
       "additionalProperties": false,
       "_name_": "failover_upgrade",
       "title": "failover_upgrade",
       "default": {},
       "_attrs_order_": [
        "train",
        "resume",
        "resume_manual"
       ]
      },
      "return_schema_of_failover_upgrade": {
       "type": "boolean",
       "_name_": "upgrade",
       "title": "upgrade"
      },
      "return_schema_of_failover_reboot_info": {
       "additionalProperties": false,
       "properties": {
        "this_node": {
         "title": "this_node",
         "_name_": "this_node"
        },
        "other_node": {
         "anyOf": [
          {},
          {
           "type": "null"
          }
         ],
         "title": "other_node",
         "_name_": "other_node"
        }
       },
       "required": [
        "this_node",
        "other_node"
       ],
       "title": "result",
       "type": "object",
       "_name_": "result",
       "_attrs_order_": [
        "this_node",
        "other_node"
       ]
      },
      "return_schema_of_failover_reboot_other_node": {
       "title": "result",
       "type": "null",
       "_name_": "result"
      },
      "filesystem_can_access_as_user_0": {
       "_name_": "username",
       "title": "username",
       "type": "string"
      },
      "filesystem_can_access_as_user_1": {
       "_name_": "path",
       "title": "path",
       "type": "string"
      },
      "filesystem_can_access_as_user_2": {
       "type": "object",
       "properties": {
        "read": {
         "type": "boolean",
         "_name_": "read",
         "title": "read",
         "default": null,
         "nullable": true
        },
        "write": {
         "type": "boolean",
         "_name_": "write",
         "title": "write",
         "default": null,
         "nullable": true
        },
        "execute": {
         "type": "boolean",
         "_name_": "execute",
         "title": "execute",
         "default": null,
         "nullable": true
        }
       },
       "additionalProperties": false,
       "_name_": "permissions",
       "title": "permissions",
       "default": {},
       "_attrs_order_": [
        "read",
        "write",
        "execute"
       ]
      },
      "filesystem_can_access_as_user": {
       "type": "object",
       "properties": {
        "username": {
         "$ref": "#/components/schemas/filesystem_can_access_as_user_0"
        },
        "path": {
         "$ref": "#/components/schemas/filesystem_can_access_as_user_1"
        },
        "permissions": {
         "$ref": "#/components/schemas/filesystem_can_access_as_user_2"
        }
       }
      },
      "return_schema_of_filesystem_can_access_as_user": {
       "type": "boolean",
       "_name_": "can_access_as_user",
       "title": "can_access_as_user"
      },
      "filesystem_chown": {
       "additionalProperties": false,
       "properties": {
        "path": {
         "minLength": 1,
         "title": "path",
         "type": "string",
         "_name_": "path"
        },
        "uid": {
         "anyOf": [
          {
           "maximum": 2147483647,
           "minimum": -1,
           "type": "integer"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "uid",
         "_name_": "uid"
        },
        "user": {
         "anyOf": [
          {
           "minLength": 1,
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "user",
         "_name_": "user"
        },
        "gid": {
         "anyOf": [
          {
           "maximum": 2147483647,
           "minimum": -1,
           "type": "integer"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "gid",
         "_name_": "gid"
        },
        "group": {
         "anyOf": [
          {
           "minLength": 1,
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "group",
         "_name_": "group"
        },
        "options": {
         "default": {
          "recursive": false,
          "traverse": false
         },
         "title": "options",
         "_name_": "options"
        }
       },
       "required": [
        "path"
       ],
       "title": "filesystem_chown",
       "type": "object",
       "_name_": "filesystem_chown",
       "_attrs_order_": [
        "path",
        "uid",
        "user",
        "gid",
        "group",
        "options"
       ]
      },
      "return_schema_of_filesystem_chown": {
       "const": null,
       "enum": [
        null
       ],
       "title": "result",
       "type": "null",
       "_name_": "result"
      },
      "filesystem_get": {
       "minLength": 1,
       "title": "path",
       "type": "string",
       "_name_": "path"
      },
      "return_schema_of_filesystem_get": {
       "const": null,
       "enum": [
        null
       ],
       "title": "result",
       "type": "null",
       "_name_": "result"
      },
      "filesystem_get_zfs_attributes": {
       "minLength": 1,
       "title": "path",
       "type": "string",
       "_name_": "path"
      },
      "return_schema_of_filesystem_get_zfs_attributes": {
       "additionalProperties": false,
       "properties": {
        "readonly": {
         "anyOf": [
          {
           "type": "boolean"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "description": "READONLY MS-DOS attribute. When set, file may not be written to (toggling\ndoes not impact existing file opens). ",
         "title": "readonly",
         "_name_": "readonly"
        },
        "hidden": {
         "anyOf": [
          {
           "type": "boolean"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "description": "HIDDEN MS-DOS attribute. When set, the SMB HIDDEN flag is set and file\nis \"hidden\" from the perspective of SMB clients. ",
         "title": "hidden",
         "_name_": "hidden"
        },
        "system": {
         "anyOf": [
          {
           "type": "boolean"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "description": "SYSTEM MS-DOS attribute. Is presented to SMB clients, but has no impact on local filesystem. ",
         "title": "system",
         "_name_": "system"
        },
        "archive": {
         "anyOf": [
          {
           "type": "boolean"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "description": "ARCHIVE MS-DOS attribute. Value is reset to True whenever file is modified. ",
         "title": "archive",
         "_name_": "archive"
        },
        "immutable": {
         "anyOf": [
          {
           "type": "boolean"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "description": "File may not be altered or deleted. Also appears as IMMUTABLE in attributes in\n`filesystem.stat` output and as STATX_ATTR_IMMUTABLE in statx() response. ",
         "title": "immutable",
         "_name_": "immutable"
        },
        "nounlink": {
         "anyOf": [
          {
           "type": "boolean"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "description": "File may be altered but not deleted. ",
         "title": "nounlink",
         "_name_": "nounlink"
        },
        "appendonly": {
         "anyOf": [
          {
           "type": "boolean"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "description": "File may only be opened with O_APPEND flag. Also appears as APPEND in\nattributes in `filesystem.stat` output and as STATX_ATTR_APPEND in statx() response. ",
         "title": "appendonly",
         "_name_": "appendonly"
        },
        "offline": {
         "anyOf": [
          {
           "type": "boolean"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "description": "OFFLINE MS-DOS attribute. Is presented to SMB clients, but has no impact on local filesystem. ",
         "title": "offline",
         "_name_": "offline"
        },
        "sparse": {
         "anyOf": [
          {
           "type": "boolean"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "description": "SPARSE MS-DOS attribute. Is presented to SMB clients, but has no impact on local filesystem. ",
         "title": "sparse",
         "_name_": "sparse"
        }
       },
       "title": "result",
       "type": "object",
       "_name_": "result",
       "_attrs_order_": [
        "readonly",
        "hidden",
        "system",
        "archive",
        "immutable",
        "nounlink",
        "appendonly",
        "offline",
        "sparse"
       ]
      },
      "filesystem_getacl_0": {
       "minLength": 1,
       "title": "path",
       "type": "string",
       "_name_": "path"
      },
      "filesystem_getacl_1": {
       "default": true,
       "title": "simplified",
       "type": "boolean",
       "_name_": "simplified"
      },
      "filesystem_getacl_2": {
       "default": false,
       "title": "resolve_ids",
       "type": "boolean",
       "_name_": "resolve_ids"
      },
      "filesystem_getacl": {
       "type": "object",
       "properties": {
        "path": {
         "$ref": "#/components/schemas/filesystem_getacl_0"
        },
        "simplified": {
         "$ref": "#/components/schemas/filesystem_getacl_1"
        },
        "resolve_ids": {
         "$ref": "#/components/schemas/filesystem_getacl_2"
        }
       }
      },
      "return_schema_of_filesystem_getacl": {
       "anyOf": [
        {
         "additionalProperties": false,
         "properties": {
          "path": {
           "minLength": 1,
           "title": "path",
           "type": "string",
           "_name_": "path",
           "_required_": true
          },
          "user": {
           "anyOf": [
            {
             "minLength": 1,
             "type": "string"
            },
            {
             "type": "null"
            }
           ],
           "title": "user",
           "_name_": "user",
           "_required_": true
          },
          "group": {
           "anyOf": [
            {
             "minLength": 1,
             "type": "string"
            },
            {
             "type": "null"
            }
           ],
           "title": "group",
           "_name_": "group",
           "_required_": true
          },
          "uid": {
           "anyOf": [
            {
             "maximum": 2147483647,
             "minimum": -1,
             "type": "integer"
            },
            {
             "type": "null"
            }
           ],
           "title": "uid",
           "_name_": "uid",
           "_required_": true
          },
          "gid": {
           "anyOf": [
            {
             "maximum": 2147483647,
             "minimum": -1,
             "type": "integer"
            },
            {
             "type": "null"
            }
           ],
           "title": "gid",
           "_name_": "gid",
           "_required_": true
          },
          "acltype": {
           "const": "NFS4",
           "enum": [
            "NFS4"
           ],
           "title": "acltype",
           "type": "string",
           "_name_": "acltype",
           "_required_": true
          },
          "acl": {
           "items": [
            {}
           ],
           "title": "acl",
           "type": "array",
           "_name_": "acl",
           "_required_": true
          },
          "aclflags": {
           "title": "aclflags",
           "_name_": "aclflags",
           "_required_": true
          },
          "trivial": {
           "title": "trivial",
           "type": "boolean",
           "_name_": "trivial",
           "_required_": true
          }
         },
         "required": [
          "path",
          "user",
          "group",
          "uid",
          "gid",
          "acltype",
          "acl",
          "aclflags",
          "trivial"
         ],
         "title": "NFS4ACLResult",
         "type": "object",
         "_attrs_order_": [
          "path",
          "user",
          "group",
          "uid",
          "gid",
          "acltype",
          "acl",
          "aclflags",
          "trivial"
         ]
        },
        {
         "additionalProperties": false,
         "properties": {
          "path": {
           "minLength": 1,
           "title": "path",
           "type": "string",
           "_name_": "path",
           "_required_": true
          },
          "user": {
           "anyOf": [
            {
             "minLength": 1,
             "type": "string"
            },
            {
             "type": "null"
            }
           ],
           "title": "user",
           "_name_": "user",
           "_required_": true
          },
          "group": {
           "anyOf": [
            {
             "minLength": 1,
             "type": "string"
            },
            {
             "type": "null"
            }
           ],
           "title": "group",
           "_name_": "group",
           "_required_": true
          },
          "uid": {
           "anyOf": [
            {
             "maximum": 2147483647,
             "minimum": -1,
             "type": "integer"
            },
            {
             "type": "null"
            }
           ],
           "title": "uid",
           "_name_": "uid",
           "_required_": true
          },
          "gid": {
           "anyOf": [
            {
             "maximum": 2147483647,
             "minimum": -1,
             "type": "integer"
            },
            {
             "type": "null"
            }
           ],
           "title": "gid",
           "_name_": "gid",
           "_required_": true
          },
          "acltype": {
           "const": "POSIX1E",
           "enum": [
            "POSIX1E"
           ],
           "title": "acltype",
           "type": "string",
           "_name_": "acltype",
           "_required_": true
          },
          "acl": {
           "items": [
            {}
           ],
           "title": "acl",
           "type": "array",
           "_name_": "acl",
           "_required_": true
          },
          "trivial": {
           "title": "trivial",
           "type": "boolean",
           "_name_": "trivial",
           "_required_": true
          }
         },
         "required": [
          "path",
          "user",
          "group",
          "uid",
          "gid",
          "acltype",
          "acl",
          "trivial"
         ],
         "title": "POSIXACLResult",
         "type": "object",
         "_attrs_order_": [
          "path",
          "user",
          "group",
          "uid",
          "gid",
          "acltype",
          "acl",
          "trivial"
         ]
        },
        {
         "additionalProperties": false,
         "properties": {
          "path": {
           "minLength": 1,
           "title": "path",
           "type": "string",
           "_name_": "path",
           "_required_": true
          },
          "user": {
           "anyOf": [
            {
             "minLength": 1,
             "type": "string"
            },
            {
             "type": "null"
            }
           ],
           "title": "user",
           "_name_": "user",
           "_required_": true
          },
          "group": {
           "anyOf": [
            {
             "minLength": 1,
             "type": "string"
            },
            {
             "type": "null"
            }
           ],
           "title": "group",
           "_name_": "group",
           "_required_": true
          },
          "uid": {
           "anyOf": [
            {
             "maximum": 2147483647,
             "minimum": -1,
             "type": "integer"
            },
            {
             "type": "null"
            }
           ],
           "title": "uid",
           "_name_": "uid",
           "_required_": true
          },
          "gid": {
           "anyOf": [
            {
             "maximum": 2147483647,
             "minimum": -1,
             "type": "integer"
            },
            {
             "type": "null"
            }
           ],
           "title": "gid",
           "_name_": "gid",
           "_required_": true
          },
          "acltype": {
           "const": "DISABLED",
           "enum": [
            "DISABLED"
           ],
           "title": "acltype",
           "type": "string",
           "_name_": "acltype",
           "_required_": true
          },
          "acl": {
           "const": null,
           "enum": [
            null
           ],
           "title": "acl",
           "type": "null",
           "_name_": "acl",
           "_required_": true
          },
          "trivial": {
           "const": true,
           "enum": [
            true
           ],
           "title": "trivial",
           "type": "boolean",
           "_name_": "trivial",
           "_required_": true
          }
         },
         "required": [
          "path",
          "user",
          "group",
          "uid",
          "gid",
          "acltype",
          "acl",
          "trivial"
         ],
         "title": "DISABLED_ACLResult",
         "type": "object",
         "_attrs_order_": [
          "path",
          "user",
          "group",
          "uid",
          "gid",
          "acltype",
          "acl",
          "trivial"
         ]
        }
       ],
       "title": "result",
       "_name_": "result"
      },
      "filesystem_listdir_0": {
       "minLength": 1,
       "title": "path",
       "type": "string",
       "_name_": "path"
      },
      "filesystem_listdir_1": {
       "default": [],
       "items": {},
       "title": "query_filters",
       "type": "array",
       "_name_": "query_filters"
      },
      "filesystem_listdir_2": {
       "additionalProperties": false,
       "properties": {
        "relationships": {
         "default": true,
         "title": "relationships",
         "type": "boolean",
         "_name_": "relationships"
        },
        "extend": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "extend",
         "_name_": "extend"
        },
        "extend_context": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "extend_context",
         "_name_": "extend_context"
        },
        "prefix": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "prefix",
         "_name_": "prefix"
        },
        "extra": {
         "default": {},
         "title": "extra",
         "type": "object",
         "_name_": "extra"
        },
        "order_by": {
         "default": [],
         "items": {
          "type": "string"
         },
         "title": "order_by",
         "type": "array",
         "_name_": "order_by"
        },
        "select": {
         "default": [],
         "items": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "items": [
             {}
            ],
            "type": "array"
           }
          ]
         },
         "title": "select",
         "type": "array",
         "_name_": "select"
        },
        "count": {
         "default": false,
         "title": "count",
         "type": "boolean",
         "_name_": "count"
        },
        "get": {
         "default": false,
         "title": "get",
         "type": "boolean",
         "_name_": "get"
        },
        "offset": {
         "default": 0,
         "title": "offset",
         "type": "integer",
         "_name_": "offset"
        },
        "limit": {
         "default": 0,
         "title": "limit",
         "type": "integer",
         "_name_": "limit"
        },
        "force_sql_filters": {
         "default": false,
         "title": "force_sql_filters",
         "type": "boolean",
         "_name_": "force_sql_filters"
        }
       },
       "title": "query_options",
       "type": "object",
       "default": {
        "relationships": true,
        "extend": null,
        "extend_context": null,
        "prefix": null,
        "extra": {},
        "order_by": [],
        "select": [],
        "count": false,
        "get": false,
        "offset": 0,
        "limit": 0,
        "force_sql_filters": false
       },
       "_name_": "query_options",
       "_attrs_order_": [
        "relationships",
        "extend",
        "extend_context",
        "prefix",
        "extra",
        "order_by",
        "select",
        "count",
        "get",
        "offset",
        "limit",
        "force_sql_filters"
       ]
      },
      "filesystem_listdir": {
       "type": "object",
       "properties": {
        "path": {
         "$ref": "#/components/schemas/filesystem_listdir_0"
        },
        "query_filters": {
         "$ref": "#/components/schemas/filesystem_listdir_1"
        },
        "query_options": {
         "$ref": "#/components/schemas/filesystem_listdir_2"
        }
       }
      },
      "return_schema_of_filesystem_listdir": {
       "anyOf": [
        {
         "items": [
          {
           "additionalProperties": false,
           "properties": {
            "name": {
             "description": "Entry's base name. ",
             "minLength": 1,
             "title": "name",
             "type": "string",
             "_name_": "name",
             "_required_": false
            },
            "path": {
             "description": "Entry's full path. ",
             "minLength": 1,
             "title": "path",
             "type": "string",
             "_name_": "path",
             "_required_": false
            },
            "realpath": {
             "description": "Canonical path of the entry, eliminating any symbolic links",
             "minLength": 1,
             "title": "realpath",
             "type": "string",
             "_name_": "realpath",
             "_required_": false
            },
            "type": {
             "enum": [
              "DIRECTORY",
              "FILE",
              "SYMLINK",
              "OTHER"
             ],
             "title": "type",
             "type": "string",
             "_name_": "type",
             "_required_": false
            },
            "size": {
             "description": "Size in bytes of a plain file. This corresonds with stx_size. ",
             "title": "size",
             "type": "integer",
             "_name_": "size",
             "_required_": false
            },
            "allocation_size": {
             "description": "Allocated size of file. Calculated by multiplying stx_blocks by 512. ",
             "title": "allocation_size",
             "type": "integer",
             "_name_": "allocation_size",
             "_required_": false
            },
            "mode": {
             "description": "Entry's mode including file type information and file permission bits. This corresponds with stx_mode. ",
             "title": "mode",
             "type": "integer",
             "_name_": "mode",
             "_required_": false
            },
            "mount_id": {
             "description": "The mount ID of the mount containing the entry. This corresponds to the number in first\nfield of /proc/self/mountinfo and stx_mnt_id. ",
             "title": "mount_id",
             "type": "integer",
             "_name_": "mount_id",
             "_required_": false
            },
            "acl": {
             "description": "Specifies whether ACL is present on the entry. If this is the case then file permission\nbits as reported in `mode` may not be representative of the actual permissions. ",
             "title": "acl",
             "type": "boolean",
             "_name_": "acl",
             "_required_": false
            },
            "uid": {
             "description": "User ID of the entry's owner. This corresponds with stx_uid. ",
             "title": "uid",
             "type": "integer",
             "_name_": "uid",
             "_required_": false
            },
            "gid": {
             "description": "Group ID of the entry's owner. This corresponds with stx_gid. ",
             "title": "gid",
             "type": "integer",
             "_name_": "gid",
             "_required_": false
            },
            "is_mountpoint": {
             "description": "Specifies whether the entry is also the mountpoint of a filesystem. ",
             "title": "is_mountpoint",
             "type": "boolean",
             "_name_": "is_mountpoint",
             "_required_": false
            },
            "is_ctldir": {
             "description": "Specifies whether the entry is located within the ZFS ctldir (for example a snapshot). ",
             "title": "is_ctldir",
             "type": "boolean",
             "_name_": "is_ctldir",
             "_required_": false
            },
            "attributes": {
             "description": "Extra file attribute indicators for entry as returned by statx. Expanded from stx_attributes. ",
             "items": [
              {
               "enum": [
                "COMPRESSED",
                "APPEND",
                "NODUMP",
                "IMMUTABLE",
                "AUTOMOUNT",
                "MOUNT_ROOT",
                "VERIFY",
                "DAX"
               ],
               "type": "string"
              }
             ],
             "title": "attributes",
             "type": "array",
             "_name_": "attributes",
             "_required_": false
            },
            "xattrs": {
             "description": "List of xattr names of extended attributes on file. ",
             "items": [
              {
               "minLength": 1,
               "type": "string"
              }
             ],
             "title": "xattrs",
             "type": "array",
             "_name_": "xattrs",
             "_required_": false
            },
            "zfs_attrs": {
             "anyOf": [
              {
               "items": [
                {
                 "enum": [
                  "READONLY",
                  "HIDDEN",
                  "SYSTEM",
                  "ARCHIVE",
                  "IMMUTABLE",
                  "NOUNLINK",
                  "APPENDONLY",
                  "NODUMP",
                  "OPAQUE",
                  "AV_QUARANTINED",
                  "AV_MODIFIED",
                  "REPARSE",
                  "OFFLINE",
                  "SPARSE"
                 ],
                 "type": "string"
                }
               ],
               "type": "array"
              },
              {
               "type": "null"
              }
             ],
             "description": "List of extra ZFS-related file attribute indicators on file. Will be None type if filesystem is not ZFS. ",
             "title": "zfs_attrs",
             "_name_": "zfs_attrs",
             "_required_": false
            }
           },
           "title": "FilesystemDirQueryResultItem",
           "type": "object",
           "_attrs_order_": [
            "name",
            "path",
            "realpath",
            "type",
            "size",
            "allocation_size",
            "mode",
            "mount_id",
            "acl",
            "uid",
            "gid",
            "is_mountpoint",
            "is_ctldir",
            "attributes",
            "xattrs",
            "zfs_attrs"
           ]
          }
         ],
         "type": "array"
        },
        {
         "additionalProperties": false,
         "properties": {
          "name": {
           "description": "Entry's base name. ",
           "minLength": 1,
           "title": "name",
           "type": "string",
           "_name_": "name",
           "_required_": false
          },
          "path": {
           "description": "Entry's full path. ",
           "minLength": 1,
           "title": "path",
           "type": "string",
           "_name_": "path",
           "_required_": false
          },
          "realpath": {
           "description": "Canonical path of the entry, eliminating any symbolic links",
           "minLength": 1,
           "title": "realpath",
           "type": "string",
           "_name_": "realpath",
           "_required_": false
          },
          "type": {
           "enum": [
            "DIRECTORY",
            "FILE",
            "SYMLINK",
            "OTHER"
           ],
           "title": "type",
           "type": "string",
           "_name_": "type",
           "_required_": false
          },
          "size": {
           "description": "Size in bytes of a plain file. This corresonds with stx_size. ",
           "title": "size",
           "type": "integer",
           "_name_": "size",
           "_required_": false
          },
          "allocation_size": {
           "description": "Allocated size of file. Calculated by multiplying stx_blocks by 512. ",
           "title": "allocation_size",
           "type": "integer",
           "_name_": "allocation_size",
           "_required_": false
          },
          "mode": {
           "description": "Entry's mode including file type information and file permission bits. This corresponds with stx_mode. ",
           "title": "mode",
           "type": "integer",
           "_name_": "mode",
           "_required_": false
          },
          "mount_id": {
           "description": "The mount ID of the mount containing the entry. This corresponds to the number in first\nfield of /proc/self/mountinfo and stx_mnt_id. ",
           "title": "mount_id",
           "type": "integer",
           "_name_": "mount_id",
           "_required_": false
          },
          "acl": {
           "description": "Specifies whether ACL is present on the entry. If this is the case then file permission\nbits as reported in `mode` may not be representative of the actual permissions. ",
           "title": "acl",
           "type": "boolean",
           "_name_": "acl",
           "_required_": false
          },
          "uid": {
           "description": "User ID of the entry's owner. This corresponds with stx_uid. ",
           "title": "uid",
           "type": "integer",
           "_name_": "uid",
           "_required_": false
          },
          "gid": {
           "description": "Group ID of the entry's owner. This corresponds with stx_gid. ",
           "title": "gid",
           "type": "integer",
           "_name_": "gid",
           "_required_": false
          },
          "is_mountpoint": {
           "description": "Specifies whether the entry is also the mountpoint of a filesystem. ",
           "title": "is_mountpoint",
           "type": "boolean",
           "_name_": "is_mountpoint",
           "_required_": false
          },
          "is_ctldir": {
           "description": "Specifies whether the entry is located within the ZFS ctldir (for example a snapshot). ",
           "title": "is_ctldir",
           "type": "boolean",
           "_name_": "is_ctldir",
           "_required_": false
          },
          "attributes": {
           "description": "Extra file attribute indicators for entry as returned by statx. Expanded from stx_attributes. ",
           "items": [
            {
             "enum": [
              "COMPRESSED",
              "APPEND",
              "NODUMP",
              "IMMUTABLE",
              "AUTOMOUNT",
              "MOUNT_ROOT",
              "VERIFY",
              "DAX"
             ],
             "type": "string"
            }
           ],
           "title": "attributes",
           "type": "array",
           "_name_": "attributes",
           "_required_": false
          },
          "xattrs": {
           "description": "List of xattr names of extended attributes on file. ",
           "items": [
            {
             "minLength": 1,
             "type": "string"
            }
           ],
           "title": "xattrs",
           "type": "array",
           "_name_": "xattrs",
           "_required_": false
          },
          "zfs_attrs": {
           "anyOf": [
            {
             "items": [
              {
               "enum": [
                "READONLY",
                "HIDDEN",
                "SYSTEM",
                "ARCHIVE",
                "IMMUTABLE",
                "NOUNLINK",
                "APPENDONLY",
                "NODUMP",
                "OPAQUE",
                "AV_QUARANTINED",
                "AV_MODIFIED",
                "REPARSE",
                "OFFLINE",
                "SPARSE"
               ],
               "type": "string"
              }
             ],
             "type": "array"
            },
            {
             "type": "null"
            }
           ],
           "description": "List of extra ZFS-related file attribute indicators on file. Will be None type if filesystem is not ZFS. ",
           "title": "zfs_attrs",
           "_name_": "zfs_attrs",
           "_required_": false
          }
         },
         "title": "FilesystemDirQueryResultItem",
         "type": "object",
         "_attrs_order_": [
          "name",
          "path",
          "realpath",
          "type",
          "size",
          "allocation_size",
          "mode",
          "mount_id",
          "acl",
          "uid",
          "gid",
          "is_mountpoint",
          "is_ctldir",
          "attributes",
          "xattrs",
          "zfs_attrs"
         ]
        },
        {
         "type": "integer"
        }
       ],
       "title": "result",
       "_name_": "result"
      },
      "filesystem_mkdir": {
       "additionalProperties": false,
       "properties": {
        "path": {
         "minLength": 1,
         "title": "path",
         "type": "string",
         "_name_": "path"
        },
        "options": {
         "default": {
          "mode": "755",
          "raise_chmod_error": true
         },
         "title": "options",
         "_name_": "options"
        }
       },
       "required": [
        "path"
       ],
       "title": "filesystem_mkdir",
       "type": "object",
       "_name_": "filesystem_mkdir",
       "_attrs_order_": [
        "path",
        "options"
       ]
      },
      "return_schema_of_filesystem_mkdir": {
       "additionalProperties": false,
       "properties": {
        "name": {
         "description": "Entry's base name. ",
         "minLength": 1,
         "title": "name",
         "type": "string",
         "_name_": "name"
        },
        "path": {
         "description": "Entry's full path. ",
         "minLength": 1,
         "title": "path",
         "type": "string",
         "_name_": "path"
        },
        "realpath": {
         "description": "Canonical path of the entry, eliminating any symbolic links",
         "minLength": 1,
         "title": "realpath",
         "type": "string",
         "_name_": "realpath"
        },
        "type": {
         "enum": [
          "DIRECTORY",
          "FILE",
          "SYMLINK",
          "OTHER"
         ],
         "title": "type",
         "type": "string",
         "_name_": "type"
        },
        "size": {
         "description": "Size in bytes of a plain file. This corresonds with stx_size. ",
         "title": "size",
         "type": "integer",
         "_name_": "size"
        },
        "allocation_size": {
         "description": "Allocated size of file. Calculated by multiplying stx_blocks by 512. ",
         "title": "allocation_size",
         "type": "integer",
         "_name_": "allocation_size"
        },
        "mode": {
         "description": "Entry's mode including file type information and file permission bits. This corresponds with stx_mode. ",
         "title": "mode",
         "type": "integer",
         "_name_": "mode"
        },
        "mount_id": {
         "description": "The mount ID of the mount containing the entry. This corresponds to the number in first\nfield of /proc/self/mountinfo and stx_mnt_id. ",
         "title": "mount_id",
         "type": "integer",
         "_name_": "mount_id"
        },
        "acl": {
         "description": "Specifies whether ACL is present on the entry. If this is the case then file permission\nbits as reported in `mode` may not be representative of the actual permissions. ",
         "title": "acl",
         "type": "boolean",
         "_name_": "acl"
        },
        "uid": {
         "description": "User ID of the entry's owner. This corresponds with stx_uid. ",
         "title": "uid",
         "type": "integer",
         "_name_": "uid"
        },
        "gid": {
         "description": "Group ID of the entry's owner. This corresponds with stx_gid. ",
         "title": "gid",
         "type": "integer",
         "_name_": "gid"
        },
        "is_mountpoint": {
         "description": "Specifies whether the entry is also the mountpoint of a filesystem. ",
         "title": "is_mountpoint",
         "type": "boolean",
         "_name_": "is_mountpoint"
        },
        "is_ctldir": {
         "description": "Specifies whether the entry is located within the ZFS ctldir (for example a snapshot). ",
         "title": "is_ctldir",
         "type": "boolean",
         "_name_": "is_ctldir"
        },
        "attributes": {
         "description": "Extra file attribute indicators for entry as returned by statx. Expanded from stx_attributes. ",
         "items": {
          "enum": [
           "COMPRESSED",
           "APPEND",
           "NODUMP",
           "IMMUTABLE",
           "AUTOMOUNT",
           "MOUNT_ROOT",
           "VERIFY",
           "DAX"
          ],
          "type": "string"
         },
         "title": "attributes",
         "type": "array",
         "_name_": "attributes"
        },
        "xattrs": {
         "description": "List of xattr names of extended attributes on file. ",
         "items": {
          "minLength": 1,
          "type": "string"
         },
         "title": "xattrs",
         "type": "array",
         "_name_": "xattrs"
        },
        "zfs_attrs": {
         "anyOf": [
          {
           "items": [
            {
             "enum": [
              "READONLY",
              "HIDDEN",
              "SYSTEM",
              "ARCHIVE",
              "IMMUTABLE",
              "NOUNLINK",
              "APPENDONLY",
              "NODUMP",
              "OPAQUE",
              "AV_QUARANTINED",
              "AV_MODIFIED",
              "REPARSE",
              "OFFLINE",
              "SPARSE"
             ],
             "type": "string"
            }
           ],
           "type": "array"
          },
          {
           "type": "null"
          }
         ],
         "description": "List of extra ZFS-related file attribute indicators on file. Will be None type if filesystem is not ZFS. ",
         "title": "zfs_attrs",
         "_name_": "zfs_attrs"
        }
       },
       "required": [
        "name",
        "path",
        "realpath",
        "type",
        "size",
        "allocation_size",
        "mode",
        "mount_id",
        "acl",
        "uid",
        "gid",
        "is_mountpoint",
        "is_ctldir",
        "attributes",
        "xattrs",
        "zfs_attrs"
       ],
       "title": "result",
       "type": "object",
       "_name_": "result",
       "_attrs_order_": [
        "name",
        "path",
        "realpath",
        "type",
        "size",
        "allocation_size",
        "mode",
        "mount_id",
        "acl",
        "uid",
        "gid",
        "is_mountpoint",
        "is_ctldir",
        "attributes",
        "xattrs",
        "zfs_attrs"
       ]
      },
      "filesystem_put_0": {
       "minLength": 1,
       "title": "path",
       "type": "string",
       "_name_": "path"
      },
      "filesystem_put_1": {
       "additionalProperties": false,
       "properties": {
        "append": {
         "default": false,
         "title": "append",
         "type": "boolean",
         "_name_": "append"
        },
        "mode": {
         "anyOf": [
          {
           "type": "integer"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "mode",
         "_name_": "mode"
        }
       },
       "title": "options",
       "type": "object",
       "default": {
        "append": false,
        "mode": null
       },
       "_name_": "options",
       "_attrs_order_": [
        "append",
        "mode"
       ]
      },
      "filesystem_put": {
       "type": "object",
       "properties": {
        "path": {
         "$ref": "#/components/schemas/filesystem_put_0"
        },
        "options": {
         "$ref": "#/components/schemas/filesystem_put_1"
        }
       }
      },
      "return_schema_of_filesystem_put": {
       "const": true,
       "enum": [
        true
       ],
       "title": "result",
       "type": "boolean",
       "_name_": "result"
      },
      "filesystem_set_zfs_attributes": {
       "additionalProperties": false,
       "properties": {
        "path": {
         "minLength": 1,
         "title": "path",
         "type": "string",
         "_name_": "path"
        },
        "zfs_file_attributes": {
         "title": "zfs_file_attributes",
         "_name_": "zfs_file_attributes"
        }
       },
       "required": [
        "path",
        "zfs_file_attributes"
       ],
       "title": "set_zfs_file_attributes",
       "type": "object",
       "_name_": "set_zfs_file_attributes",
       "_attrs_order_": [
        "path",
        "zfs_file_attributes"
       ]
      },
      "return_schema_of_filesystem_set_zfs_attributes": {
       "additionalProperties": false,
       "properties": {
        "readonly": {
         "anyOf": [
          {
           "type": "boolean"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "description": "READONLY MS-DOS attribute. When set, file may not be written to (toggling\ndoes not impact existing file opens). ",
         "title": "readonly",
         "_name_": "readonly"
        },
        "hidden": {
         "anyOf": [
          {
           "type": "boolean"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "description": "HIDDEN MS-DOS attribute. When set, the SMB HIDDEN flag is set and file\nis \"hidden\" from the perspective of SMB clients. ",
         "title": "hidden",
         "_name_": "hidden"
        },
        "system": {
         "anyOf": [
          {
           "type": "boolean"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "description": "SYSTEM MS-DOS attribute. Is presented to SMB clients, but has no impact on local filesystem. ",
         "title": "system",
         "_name_": "system"
        },
        "archive": {
         "anyOf": [
          {
           "type": "boolean"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "description": "ARCHIVE MS-DOS attribute. Value is reset to True whenever file is modified. ",
         "title": "archive",
         "_name_": "archive"
        },
        "immutable": {
         "anyOf": [
          {
           "type": "boolean"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "description": "File may not be altered or deleted. Also appears as IMMUTABLE in attributes in\n`filesystem.stat` output and as STATX_ATTR_IMMUTABLE in statx() response. ",
         "title": "immutable",
         "_name_": "immutable"
        },
        "nounlink": {
         "anyOf": [
          {
           "type": "boolean"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "description": "File may be altered but not deleted. ",
         "title": "nounlink",
         "_name_": "nounlink"
        },
        "appendonly": {
         "anyOf": [
          {
           "type": "boolean"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "description": "File may only be opened with O_APPEND flag. Also appears as APPEND in\nattributes in `filesystem.stat` output and as STATX_ATTR_APPEND in statx() response. ",
         "title": "appendonly",
         "_name_": "appendonly"
        },
        "offline": {
         "anyOf": [
          {
           "type": "boolean"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "description": "OFFLINE MS-DOS attribute. Is presented to SMB clients, but has no impact on local filesystem. ",
         "title": "offline",
         "_name_": "offline"
        },
        "sparse": {
         "anyOf": [
          {
           "type": "boolean"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "description": "SPARSE MS-DOS attribute. Is presented to SMB clients, but has no impact on local filesystem. ",
         "title": "sparse",
         "_name_": "sparse"
        }
       },
       "title": "result",
       "type": "object",
       "_name_": "result",
       "_attrs_order_": [
        "readonly",
        "hidden",
        "system",
        "archive",
        "immutable",
        "nounlink",
        "appendonly",
        "offline",
        "sparse"
       ]
      },
      "filesystem_setacl": {
       "additionalProperties": false,
       "properties": {
        "path": {
         "minLength": 1,
         "title": "path",
         "type": "string",
         "_name_": "path"
        },
        "dacl": {
         "anyOf": [
          {
           "items": [
            {}
           ],
           "type": "array"
          },
          {
           "items": [
            {}
           ],
           "type": "array"
          }
         ],
         "title": "dacl",
         "_name_": "dacl"
        },
        "options": {
         "default": {
          "stripacl": false,
          "recursive": false,
          "traverse": false,
          "canonicalize": true,
          "validate_effective_acl": true
         },
         "title": "options",
         "_name_": "options"
        },
        "nfs41_flags": {
         "default": {
          "autoinherit": false,
          "protected": false,
          "defaulted": false
         },
         "title": "nfs41_flags",
         "_name_": "nfs41_flags"
        },
        "uid": {
         "anyOf": [
          {
           "maximum": 2147483647,
           "minimum": -1,
           "type": "integer"
          },
          {
           "type": "null"
          }
         ],
         "default": -1,
         "title": "uid",
         "_name_": "uid"
        },
        "user": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "user",
         "_name_": "user"
        },
        "gid": {
         "anyOf": [
          {
           "maximum": 2147483647,
           "minimum": -1,
           "type": "integer"
          },
          {
           "type": "null"
          }
         ],
         "default": -1,
         "title": "gid",
         "_name_": "gid"
        },
        "group": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "group",
         "_name_": "group"
        },
        "acltype": {
         "anyOf": [
          {
           "enum": [
            "NFS4",
            "POSIX1E"
           ],
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "acltype",
         "_name_": "acltype"
        }
       },
       "required": [
        "path",
        "dacl"
       ],
       "title": "filesystem_acl",
       "type": "object",
       "_name_": "filesystem_acl",
       "_attrs_order_": [
        "path",
        "dacl",
        "options",
        "nfs41_flags",
        "uid",
        "user",
        "gid",
        "group",
        "acltype"
       ]
      },
      "return_schema_of_filesystem_setacl": {
       "anyOf": [
        {
         "additionalProperties": false,
         "properties": {
          "path": {
           "minLength": 1,
           "title": "path",
           "type": "string",
           "_name_": "path",
           "_required_": true
          },
          "user": {
           "anyOf": [
            {
             "minLength": 1,
             "type": "string"
            },
            {
             "type": "null"
            }
           ],
           "title": "user",
           "_name_": "user",
           "_required_": true
          },
          "group": {
           "anyOf": [
            {
             "minLength": 1,
             "type": "string"
            },
            {
             "type": "null"
            }
           ],
           "title": "group",
           "_name_": "group",
           "_required_": true
          },
          "uid": {
           "anyOf": [
            {
             "maximum": 2147483647,
             "minimum": -1,
             "type": "integer"
            },
            {
             "type": "null"
            }
           ],
           "title": "uid",
           "_name_": "uid",
           "_required_": true
          },
          "gid": {
           "anyOf": [
            {
             "maximum": 2147483647,
             "minimum": -1,
             "type": "integer"
            },
            {
             "type": "null"
            }
           ],
           "title": "gid",
           "_name_": "gid",
           "_required_": true
          },
          "acltype": {
           "const": "NFS4",
           "enum": [
            "NFS4"
           ],
           "title": "acltype",
           "type": "string",
           "_name_": "acltype",
           "_required_": true
          },
          "acl": {
           "items": [
            {}
           ],
           "title": "acl",
           "type": "array",
           "_name_": "acl",
           "_required_": true
          },
          "aclflags": {
           "title": "aclflags",
           "_name_": "aclflags",
           "_required_": true
          },
          "trivial": {
           "title": "trivial",
           "type": "boolean",
           "_name_": "trivial",
           "_required_": true
          }
         },
         "required": [
          "path",
          "user",
          "group",
          "uid",
          "gid",
          "acltype",
          "acl",
          "aclflags",
          "trivial"
         ],
         "title": "NFS4ACLResult",
         "type": "object",
         "_attrs_order_": [
          "path",
          "user",
          "group",
          "uid",
          "gid",
          "acltype",
          "acl",
          "aclflags",
          "trivial"
         ]
        },
        {
         "additionalProperties": false,
         "properties": {
          "path": {
           "minLength": 1,
           "title": "path",
           "type": "string",
           "_name_": "path",
           "_required_": true
          },
          "user": {
           "anyOf": [
            {
             "minLength": 1,
             "type": "string"
            },
            {
             "type": "null"
            }
           ],
           "title": "user",
           "_name_": "user",
           "_required_": true
          },
          "group": {
           "anyOf": [
            {
             "minLength": 1,
             "type": "string"
            },
            {
             "type": "null"
            }
           ],
           "title": "group",
           "_name_": "group",
           "_required_": true
          },
          "uid": {
           "anyOf": [
            {
             "maximum": 2147483647,
             "minimum": -1,
             "type": "integer"
            },
            {
             "type": "null"
            }
           ],
           "title": "uid",
           "_name_": "uid",
           "_required_": true
          },
          "gid": {
           "anyOf": [
            {
             "maximum": 2147483647,
             "minimum": -1,
             "type": "integer"
            },
            {
             "type": "null"
            }
           ],
           "title": "gid",
           "_name_": "gid",
           "_required_": true
          },
          "acltype": {
           "const": "POSIX1E",
           "enum": [
            "POSIX1E"
           ],
           "title": "acltype",
           "type": "string",
           "_name_": "acltype",
           "_required_": true
          },
          "acl": {
           "items": [
            {}
           ],
           "title": "acl",
           "type": "array",
           "_name_": "acl",
           "_required_": true
          },
          "trivial": {
           "title": "trivial",
           "type": "boolean",
           "_name_": "trivial",
           "_required_": true
          }
         },
         "required": [
          "path",
          "user",
          "group",
          "uid",
          "gid",
          "acltype",
          "acl",
          "trivial"
         ],
         "title": "POSIXACLResult",
         "type": "object",
         "_attrs_order_": [
          "path",
          "user",
          "group",
          "uid",
          "gid",
          "acltype",
          "acl",
          "trivial"
         ]
        },
        {
         "additionalProperties": false,
         "properties": {
          "path": {
           "minLength": 1,
           "title": "path",
           "type": "string",
           "_name_": "path",
           "_required_": true
          },
          "user": {
           "anyOf": [
            {
             "minLength": 1,
             "type": "string"
            },
            {
             "type": "null"
            }
           ],
           "title": "user",
           "_name_": "user",
           "_required_": true
          },
          "group": {
           "anyOf": [
            {
             "minLength": 1,
             "type": "string"
            },
            {
             "type": "null"
            }
           ],
           "title": "group",
           "_name_": "group",
           "_required_": true
          },
          "uid": {
           "anyOf": [
            {
             "maximum": 2147483647,
             "minimum": -1,
             "type": "integer"
            },
            {
             "type": "null"
            }
           ],
           "title": "uid",
           "_name_": "uid",
           "_required_": true
          },
          "gid": {
           "anyOf": [
            {
             "maximum": 2147483647,
             "minimum": -1,
             "type": "integer"
            },
            {
             "type": "null"
            }
           ],
           "title": "gid",
           "_name_": "gid",
           "_required_": true
          },
          "acltype": {
           "const": "DISABLED",
           "enum": [
            "DISABLED"
           ],
           "title": "acltype",
           "type": "string",
           "_name_": "acltype",
           "_required_": true
          },
          "acl": {
           "const": null,
           "enum": [
            null
           ],
           "title": "acl",
           "type": "null",
           "_name_": "acl",
           "_required_": true
          },
          "trivial": {
           "const": true,
           "enum": [
            true
           ],
           "title": "trivial",
           "type": "boolean",
           "_name_": "trivial",
           "_required_": true
          }
         },
         "required": [
          "path",
          "user",
          "group",
          "uid",
          "gid",
          "acltype",
          "acl",
          "trivial"
         ],
         "title": "DISABLED_ACLResult",
         "type": "object",
         "_attrs_order_": [
          "path",
          "user",
          "group",
          "uid",
          "gid",
          "acltype",
          "acl",
          "trivial"
         ]
        }
       ],
       "title": "result",
       "_name_": "result"
      },
      "filesystem_setperm": {
       "additionalProperties": false,
       "properties": {
        "path": {
         "minLength": 1,
         "title": "path",
         "type": "string",
         "_name_": "path"
        },
        "uid": {
         "anyOf": [
          {
           "maximum": 2147483647,
           "minimum": -1,
           "type": "integer"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "uid",
         "_name_": "uid"
        },
        "user": {
         "anyOf": [
          {
           "minLength": 1,
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "user",
         "_name_": "user"
        },
        "gid": {
         "anyOf": [
          {
           "maximum": 2147483647,
           "minimum": -1,
           "type": "integer"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "gid",
         "_name_": "gid"
        },
        "group": {
         "anyOf": [
          {
           "minLength": 1,
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "group",
         "_name_": "group"
        },
        "mode": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "mode",
         "_name_": "mode"
        },
        "options": {
         "default": {
          "recursive": false,
          "traverse": false,
          "stripacl": false
         },
         "title": "options",
         "_name_": "options"
        }
       },
       "required": [
        "path"
       ],
       "title": "filesystem_setperm",
       "type": "object",
       "_name_": "filesystem_setperm",
       "_attrs_order_": [
        "path",
        "uid",
        "user",
        "gid",
        "group",
        "mode",
        "options"
       ]
      },
      "return_schema_of_filesystem_setperm": {
       "const": null,
       "enum": [
        null
       ],
       "title": "result",
       "type": "null",
       "_name_": "result"
      },
      "filesystem_stat": {
       "minLength": 1,
       "title": "path",
       "type": "string",
       "_name_": "path"
      },
      "return_schema_of_filesystem_stat": {
       "additionalProperties": false,
       "properties": {
        "realpath": {
         "description": "Canonical path of the entry, eliminating any symbolic links",
         "minLength": 1,
         "title": "realpath",
         "type": "string",
         "_name_": "realpath"
        },
        "type": {
         "enum": [
          "DIRECTORY",
          "FILE",
          "SYMLINK",
          "OTHER"
         ],
         "title": "type",
         "type": "string",
         "_name_": "type"
        },
        "size": {
         "description": "Size in bytes of a plain file. This corresonds with stx_size. ",
         "title": "size",
         "type": "integer",
         "_name_": "size"
        },
        "allocation_size": {
         "description": "Allocated size of file. Calculated by multiplying stx_blocks by 512. ",
         "title": "allocation_size",
         "type": "integer",
         "_name_": "allocation_size"
        },
        "mode": {
         "description": "Entry's mode including file type information and file permission bits. This corresponds with stx_mode. ",
         "title": "mode",
         "type": "integer",
         "_name_": "mode"
        },
        "mount_id": {
         "description": "The mount ID of the mount containing the entry. This corresponds to the number in first\nfield of /proc/self/mountinfo and stx_mnt_id. ",
         "title": "mount_id",
         "type": "integer",
         "_name_": "mount_id"
        },
        "uid": {
         "description": "User ID of the entry's owner. This corresponds with stx_uid. ",
         "title": "uid",
         "type": "integer",
         "_name_": "uid"
        },
        "gid": {
         "description": "Group ID of the entry's owner. This corresponds with stx_gid. ",
         "title": "gid",
         "type": "integer",
         "_name_": "gid"
        },
        "atime": {
         "description": "Time of last access. Corresponds with stx_atime. This is mutable from userspace. ",
         "title": "atime",
         "type": "number",
         "_name_": "atime"
        },
        "mtime": {
         "description": "Time of last modification. Corresponds with stx_mtime. This is mutable from userspace. ",
         "title": "mtime",
         "type": "number",
         "_name_": "mtime"
        },
        "ctime": {
         "description": "Time of last status change. Corresponds with stx_ctime. ",
         "title": "ctime",
         "type": "number",
         "_name_": "ctime"
        },
        "btime": {
         "description": "Time of creation. Corresponds with stx_btime. ",
         "title": "btime",
         "type": "number",
         "_name_": "btime"
        },
        "dev": {
         "description": "The ID of the device containing the filesystem where the file resides. This is not sufficient to uniquely\nidentify a particular filesystem mount. mount_id must be used for that purpose. This corresponds with st_dev. ",
         "title": "dev",
         "type": "integer",
         "_name_": "dev"
        },
        "inode": {
         "description": "The inode number of the file. This corresponds with stx_ino. ",
         "title": "inode",
         "type": "integer",
         "_name_": "inode"
        },
        "nlink": {
         "description": "Number of hard links. Corresponds with stx_nlinks. ",
         "title": "nlink",
         "type": "integer",
         "_name_": "nlink"
        },
        "acl": {
         "description": "Specifies whether ACL is present on the entry. If this is the case then file permission\nbits as reported in `mode` may not be representative of the actual permissions. ",
         "title": "acl",
         "type": "boolean",
         "_name_": "acl"
        },
        "is_mountpoint": {
         "description": "Specifies whether the entry is also the mountpoint of a filesystem. ",
         "title": "is_mountpoint",
         "type": "boolean",
         "_name_": "is_mountpoint"
        },
        "is_ctldir": {
         "description": "Specifies whether the entry is located within the ZFS ctldir (for example a snapshot). ",
         "title": "is_ctldir",
         "type": "boolean",
         "_name_": "is_ctldir"
        },
        "attributes": {
         "description": "Extra file attribute indicators for entry as returned by statx. Expanded from stx_attributes. ",
         "items": {
          "enum": [
           "COMPRESSED",
           "APPEND",
           "NODUMP",
           "IMMUTABLE",
           "AUTOMOUNT",
           "MOUNT_ROOT",
           "VERIFY",
           "DAX"
          ],
          "type": "string"
         },
         "title": "attributes",
         "type": "array",
         "_name_": "attributes"
        },
        "user": {
         "anyOf": [
          {
           "minLength": 1,
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "description": "Username associated with `uid`. Will be None if the User ID does not map to existing user. ",
         "title": "user",
         "_name_": "user"
        },
        "group": {
         "anyOf": [
          {
           "minLength": 1,
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "description": "Groupname associated with `gid`. Will be None if the Group ID does not map to existing group. ",
         "title": "group",
         "_name_": "group"
        }
       },
       "required": [
        "realpath",
        "type",
        "size",
        "allocation_size",
        "mode",
        "mount_id",
        "uid",
        "gid",
        "atime",
        "mtime",
        "ctime",
        "btime",
        "dev",
        "inode",
        "nlink",
        "acl",
        "is_mountpoint",
        "is_ctldir",
        "attributes",
        "user",
        "group"
       ],
       "title": "result",
       "type": "object",
       "_name_": "result",
       "_attrs_order_": [
        "realpath",
        "type",
        "size",
        "allocation_size",
        "mode",
        "mount_id",
        "uid",
        "gid",
        "atime",
        "mtime",
        "ctime",
        "btime",
        "dev",
        "inode",
        "nlink",
        "acl",
        "is_mountpoint",
        "is_ctldir",
        "attributes",
        "user",
        "group"
       ]
      },
      "filesystem_statfs": {
       "minLength": 1,
       "title": "path",
       "type": "string",
       "_name_": "path"
      },
      "return_schema_of_filesystem_statfs": {
       "additionalProperties": false,
       "properties": {
        "flags": {
         "description": "Combined per-mount options and per-superblock options for mounted filesystem. ",
         "items": {
          "anyOf": [
           {
            "enum": [
             "RW",
             "RO",
             "XATTR",
             "NOACL",
             "NFS4ACL",
             "POSIXACL",
             "CASESENSITIVE",
             "CASEINSENSITIVE",
             "NOATIME",
             "RELATIME",
             "NOSUID",
             "NODEV",
             "NOEXEC"
            ],
            "type": "string"
           },
           {}
          ]
         },
         "title": "flags",
         "type": "array",
         "_name_": "flags"
        },
        "fsid": {
         "description": "Unique filesystem ID as returned by statvfs. ",
         "minLength": 1,
         "title": "fsid",
         "type": "string",
         "_name_": "fsid"
        },
        "fstype": {
         "anyOf": [
          {
           "enum": [
            "RW",
            "RO",
            "XATTR",
            "NOACL",
            "NFS4ACL",
            "POSIXACL",
            "CASESENSITIVE",
            "CASEINSENSITIVE",
            "NOATIME",
            "RELATIME",
            "NOSUID",
            "NODEV",
            "NOEXEC"
           ],
           "type": "string"
          },
          {}
         ],
         "description": "String representation of filesystem type from mountinfo. ",
         "title": "fstype",
         "_name_": "fstype"
        },
        "source": {
         "description": "Source for the mounted filesystem. For ZFS this will be dataset name. ",
         "minLength": 1,
         "title": "source",
         "type": "string",
         "_name_": "source"
        },
        "dest": {
         "description": "Local path on which filesystem is mounted. ",
         "minLength": 1,
         "title": "dest",
         "type": "string",
         "_name_": "dest"
        },
        "blocksize": {
         "description": "Filesystem block size as reported by statvfs. ",
         "title": "blocksize",
         "type": "integer",
         "_name_": "blocksize"
        },
        "total_blocks": {
         "description": "Filesystem size as reported in blocksize blocks as reported by statvfs. ",
         "title": "total_blocks",
         "type": "integer",
         "_name_": "total_blocks"
        },
        "free_blocks": {
         "description": "Number of free blocks as reported by statvfs. ",
         "title": "free_blocks",
         "type": "integer",
         "_name_": "free_blocks"
        },
        "avail_blocks": {
         "description": "Number of available blocks as reported by statvfs. ",
         "title": "avail_blocks",
         "type": "integer",
         "_name_": "avail_blocks"
        },
        "total_blocks_str": {
         "minLength": 1,
         "title": "total_blocks_str",
         "type": "string",
         "_name_": "total_blocks_str"
        },
        "free_blocks_str": {
         "minLength": 1,
         "title": "free_blocks_str",
         "type": "string",
         "_name_": "free_blocks_str"
        },
        "avail_blocks_str": {
         "minLength": 1,
         "title": "avail_blocks_str",
         "type": "string",
         "_name_": "avail_blocks_str"
        },
        "files": {
         "description": "Number of inodes in use as reported by statvfs. ",
         "title": "files",
         "type": "integer",
         "_name_": "files"
        },
        "free_files": {
         "description": "Number of free inodes as reported by statvfs. ",
         "title": "free_files",
         "type": "integer",
         "_name_": "free_files"
        },
        "name_max": {
         "description": "Maximum filename length as reported by statvfs. ",
         "title": "name_max",
         "type": "integer",
         "_name_": "name_max"
        },
        "total_bytes": {
         "title": "total_bytes",
         "type": "integer",
         "_name_": "total_bytes"
        },
        "free_bytes": {
         "title": "free_bytes",
         "type": "integer",
         "_name_": "free_bytes"
        },
        "avail_bytes": {
         "title": "avail_bytes",
         "type": "integer",
         "_name_": "avail_bytes"
        },
        "total_bytes_str": {
         "minLength": 1,
         "title": "total_bytes_str",
         "type": "string",
         "_name_": "total_bytes_str"
        },
        "free_bytes_str": {
         "minLength": 1,
         "title": "free_bytes_str",
         "type": "string",
         "_name_": "free_bytes_str"
        },
        "avail_bytes_str": {
         "minLength": 1,
         "title": "avail_bytes_str",
         "type": "string",
         "_name_": "avail_bytes_str"
        }
       },
       "required": [
        "flags",
        "fsid",
        "fstype",
        "source",
        "dest",
        "blocksize",
        "total_blocks",
        "free_blocks",
        "avail_blocks",
        "total_blocks_str",
        "free_blocks_str",
        "avail_blocks_str",
        "files",
        "free_files",
        "name_max",
        "total_bytes",
        "free_bytes",
        "avail_bytes",
        "total_bytes_str",
        "free_bytes_str",
        "avail_bytes_str"
       ],
       "title": "result",
       "type": "object",
       "_name_": "result",
       "_attrs_order_": [
        "flags",
        "fsid",
        "fstype",
        "source",
        "dest",
        "blocksize",
        "total_blocks",
        "free_blocks",
        "avail_blocks",
        "total_blocks_str",
        "free_blocks_str",
        "avail_blocks_str",
        "files",
        "free_files",
        "name_max",
        "total_bytes",
        "free_bytes",
        "avail_bytes",
        "total_bytes_str",
        "free_bytes_str",
        "avail_bytes_str"
       ]
      },
      "return_schema_of_filesystem_acltemplate_query": {
       "anyOf": [
        {
         "items": [
          {
           "additionalProperties": false,
           "properties": {
            "id": {
             "title": "id",
             "type": "integer",
             "_name_": "id",
             "_required_": false
            },
            "builtin": {
             "title": "builtin",
             "type": "boolean",
             "_name_": "builtin",
             "_required_": false
            },
            "name": {
             "title": "name",
             "type": "string",
             "_name_": "name",
             "_required_": false
            },
            "acltype": {
             "enum": [
              "NFS4",
              "POSIX1E"
             ],
             "title": "acltype",
             "type": "string",
             "_name_": "acltype",
             "_required_": false
            },
            "acl": {
             "anyOf": [
              {
               "items": [
                {}
               ],
               "type": "array"
              },
              {
               "items": [
                {}
               ],
               "type": "array"
              }
             ],
             "title": "acl",
             "_name_": "acl",
             "_required_": false
            },
            "comment": {
             "title": "comment",
             "type": "string",
             "_name_": "comment",
             "_required_": false
            }
           },
           "title": "AclTemplateQueryResultItem",
           "type": "object",
           "_attrs_order_": [
            "id",
            "builtin",
            "name",
            "acltype",
            "acl",
            "comment"
           ]
          }
         ],
         "type": "array"
        },
        {
         "additionalProperties": false,
         "properties": {
          "id": {
           "title": "id",
           "type": "integer",
           "_name_": "id",
           "_required_": false
          },
          "builtin": {
           "title": "builtin",
           "type": "boolean",
           "_name_": "builtin",
           "_required_": false
          },
          "name": {
           "title": "name",
           "type": "string",
           "_name_": "name",
           "_required_": false
          },
          "acltype": {
           "enum": [
            "NFS4",
            "POSIX1E"
           ],
           "title": "acltype",
           "type": "string",
           "_name_": "acltype",
           "_required_": false
          },
          "acl": {
           "anyOf": [
            {
             "items": [
              {}
             ],
             "type": "array"
            },
            {
             "items": [
              {}
             ],
             "type": "array"
            }
           ],
           "title": "acl",
           "_name_": "acl",
           "_required_": false
          },
          "comment": {
           "title": "comment",
           "type": "string",
           "_name_": "comment",
           "_required_": false
          }
         },
         "title": "AclTemplateQueryResultItem",
         "type": "object",
         "_attrs_order_": [
          "id",
          "builtin",
          "name",
          "acltype",
          "acl",
          "comment"
         ]
        },
        {
         "type": "integer"
        }
       ],
       "title": "result",
       "_name_": "result"
      },
      "filesystem_acltemplate_create": {
       "additionalProperties": false,
       "properties": {
        "name": {
         "title": "name",
         "type": "string",
         "_name_": "name"
        },
        "acltype": {
         "enum": [
          "NFS4",
          "POSIX1E"
         ],
         "title": "acltype",
         "type": "string",
         "_name_": "acltype"
        },
        "acl": {
         "anyOf": [
          {
           "items": [
            {}
           ],
           "type": "array"
          },
          {
           "items": [
            {}
           ],
           "type": "array"
          }
         ],
         "title": "acl",
         "_name_": "acl"
        },
        "comment": {
         "default": "",
         "title": "comment",
         "type": "string",
         "_name_": "comment"
        }
       },
       "required": [
        "name",
        "acltype",
        "acl"
       ],
       "title": "acltemplate_create",
       "type": "object",
       "_name_": "acltemplate_create",
       "_attrs_order_": [
        "name",
        "acltype",
        "acl",
        "comment"
       ]
      },
      "return_schema_of_filesystem_acltemplate_create": {
       "additionalProperties": false,
       "properties": {
        "id": {
         "title": "id",
         "type": "integer",
         "_name_": "id"
        },
        "builtin": {
         "title": "builtin",
         "type": "boolean",
         "_name_": "builtin"
        },
        "name": {
         "title": "name",
         "type": "string",
         "_name_": "name"
        },
        "acltype": {
         "enum": [
          "NFS4",
          "POSIX1E"
         ],
         "title": "acltype",
         "type": "string",
         "_name_": "acltype"
        },
        "acl": {
         "anyOf": [
          {
           "items": [
            {}
           ],
           "type": "array"
          },
          {
           "items": [
            {}
           ],
           "type": "array"
          }
         ],
         "title": "acl",
         "_name_": "acl"
        },
        "comment": {
         "default": "",
         "title": "comment",
         "type": "string",
         "_name_": "comment"
        }
       },
       "required": [
        "id",
        "builtin",
        "name",
        "acltype",
        "acl"
       ],
       "title": "result",
       "type": "object",
       "_name_": "result",
       "_attrs_order_": [
        "id",
        "builtin",
        "name",
        "acltype",
        "acl",
        "comment"
       ]
      },
      "return_schema_of_filesystem_acltemplate_delete": {
       "const": true,
       "enum": [
        true
       ],
       "title": "result",
       "type": "boolean",
       "_name_": "result"
      },
      "filesystem_acltemplate_update": {
       "additionalProperties": false,
       "properties": {
        "name": {
         "title": "name",
         "type": "string",
         "_name_": "name"
        },
        "acltype": {
         "enum": [
          "NFS4",
          "POSIX1E"
         ],
         "title": "acltype",
         "type": "string",
         "_name_": "acltype"
        },
        "acl": {
         "anyOf": [
          {
           "items": [
            {}
           ],
           "type": "array"
          },
          {
           "items": [
            {}
           ],
           "type": "array"
          }
         ],
         "title": "acl",
         "_name_": "acl"
        },
        "comment": {
         "title": "comment",
         "type": "string",
         "_name_": "comment"
        }
       },
       "title": "acltemplate_update",
       "type": "object",
       "_name_": "acltemplate_update",
       "_attrs_order_": [
        "name",
        "acltype",
        "acl",
        "comment"
       ]
      },
      "return_schema_of_filesystem_acltemplate_update": {
       "additionalProperties": false,
       "properties": {
        "id": {
         "title": "id",
         "type": "integer",
         "_name_": "id"
        },
        "builtin": {
         "title": "builtin",
         "type": "boolean",
         "_name_": "builtin"
        },
        "name": {
         "title": "name",
         "type": "string",
         "_name_": "name"
        },
        "acltype": {
         "enum": [
          "NFS4",
          "POSIX1E"
         ],
         "title": "acltype",
         "type": "string",
         "_name_": "acltype"
        },
        "acl": {
         "anyOf": [
          {
           "items": [
            {}
           ],
           "type": "array"
          },
          {
           "items": [
            {}
           ],
           "type": "array"
          }
         ],
         "title": "acl",
         "_name_": "acl"
        },
        "comment": {
         "default": "",
         "title": "comment",
         "type": "string",
         "_name_": "comment"
        }
       },
       "required": [
        "id",
        "builtin",
        "name",
        "acltype",
        "acl"
       ],
       "title": "result",
       "type": "object",
       "_name_": "result",
       "_attrs_order_": [
        "id",
        "builtin",
        "name",
        "acltype",
        "acl",
        "comment"
       ]
      },
      "filesystem_acltemplate_by_path": {
       "additionalProperties": false,
       "properties": {
        "path": {
         "default": "",
         "title": "path",
         "type": "string",
         "_name_": "path"
        },
        "query-filters": {
         "default": [],
         "items": {},
         "title": "query-filters",
         "type": "array",
         "_name_": "query-filters"
        },
        "query-options": {
         "default": {
          "relationships": true,
          "extend": null,
          "extend_context": null,
          "prefix": null,
          "extra": {},
          "order_by": [],
          "select": [],
          "count": false,
          "get": false,
          "offset": 0,
          "limit": 0,
          "force_sql_filters": false
         },
         "title": "query-options",
         "_name_": "query-options"
        },
        "format-options": {
         "default": {
          "canonicalize": false,
          "ensure_builtins": false,
          "resolve_names": false
         },
         "title": "format-options",
         "_name_": "format-options"
        }
       },
       "title": "filesystem_acl",
       "type": "object",
       "_name_": "filesystem_acl",
       "_attrs_order_": [
        "path",
        "query-filters",
        "query-options",
        "format-options"
       ]
      },
      "return_schema_of_filesystem_acltemplate_by_path": {
       "items": {
        "additionalProperties": false,
        "properties": {
         "id": {
          "title": "id",
          "type": "integer",
          "_name_": "id",
          "_required_": true
         },
         "builtin": {
          "title": "builtin",
          "type": "boolean",
          "_name_": "builtin",
          "_required_": true
         },
         "name": {
          "title": "name",
          "type": "string",
          "_name_": "name",
          "_required_": true
         },
         "acltype": {
          "enum": [
           "NFS4",
           "POSIX1E"
          ],
          "title": "acltype",
          "type": "string",
          "_name_": "acltype",
          "_required_": true
         },
         "acl": {
          "anyOf": [
           {
            "items": [
             {}
            ],
            "type": "array"
           },
           {
            "items": [
             {}
            ],
            "type": "array"
           }
          ],
          "title": "acl",
          "_name_": "acl",
          "_required_": true
         },
         "comment": {
          "default": "",
          "title": "comment",
          "type": "string",
          "_name_": "comment",
          "_required_": false
         }
        },
        "required": [
         "id",
         "builtin",
         "name",
         "acltype",
         "acl"
        ],
        "title": "AclTemplateEntry",
        "type": "object",
        "_attrs_order_": [
         "id",
         "builtin",
         "name",
         "acltype",
         "acl",
         "comment"
        ]
       },
       "title": "result",
       "type": "array",
       "_name_": "result"
      },
      "filesystem_acltemplate_get_instance_0": {
       "title": "id",
       "type": "integer",
       "_name_": "id"
      },
      "filesystem_acltemplate_get_instance_1": {
       "additionalProperties": false,
       "properties": {
        "relationships": {
         "default": true,
         "title": "relationships",
         "type": "boolean",
         "_name_": "relationships"
        },
        "extend": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "extend",
         "_name_": "extend"
        },
        "extend_context": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "extend_context",
         "_name_": "extend_context"
        },
        "prefix": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "prefix",
         "_name_": "prefix"
        },
        "extra": {
         "default": {},
         "title": "extra",
         "type": "object",
         "_name_": "extra"
        },
        "order_by": {
         "default": [],
         "items": {
          "type": "string"
         },
         "title": "order_by",
         "type": "array",
         "_name_": "order_by"
        },
        "select": {
         "default": [],
         "items": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "items": [
             {}
            ],
            "type": "array"
           }
          ]
         },
         "title": "select",
         "type": "array",
         "_name_": "select"
        },
        "count": {
         "default": false,
         "title": "count",
         "type": "boolean",
         "_name_": "count"
        },
        "get": {
         "default": false,
         "title": "get",
         "type": "boolean",
         "_name_": "get"
        },
        "offset": {
         "default": 0,
         "title": "offset",
         "type": "integer",
         "_name_": "offset"
        },
        "limit": {
         "default": 0,
         "title": "limit",
         "type": "integer",
         "_name_": "limit"
        },
        "force_sql_filters": {
         "default": false,
         "title": "force_sql_filters",
         "type": "boolean",
         "_name_": "force_sql_filters"
        }
       },
       "title": "options",
       "type": "object",
       "default": {},
       "_name_": "options",
       "_attrs_order_": [
        "relationships",
        "extend",
        "extend_context",
        "prefix",
        "extra",
        "order_by",
        "select",
        "count",
        "get",
        "offset",
        "limit",
        "force_sql_filters"
       ]
      },
      "filesystem_acltemplate_get_instance": {
       "type": "object",
       "properties": {
        "id": {
         "$ref": "#/components/schemas/filesystem_acltemplate_get_instance_0"
        },
        "options": {
         "$ref": "#/components/schemas/filesystem_acltemplate_get_instance_1"
        }
       }
      },
      "return_schema_of_filesystem_acltemplate_get_instance": {
       "additionalProperties": false,
       "properties": {
        "id": {
         "title": "id",
         "type": "integer",
         "_name_": "id"
        },
        "builtin": {
         "title": "builtin",
         "type": "boolean",
         "_name_": "builtin"
        },
        "name": {
         "title": "name",
         "type": "string",
         "_name_": "name"
        },
        "acltype": {
         "enum": [
          "NFS4",
          "POSIX1E"
         ],
         "title": "acltype",
         "type": "string",
         "_name_": "acltype"
        },
        "acl": {
         "anyOf": [
          {
           "items": [
            {}
           ],
           "type": "array"
          },
          {
           "items": [
            {}
           ],
           "type": "array"
          }
         ],
         "title": "acl",
         "_name_": "acl"
        },
        "comment": {
         "default": "",
         "title": "comment",
         "type": "string",
         "_name_": "comment"
        }
       },
       "required": [
        "id",
        "builtin",
        "name",
        "acltype",
        "acl"
       ],
       "title": "result",
       "type": "object",
       "_name_": "result",
       "_attrs_order_": [
        "id",
        "builtin",
        "name",
        "acltype",
        "acl",
        "comment"
       ]
      },
      "return_schema_of_ftp_config": {
       "additionalProperties": false,
       "properties": {
        "id": {
         "title": "id",
         "type": "integer",
         "_name_": "id"
        },
        "port": {
         "maximum": 65535,
         "minimum": 1,
         "title": "port",
         "type": "integer",
         "_name_": "port"
        },
        "clients": {
         "maximum": 10000,
         "minimum": 1,
         "title": "clients",
         "type": "integer",
         "_name_": "clients"
        },
        "ipconnections": {
         "maximum": 1000,
         "minimum": 0,
         "title": "ipconnections",
         "type": "integer",
         "_name_": "ipconnections"
        },
        "loginattempt": {
         "maximum": 1000,
         "minimum": 0,
         "title": "loginattempt",
         "type": "integer",
         "_name_": "loginattempt"
        },
        "timeout": {
         "maximum": 10000,
         "minimum": 0,
         "title": "timeout",
         "type": "integer",
         "_name_": "timeout"
        },
        "timeout_notransfer": {
         "maximum": 10000,
         "minimum": 0,
         "title": "timeout_notransfer",
         "type": "integer",
         "_name_": "timeout_notransfer"
        },
        "onlyanonymous": {
         "title": "onlyanonymous",
         "type": "boolean",
         "_name_": "onlyanonymous"
        },
        "anonpath": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "title": "anonpath",
         "_name_": "anonpath"
        },
        "onlylocal": {
         "title": "onlylocal",
         "type": "boolean",
         "_name_": "onlylocal"
        },
        "banner": {
         "title": "banner",
         "type": "string",
         "_name_": "banner"
        },
        "filemask": {
         "title": "filemask",
         "type": "string",
         "_name_": "filemask"
        },
        "dirmask": {
         "title": "dirmask",
         "type": "string",
         "_name_": "dirmask"
        },
        "fxp": {
         "title": "fxp",
         "type": "boolean",
         "_name_": "fxp"
        },
        "resume": {
         "title": "resume",
         "type": "boolean",
         "_name_": "resume"
        },
        "defaultroot": {
         "title": "defaultroot",
         "type": "boolean",
         "_name_": "defaultroot"
        },
        "ident": {
         "title": "ident",
         "type": "boolean",
         "_name_": "ident"
        },
        "reversedns": {
         "title": "reversedns",
         "type": "boolean",
         "_name_": "reversedns"
        },
        "masqaddress": {
         "title": "masqaddress",
         "type": "string",
         "_name_": "masqaddress"
        },
        "passiveportsmin": {
         "title": "passiveportsmin",
         "type": "integer",
         "_name_": "passiveportsmin"
        },
        "passiveportsmax": {
         "title": "passiveportsmax",
         "type": "integer",
         "_name_": "passiveportsmax"
        },
        "localuserbw": {
         "minimum": 0,
         "title": "localuserbw",
         "type": "integer",
         "_name_": "localuserbw"
        },
        "localuserdlbw": {
         "minimum": 0,
         "title": "localuserdlbw",
         "type": "integer",
         "_name_": "localuserdlbw"
        },
        "anonuserbw": {
         "minimum": 0,
         "title": "anonuserbw",
         "type": "integer",
         "_name_": "anonuserbw"
        },
        "anonuserdlbw": {
         "minimum": 0,
         "title": "anonuserdlbw",
         "type": "integer",
         "_name_": "anonuserdlbw"
        },
        "tls": {
         "title": "tls",
         "type": "boolean",
         "_name_": "tls"
        },
        "tls_policy": {
         "enum": [
          "",
          "on",
          "off",
          "data",
          "!data",
          "auth",
          "ctrl",
          "ctrl+data",
          "ctrl+!data",
          "auth+data",
          "auth+!data"
         ],
         "title": "tls_policy",
         "type": "string",
         "_name_": "tls_policy"
        },
        "tls_opt_allow_client_renegotiations": {
         "title": "tls_opt_allow_client_renegotiations",
         "type": "boolean",
         "_name_": "tls_opt_allow_client_renegotiations"
        },
        "tls_opt_allow_dot_login": {
         "title": "tls_opt_allow_dot_login",
         "type": "boolean",
         "_name_": "tls_opt_allow_dot_login"
        },
        "tls_opt_allow_per_user": {
         "title": "tls_opt_allow_per_user",
         "type": "boolean",
         "_name_": "tls_opt_allow_per_user"
        },
        "tls_opt_common_name_required": {
         "title": "tls_opt_common_name_required",
         "type": "boolean",
         "_name_": "tls_opt_common_name_required"
        },
        "tls_opt_enable_diags": {
         "title": "tls_opt_enable_diags",
         "type": "boolean",
         "_name_": "tls_opt_enable_diags"
        },
        "tls_opt_export_cert_data": {
         "title": "tls_opt_export_cert_data",
         "type": "boolean",
         "_name_": "tls_opt_export_cert_data"
        },
        "tls_opt_no_empty_fragments": {
         "title": "tls_opt_no_empty_fragments",
         "type": "boolean",
         "_name_": "tls_opt_no_empty_fragments"
        },
        "tls_opt_no_session_reuse_required": {
         "title": "tls_opt_no_session_reuse_required",
         "type": "boolean",
         "_name_": "tls_opt_no_session_reuse_required"
        },
        "tls_opt_stdenvvars": {
         "title": "tls_opt_stdenvvars",
         "type": "boolean",
         "_name_": "tls_opt_stdenvvars"
        },
        "tls_opt_dns_name_required": {
         "title": "tls_opt_dns_name_required",
         "type": "boolean",
         "_name_": "tls_opt_dns_name_required"
        },
        "tls_opt_ip_address_required": {
         "title": "tls_opt_ip_address_required",
         "type": "boolean",
         "_name_": "tls_opt_ip_address_required"
        },
        "ssltls_certificate": {
         "anyOf": [
          {
           "type": "integer"
          },
          {
           "type": "null"
          }
         ],
         "title": "ssltls_certificate",
         "_name_": "ssltls_certificate"
        },
        "options": {
         "title": "options",
         "type": "string",
         "_name_": "options"
        }
       },
       "required": [
        "id",
        "port",
        "clients",
        "ipconnections",
        "loginattempt",
        "timeout",
        "timeout_notransfer",
        "onlyanonymous",
        "anonpath",
        "onlylocal",
        "banner",
        "filemask",
        "dirmask",
        "fxp",
        "resume",
        "defaultroot",
        "ident",
        "reversedns",
        "masqaddress",
        "passiveportsmin",
        "passiveportsmax",
        "localuserbw",
        "localuserdlbw",
        "anonuserbw",
        "anonuserdlbw",
        "tls",
        "tls_policy",
        "tls_opt_allow_client_renegotiations",
        "tls_opt_allow_dot_login",
        "tls_opt_allow_per_user",
        "tls_opt_common_name_required",
        "tls_opt_enable_diags",
        "tls_opt_export_cert_data",
        "tls_opt_no_empty_fragments",
        "tls_opt_no_session_reuse_required",
        "tls_opt_stdenvvars",
        "tls_opt_dns_name_required",
        "tls_opt_ip_address_required",
        "ssltls_certificate",
        "options"
       ],
       "title": "result",
       "type": "object",
       "_name_": "result",
       "_attrs_order_": [
        "id",
        "port",
        "clients",
        "ipconnections",
        "loginattempt",
        "timeout",
        "timeout_notransfer",
        "onlyanonymous",
        "anonpath",
        "onlylocal",
        "banner",
        "filemask",
        "dirmask",
        "fxp",
        "resume",
        "defaultroot",
        "ident",
        "reversedns",
        "masqaddress",
        "passiveportsmin",
        "passiveportsmax",
        "localuserbw",
        "localuserdlbw",
        "anonuserbw",
        "anonuserdlbw",
        "tls",
        "tls_policy",
        "tls_opt_allow_client_renegotiations",
        "tls_opt_allow_dot_login",
        "tls_opt_allow_per_user",
        "tls_opt_common_name_required",
        "tls_opt_enable_diags",
        "tls_opt_export_cert_data",
        "tls_opt_no_empty_fragments",
        "tls_opt_no_session_reuse_required",
        "tls_opt_stdenvvars",
        "tls_opt_dns_name_required",
        "tls_opt_ip_address_required",
        "ssltls_certificate",
        "options"
       ]
      },
      "ftp_update": {
       "additionalProperties": false,
       "properties": {
        "port": {
         "maximum": 65535,
         "minimum": 1,
         "title": "port",
         "type": "integer",
         "_name_": "port"
        },
        "clients": {
         "maximum": 10000,
         "minimum": 1,
         "title": "clients",
         "type": "integer",
         "_name_": "clients"
        },
        "ipconnections": {
         "maximum": 1000,
         "minimum": 0,
         "title": "ipconnections",
         "type": "integer",
         "_name_": "ipconnections"
        },
        "loginattempt": {
         "maximum": 1000,
         "minimum": 0,
         "title": "loginattempt",
         "type": "integer",
         "_name_": "loginattempt"
        },
        "timeout": {
         "maximum": 10000,
         "minimum": 0,
         "title": "timeout",
         "type": "integer",
         "_name_": "timeout"
        },
        "timeout_notransfer": {
         "maximum": 10000,
         "minimum": 0,
         "title": "timeout_notransfer",
         "type": "integer",
         "_name_": "timeout_notransfer"
        },
        "onlyanonymous": {
         "title": "onlyanonymous",
         "type": "boolean",
         "_name_": "onlyanonymous"
        },
        "anonpath": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "title": "anonpath",
         "_name_": "anonpath"
        },
        "onlylocal": {
         "title": "onlylocal",
         "type": "boolean",
         "_name_": "onlylocal"
        },
        "banner": {
         "title": "banner",
         "type": "string",
         "_name_": "banner"
        },
        "filemask": {
         "title": "filemask",
         "type": "string",
         "_name_": "filemask"
        },
        "dirmask": {
         "title": "dirmask",
         "type": "string",
         "_name_": "dirmask"
        },
        "fxp": {
         "title": "fxp",
         "type": "boolean",
         "_name_": "fxp"
        },
        "resume": {
         "title": "resume",
         "type": "boolean",
         "_name_": "resume"
        },
        "defaultroot": {
         "title": "defaultroot",
         "type": "boolean",
         "_name_": "defaultroot"
        },
        "ident": {
         "title": "ident",
         "type": "boolean",
         "_name_": "ident"
        },
        "reversedns": {
         "title": "reversedns",
         "type": "boolean",
         "_name_": "reversedns"
        },
        "masqaddress": {
         "title": "masqaddress",
         "type": "string",
         "_name_": "masqaddress"
        },
        "passiveportsmin": {
         "title": "passiveportsmin",
         "type": "integer",
         "_name_": "passiveportsmin"
        },
        "passiveportsmax": {
         "title": "passiveportsmax",
         "type": "integer",
         "_name_": "passiveportsmax"
        },
        "localuserbw": {
         "minimum": 0,
         "title": "localuserbw",
         "type": "integer",
         "_name_": "localuserbw"
        },
        "localuserdlbw": {
         "minimum": 0,
         "title": "localuserdlbw",
         "type": "integer",
         "_name_": "localuserdlbw"
        },
        "anonuserbw": {
         "minimum": 0,
         "title": "anonuserbw",
         "type": "integer",
         "_name_": "anonuserbw"
        },
        "anonuserdlbw": {
         "minimum": 0,
         "title": "anonuserdlbw",
         "type": "integer",
         "_name_": "anonuserdlbw"
        },
        "tls": {
         "title": "tls",
         "type": "boolean",
         "_name_": "tls"
        },
        "tls_policy": {
         "enum": [
          "",
          "on",
          "off",
          "data",
          "!data",
          "auth",
          "ctrl",
          "ctrl+data",
          "ctrl+!data",
          "auth+data",
          "auth+!data"
         ],
         "title": "tls_policy",
         "type": "string",
         "_name_": "tls_policy"
        },
        "tls_opt_allow_client_renegotiations": {
         "title": "tls_opt_allow_client_renegotiations",
         "type": "boolean",
         "_name_": "tls_opt_allow_client_renegotiations"
        },
        "tls_opt_allow_dot_login": {
         "title": "tls_opt_allow_dot_login",
         "type": "boolean",
         "_name_": "tls_opt_allow_dot_login"
        },
        "tls_opt_allow_per_user": {
         "title": "tls_opt_allow_per_user",
         "type": "boolean",
         "_name_": "tls_opt_allow_per_user"
        },
        "tls_opt_common_name_required": {
         "title": "tls_opt_common_name_required",
         "type": "boolean",
         "_name_": "tls_opt_common_name_required"
        },
        "tls_opt_enable_diags": {
         "title": "tls_opt_enable_diags",
         "type": "boolean",
         "_name_": "tls_opt_enable_diags"
        },
        "tls_opt_export_cert_data": {
         "title": "tls_opt_export_cert_data",
         "type": "boolean",
         "_name_": "tls_opt_export_cert_data"
        },
        "tls_opt_no_empty_fragments": {
         "title": "tls_opt_no_empty_fragments",
         "type": "boolean",
         "_name_": "tls_opt_no_empty_fragments"
        },
        "tls_opt_no_session_reuse_required": {
         "title": "tls_opt_no_session_reuse_required",
         "type": "boolean",
         "_name_": "tls_opt_no_session_reuse_required"
        },
        "tls_opt_stdenvvars": {
         "title": "tls_opt_stdenvvars",
         "type": "boolean",
         "_name_": "tls_opt_stdenvvars"
        },
        "tls_opt_dns_name_required": {
         "title": "tls_opt_dns_name_required",
         "type": "boolean",
         "_name_": "tls_opt_dns_name_required"
        },
        "tls_opt_ip_address_required": {
         "title": "tls_opt_ip_address_required",
         "type": "boolean",
         "_name_": "tls_opt_ip_address_required"
        },
        "ssltls_certificate": {
         "anyOf": [
          {
           "type": "integer"
          },
          {
           "type": "null"
          }
         ],
         "title": "ssltls_certificate",
         "_name_": "ssltls_certificate"
        },
        "options": {
         "title": "options",
         "type": "string",
         "_name_": "options"
        }
       },
       "title": "ftp_update",
       "type": "object",
       "_name_": "ftp_update",
       "_attrs_order_": [
        "port",
        "clients",
        "ipconnections",
        "loginattempt",
        "timeout",
        "timeout_notransfer",
        "onlyanonymous",
        "anonpath",
        "onlylocal",
        "banner",
        "filemask",
        "dirmask",
        "fxp",
        "resume",
        "defaultroot",
        "ident",
        "reversedns",
        "masqaddress",
        "passiveportsmin",
        "passiveportsmax",
        "localuserbw",
        "localuserdlbw",
        "anonuserbw",
        "anonuserdlbw",
        "tls",
        "tls_policy",
        "tls_opt_allow_client_renegotiations",
        "tls_opt_allow_dot_login",
        "tls_opt_allow_per_user",
        "tls_opt_common_name_required",
        "tls_opt_enable_diags",
        "tls_opt_export_cert_data",
        "tls_opt_no_empty_fragments",
        "tls_opt_no_session_reuse_required",
        "tls_opt_stdenvvars",
        "tls_opt_dns_name_required",
        "tls_opt_ip_address_required",
        "ssltls_certificate",
        "options"
       ]
      },
      "return_schema_of_ftp_update": {
       "additionalProperties": false,
       "properties": {
        "id": {
         "title": "id",
         "type": "integer",
         "_name_": "id"
        },
        "port": {
         "maximum": 65535,
         "minimum": 1,
         "title": "port",
         "type": "integer",
         "_name_": "port"
        },
        "clients": {
         "maximum": 10000,
         "minimum": 1,
         "title": "clients",
         "type": "integer",
         "_name_": "clients"
        },
        "ipconnections": {
         "maximum": 1000,
         "minimum": 0,
         "title": "ipconnections",
         "type": "integer",
         "_name_": "ipconnections"
        },
        "loginattempt": {
         "maximum": 1000,
         "minimum": 0,
         "title": "loginattempt",
         "type": "integer",
         "_name_": "loginattempt"
        },
        "timeout": {
         "maximum": 10000,
         "minimum": 0,
         "title": "timeout",
         "type": "integer",
         "_name_": "timeout"
        },
        "timeout_notransfer": {
         "maximum": 10000,
         "minimum": 0,
         "title": "timeout_notransfer",
         "type": "integer",
         "_name_": "timeout_notransfer"
        },
        "onlyanonymous": {
         "title": "onlyanonymous",
         "type": "boolean",
         "_name_": "onlyanonymous"
        },
        "anonpath": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "title": "anonpath",
         "_name_": "anonpath"
        },
        "onlylocal": {
         "title": "onlylocal",
         "type": "boolean",
         "_name_": "onlylocal"
        },
        "banner": {
         "title": "banner",
         "type": "string",
         "_name_": "banner"
        },
        "filemask": {
         "title": "filemask",
         "type": "string",
         "_name_": "filemask"
        },
        "dirmask": {
         "title": "dirmask",
         "type": "string",
         "_name_": "dirmask"
        },
        "fxp": {
         "title": "fxp",
         "type": "boolean",
         "_name_": "fxp"
        },
        "resume": {
         "title": "resume",
         "type": "boolean",
         "_name_": "resume"
        },
        "defaultroot": {
         "title": "defaultroot",
         "type": "boolean",
         "_name_": "defaultroot"
        },
        "ident": {
         "title": "ident",
         "type": "boolean",
         "_name_": "ident"
        },
        "reversedns": {
         "title": "reversedns",
         "type": "boolean",
         "_name_": "reversedns"
        },
        "masqaddress": {
         "title": "masqaddress",
         "type": "string",
         "_name_": "masqaddress"
        },
        "passiveportsmin": {
         "title": "passiveportsmin",
         "type": "integer",
         "_name_": "passiveportsmin"
        },
        "passiveportsmax": {
         "title": "passiveportsmax",
         "type": "integer",
         "_name_": "passiveportsmax"
        },
        "localuserbw": {
         "minimum": 0,
         "title": "localuserbw",
         "type": "integer",
         "_name_": "localuserbw"
        },
        "localuserdlbw": {
         "minimum": 0,
         "title": "localuserdlbw",
         "type": "integer",
         "_name_": "localuserdlbw"
        },
        "anonuserbw": {
         "minimum": 0,
         "title": "anonuserbw",
         "type": "integer",
         "_name_": "anonuserbw"
        },
        "anonuserdlbw": {
         "minimum": 0,
         "title": "anonuserdlbw",
         "type": "integer",
         "_name_": "anonuserdlbw"
        },
        "tls": {
         "title": "tls",
         "type": "boolean",
         "_name_": "tls"
        },
        "tls_policy": {
         "enum": [
          "",
          "on",
          "off",
          "data",
          "!data",
          "auth",
          "ctrl",
          "ctrl+data",
          "ctrl+!data",
          "auth+data",
          "auth+!data"
         ],
         "title": "tls_policy",
         "type": "string",
         "_name_": "tls_policy"
        },
        "tls_opt_allow_client_renegotiations": {
         "title": "tls_opt_allow_client_renegotiations",
         "type": "boolean",
         "_name_": "tls_opt_allow_client_renegotiations"
        },
        "tls_opt_allow_dot_login": {
         "title": "tls_opt_allow_dot_login",
         "type": "boolean",
         "_name_": "tls_opt_allow_dot_login"
        },
        "tls_opt_allow_per_user": {
         "title": "tls_opt_allow_per_user",
         "type": "boolean",
         "_name_": "tls_opt_allow_per_user"
        },
        "tls_opt_common_name_required": {
         "title": "tls_opt_common_name_required",
         "type": "boolean",
         "_name_": "tls_opt_common_name_required"
        },
        "tls_opt_enable_diags": {
         "title": "tls_opt_enable_diags",
         "type": "boolean",
         "_name_": "tls_opt_enable_diags"
        },
        "tls_opt_export_cert_data": {
         "title": "tls_opt_export_cert_data",
         "type": "boolean",
         "_name_": "tls_opt_export_cert_data"
        },
        "tls_opt_no_empty_fragments": {
         "title": "tls_opt_no_empty_fragments",
         "type": "boolean",
         "_name_": "tls_opt_no_empty_fragments"
        },
        "tls_opt_no_session_reuse_required": {
         "title": "tls_opt_no_session_reuse_required",
         "type": "boolean",
         "_name_": "tls_opt_no_session_reuse_required"
        },
        "tls_opt_stdenvvars": {
         "title": "tls_opt_stdenvvars",
         "type": "boolean",
         "_name_": "tls_opt_stdenvvars"
        },
        "tls_opt_dns_name_required": {
         "title": "tls_opt_dns_name_required",
         "type": "boolean",
         "_name_": "tls_opt_dns_name_required"
        },
        "tls_opt_ip_address_required": {
         "title": "tls_opt_ip_address_required",
         "type": "boolean",
         "_name_": "tls_opt_ip_address_required"
        },
        "ssltls_certificate": {
         "anyOf": [
          {
           "type": "integer"
          },
          {
           "type": "null"
          }
         ],
         "title": "ssltls_certificate",
         "_name_": "ssltls_certificate"
        },
        "options": {
         "title": "options",
         "type": "string",
         "_name_": "options"
        }
       },
       "required": [
        "id",
        "port",
        "clients",
        "ipconnections",
        "loginattempt",
        "timeout",
        "timeout_notransfer",
        "onlyanonymous",
        "anonpath",
        "onlylocal",
        "banner",
        "filemask",
        "dirmask",
        "fxp",
        "resume",
        "defaultroot",
        "ident",
        "reversedns",
        "masqaddress",
        "passiveportsmin",
        "passiveportsmax",
        "localuserbw",
        "localuserdlbw",
        "anonuserbw",
        "anonuserdlbw",
        "tls",
        "tls_policy",
        "tls_opt_allow_client_renegotiations",
        "tls_opt_allow_dot_login",
        "tls_opt_allow_per_user",
        "tls_opt_common_name_required",
        "tls_opt_enable_diags",
        "tls_opt_export_cert_data",
        "tls_opt_no_empty_fragments",
        "tls_opt_no_session_reuse_required",
        "tls_opt_stdenvvars",
        "tls_opt_dns_name_required",
        "tls_opt_ip_address_required",
        "ssltls_certificate",
        "options"
       ],
       "title": "result",
       "type": "object",
       "_name_": "result",
       "_attrs_order_": [
        "id",
        "port",
        "clients",
        "ipconnections",
        "loginattempt",
        "timeout",
        "timeout_notransfer",
        "onlyanonymous",
        "anonpath",
        "onlylocal",
        "banner",
        "filemask",
        "dirmask",
        "fxp",
        "resume",
        "defaultroot",
        "ident",
        "reversedns",
        "masqaddress",
        "passiveportsmin",
        "passiveportsmax",
        "localuserbw",
        "localuserdlbw",
        "anonuserbw",
        "anonuserdlbw",
        "tls",
        "tls_policy",
        "tls_opt_allow_client_renegotiations",
        "tls_opt_allow_dot_login",
        "tls_opt_allow_per_user",
        "tls_opt_common_name_required",
        "tls_opt_enable_diags",
        "tls_opt_export_cert_data",
        "tls_opt_no_empty_fragments",
        "tls_opt_no_session_reuse_required",
        "tls_opt_stdenvvars",
        "tls_opt_dns_name_required",
        "tls_opt_ip_address_required",
        "ssltls_certificate",
        "options"
       ]
      },
      "return_schema_of_group_query": {
       "anyOf": [
        {
         "items": [
          {
           "additionalProperties": false,
           "properties": {
            "id": {
             "title": "id",
             "type": "integer",
             "_name_": "id",
             "_required_": false
            },
            "gid": {
             "title": "gid",
             "type": "integer",
             "_name_": "gid",
             "_required_": false
            },
            "name": {
             "minLength": 1,
             "title": "name",
             "type": "string",
             "_name_": "name",
             "_required_": false
            },
            "builtin": {
             "title": "builtin",
             "type": "boolean",
             "_name_": "builtin",
             "_required_": false
            },
            "sudo_commands": {
             "items": [
              {
               "minLength": 1,
               "type": "string"
              }
             ],
             "title": "sudo_commands",
             "type": "array",
             "_name_": "sudo_commands",
             "_required_": false
            },
            "sudo_commands_nopasswd": {
             "items": [
              {
               "minLength": 1,
               "type": "string"
              }
             ],
             "title": "sudo_commands_nopasswd",
             "type": "array",
             "_name_": "sudo_commands_nopasswd",
             "_required_": false
            },
            "smb": {
             "description": "Specifies whether the group should be mapped into an NT group.",
             "title": "smb",
             "type": "boolean",
             "_name_": "smb",
             "_required_": false
            },
            "userns_idmap": {
             "anyOf": [
              {
               "const": "DIRECT",
               "enum": [
                "DIRECT"
               ],
               "type": "string"
              },
              {
               "maximum": 4294967294,
               "minimum": 1,
               "type": "integer"
              },
              {
               "type": "null"
              }
             ],
             "description": "Species the subgid mapping for this group. If DIRECT then the GID will be\ndirectly mapped to all containers. Alternatively, the target GID may be\nexplicitly specified. If None, then the GID will not be mapped.\n\nNOTE: this field will be ignored for groups that have been assigned\nTrueNAS roles.",
             "title": "userns_idmap",
             "_name_": "userns_idmap",
             "_required_": false
            },
            "group": {
             "minLength": 1,
             "title": "group",
             "type": "string",
             "_name_": "group",
             "_required_": false
            },
            "id_type_both": {
             "title": "id_type_both",
             "type": "boolean",
             "_name_": "id_type_both",
             "_required_": false
            },
            "local": {
             "title": "local",
             "type": "boolean",
             "_name_": "local",
             "_required_": false
            },
            "sid": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "null"
              }
             ],
             "title": "sid",
             "_name_": "sid",
             "_required_": false
            },
            "roles": {
             "items": [
              {
               "type": "string"
              }
             ],
             "title": "roles",
             "type": "array",
             "_name_": "roles",
             "_required_": false
            },
            "users": {
             "description": "A list of user ids (`id` attribute from `user.query`).",
             "items": [
              {
               "type": "integer"
              }
             ],
             "title": "users",
             "type": "array",
             "_name_": "users",
             "_required_": false
            }
           },
           "title": "GroupQueryResultItem",
           "type": "object",
           "_attrs_order_": [
            "id",
            "gid",
            "name",
            "builtin",
            "sudo_commands",
            "sudo_commands_nopasswd",
            "smb",
            "userns_idmap",
            "group",
            "id_type_both",
            "local",
            "sid",
            "roles",
            "users"
           ]
          }
         ],
         "type": "array"
        },
        {
         "additionalProperties": false,
         "properties": {
          "id": {
           "title": "id",
           "type": "integer",
           "_name_": "id",
           "_required_": false
          },
          "gid": {
           "title": "gid",
           "type": "integer",
           "_name_": "gid",
           "_required_": false
          },
          "name": {
           "minLength": 1,
           "title": "name",
           "type": "string",
           "_name_": "name",
           "_required_": false
          },
          "builtin": {
           "title": "builtin",
           "type": "boolean",
           "_name_": "builtin",
           "_required_": false
          },
          "sudo_commands": {
           "items": [
            {
             "minLength": 1,
             "type": "string"
            }
           ],
           "title": "sudo_commands",
           "type": "array",
           "_name_": "sudo_commands",
           "_required_": false
          },
          "sudo_commands_nopasswd": {
           "items": [
            {
             "minLength": 1,
             "type": "string"
            }
           ],
           "title": "sudo_commands_nopasswd",
           "type": "array",
           "_name_": "sudo_commands_nopasswd",
           "_required_": false
          },
          "smb": {
           "description": "Specifies whether the group should be mapped into an NT group.",
           "title": "smb",
           "type": "boolean",
           "_name_": "smb",
           "_required_": false
          },
          "userns_idmap": {
           "anyOf": [
            {
             "const": "DIRECT",
             "enum": [
              "DIRECT"
             ],
             "type": "string"
            },
            {
             "maximum": 4294967294,
             "minimum": 1,
             "type": "integer"
            },
            {
             "type": "null"
            }
           ],
           "description": "Species the subgid mapping for this group. If DIRECT then the GID will be\ndirectly mapped to all containers. Alternatively, the target GID may be\nexplicitly specified. If None, then the GID will not be mapped.\n\nNOTE: this field will be ignored for groups that have been assigned\nTrueNAS roles.",
           "title": "userns_idmap",
           "_name_": "userns_idmap",
           "_required_": false
          },
          "group": {
           "minLength": 1,
           "title": "group",
           "type": "string",
           "_name_": "group",
           "_required_": false
          },
          "id_type_both": {
           "title": "id_type_both",
           "type": "boolean",
           "_name_": "id_type_both",
           "_required_": false
          },
          "local": {
           "title": "local",
           "type": "boolean",
           "_name_": "local",
           "_required_": false
          },
          "sid": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "null"
            }
           ],
           "title": "sid",
           "_name_": "sid",
           "_required_": false
          },
          "roles": {
           "items": [
            {
             "type": "string"
            }
           ],
           "title": "roles",
           "type": "array",
           "_name_": "roles",
           "_required_": false
          },
          "users": {
           "description": "A list of user ids (`id` attribute from `user.query`).",
           "items": [
            {
             "type": "integer"
            }
           ],
           "title": "users",
           "type": "array",
           "_name_": "users",
           "_required_": false
          }
         },
         "title": "GroupQueryResultItem",
         "type": "object",
         "_attrs_order_": [
          "id",
          "gid",
          "name",
          "builtin",
          "sudo_commands",
          "sudo_commands_nopasswd",
          "smb",
          "userns_idmap",
          "group",
          "id_type_both",
          "local",
          "sid",
          "roles",
          "users"
         ]
        },
        {
         "type": "integer"
        }
       ],
       "title": "result",
       "_name_": "result"
      },
      "group_create": {
       "additionalProperties": false,
       "properties": {
        "gid": {
         "anyOf": [
          {
           "maximum": 90000000,
           "minimum": 0,
           "type": "integer"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "description": "If `null`, it is automatically filled with the next one available.",
         "title": "gid",
         "_name_": "gid"
        },
        "name": {
         "minLength": 1,
         "title": "name",
         "type": "string",
         "_name_": "name"
        },
        "sudo_commands": {
         "default": [],
         "items": {
          "minLength": 1,
          "type": "string"
         },
         "title": "sudo_commands",
         "type": "array",
         "_name_": "sudo_commands"
        },
        "sudo_commands_nopasswd": {
         "default": [],
         "items": {
          "minLength": 1,
          "type": "string"
         },
         "title": "sudo_commands_nopasswd",
         "type": "array",
         "_name_": "sudo_commands_nopasswd"
        },
        "smb": {
         "default": true,
         "description": "Specifies whether the group should be mapped into an NT group.",
         "title": "smb",
         "type": "boolean",
         "_name_": "smb"
        },
        "userns_idmap": {
         "anyOf": [
          {
           "const": "DIRECT",
           "enum": [
            "DIRECT"
           ],
           "type": "string"
          },
          {
           "maximum": 4294967294,
           "minimum": 1,
           "type": "integer"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "description": "Species the subgid mapping for this group. If DIRECT then the GID will be\ndirectly mapped to all containers. Alternatively, the target GID may be\nexplicitly specified. If None, then the GID will not be mapped.\n\nNOTE: this field will be ignored for groups that have been assigned\nTrueNAS roles.",
         "title": "userns_idmap",
         "_name_": "userns_idmap"
        },
        "users": {
         "default": [],
         "description": "A list of user ids (`id` attribute from `user.query`).",
         "items": {
          "type": "integer"
         },
         "title": "users",
         "type": "array",
         "_name_": "users"
        }
       },
       "required": [
        "name"
       ],
       "title": "group_create",
       "type": "object",
       "_name_": "group_create",
       "_attrs_order_": [
        "gid",
        "name",
        "sudo_commands",
        "sudo_commands_nopasswd",
        "smb",
        "userns_idmap",
        "users"
       ]
      },
      "return_schema_of_group_create": {
       "title": "result",
       "type": "integer",
       "_name_": "result"
      },
      "group_delete": {
       "additionalProperties": false,
       "properties": {
        "delete_users": {
         "default": false,
         "description": "Deletes all users that have this group as their primary group.",
         "title": "delete_users",
         "type": "boolean",
         "_name_": "delete_users"
        }
       },
       "title": "options",
       "type": "object",
       "default": {
        "delete_users": false
       },
       "_name_": "options",
       "_attrs_order_": [
        "delete_users"
       ]
      },
      "return_schema_of_group_delete": {
       "title": "result",
       "type": "integer",
       "_name_": "result"
      },
      "group_update": {
       "additionalProperties": false,
       "properties": {
        "name": {
         "minLength": 1,
         "title": "name",
         "type": "string",
         "_name_": "name"
        },
        "sudo_commands": {
         "items": {
          "minLength": 1,
          "type": "string"
         },
         "title": "sudo_commands",
         "type": "array",
         "_name_": "sudo_commands"
        },
        "sudo_commands_nopasswd": {
         "items": {
          "minLength": 1,
          "type": "string"
         },
         "title": "sudo_commands_nopasswd",
         "type": "array",
         "_name_": "sudo_commands_nopasswd"
        },
        "smb": {
         "description": "Specifies whether the group should be mapped into an NT group.",
         "title": "smb",
         "type": "boolean",
         "_name_": "smb"
        },
        "userns_idmap": {
         "anyOf": [
          {
           "const": "DIRECT",
           "enum": [
            "DIRECT"
           ],
           "type": "string"
          },
          {
           "maximum": 4294967294,
           "minimum": 1,
           "type": "integer"
          },
          {
           "type": "null"
          }
         ],
         "description": "Species the subgid mapping for this group. If DIRECT then the GID will be\ndirectly mapped to all containers. Alternatively, the target GID may be\nexplicitly specified. If None, then the GID will not be mapped.\n\nNOTE: this field will be ignored for groups that have been assigned\nTrueNAS roles.",
         "title": "userns_idmap",
         "_name_": "userns_idmap"
        },
        "users": {
         "description": "A list of user ids (`id` attribute from `user.query`).",
         "items": {
          "type": "integer"
         },
         "title": "users",
         "type": "array",
         "_name_": "users"
        }
       },
       "title": "group_update",
       "type": "object",
       "_name_": "group_update",
       "_attrs_order_": [
        "name",
        "sudo_commands",
        "sudo_commands_nopasswd",
        "smb",
        "userns_idmap",
        "users"
       ]
      },
      "return_schema_of_group_update": {
       "title": "result",
       "type": "integer",
       "_name_": "result"
      },
      "group_get_group_obj": {
       "additionalProperties": false,
       "properties": {
        "groupname": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "groupname",
         "_name_": "groupname"
        },
        "gid": {
         "anyOf": [
          {
           "type": "integer"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "gid",
         "_name_": "gid"
        },
        "sid_info": {
         "default": false,
         "title": "sid_info",
         "type": "boolean",
         "_name_": "sid_info"
        }
       },
       "title": "get_group_obj",
       "type": "object",
       "_name_": "get_group_obj",
       "_attrs_order_": [
        "groupname",
        "gid",
        "sid_info"
       ]
      },
      "return_schema_of_group_get_group_obj": {
       "additionalProperties": false,
       "properties": {
        "gr_name": {
         "description": "name of the group",
         "title": "gr_name",
         "type": "string",
         "_name_": "gr_name"
        },
        "gr_gid": {
         "description": "group id of the group",
         "title": "gr_gid",
         "type": "integer",
         "_name_": "gr_gid"
        },
        "gr_mem": {
         "description": "list of group names that are members of the group",
         "items": {
          "type": "string"
         },
         "title": "gr_mem",
         "type": "array",
         "_name_": "gr_mem"
        },
        "sid": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "description": "optional SID value for the account that is present if `sid_info` is specified in payload.",
         "title": "sid",
         "_name_": "sid"
        },
        "source": {
         "description": "the name server switch module that provided the user. Options are:\n    FILES - local user in passwd file of server,\n    WINBIND - user provided by winbindd,\n    SSS - user provided by SSSD.",
         "enum": [
          "LOCAL",
          "ACTIVEDIRECTORY",
          "LDAP"
         ],
         "title": "source",
         "type": "string",
         "_name_": "source"
        },
        "local": {
         "description": "boolean indicating whether this group is local to the NAS or provided by a directory service.",
         "title": "local",
         "type": "boolean",
         "_name_": "local"
        }
       },
       "required": [
        "gr_name",
        "gr_gid",
        "gr_mem",
        "source",
        "local"
       ],
       "title": "result",
       "type": "object",
       "_name_": "result",
       "_attrs_order_": [
        "gr_name",
        "gr_gid",
        "gr_mem",
        "sid",
        "source",
        "local"
       ]
      },
      "group_get_instance_0": {
       "title": "id",
       "type": "integer",
       "_name_": "id"
      },
      "group_get_instance_1": {
       "additionalProperties": false,
       "properties": {
        "relationships": {
         "default": true,
         "title": "relationships",
         "type": "boolean",
         "_name_": "relationships"
        },
        "extend": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "extend",
         "_name_": "extend"
        },
        "extend_context": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "extend_context",
         "_name_": "extend_context"
        },
        "prefix": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "prefix",
         "_name_": "prefix"
        },
        "extra": {
         "default": {},
         "title": "extra",
         "type": "object",
         "_name_": "extra"
        },
        "order_by": {
         "default": [],
         "items": {
          "type": "string"
         },
         "title": "order_by",
         "type": "array",
         "_name_": "order_by"
        },
        "select": {
         "default": [],
         "items": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "items": [
             {}
            ],
            "type": "array"
           }
          ]
         },
         "title": "select",
         "type": "array",
         "_name_": "select"
        },
        "count": {
         "default": false,
         "title": "count",
         "type": "boolean",
         "_name_": "count"
        },
        "get": {
         "default": false,
         "title": "get",
         "type": "boolean",
         "_name_": "get"
        },
        "offset": {
         "default": 0,
         "title": "offset",
         "type": "integer",
         "_name_": "offset"
        },
        "limit": {
         "default": 0,
         "title": "limit",
         "type": "integer",
         "_name_": "limit"
        },
        "force_sql_filters": {
         "default": false,
         "title": "force_sql_filters",
         "type": "boolean",
         "_name_": "force_sql_filters"
        }
       },
       "title": "options",
       "type": "object",
       "default": {},
       "_name_": "options",
       "_attrs_order_": [
        "relationships",
        "extend",
        "extend_context",
        "prefix",
        "extra",
        "order_by",
        "select",
        "count",
        "get",
        "offset",
        "limit",
        "force_sql_filters"
       ]
      },
      "group_get_instance": {
       "type": "object",
       "properties": {
        "id": {
         "$ref": "#/components/schemas/group_get_instance_0"
        },
        "options": {
         "$ref": "#/components/schemas/group_get_instance_1"
        }
       }
      },
      "return_schema_of_group_get_instance": {
       "additionalProperties": false,
       "properties": {
        "id": {
         "title": "id",
         "type": "integer",
         "_name_": "id"
        },
        "gid": {
         "title": "gid",
         "type": "integer",
         "_name_": "gid"
        },
        "name": {
         "minLength": 1,
         "title": "name",
         "type": "string",
         "_name_": "name"
        },
        "builtin": {
         "title": "builtin",
         "type": "boolean",
         "_name_": "builtin"
        },
        "sudo_commands": {
         "default": [],
         "items": {
          "minLength": 1,
          "type": "string"
         },
         "title": "sudo_commands",
         "type": "array",
         "_name_": "sudo_commands"
        },
        "sudo_commands_nopasswd": {
         "default": [],
         "items": {
          "minLength": 1,
          "type": "string"
         },
         "title": "sudo_commands_nopasswd",
         "type": "array",
         "_name_": "sudo_commands_nopasswd"
        },
        "smb": {
         "default": true,
         "description": "Specifies whether the group should be mapped into an NT group.",
         "title": "smb",
         "type": "boolean",
         "_name_": "smb"
        },
        "userns_idmap": {
         "anyOf": [
          {
           "const": "DIRECT",
           "enum": [
            "DIRECT"
           ],
           "type": "string"
          },
          {
           "maximum": 4294967294,
           "minimum": 1,
           "type": "integer"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "description": "Species the subgid mapping for this group. If DIRECT then the GID will be\ndirectly mapped to all containers. Alternatively, the target GID may be\nexplicitly specified. If None, then the GID will not be mapped.\n\nNOTE: this field will be ignored for groups that have been assigned\nTrueNAS roles.",
         "title": "userns_idmap",
         "_name_": "userns_idmap"
        },
        "group": {
         "minLength": 1,
         "title": "group",
         "type": "string",
         "_name_": "group"
        },
        "id_type_both": {
         "title": "id_type_both",
         "type": "boolean",
         "_name_": "id_type_both"
        },
        "local": {
         "title": "local",
         "type": "boolean",
         "_name_": "local"
        },
        "sid": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "title": "sid",
         "_name_": "sid"
        },
        "roles": {
         "items": {
          "type": "string"
         },
         "title": "roles",
         "type": "array",
         "_name_": "roles"
        },
        "users": {
         "default": [],
         "description": "A list of user ids (`id` attribute from `user.query`).",
         "items": {
          "type": "integer"
         },
         "title": "users",
         "type": "array",
         "_name_": "users"
        }
       },
       "required": [
        "id",
        "gid",
        "name",
        "builtin",
        "group",
        "id_type_both",
        "local",
        "sid",
        "roles"
       ],
       "title": "result",
       "type": "object",
       "_name_": "result",
       "_attrs_order_": [
        "id",
        "gid",
        "name",
        "builtin",
        "sudo_commands",
        "sudo_commands_nopasswd",
        "smb",
        "userns_idmap",
        "group",
        "id_type_both",
        "local",
        "sid",
        "roles",
        "users"
       ]
      },
      "return_schema_of_group_get_next_gid": {
       "title": "result",
       "type": "integer",
       "_name_": "result"
      },
      "group_has_password_enabled_user_0": {
       "items": {
        "type": "integer"
       },
       "title": "gids",
       "type": "array",
       "_name_": "gids"
      },
      "group_has_password_enabled_user_1": {
       "default": [],
       "items": {
        "type": "integer"
       },
       "title": "exclude_user_ids",
       "type": "array",
       "_name_": "exclude_user_ids"
      },
      "group_has_password_enabled_user": {
       "type": "object",
       "properties": {
        "gids": {
         "$ref": "#/components/schemas/group_has_password_enabled_user_0"
        },
        "exclude_user_ids": {
         "$ref": "#/components/schemas/group_has_password_enabled_user_1"
        }
       }
      },
      "return_schema_of_group_has_password_enabled_user": {
       "title": "result",
       "type": "boolean",
       "_name_": "result"
      },
      "return_schema_of_hardware_memory_error_info": {
       "type": "object",
       "properties": {},
       "additionalProperties": true,
       "_name_": "mem_ctrl",
       "title": "mem_ctrl",
       "default": {},
       "_attrs_order_": []
      },
      "return_schema_of_idmap_query": {
       "anyOf": [
        {
         "_name_": "query_result",
         "title": "query_result",
         "default": [],
         "_required_": false,
         "type": "array",
         "items": [
          {
           "type": "object",
           "properties": {
            "name": {
             "_name_": "name",
             "title": "name",
             "_required_": true,
             "type": "string"
            },
            "dns_domain_name": {
             "_name_": "dns_domain_name",
             "title": "dns_domain_name",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "range_low": {
             "type": "integer",
             "_name_": "range_low",
             "title": "range_low",
             "_required_": true
            },
            "range_high": {
             "type": "integer",
             "_name_": "range_high",
             "title": "range_high",
             "_required_": true
            },
            "idmap_backend": {
             "_name_": "idmap_backend",
             "title": "idmap_backend",
             "_required_": true,
             "type": "string",
             "enum": [
              "AD",
              "AUTORID",
              "LDAP",
              "NSS",
              "RFC2307",
              "RID",
              "TDB"
             ]
            },
            "certificate": {
             "type": [
              "integer",
              "null"
             ],
             "_name_": "certificate",
             "title": "certificate",
             "_required_": false
            },
            "options": {
             "anyOf": [
              {
               "type": "object",
               "properties": {
                "schema_mode": {
                 "_name_": "schema_mode",
                 "title": "nss_info_ad",
                 "default": "SFU",
                 "_required_": false,
                 "type": "string",
                 "enum": [
                  "SFU",
                  "SFU20",
                  "RFC2307",
                  "TEMPLATE"
                 ]
                },
                "unix_primary_group": {
                 "type": "boolean",
                 "_name_": "unix_primary_group",
                 "title": "unix_primary_group",
                 "default": false,
                 "_required_": false
                },
                "unix_nss_info": {
                 "type": "boolean",
                 "_name_": "unix_nss_info",
                 "title": "unix_nss_info",
                 "default": false,
                 "_required_": false
                }
               },
               "additionalProperties": false,
               "_name_": "idmap_ad_options",
               "title": "idmap_ad_options",
               "default": {},
               "_required_": false,
               "_attrs_order_": [
                "schema_mode",
                "unix_primary_group",
                "unix_nss_info"
               ]
              },
              {
               "type": "object",
               "properties": {
                "rangesize": {
                 "type": "integer",
                 "_name_": "rangesize",
                 "title": "rangesize",
                 "default": 100000,
                 "_required_": false
                },
                "readonly": {
                 "type": "boolean",
                 "_name_": "readonly",
                 "title": "readonly",
                 "default": false,
                 "_required_": false
                },
                "ignore_builtin": {
                 "type": "boolean",
                 "_name_": "ignore_builtin",
                 "title": "ignore_builtin",
                 "default": false,
                 "_required_": false
                }
               },
               "additionalProperties": false,
               "_name_": "idmap_autorid_options",
               "title": "idmap_autorid_options",
               "default": {},
               "_required_": false,
               "_attrs_order_": [
                "rangesize",
                "readonly",
                "ignore_builtin"
               ]
              },
              {
               "type": "object",
               "properties": {
                "ldap_base_dn": {
                 "_name_": "ldap_base_dn",
                 "title": "ldap_base_dn",
                 "_required_": false,
                 "type": "string"
                },
                "ldap_user_dn": {
                 "_name_": "ldap_user_dn",
                 "title": "ldap_user_dn",
                 "_required_": false,
                 "type": "string"
                },
                "ldap_user_dn_password": {
                 "_name_": "ldap_user_dn_password",
                 "title": "ldap_user_dn_password",
                 "_required_": false,
                 "type": "string"
                },
                "ldap_url": {
                 "_name_": "ldap_url",
                 "title": "ldap_url",
                 "_required_": false,
                 "type": "string"
                },
                "readonly": {
                 "type": "boolean",
                 "_name_": "readonly",
                 "title": "readonly",
                 "default": false,
                 "_required_": false
                },
                "ssl": {
                 "_name_": "ssl",
                 "title": "ldap_ssl_choice",
                 "default": "ON",
                 "_required_": false,
                 "type": "string",
                 "enum": [
                  "OFF",
                  "ON",
                  "START_TLS"
                 ]
                },
                "validate_certificates": {
                 "type": "boolean",
                 "_name_": "validate_certificates",
                 "title": "validate_certificates",
                 "default": true,
                 "_required_": false
                }
               },
               "additionalProperties": false,
               "_name_": "idmap_ldap_options",
               "title": "idmap_ldap_options",
               "default": {},
               "_required_": false,
               "_attrs_order_": [
                "ldap_base_dn",
                "ldap_user_dn",
                "ldap_user_dn_password",
                "ldap_url",
                "readonly",
                "ssl",
                "validate_certificates"
               ]
              },
              {
               "type": "object",
               "properties": {
                "linked_service": {
                 "_name_": "linked_service",
                 "title": "linked_service",
                 "default": "LOCAL_ACCOUNT",
                 "_required_": false,
                 "type": "string",
                 "enum": [
                  "LOCAL_ACCOUNT",
                  "LDAP"
                 ]
                }
               },
               "additionalProperties": false,
               "_name_": "idmap_nss_options",
               "title": "idmap_nss_options",
               "default": {},
               "_required_": false,
               "_attrs_order_": [
                "linked_service"
               ]
              },
              {
               "type": "object",
               "properties": {
                "ldap_server": {
                 "_name_": "ldap_server",
                 "title": "ldap_server",
                 "_required_": true,
                 "type": "string",
                 "enum": [
                  "AD",
                  "STANDALONE"
                 ]
                },
                "ldap_realm": {
                 "type": "boolean",
                 "_name_": "ldap_realm",
                 "title": "ldap_realm",
                 "default": false,
                 "_required_": false
                },
                "bind_path_user": {
                 "_name_": "bind_path_user",
                 "title": "bind_path_user",
                 "_required_": false,
                 "type": "string"
                },
                "bind_path_group": {
                 "_name_": "bind_path_group",
                 "title": "bind_path_group",
                 "_required_": false,
                 "type": "string"
                },
                "user_cn": {
                 "type": "boolean",
                 "_name_": "user_cn",
                 "title": "user_cn",
                 "default": false,
                 "_required_": false
                },
                "cn_realm": {
                 "_name_": "cn_realm",
                 "title": "cn_realm",
                 "_required_": false,
                 "type": "string"
                },
                "ldap_domain": {
                 "_name_": "ldap_domain",
                 "title": "ldap_domain",
                 "_required_": false,
                 "type": "string"
                },
                "ldap_url": {
                 "_name_": "ldap_url",
                 "title": "ldap_url",
                 "_required_": false,
                 "type": "string"
                },
                "ldap_user_dn": {
                 "_name_": "ldap_user_dn",
                 "title": "ldap_user_dn",
                 "_required_": false,
                 "type": "string"
                },
                "ldap_user_dn_password": {
                 "_name_": "ldap_user_dn_password",
                 "title": "ldap_user_dn_password",
                 "_required_": false,
                 "type": "string"
                },
                "ssl": {
                 "_name_": "ssl",
                 "title": "ldap_ssl_choice",
                 "default": "ON",
                 "_required_": false,
                 "type": "string",
                 "enum": [
                  "OFF",
                  "ON",
                  "START_TLS"
                 ]
                },
                "validate_certificates": {
                 "type": "boolean",
                 "_name_": "validate_certificates",
                 "title": "validate_certificates",
                 "default": true,
                 "_required_": false
                }
               },
               "additionalProperties": false,
               "_name_": "idmap_rfc2307_options",
               "title": "idmap_rfc2307_options",
               "default": {},
               "_required_": false,
               "_attrs_order_": [
                "ldap_server",
                "ldap_realm",
                "bind_path_user",
                "bind_path_group",
                "user_cn",
                "cn_realm",
                "ldap_domain",
                "ldap_url",
                "ldap_user_dn",
                "ldap_user_dn_password",
                "ssl",
                "validate_certificates"
               ]
              },
              {
               "type": "object",
               "properties": {
                "sssd_compat": {
                 "type": "boolean",
                 "_name_": "sssd_compat",
                 "title": "sssd_compat",
                 "default": false,
                 "_required_": false
                }
               },
               "additionalProperties": false,
               "_name_": "idmap_rid_options",
               "title": "idmap_rid_options",
               "default": {},
               "_required_": false,
               "_attrs_order_": [
                "sssd_compat"
               ]
              },
              {
               "type": "object",
               "properties": {},
               "additionalProperties": false,
               "_name_": "idmap_tdb_options",
               "title": "idmap_tdb_options",
               "default": {},
               "_required_": false,
               "_attrs_order_": []
              }
             ],
             "nullable": false,
             "_name_": "options",
             "description": null,
             "_required_": false
            },
            "id": {
             "type": "integer",
             "_name_": "id",
             "title": "id",
             "_required_": false
            }
           },
           "additionalProperties": false,
           "_name_": "idmap_domain_entry",
           "title": "idmap_domain_entry",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "name",
            "dns_domain_name",
            "range_low",
            "range_high",
            "idmap_backend",
            "certificate",
            "options",
            "id"
           ]
          }
         ]
        },
        {
         "type": "object",
         "properties": {
          "name": {
           "_name_": "name",
           "title": "name",
           "_required_": true,
           "type": "string"
          },
          "dns_domain_name": {
           "_name_": "dns_domain_name",
           "title": "dns_domain_name",
           "_required_": false,
           "type": [
            "string",
            "null"
           ]
          },
          "range_low": {
           "type": "integer",
           "_name_": "range_low",
           "title": "range_low",
           "_required_": true
          },
          "range_high": {
           "type": "integer",
           "_name_": "range_high",
           "title": "range_high",
           "_required_": true
          },
          "idmap_backend": {
           "_name_": "idmap_backend",
           "title": "idmap_backend",
           "_required_": true,
           "type": "string",
           "enum": [
            "AD",
            "AUTORID",
            "LDAP",
            "NSS",
            "RFC2307",
            "RID",
            "TDB"
           ]
          },
          "certificate": {
           "type": [
            "integer",
            "null"
           ],
           "_name_": "certificate",
           "title": "certificate",
           "_required_": false
          },
          "options": {
           "anyOf": [
            {
             "type": "object",
             "properties": {
              "schema_mode": {
               "_name_": "schema_mode",
               "title": "nss_info_ad",
               "default": "SFU",
               "_required_": false,
               "type": "string",
               "enum": [
                "SFU",
                "SFU20",
                "RFC2307",
                "TEMPLATE"
               ]
              },
              "unix_primary_group": {
               "type": "boolean",
               "_name_": "unix_primary_group",
               "title": "unix_primary_group",
               "default": false,
               "_required_": false
              },
              "unix_nss_info": {
               "type": "boolean",
               "_name_": "unix_nss_info",
               "title": "unix_nss_info",
               "default": false,
               "_required_": false
              }
             },
             "additionalProperties": false,
             "_name_": "idmap_ad_options",
             "title": "idmap_ad_options",
             "default": {},
             "_required_": false,
             "_attrs_order_": [
              "schema_mode",
              "unix_primary_group",
              "unix_nss_info"
             ]
            },
            {
             "type": "object",
             "properties": {
              "rangesize": {
               "type": "integer",
               "_name_": "rangesize",
               "title": "rangesize",
               "default": 100000,
               "_required_": false
              },
              "readonly": {
               "type": "boolean",
               "_name_": "readonly",
               "title": "readonly",
               "default": false,
               "_required_": false
              },
              "ignore_builtin": {
               "type": "boolean",
               "_name_": "ignore_builtin",
               "title": "ignore_builtin",
               "default": false,
               "_required_": false
              }
             },
             "additionalProperties": false,
             "_name_": "idmap_autorid_options",
             "title": "idmap_autorid_options",
             "default": {},
             "_required_": false,
             "_attrs_order_": [
              "rangesize",
              "readonly",
              "ignore_builtin"
             ]
            },
            {
             "type": "object",
             "properties": {
              "ldap_base_dn": {
               "_name_": "ldap_base_dn",
               "title": "ldap_base_dn",
               "_required_": false,
               "type": "string"
              },
              "ldap_user_dn": {
               "_name_": "ldap_user_dn",
               "title": "ldap_user_dn",
               "_required_": false,
               "type": "string"
              },
              "ldap_user_dn_password": {
               "_name_": "ldap_user_dn_password",
               "title": "ldap_user_dn_password",
               "_required_": false,
               "type": "string"
              },
              "ldap_url": {
               "_name_": "ldap_url",
               "title": "ldap_url",
               "_required_": false,
               "type": "string"
              },
              "readonly": {
               "type": "boolean",
               "_name_": "readonly",
               "title": "readonly",
               "default": false,
               "_required_": false
              },
              "ssl": {
               "_name_": "ssl",
               "title": "ldap_ssl_choice",
               "default": "ON",
               "_required_": false,
               "type": "string",
               "enum": [
                "OFF",
                "ON",
                "START_TLS"
               ]
              },
              "validate_certificates": {
               "type": "boolean",
               "_name_": "validate_certificates",
               "title": "validate_certificates",
               "default": true,
               "_required_": false
              }
             },
             "additionalProperties": false,
             "_name_": "idmap_ldap_options",
             "title": "idmap_ldap_options",
             "default": {},
             "_required_": false,
             "_attrs_order_": [
              "ldap_base_dn",
              "ldap_user_dn",
              "ldap_user_dn_password",
              "ldap_url",
              "readonly",
              "ssl",
              "validate_certificates"
             ]
            },
            {
             "type": "object",
             "properties": {
              "linked_service": {
               "_name_": "linked_service",
               "title": "linked_service",
               "default": "LOCAL_ACCOUNT",
               "_required_": false,
               "type": "string",
               "enum": [
                "LOCAL_ACCOUNT",
                "LDAP"
               ]
              }
             },
             "additionalProperties": false,
             "_name_": "idmap_nss_options",
             "title": "idmap_nss_options",
             "default": {},
             "_required_": false,
             "_attrs_order_": [
              "linked_service"
             ]
            },
            {
             "type": "object",
             "properties": {
              "ldap_server": {
               "_name_": "ldap_server",
               "title": "ldap_server",
               "_required_": true,
               "type": "string",
               "enum": [
                "AD",
                "STANDALONE"
               ]
              },
              "ldap_realm": {
               "type": "boolean",
               "_name_": "ldap_realm",
               "title": "ldap_realm",
               "default": false,
               "_required_": false
              },
              "bind_path_user": {
               "_name_": "bind_path_user",
               "title": "bind_path_user",
               "_required_": false,
               "type": "string"
              },
              "bind_path_group": {
               "_name_": "bind_path_group",
               "title": "bind_path_group",
               "_required_": false,
               "type": "string"
              },
              "user_cn": {
               "type": "boolean",
               "_name_": "user_cn",
               "title": "user_cn",
               "default": false,
               "_required_": false
              },
              "cn_realm": {
               "_name_": "cn_realm",
               "title": "cn_realm",
               "_required_": false,
               "type": "string"
              },
              "ldap_domain": {
               "_name_": "ldap_domain",
               "title": "ldap_domain",
               "_required_": false,
               "type": "string"
              },
              "ldap_url": {
               "_name_": "ldap_url",
               "title": "ldap_url",
               "_required_": false,
               "type": "string"
              },
              "ldap_user_dn": {
               "_name_": "ldap_user_dn",
               "title": "ldap_user_dn",
               "_required_": false,
               "type": "string"
              },
              "ldap_user_dn_password": {
               "_name_": "ldap_user_dn_password",
               "title": "ldap_user_dn_password",
               "_required_": false,
               "type": "string"
              },
              "ssl": {
               "_name_": "ssl",
               "title": "ldap_ssl_choice",
               "default": "ON",
               "_required_": false,
               "type": "string",
               "enum": [
                "OFF",
                "ON",
                "START_TLS"
               ]
              },
              "validate_certificates": {
               "type": "boolean",
               "_name_": "validate_certificates",
               "title": "validate_certificates",
               "default": true,
               "_required_": false
              }
             },
             "additionalProperties": false,
             "_name_": "idmap_rfc2307_options",
             "title": "idmap_rfc2307_options",
             "default": {},
             "_required_": false,
             "_attrs_order_": [
              "ldap_server",
              "ldap_realm",
              "bind_path_user",
              "bind_path_group",
              "user_cn",
              "cn_realm",
              "ldap_domain",
              "ldap_url",
              "ldap_user_dn",
              "ldap_user_dn_password",
              "ssl",
              "validate_certificates"
             ]
            },
            {
             "type": "object",
             "properties": {
              "sssd_compat": {
               "type": "boolean",
               "_name_": "sssd_compat",
               "title": "sssd_compat",
               "default": false,
               "_required_": false
              }
             },
             "additionalProperties": false,
             "_name_": "idmap_rid_options",
             "title": "idmap_rid_options",
             "default": {},
             "_required_": false,
             "_attrs_order_": [
              "sssd_compat"
             ]
            },
            {
             "type": "object",
             "properties": {},
             "additionalProperties": false,
             "_name_": "idmap_tdb_options",
             "title": "idmap_tdb_options",
             "default": {},
             "_required_": false,
             "_attrs_order_": []
            }
           ],
           "nullable": false,
           "_name_": "options",
           "description": null,
           "_required_": false
          },
          "id": {
           "type": "integer",
           "_name_": "id",
           "title": "id",
           "_required_": false
          }
         },
         "additionalProperties": false,
         "_name_": "idmap_domain_entry",
         "title": "idmap_domain_entry",
         "default": {},
         "_required_": false,
         "_attrs_order_": [
          "name",
          "dns_domain_name",
          "range_low",
          "range_high",
          "idmap_backend",
          "certificate",
          "options",
          "id"
         ]
        },
        {
         "type": "integer",
         "_name_": "count",
         "title": "count",
         "_required_": false
        },
        {
         "type": "object",
         "properties": {
          "name": {
           "_name_": "name",
           "title": "name",
           "_required_": true,
           "type": "string"
          },
          "dns_domain_name": {
           "_name_": "dns_domain_name",
           "title": "dns_domain_name",
           "_required_": false,
           "type": [
            "string",
            "null"
           ]
          },
          "range_low": {
           "type": "integer",
           "_name_": "range_low",
           "title": "range_low",
           "_required_": true
          },
          "range_high": {
           "type": "integer",
           "_name_": "range_high",
           "title": "range_high",
           "_required_": true
          },
          "idmap_backend": {
           "_name_": "idmap_backend",
           "title": "idmap_backend",
           "_required_": true,
           "type": "string",
           "enum": [
            "AD",
            "AUTORID",
            "LDAP",
            "NSS",
            "RFC2307",
            "RID",
            "TDB"
           ]
          },
          "certificate": {
           "type": [
            "integer",
            "null"
           ],
           "_name_": "certificate",
           "title": "certificate",
           "_required_": false
          },
          "options": {
           "anyOf": [
            {
             "type": "object",
             "properties": {
              "schema_mode": {
               "_name_": "schema_mode",
               "title": "nss_info_ad",
               "default": "SFU",
               "_required_": false,
               "type": "string",
               "enum": [
                "SFU",
                "SFU20",
                "RFC2307",
                "TEMPLATE"
               ]
              },
              "unix_primary_group": {
               "type": "boolean",
               "_name_": "unix_primary_group",
               "title": "unix_primary_group",
               "default": false,
               "_required_": false
              },
              "unix_nss_info": {
               "type": "boolean",
               "_name_": "unix_nss_info",
               "title": "unix_nss_info",
               "default": false,
               "_required_": false
              }
             },
             "additionalProperties": false,
             "_name_": "idmap_ad_options",
             "title": "idmap_ad_options",
             "default": {},
             "_required_": false,
             "_attrs_order_": [
              "schema_mode",
              "unix_primary_group",
              "unix_nss_info"
             ]
            },
            {
             "type": "object",
             "properties": {
              "rangesize": {
               "type": "integer",
               "_name_": "rangesize",
               "title": "rangesize",
               "default": 100000,
               "_required_": false
              },
              "readonly": {
               "type": "boolean",
               "_name_": "readonly",
               "title": "readonly",
               "default": false,
               "_required_": false
              },
              "ignore_builtin": {
               "type": "boolean",
               "_name_": "ignore_builtin",
               "title": "ignore_builtin",
               "default": false,
               "_required_": false
              }
             },
             "additionalProperties": false,
             "_name_": "idmap_autorid_options",
             "title": "idmap_autorid_options",
             "default": {},
             "_required_": false,
             "_attrs_order_": [
              "rangesize",
              "readonly",
              "ignore_builtin"
             ]
            },
            {
             "type": "object",
             "properties": {
              "ldap_base_dn": {
               "_name_": "ldap_base_dn",
               "title": "ldap_base_dn",
               "_required_": false,
               "type": "string"
              },
              "ldap_user_dn": {
               "_name_": "ldap_user_dn",
               "title": "ldap_user_dn",
               "_required_": false,
               "type": "string"
              },
              "ldap_user_dn_password": {
               "_name_": "ldap_user_dn_password",
               "title": "ldap_user_dn_password",
               "_required_": false,
               "type": "string"
              },
              "ldap_url": {
               "_name_": "ldap_url",
               "title": "ldap_url",
               "_required_": false,
               "type": "string"
              },
              "readonly": {
               "type": "boolean",
               "_name_": "readonly",
               "title": "readonly",
               "default": false,
               "_required_": false
              },
              "ssl": {
               "_name_": "ssl",
               "title": "ldap_ssl_choice",
               "default": "ON",
               "_required_": false,
               "type": "string",
               "enum": [
                "OFF",
                "ON",
                "START_TLS"
               ]
              },
              "validate_certificates": {
               "type": "boolean",
               "_name_": "validate_certificates",
               "title": "validate_certificates",
               "default": true,
               "_required_": false
              }
             },
             "additionalProperties": false,
             "_name_": "idmap_ldap_options",
             "title": "idmap_ldap_options",
             "default": {},
             "_required_": false,
             "_attrs_order_": [
              "ldap_base_dn",
              "ldap_user_dn",
              "ldap_user_dn_password",
              "ldap_url",
              "readonly",
              "ssl",
              "validate_certificates"
             ]
            },
            {
             "type": "object",
             "properties": {
              "linked_service": {
               "_name_": "linked_service",
               "title": "linked_service",
               "default": "LOCAL_ACCOUNT",
               "_required_": false,
               "type": "string",
               "enum": [
                "LOCAL_ACCOUNT",
                "LDAP"
               ]
              }
             },
             "additionalProperties": false,
             "_name_": "idmap_nss_options",
             "title": "idmap_nss_options",
             "default": {},
             "_required_": false,
             "_attrs_order_": [
              "linked_service"
             ]
            },
            {
             "type": "object",
             "properties": {
              "ldap_server": {
               "_name_": "ldap_server",
               "title": "ldap_server",
               "_required_": true,
               "type": "string",
               "enum": [
                "AD",
                "STANDALONE"
               ]
              },
              "ldap_realm": {
               "type": "boolean",
               "_name_": "ldap_realm",
               "title": "ldap_realm",
               "default": false,
               "_required_": false
              },
              "bind_path_user": {
               "_name_": "bind_path_user",
               "title": "bind_path_user",
               "_required_": false,
               "type": "string"
              },
              "bind_path_group": {
               "_name_": "bind_path_group",
               "title": "bind_path_group",
               "_required_": false,
               "type": "string"
              },
              "user_cn": {
               "type": "boolean",
               "_name_": "user_cn",
               "title": "user_cn",
               "default": false,
               "_required_": false
              },
              "cn_realm": {
               "_name_": "cn_realm",
               "title": "cn_realm",
               "_required_": false,
               "type": "string"
              },
              "ldap_domain": {
               "_name_": "ldap_domain",
               "title": "ldap_domain",
               "_required_": false,
               "type": "string"
              },
              "ldap_url": {
               "_name_": "ldap_url",
               "title": "ldap_url",
               "_required_": false,
               "type": "string"
              },
              "ldap_user_dn": {
               "_name_": "ldap_user_dn",
               "title": "ldap_user_dn",
               "_required_": false,
               "type": "string"
              },
              "ldap_user_dn_password": {
               "_name_": "ldap_user_dn_password",
               "title": "ldap_user_dn_password",
               "_required_": false,
               "type": "string"
              },
              "ssl": {
               "_name_": "ssl",
               "title": "ldap_ssl_choice",
               "default": "ON",
               "_required_": false,
               "type": "string",
               "enum": [
                "OFF",
                "ON",
                "START_TLS"
               ]
              },
              "validate_certificates": {
               "type": "boolean",
               "_name_": "validate_certificates",
               "title": "validate_certificates",
               "default": true,
               "_required_": false
              }
             },
             "additionalProperties": false,
             "_name_": "idmap_rfc2307_options",
             "title": "idmap_rfc2307_options",
             "default": {},
             "_required_": false,
             "_attrs_order_": [
              "ldap_server",
              "ldap_realm",
              "bind_path_user",
              "bind_path_group",
              "user_cn",
              "cn_realm",
              "ldap_domain",
              "ldap_url",
              "ldap_user_dn",
              "ldap_user_dn_password",
              "ssl",
              "validate_certificates"
             ]
            },
            {
             "type": "object",
             "properties": {
              "sssd_compat": {
               "type": "boolean",
               "_name_": "sssd_compat",
               "title": "sssd_compat",
               "default": false,
               "_required_": false
              }
             },
             "additionalProperties": false,
             "_name_": "idmap_rid_options",
             "title": "idmap_rid_options",
             "default": {},
             "_required_": false,
             "_attrs_order_": [
              "sssd_compat"
             ]
            },
            {
             "type": "object",
             "properties": {},
             "additionalProperties": false,
             "_name_": "idmap_tdb_options",
             "title": "idmap_tdb_options",
             "default": {},
             "_required_": false,
             "_attrs_order_": []
            }
           ],
           "nullable": false,
           "_name_": "options",
           "description": null,
           "_required_": false
          },
          "id": {
           "type": "integer",
           "_name_": "id",
           "title": "id",
           "_required_": false
          }
         },
         "additionalProperties": false,
         "_name_": "idmap_domain_entry",
         "title": "idmap_domain_entry",
         "default": {},
         "_required_": false,
         "_attrs_order_": [
          "name",
          "dns_domain_name",
          "range_low",
          "range_high",
          "idmap_backend",
          "certificate",
          "options",
          "id"
         ]
        }
       ],
       "nullable": false,
       "_name_": "query_result",
       "description": null
      },
      "idmap_create": {
       "type": "object",
       "properties": {
        "name": {
         "_name_": "name",
         "title": "name",
         "type": "string",
         "description": "`name` the pre-windows 2000 domain name."
        },
        "dns_domain_name": {
         "_name_": "dns_domain_name",
         "title": "dns_domain_name",
         "type": "string",
         "nullable": true
        },
        "range_low": {
         "type": "integer",
         "_name_": "range_low",
         "title": "range_low",
         "description": "`range_low` and `range_high` specify the UID and GID range for which this backend is authoritative.\n`range_low` and `range_high` specify the UID and GID range for which this backend is authoritative."
        },
        "range_high": {
         "type": "integer",
         "_name_": "range_high",
         "title": "range_high",
         "description": "`range_low` and `range_high` specify the UID and GID range for which this backend is authoritative.\n`range_low` and `range_high` specify the UID and GID range for which this backend is authoritative."
        },
        "idmap_backend": {
         "_name_": "idmap_backend",
         "title": "idmap_backend",
         "type": "string",
         "enum": [
          "AD",
          "AUTORID",
          "LDAP",
          "NSS",
          "RFC2307",
          "RID",
          "TDB"
         ],
         "description": "`idmap_backend` provides a plugin interface for Winbind to use varying\nbackends to store SID/uid/gid mapping tables. The correct setting\ndepends on the environment in which the NAS is deployed."
        },
        "certificate": {
         "type": "integer",
         "_name_": "certificate",
         "title": "certificate",
         "nullable": true
        },
        "options": {
         "anyOf": [
          {
           "type": "object",
           "properties": {
            "schema_mode": {
             "_name_": "schema_mode",
             "title": "nss_info_ad",
             "default": "SFU",
             "_required_": false,
             "type": "string",
             "enum": [
              "SFU",
              "SFU20",
              "RFC2307",
              "TEMPLATE"
             ]
            },
            "unix_primary_group": {
             "type": "boolean",
             "_name_": "unix_primary_group",
             "title": "unix_primary_group",
             "default": false,
             "_required_": false
            },
            "unix_nss_info": {
             "type": "boolean",
             "_name_": "unix_nss_info",
             "title": "unix_nss_info",
             "default": false,
             "_required_": false
            }
           },
           "additionalProperties": false,
           "_name_": "idmap_ad_options",
           "title": "idmap_ad_options",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "schema_mode",
            "unix_primary_group",
            "unix_nss_info"
           ]
          },
          {
           "type": "object",
           "properties": {
            "rangesize": {
             "type": "integer",
             "_name_": "rangesize",
             "title": "rangesize",
             "default": 100000,
             "_required_": false
            },
            "readonly": {
             "type": "boolean",
             "_name_": "readonly",
             "title": "readonly",
             "default": false,
             "_required_": false
            },
            "ignore_builtin": {
             "type": "boolean",
             "_name_": "ignore_builtin",
             "title": "ignore_builtin",
             "default": false,
             "_required_": false
            }
           },
           "additionalProperties": false,
           "_name_": "idmap_autorid_options",
           "title": "idmap_autorid_options",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "rangesize",
            "readonly",
            "ignore_builtin"
           ]
          },
          {
           "type": "object",
           "properties": {
            "ldap_base_dn": {
             "_name_": "ldap_base_dn",
             "title": "ldap_base_dn",
             "_required_": false,
             "type": "string"
            },
            "ldap_user_dn": {
             "_name_": "ldap_user_dn",
             "title": "ldap_user_dn",
             "_required_": false,
             "type": "string"
            },
            "ldap_user_dn_password": {
             "_name_": "ldap_user_dn_password",
             "title": "ldap_user_dn_password",
             "_required_": false,
             "type": "string"
            },
            "ldap_url": {
             "_name_": "ldap_url",
             "title": "ldap_url",
             "_required_": false,
             "type": "string"
            },
            "readonly": {
             "type": "boolean",
             "_name_": "readonly",
             "title": "readonly",
             "default": false,
             "_required_": false
            },
            "ssl": {
             "_name_": "ssl",
             "title": "ldap_ssl_choice",
             "default": "ON",
             "_required_": false,
             "type": "string",
             "enum": [
              "OFF",
              "ON",
              "START_TLS"
             ]
            },
            "validate_certificates": {
             "type": "boolean",
             "_name_": "validate_certificates",
             "title": "validate_certificates",
             "default": true,
             "_required_": false
            }
           },
           "additionalProperties": false,
           "_name_": "idmap_ldap_options",
           "title": "idmap_ldap_options",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "ldap_base_dn",
            "ldap_user_dn",
            "ldap_user_dn_password",
            "ldap_url",
            "readonly",
            "ssl",
            "validate_certificates"
           ]
          },
          {
           "type": "object",
           "properties": {
            "linked_service": {
             "_name_": "linked_service",
             "title": "linked_service",
             "default": "LOCAL_ACCOUNT",
             "_required_": false,
             "type": "string",
             "enum": [
              "LOCAL_ACCOUNT",
              "LDAP"
             ]
            }
           },
           "additionalProperties": false,
           "_name_": "idmap_nss_options",
           "title": "idmap_nss_options",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "linked_service"
           ]
          },
          {
           "type": "object",
           "properties": {
            "ldap_server": {
             "_name_": "ldap_server",
             "title": "ldap_server",
             "_required_": true,
             "type": "string",
             "enum": [
              "AD",
              "STANDALONE"
             ]
            },
            "ldap_realm": {
             "type": "boolean",
             "_name_": "ldap_realm",
             "title": "ldap_realm",
             "default": false,
             "_required_": false
            },
            "bind_path_user": {
             "_name_": "bind_path_user",
             "title": "bind_path_user",
             "_required_": false,
             "type": "string"
            },
            "bind_path_group": {
             "_name_": "bind_path_group",
             "title": "bind_path_group",
             "_required_": false,
             "type": "string"
            },
            "user_cn": {
             "type": "boolean",
             "_name_": "user_cn",
             "title": "user_cn",
             "default": false,
             "_required_": false
            },
            "cn_realm": {
             "_name_": "cn_realm",
             "title": "cn_realm",
             "_required_": false,
             "type": "string"
            },
            "ldap_domain": {
             "_name_": "ldap_domain",
             "title": "ldap_domain",
             "_required_": false,
             "type": "string"
            },
            "ldap_url": {
             "_name_": "ldap_url",
             "title": "ldap_url",
             "_required_": false,
             "type": "string"
            },
            "ldap_user_dn": {
             "_name_": "ldap_user_dn",
             "title": "ldap_user_dn",
             "_required_": false,
             "type": "string"
            },
            "ldap_user_dn_password": {
             "_name_": "ldap_user_dn_password",
             "title": "ldap_user_dn_password",
             "_required_": false,
             "type": "string"
            },
            "ssl": {
             "_name_": "ssl",
             "title": "ldap_ssl_choice",
             "default": "ON",
             "_required_": false,
             "type": "string",
             "enum": [
              "OFF",
              "ON",
              "START_TLS"
             ]
            },
            "validate_certificates": {
             "type": "boolean",
             "_name_": "validate_certificates",
             "title": "validate_certificates",
             "default": true,
             "_required_": false
            }
           },
           "additionalProperties": false,
           "_name_": "idmap_rfc2307_options",
           "title": "idmap_rfc2307_options",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "ldap_server",
            "ldap_realm",
            "bind_path_user",
            "bind_path_group",
            "user_cn",
            "cn_realm",
            "ldap_domain",
            "ldap_url",
            "ldap_user_dn",
            "ldap_user_dn_password",
            "ssl",
            "validate_certificates"
           ]
          },
          {
           "type": "object",
           "properties": {
            "sssd_compat": {
             "type": "boolean",
             "_name_": "sssd_compat",
             "title": "sssd_compat",
             "default": false,
             "_required_": false
            }
           },
           "additionalProperties": false,
           "_name_": "idmap_rid_options",
           "title": "idmap_rid_options",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "sssd_compat"
           ]
          },
          {
           "type": "object",
           "properties": {},
           "additionalProperties": false,
           "_name_": "idmap_tdb_options",
           "title": "idmap_tdb_options",
           "default": {},
           "_required_": false,
           "_attrs_order_": []
          }
         ],
         "nullable": false,
         "_name_": "options",
         "description": "`options` are additional parameters that are backend-dependent:"
        }
       },
       "additionalProperties": false,
       "_name_": "idmap_domain_create",
       "title": "idmap_domain_create",
       "default": {},
       "_attrs_order_": [
        "name",
        "dns_domain_name",
        "range_low",
        "range_high",
        "idmap_backend",
        "certificate",
        "options"
       ]
      },
      "return_schema_of_idmap_create": {
       "type": "object",
       "properties": {
        "name": {
         "_name_": "name",
         "title": "name",
         "type": "string",
         "description": "`name` the pre-windows 2000 domain name."
        },
        "dns_domain_name": {
         "_name_": "dns_domain_name",
         "title": "dns_domain_name",
         "type": "string",
         "nullable": true
        },
        "range_low": {
         "type": "integer",
         "_name_": "range_low",
         "title": "range_low",
         "description": "`range_low` and `range_high` specify the UID and GID range for which this backend is authoritative.\n`range_low` and `range_high` specify the UID and GID range for which this backend is authoritative."
        },
        "range_high": {
         "type": "integer",
         "_name_": "range_high",
         "title": "range_high",
         "description": "`range_low` and `range_high` specify the UID and GID range for which this backend is authoritative.\n`range_low` and `range_high` specify the UID and GID range for which this backend is authoritative."
        },
        "idmap_backend": {
         "_name_": "idmap_backend",
         "title": "idmap_backend",
         "type": "string",
         "enum": [
          "AD",
          "AUTORID",
          "LDAP",
          "NSS",
          "RFC2307",
          "RID",
          "TDB"
         ],
         "description": "`idmap_backend` provides a plugin interface for Winbind to use varying\nbackends to store SID/uid/gid mapping tables. The correct setting\ndepends on the environment in which the NAS is deployed."
        },
        "certificate": {
         "type": "integer",
         "_name_": "certificate",
         "title": "certificate",
         "nullable": true
        },
        "options": {
         "anyOf": [
          {
           "type": "object",
           "properties": {
            "schema_mode": {
             "_name_": "schema_mode",
             "title": "nss_info_ad",
             "default": "SFU",
             "_required_": false,
             "type": "string",
             "enum": [
              "SFU",
              "SFU20",
              "RFC2307",
              "TEMPLATE"
             ]
            },
            "unix_primary_group": {
             "type": "boolean",
             "_name_": "unix_primary_group",
             "title": "unix_primary_group",
             "default": false,
             "_required_": false
            },
            "unix_nss_info": {
             "type": "boolean",
             "_name_": "unix_nss_info",
             "title": "unix_nss_info",
             "default": false,
             "_required_": false
            }
           },
           "additionalProperties": false,
           "_name_": "idmap_ad_options",
           "title": "idmap_ad_options",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "schema_mode",
            "unix_primary_group",
            "unix_nss_info"
           ]
          },
          {
           "type": "object",
           "properties": {
            "rangesize": {
             "type": "integer",
             "_name_": "rangesize",
             "title": "rangesize",
             "default": 100000,
             "_required_": false
            },
            "readonly": {
             "type": "boolean",
             "_name_": "readonly",
             "title": "readonly",
             "default": false,
             "_required_": false
            },
            "ignore_builtin": {
             "type": "boolean",
             "_name_": "ignore_builtin",
             "title": "ignore_builtin",
             "default": false,
             "_required_": false
            }
           },
           "additionalProperties": false,
           "_name_": "idmap_autorid_options",
           "title": "idmap_autorid_options",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "rangesize",
            "readonly",
            "ignore_builtin"
           ]
          },
          {
           "type": "object",
           "properties": {
            "ldap_base_dn": {
             "_name_": "ldap_base_dn",
             "title": "ldap_base_dn",
             "_required_": false,
             "type": "string"
            },
            "ldap_user_dn": {
             "_name_": "ldap_user_dn",
             "title": "ldap_user_dn",
             "_required_": false,
             "type": "string"
            },
            "ldap_user_dn_password": {
             "_name_": "ldap_user_dn_password",
             "title": "ldap_user_dn_password",
             "_required_": false,
             "type": "string"
            },
            "ldap_url": {
             "_name_": "ldap_url",
             "title": "ldap_url",
             "_required_": false,
             "type": "string"
            },
            "readonly": {
             "type": "boolean",
             "_name_": "readonly",
             "title": "readonly",
             "default": false,
             "_required_": false
            },
            "ssl": {
             "_name_": "ssl",
             "title": "ldap_ssl_choice",
             "default": "ON",
             "_required_": false,
             "type": "string",
             "enum": [
              "OFF",
              "ON",
              "START_TLS"
             ]
            },
            "validate_certificates": {
             "type": "boolean",
             "_name_": "validate_certificates",
             "title": "validate_certificates",
             "default": true,
             "_required_": false
            }
           },
           "additionalProperties": false,
           "_name_": "idmap_ldap_options",
           "title": "idmap_ldap_options",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "ldap_base_dn",
            "ldap_user_dn",
            "ldap_user_dn_password",
            "ldap_url",
            "readonly",
            "ssl",
            "validate_certificates"
           ]
          },
          {
           "type": "object",
           "properties": {
            "linked_service": {
             "_name_": "linked_service",
             "title": "linked_service",
             "default": "LOCAL_ACCOUNT",
             "_required_": false,
             "type": "string",
             "enum": [
              "LOCAL_ACCOUNT",
              "LDAP"
             ]
            }
           },
           "additionalProperties": false,
           "_name_": "idmap_nss_options",
           "title": "idmap_nss_options",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "linked_service"
           ]
          },
          {
           "type": "object",
           "properties": {
            "ldap_server": {
             "_name_": "ldap_server",
             "title": "ldap_server",
             "_required_": true,
             "type": "string",
             "enum": [
              "AD",
              "STANDALONE"
             ]
            },
            "ldap_realm": {
             "type": "boolean",
             "_name_": "ldap_realm",
             "title": "ldap_realm",
             "default": false,
             "_required_": false
            },
            "bind_path_user": {
             "_name_": "bind_path_user",
             "title": "bind_path_user",
             "_required_": false,
             "type": "string"
            },
            "bind_path_group": {
             "_name_": "bind_path_group",
             "title": "bind_path_group",
             "_required_": false,
             "type": "string"
            },
            "user_cn": {
             "type": "boolean",
             "_name_": "user_cn",
             "title": "user_cn",
             "default": false,
             "_required_": false
            },
            "cn_realm": {
             "_name_": "cn_realm",
             "title": "cn_realm",
             "_required_": false,
             "type": "string"
            },
            "ldap_domain": {
             "_name_": "ldap_domain",
             "title": "ldap_domain",
             "_required_": false,
             "type": "string"
            },
            "ldap_url": {
             "_name_": "ldap_url",
             "title": "ldap_url",
             "_required_": false,
             "type": "string"
            },
            "ldap_user_dn": {
             "_name_": "ldap_user_dn",
             "title": "ldap_user_dn",
             "_required_": false,
             "type": "string"
            },
            "ldap_user_dn_password": {
             "_name_": "ldap_user_dn_password",
             "title": "ldap_user_dn_password",
             "_required_": false,
             "type": "string"
            },
            "ssl": {
             "_name_": "ssl",
             "title": "ldap_ssl_choice",
             "default": "ON",
             "_required_": false,
             "type": "string",
             "enum": [
              "OFF",
              "ON",
              "START_TLS"
             ]
            },
            "validate_certificates": {
             "type": "boolean",
             "_name_": "validate_certificates",
             "title": "validate_certificates",
             "default": true,
             "_required_": false
            }
           },
           "additionalProperties": false,
           "_name_": "idmap_rfc2307_options",
           "title": "idmap_rfc2307_options",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "ldap_server",
            "ldap_realm",
            "bind_path_user",
            "bind_path_group",
            "user_cn",
            "cn_realm",
            "ldap_domain",
            "ldap_url",
            "ldap_user_dn",
            "ldap_user_dn_password",
            "ssl",
            "validate_certificates"
           ]
          },
          {
           "type": "object",
           "properties": {
            "sssd_compat": {
             "type": "boolean",
             "_name_": "sssd_compat",
             "title": "sssd_compat",
             "default": false,
             "_required_": false
            }
           },
           "additionalProperties": false,
           "_name_": "idmap_rid_options",
           "title": "idmap_rid_options",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "sssd_compat"
           ]
          },
          {
           "type": "object",
           "properties": {},
           "additionalProperties": false,
           "_name_": "idmap_tdb_options",
           "title": "idmap_tdb_options",
           "default": {},
           "_required_": false,
           "_attrs_order_": []
          }
         ],
         "nullable": false,
         "_name_": "options",
         "description": "`options` are additional parameters that are backend-dependent:"
        },
        "id": {
         "type": "integer",
         "_name_": "id",
         "title": "id"
        }
       },
       "additionalProperties": false,
       "_name_": "idmap_create_returns",
       "title": "idmap_create_returns",
       "default": {},
       "_attrs_order_": [
        "name",
        "dns_domain_name",
        "range_low",
        "range_high",
        "idmap_backend",
        "certificate",
        "options",
        "id"
       ]
      },
      "return_schema_of_idmap_delete": {
       "type": "boolean",
       "_name_": "deleted",
       "title": "deleted",
       "description": "Will return `true` if `id` is deleted successfully"
      },
      "idmap_update": {
       "type": "object",
       "properties": {
        "name": {
         "_name_": "name",
         "title": "name",
         "type": "string",
         "description": "`name` the pre-windows 2000 domain name."
        },
        "dns_domain_name": {
         "_name_": "dns_domain_name",
         "title": "dns_domain_name",
         "type": "string",
         "nullable": true
        },
        "range_low": {
         "type": "integer",
         "_name_": "range_low",
         "title": "range_low",
         "description": "`range_low` and `range_high` specify the UID and GID range for which this backend is authoritative.\n`range_low` and `range_high` specify the UID and GID range for which this backend is authoritative."
        },
        "range_high": {
         "type": "integer",
         "_name_": "range_high",
         "title": "range_high",
         "description": "`range_low` and `range_high` specify the UID and GID range for which this backend is authoritative.\n`range_low` and `range_high` specify the UID and GID range for which this backend is authoritative."
        },
        "idmap_backend": {
         "_name_": "idmap_backend",
         "title": "idmap_backend",
         "type": "string",
         "enum": [
          "AD",
          "AUTORID",
          "LDAP",
          "NSS",
          "RFC2307",
          "RID",
          "TDB"
         ],
         "description": "`idmap_backend` provides a plugin interface for Winbind to use varying\nbackends to store SID/uid/gid mapping tables. The correct setting\ndepends on the environment in which the NAS is deployed."
        },
        "certificate": {
         "type": "integer",
         "_name_": "certificate",
         "title": "certificate",
         "nullable": true
        },
        "options": {
         "anyOf": [
          {
           "type": "object",
           "properties": {
            "schema_mode": {
             "_name_": "schema_mode",
             "title": "nss_info_ad",
             "default": "SFU",
             "_required_": false,
             "type": "string",
             "enum": [
              "SFU",
              "SFU20",
              "RFC2307",
              "TEMPLATE"
             ]
            },
            "unix_primary_group": {
             "type": "boolean",
             "_name_": "unix_primary_group",
             "title": "unix_primary_group",
             "default": false,
             "_required_": false
            },
            "unix_nss_info": {
             "type": "boolean",
             "_name_": "unix_nss_info",
             "title": "unix_nss_info",
             "default": false,
             "_required_": false
            }
           },
           "additionalProperties": false,
           "_name_": "idmap_ad_options",
           "title": "idmap_ad_options",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "schema_mode",
            "unix_primary_group",
            "unix_nss_info"
           ]
          },
          {
           "type": "object",
           "properties": {
            "rangesize": {
             "type": "integer",
             "_name_": "rangesize",
             "title": "rangesize",
             "default": 100000,
             "_required_": false
            },
            "readonly": {
             "type": "boolean",
             "_name_": "readonly",
             "title": "readonly",
             "default": false,
             "_required_": false
            },
            "ignore_builtin": {
             "type": "boolean",
             "_name_": "ignore_builtin",
             "title": "ignore_builtin",
             "default": false,
             "_required_": false
            }
           },
           "additionalProperties": false,
           "_name_": "idmap_autorid_options",
           "title": "idmap_autorid_options",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "rangesize",
            "readonly",
            "ignore_builtin"
           ]
          },
          {
           "type": "object",
           "properties": {
            "ldap_base_dn": {
             "_name_": "ldap_base_dn",
             "title": "ldap_base_dn",
             "_required_": false,
             "type": "string"
            },
            "ldap_user_dn": {
             "_name_": "ldap_user_dn",
             "title": "ldap_user_dn",
             "_required_": false,
             "type": "string"
            },
            "ldap_user_dn_password": {
             "_name_": "ldap_user_dn_password",
             "title": "ldap_user_dn_password",
             "_required_": false,
             "type": "string"
            },
            "ldap_url": {
             "_name_": "ldap_url",
             "title": "ldap_url",
             "_required_": false,
             "type": "string"
            },
            "readonly": {
             "type": "boolean",
             "_name_": "readonly",
             "title": "readonly",
             "default": false,
             "_required_": false
            },
            "ssl": {
             "_name_": "ssl",
             "title": "ldap_ssl_choice",
             "default": "ON",
             "_required_": false,
             "type": "string",
             "enum": [
              "OFF",
              "ON",
              "START_TLS"
             ]
            },
            "validate_certificates": {
             "type": "boolean",
             "_name_": "validate_certificates",
             "title": "validate_certificates",
             "default": true,
             "_required_": false
            }
           },
           "additionalProperties": false,
           "_name_": "idmap_ldap_options",
           "title": "idmap_ldap_options",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "ldap_base_dn",
            "ldap_user_dn",
            "ldap_user_dn_password",
            "ldap_url",
            "readonly",
            "ssl",
            "validate_certificates"
           ]
          },
          {
           "type": "object",
           "properties": {
            "linked_service": {
             "_name_": "linked_service",
             "title": "linked_service",
             "default": "LOCAL_ACCOUNT",
             "_required_": false,
             "type": "string",
             "enum": [
              "LOCAL_ACCOUNT",
              "LDAP"
             ]
            }
           },
           "additionalProperties": false,
           "_name_": "idmap_nss_options",
           "title": "idmap_nss_options",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "linked_service"
           ]
          },
          {
           "type": "object",
           "properties": {
            "ldap_server": {
             "_name_": "ldap_server",
             "title": "ldap_server",
             "_required_": true,
             "type": "string",
             "enum": [
              "AD",
              "STANDALONE"
             ]
            },
            "ldap_realm": {
             "type": "boolean",
             "_name_": "ldap_realm",
             "title": "ldap_realm",
             "default": false,
             "_required_": false
            },
            "bind_path_user": {
             "_name_": "bind_path_user",
             "title": "bind_path_user",
             "_required_": false,
             "type": "string"
            },
            "bind_path_group": {
             "_name_": "bind_path_group",
             "title": "bind_path_group",
             "_required_": false,
             "type": "string"
            },
            "user_cn": {
             "type": "boolean",
             "_name_": "user_cn",
             "title": "user_cn",
             "default": false,
             "_required_": false
            },
            "cn_realm": {
             "_name_": "cn_realm",
             "title": "cn_realm",
             "_required_": false,
             "type": "string"
            },
            "ldap_domain": {
             "_name_": "ldap_domain",
             "title": "ldap_domain",
             "_required_": false,
             "type": "string"
            },
            "ldap_url": {
             "_name_": "ldap_url",
             "title": "ldap_url",
             "_required_": false,
             "type": "string"
            },
            "ldap_user_dn": {
             "_name_": "ldap_user_dn",
             "title": "ldap_user_dn",
             "_required_": false,
             "type": "string"
            },
            "ldap_user_dn_password": {
             "_name_": "ldap_user_dn_password",
             "title": "ldap_user_dn_password",
             "_required_": false,
             "type": "string"
            },
            "ssl": {
             "_name_": "ssl",
             "title": "ldap_ssl_choice",
             "default": "ON",
             "_required_": false,
             "type": "string",
             "enum": [
              "OFF",
              "ON",
              "START_TLS"
             ]
            },
            "validate_certificates": {
             "type": "boolean",
             "_name_": "validate_certificates",
             "title": "validate_certificates",
             "default": true,
             "_required_": false
            }
           },
           "additionalProperties": false,
           "_name_": "idmap_rfc2307_options",
           "title": "idmap_rfc2307_options",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "ldap_server",
            "ldap_realm",
            "bind_path_user",
            "bind_path_group",
            "user_cn",
            "cn_realm",
            "ldap_domain",
            "ldap_url",
            "ldap_user_dn",
            "ldap_user_dn_password",
            "ssl",
            "validate_certificates"
           ]
          },
          {
           "type": "object",
           "properties": {
            "sssd_compat": {
             "type": "boolean",
             "_name_": "sssd_compat",
             "title": "sssd_compat",
             "default": false,
             "_required_": false
            }
           },
           "additionalProperties": false,
           "_name_": "idmap_rid_options",
           "title": "idmap_rid_options",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "sssd_compat"
           ]
          },
          {
           "type": "object",
           "properties": {},
           "additionalProperties": false,
           "_name_": "idmap_tdb_options",
           "title": "idmap_tdb_options",
           "default": {},
           "_required_": false,
           "_attrs_order_": []
          }
         ],
         "nullable": false,
         "_name_": "options",
         "description": "`options` are additional parameters that are backend-dependent:"
        }
       },
       "additionalProperties": false,
       "_name_": "idmap_update",
       "title": "idmap_update",
       "default": {},
       "_attrs_order_": [
        "name",
        "dns_domain_name",
        "range_low",
        "range_high",
        "idmap_backend",
        "certificate",
        "options"
       ]
      },
      "return_schema_of_idmap_update": {
       "type": "object",
       "properties": {
        "name": {
         "_name_": "name",
         "title": "name",
         "type": "string",
         "description": "`name` the pre-windows 2000 domain name."
        },
        "dns_domain_name": {
         "_name_": "dns_domain_name",
         "title": "dns_domain_name",
         "type": "string",
         "nullable": true
        },
        "range_low": {
         "type": "integer",
         "_name_": "range_low",
         "title": "range_low",
         "description": "`range_low` and `range_high` specify the UID and GID range for which this backend is authoritative.\n`range_low` and `range_high` specify the UID and GID range for which this backend is authoritative."
        },
        "range_high": {
         "type": "integer",
         "_name_": "range_high",
         "title": "range_high",
         "description": "`range_low` and `range_high` specify the UID and GID range for which this backend is authoritative.\n`range_low` and `range_high` specify the UID and GID range for which this backend is authoritative."
        },
        "idmap_backend": {
         "_name_": "idmap_backend",
         "title": "idmap_backend",
         "type": "string",
         "enum": [
          "AD",
          "AUTORID",
          "LDAP",
          "NSS",
          "RFC2307",
          "RID",
          "TDB"
         ],
         "description": "`idmap_backend` provides a plugin interface for Winbind to use varying\nbackends to store SID/uid/gid mapping tables. The correct setting\ndepends on the environment in which the NAS is deployed."
        },
        "certificate": {
         "type": "integer",
         "_name_": "certificate",
         "title": "certificate",
         "nullable": true
        },
        "options": {
         "anyOf": [
          {
           "type": "object",
           "properties": {
            "schema_mode": {
             "_name_": "schema_mode",
             "title": "nss_info_ad",
             "default": "SFU",
             "_required_": false,
             "type": "string",
             "enum": [
              "SFU",
              "SFU20",
              "RFC2307",
              "TEMPLATE"
             ]
            },
            "unix_primary_group": {
             "type": "boolean",
             "_name_": "unix_primary_group",
             "title": "unix_primary_group",
             "default": false,
             "_required_": false
            },
            "unix_nss_info": {
             "type": "boolean",
             "_name_": "unix_nss_info",
             "title": "unix_nss_info",
             "default": false,
             "_required_": false
            }
           },
           "additionalProperties": false,
           "_name_": "idmap_ad_options",
           "title": "idmap_ad_options",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "schema_mode",
            "unix_primary_group",
            "unix_nss_info"
           ]
          },
          {
           "type": "object",
           "properties": {
            "rangesize": {
             "type": "integer",
             "_name_": "rangesize",
             "title": "rangesize",
             "default": 100000,
             "_required_": false
            },
            "readonly": {
             "type": "boolean",
             "_name_": "readonly",
             "title": "readonly",
             "default": false,
             "_required_": false
            },
            "ignore_builtin": {
             "type": "boolean",
             "_name_": "ignore_builtin",
             "title": "ignore_builtin",
             "default": false,
             "_required_": false
            }
           },
           "additionalProperties": false,
           "_name_": "idmap_autorid_options",
           "title": "idmap_autorid_options",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "rangesize",
            "readonly",
            "ignore_builtin"
           ]
          },
          {
           "type": "object",
           "properties": {
            "ldap_base_dn": {
             "_name_": "ldap_base_dn",
             "title": "ldap_base_dn",
             "_required_": false,
             "type": "string"
            },
            "ldap_user_dn": {
             "_name_": "ldap_user_dn",
             "title": "ldap_user_dn",
             "_required_": false,
             "type": "string"
            },
            "ldap_user_dn_password": {
             "_name_": "ldap_user_dn_password",
             "title": "ldap_user_dn_password",
             "_required_": false,
             "type": "string"
            },
            "ldap_url": {
             "_name_": "ldap_url",
             "title": "ldap_url",
             "_required_": false,
             "type": "string"
            },
            "readonly": {
             "type": "boolean",
             "_name_": "readonly",
             "title": "readonly",
             "default": false,
             "_required_": false
            },
            "ssl": {
             "_name_": "ssl",
             "title": "ldap_ssl_choice",
             "default": "ON",
             "_required_": false,
             "type": "string",
             "enum": [
              "OFF",
              "ON",
              "START_TLS"
             ]
            },
            "validate_certificates": {
             "type": "boolean",
             "_name_": "validate_certificates",
             "title": "validate_certificates",
             "default": true,
             "_required_": false
            }
           },
           "additionalProperties": false,
           "_name_": "idmap_ldap_options",
           "title": "idmap_ldap_options",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "ldap_base_dn",
            "ldap_user_dn",
            "ldap_user_dn_password",
            "ldap_url",
            "readonly",
            "ssl",
            "validate_certificates"
           ]
          },
          {
           "type": "object",
           "properties": {
            "linked_service": {
             "_name_": "linked_service",
             "title": "linked_service",
             "default": "LOCAL_ACCOUNT",
             "_required_": false,
             "type": "string",
             "enum": [
              "LOCAL_ACCOUNT",
              "LDAP"
             ]
            }
           },
           "additionalProperties": false,
           "_name_": "idmap_nss_options",
           "title": "idmap_nss_options",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "linked_service"
           ]
          },
          {
           "type": "object",
           "properties": {
            "ldap_server": {
             "_name_": "ldap_server",
             "title": "ldap_server",
             "_required_": true,
             "type": "string",
             "enum": [
              "AD",
              "STANDALONE"
             ]
            },
            "ldap_realm": {
             "type": "boolean",
             "_name_": "ldap_realm",
             "title": "ldap_realm",
             "default": false,
             "_required_": false
            },
            "bind_path_user": {
             "_name_": "bind_path_user",
             "title": "bind_path_user",
             "_required_": false,
             "type": "string"
            },
            "bind_path_group": {
             "_name_": "bind_path_group",
             "title": "bind_path_group",
             "_required_": false,
             "type": "string"
            },
            "user_cn": {
             "type": "boolean",
             "_name_": "user_cn",
             "title": "user_cn",
             "default": false,
             "_required_": false
            },
            "cn_realm": {
             "_name_": "cn_realm",
             "title": "cn_realm",
             "_required_": false,
             "type": "string"
            },
            "ldap_domain": {
             "_name_": "ldap_domain",
             "title": "ldap_domain",
             "_required_": false,
             "type": "string"
            },
            "ldap_url": {
             "_name_": "ldap_url",
             "title": "ldap_url",
             "_required_": false,
             "type": "string"
            },
            "ldap_user_dn": {
             "_name_": "ldap_user_dn",
             "title": "ldap_user_dn",
             "_required_": false,
             "type": "string"
            },
            "ldap_user_dn_password": {
             "_name_": "ldap_user_dn_password",
             "title": "ldap_user_dn_password",
             "_required_": false,
             "type": "string"
            },
            "ssl": {
             "_name_": "ssl",
             "title": "ldap_ssl_choice",
             "default": "ON",
             "_required_": false,
             "type": "string",
             "enum": [
              "OFF",
              "ON",
              "START_TLS"
             ]
            },
            "validate_certificates": {
             "type": "boolean",
             "_name_": "validate_certificates",
             "title": "validate_certificates",
             "default": true,
             "_required_": false
            }
           },
           "additionalProperties": false,
           "_name_": "idmap_rfc2307_options",
           "title": "idmap_rfc2307_options",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "ldap_server",
            "ldap_realm",
            "bind_path_user",
            "bind_path_group",
            "user_cn",
            "cn_realm",
            "ldap_domain",
            "ldap_url",
            "ldap_user_dn",
            "ldap_user_dn_password",
            "ssl",
            "validate_certificates"
           ]
          },
          {
           "type": "object",
           "properties": {
            "sssd_compat": {
             "type": "boolean",
             "_name_": "sssd_compat",
             "title": "sssd_compat",
             "default": false,
             "_required_": false
            }
           },
           "additionalProperties": false,
           "_name_": "idmap_rid_options",
           "title": "idmap_rid_options",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "sssd_compat"
           ]
          },
          {
           "type": "object",
           "properties": {},
           "additionalProperties": false,
           "_name_": "idmap_tdb_options",
           "title": "idmap_tdb_options",
           "default": {},
           "_required_": false,
           "_attrs_order_": []
          }
         ],
         "nullable": false,
         "_name_": "options",
         "description": "`options` are additional parameters that are backend-dependent:"
        },
        "id": {
         "type": "integer",
         "_name_": "id",
         "title": "id"
        }
       },
       "additionalProperties": false,
       "_name_": "idmap_update_returns",
       "title": "idmap_update_returns",
       "default": {},
       "_attrs_order_": [
        "name",
        "dns_domain_name",
        "range_low",
        "range_high",
        "idmap_backend",
        "certificate",
        "options",
        "id"
       ]
      },
      "idmap_get_instance_0": {
       "anyOf": [
        {
         "type": "string"
        },
        {
         "type": "integer"
        },
        {
         "type": "boolean"
        },
        {
         "type": "object"
        },
        {
         "type": "array"
        }
       ],
       "nullable": false,
       "_name_": "id",
       "title": "id",
       "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised."
      },
      "idmap_get_instance_1": {
       "type": "object",
       "properties": {
        "relationships": {
         "type": "boolean",
         "_name_": "relationships",
         "title": "relationships",
         "default": true
        },
        "extend": {
         "_name_": "extend",
         "title": "extend",
         "default": null,
         "type": "string",
         "nullable": true
        },
        "extend_context": {
         "_name_": "extend_context",
         "title": "extend_context",
         "default": null,
         "type": "string",
         "nullable": true
        },
        "prefix": {
         "_name_": "prefix",
         "title": "prefix",
         "default": null,
         "type": "string",
         "nullable": true
        },
        "extra": {
         "type": "object",
         "properties": {},
         "additionalProperties": true,
         "_name_": "extra",
         "title": "extra",
         "default": {},
         "_attrs_order_": []
        },
        "order_by": {
         "_name_": "order_by",
         "title": "order_by",
         "default": [],
         "type": "array",
         "items": {}
        },
        "select": {
         "_name_": "select",
         "title": "select",
         "default": [],
         "type": "array",
         "items": {}
        },
        "count": {
         "type": "boolean",
         "_name_": "count",
         "title": "count",
         "default": false
        },
        "get": {
         "type": "boolean",
         "_name_": "get",
         "title": "get",
         "default": false
        },
        "offset": {
         "type": "integer",
         "_name_": "offset",
         "title": "offset",
         "default": 0
        },
        "limit": {
         "type": "integer",
         "_name_": "limit",
         "title": "limit",
         "default": 0
        },
        "force_sql_filters": {
         "type": "boolean",
         "_name_": "force_sql_filters",
         "title": "force_sql_filters",
         "default": true
        }
       },
       "additionalProperties": false,
       "_name_": "query-options-get_instance",
       "title": "query-options-get_instance",
       "default": {},
       "_attrs_order_": [
        "relationships",
        "extend",
        "extend_context",
        "prefix",
        "extra",
        "order_by",
        "select",
        "count",
        "get",
        "offset",
        "limit",
        "force_sql_filters"
       ]
      },
      "idmap_get_instance": {
       "type": "object",
       "properties": {
        "id": {
         "$ref": "#/components/schemas/idmap_get_instance_0"
        },
        "query-options-get_instance": {
         "$ref": "#/components/schemas/idmap_get_instance_1"
        }
       }
      },
      "return_schema_of_idmap_get_instance": {
       "type": "object",
       "properties": {
        "name": {
         "_name_": "name",
         "title": "name",
         "type": "string"
        },
        "dns_domain_name": {
         "_name_": "dns_domain_name",
         "title": "dns_domain_name",
         "type": "string",
         "nullable": true
        },
        "range_low": {
         "type": "integer",
         "_name_": "range_low",
         "title": "range_low"
        },
        "range_high": {
         "type": "integer",
         "_name_": "range_high",
         "title": "range_high"
        },
        "idmap_backend": {
         "_name_": "idmap_backend",
         "title": "idmap_backend",
         "type": "string",
         "enum": [
          "AD",
          "AUTORID",
          "LDAP",
          "NSS",
          "RFC2307",
          "RID",
          "TDB"
         ]
        },
        "certificate": {
         "type": "integer",
         "_name_": "certificate",
         "title": "certificate",
         "nullable": true
        },
        "options": {
         "anyOf": [
          {
           "type": "object",
           "properties": {
            "schema_mode": {
             "_name_": "schema_mode",
             "title": "nss_info_ad",
             "default": "SFU",
             "_required_": false,
             "type": "string",
             "enum": [
              "SFU",
              "SFU20",
              "RFC2307",
              "TEMPLATE"
             ]
            },
            "unix_primary_group": {
             "type": "boolean",
             "_name_": "unix_primary_group",
             "title": "unix_primary_group",
             "default": false,
             "_required_": false
            },
            "unix_nss_info": {
             "type": "boolean",
             "_name_": "unix_nss_info",
             "title": "unix_nss_info",
             "default": false,
             "_required_": false
            }
           },
           "additionalProperties": false,
           "_name_": "idmap_ad_options",
           "title": "idmap_ad_options",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "schema_mode",
            "unix_primary_group",
            "unix_nss_info"
           ]
          },
          {
           "type": "object",
           "properties": {
            "rangesize": {
             "type": "integer",
             "_name_": "rangesize",
             "title": "rangesize",
             "default": 100000,
             "_required_": false
            },
            "readonly": {
             "type": "boolean",
             "_name_": "readonly",
             "title": "readonly",
             "default": false,
             "_required_": false
            },
            "ignore_builtin": {
             "type": "boolean",
             "_name_": "ignore_builtin",
             "title": "ignore_builtin",
             "default": false,
             "_required_": false
            }
           },
           "additionalProperties": false,
           "_name_": "idmap_autorid_options",
           "title": "idmap_autorid_options",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "rangesize",
            "readonly",
            "ignore_builtin"
           ]
          },
          {
           "type": "object",
           "properties": {
            "ldap_base_dn": {
             "_name_": "ldap_base_dn",
             "title": "ldap_base_dn",
             "_required_": false,
             "type": "string"
            },
            "ldap_user_dn": {
             "_name_": "ldap_user_dn",
             "title": "ldap_user_dn",
             "_required_": false,
             "type": "string"
            },
            "ldap_user_dn_password": {
             "_name_": "ldap_user_dn_password",
             "title": "ldap_user_dn_password",
             "_required_": false,
             "type": "string"
            },
            "ldap_url": {
             "_name_": "ldap_url",
             "title": "ldap_url",
             "_required_": false,
             "type": "string"
            },
            "readonly": {
             "type": "boolean",
             "_name_": "readonly",
             "title": "readonly",
             "default": false,
             "_required_": false
            },
            "ssl": {
             "_name_": "ssl",
             "title": "ldap_ssl_choice",
             "default": "ON",
             "_required_": false,
             "type": "string",
             "enum": [
              "OFF",
              "ON",
              "START_TLS"
             ]
            },
            "validate_certificates": {
             "type": "boolean",
             "_name_": "validate_certificates",
             "title": "validate_certificates",
             "default": true,
             "_required_": false
            }
           },
           "additionalProperties": false,
           "_name_": "idmap_ldap_options",
           "title": "idmap_ldap_options",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "ldap_base_dn",
            "ldap_user_dn",
            "ldap_user_dn_password",
            "ldap_url",
            "readonly",
            "ssl",
            "validate_certificates"
           ]
          },
          {
           "type": "object",
           "properties": {
            "linked_service": {
             "_name_": "linked_service",
             "title": "linked_service",
             "default": "LOCAL_ACCOUNT",
             "_required_": false,
             "type": "string",
             "enum": [
              "LOCAL_ACCOUNT",
              "LDAP"
             ]
            }
           },
           "additionalProperties": false,
           "_name_": "idmap_nss_options",
           "title": "idmap_nss_options",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "linked_service"
           ]
          },
          {
           "type": "object",
           "properties": {
            "ldap_server": {
             "_name_": "ldap_server",
             "title": "ldap_server",
             "_required_": true,
             "type": "string",
             "enum": [
              "AD",
              "STANDALONE"
             ]
            },
            "ldap_realm": {
             "type": "boolean",
             "_name_": "ldap_realm",
             "title": "ldap_realm",
             "default": false,
             "_required_": false
            },
            "bind_path_user": {
             "_name_": "bind_path_user",
             "title": "bind_path_user",
             "_required_": false,
             "type": "string"
            },
            "bind_path_group": {
             "_name_": "bind_path_group",
             "title": "bind_path_group",
             "_required_": false,
             "type": "string"
            },
            "user_cn": {
             "type": "boolean",
             "_name_": "user_cn",
             "title": "user_cn",
             "default": false,
             "_required_": false
            },
            "cn_realm": {
             "_name_": "cn_realm",
             "title": "cn_realm",
             "_required_": false,
             "type": "string"
            },
            "ldap_domain": {
             "_name_": "ldap_domain",
             "title": "ldap_domain",
             "_required_": false,
             "type": "string"
            },
            "ldap_url": {
             "_name_": "ldap_url",
             "title": "ldap_url",
             "_required_": false,
             "type": "string"
            },
            "ldap_user_dn": {
             "_name_": "ldap_user_dn",
             "title": "ldap_user_dn",
             "_required_": false,
             "type": "string"
            },
            "ldap_user_dn_password": {
             "_name_": "ldap_user_dn_password",
             "title": "ldap_user_dn_password",
             "_required_": false,
             "type": "string"
            },
            "ssl": {
             "_name_": "ssl",
             "title": "ldap_ssl_choice",
             "default": "ON",
             "_required_": false,
             "type": "string",
             "enum": [
              "OFF",
              "ON",
              "START_TLS"
             ]
            },
            "validate_certificates": {
             "type": "boolean",
             "_name_": "validate_certificates",
             "title": "validate_certificates",
             "default": true,
             "_required_": false
            }
           },
           "additionalProperties": false,
           "_name_": "idmap_rfc2307_options",
           "title": "idmap_rfc2307_options",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "ldap_server",
            "ldap_realm",
            "bind_path_user",
            "bind_path_group",
            "user_cn",
            "cn_realm",
            "ldap_domain",
            "ldap_url",
            "ldap_user_dn",
            "ldap_user_dn_password",
            "ssl",
            "validate_certificates"
           ]
          },
          {
           "type": "object",
           "properties": {
            "sssd_compat": {
             "type": "boolean",
             "_name_": "sssd_compat",
             "title": "sssd_compat",
             "default": false,
             "_required_": false
            }
           },
           "additionalProperties": false,
           "_name_": "idmap_rid_options",
           "title": "idmap_rid_options",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "sssd_compat"
           ]
          },
          {
           "type": "object",
           "properties": {},
           "additionalProperties": false,
           "_name_": "idmap_tdb_options",
           "title": "idmap_tdb_options",
           "default": {},
           "_required_": false,
           "_attrs_order_": []
          }
         ],
         "nullable": false,
         "_name_": "options",
         "description": null
        },
        "id": {
         "type": "integer",
         "_name_": "id",
         "title": "id",
         "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised."
        }
       },
       "additionalProperties": false,
       "_name_": "idmap_domain_entry",
       "title": "idmap_domain_entry",
       "default": {},
       "_attrs_order_": [
        "name",
        "dns_domain_name",
        "range_low",
        "range_high",
        "idmap_backend",
        "certificate",
        "options",
        "id"
       ]
      },
      "return_schema_of_initshutdownscript_query": {
       "anyOf": [
        {
         "items": [
          {
           "additionalProperties": false,
           "properties": {
            "type": {
             "enum": [
              "COMMAND",
              "SCRIPT"
             ],
             "title": "type",
             "type": "string",
             "_name_": "type",
             "_required_": false
            },
            "command": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "null"
              }
             ],
             "description": "Must be given if `type=\"COMMAND\"`.",
             "title": "command",
             "_name_": "command",
             "_required_": false
            },
            "script": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "null"
              }
             ],
             "description": "Must be given if `type=\"SCRIPT\"`.",
             "title": "script",
             "_name_": "script",
             "_required_": false
            },
            "when": {
             "description": "\"PREINIT\": Early in the boot process before all services have started.\n\"POSTINIT\": Late in the boot process when most services have started.\n\"SHUTDOWN\": On shutdown.",
             "enum": [
              "PREINIT",
              "POSTINIT",
              "SHUTDOWN"
             ],
             "title": "when",
             "type": "string",
             "_name_": "when",
             "_required_": false
            },
            "enabled": {
             "title": "enabled",
             "type": "boolean",
             "_name_": "enabled",
             "_required_": false
            },
            "timeout": {
             "description": "An integer time in seconds that the system should wait for the execution of the script/command.\n\nA hard limit for a timeout is configured by the base OS, so when a script/command is set to execute on SHUTDOWN,\nthe hard limit configured by the base OS is changed adding the timeout specified by script/command so it can be\nensured that it executes as desired and is not interrupted by the base OS's limit.",
             "title": "timeout",
             "type": "integer",
             "_name_": "timeout",
             "_required_": false
            },
            "comment": {
             "maxLength": 255,
             "title": "comment",
             "type": "string",
             "_name_": "comment",
             "_required_": false
            },
            "id": {
             "title": "id",
             "type": "integer",
             "_name_": "id",
             "_required_": false
            }
           },
           "title": "InitShutdownScriptQueryResultItem",
           "type": "object",
           "_attrs_order_": [
            "type",
            "command",
            "script",
            "when",
            "enabled",
            "timeout",
            "comment",
            "id"
           ]
          }
         ],
         "type": "array"
        },
        {
         "additionalProperties": false,
         "properties": {
          "type": {
           "enum": [
            "COMMAND",
            "SCRIPT"
           ],
           "title": "type",
           "type": "string",
           "_name_": "type",
           "_required_": false
          },
          "command": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "null"
            }
           ],
           "description": "Must be given if `type=\"COMMAND\"`.",
           "title": "command",
           "_name_": "command",
           "_required_": false
          },
          "script": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "null"
            }
           ],
           "description": "Must be given if `type=\"SCRIPT\"`.",
           "title": "script",
           "_name_": "script",
           "_required_": false
          },
          "when": {
           "description": "\"PREINIT\": Early in the boot process before all services have started.\n\"POSTINIT\": Late in the boot process when most services have started.\n\"SHUTDOWN\": On shutdown.",
           "enum": [
            "PREINIT",
            "POSTINIT",
            "SHUTDOWN"
           ],
           "title": "when",
           "type": "string",
           "_name_": "when",
           "_required_": false
          },
          "enabled": {
           "title": "enabled",
           "type": "boolean",
           "_name_": "enabled",
           "_required_": false
          },
          "timeout": {
           "description": "An integer time in seconds that the system should wait for the execution of the script/command.\n\nA hard limit for a timeout is configured by the base OS, so when a script/command is set to execute on SHUTDOWN,\nthe hard limit configured by the base OS is changed adding the timeout specified by script/command so it can be\nensured that it executes as desired and is not interrupted by the base OS's limit.",
           "title": "timeout",
           "type": "integer",
           "_name_": "timeout",
           "_required_": false
          },
          "comment": {
           "maxLength": 255,
           "title": "comment",
           "type": "string",
           "_name_": "comment",
           "_required_": false
          },
          "id": {
           "title": "id",
           "type": "integer",
           "_name_": "id",
           "_required_": false
          }
         },
         "title": "InitShutdownScriptQueryResultItem",
         "type": "object",
         "_attrs_order_": [
          "type",
          "command",
          "script",
          "when",
          "enabled",
          "timeout",
          "comment",
          "id"
         ]
        },
        {
         "type": "integer"
        }
       ],
       "title": "result",
       "_name_": "result"
      },
      "initshutdownscript_create": {
       "additionalProperties": false,
       "properties": {
        "type": {
         "enum": [
          "COMMAND",
          "SCRIPT"
         ],
         "title": "type",
         "type": "string",
         "_name_": "type"
        },
        "command": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": "",
         "description": "Must be given if `type=\"COMMAND\"`.",
         "title": "command",
         "_name_": "command"
        },
        "script": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": "",
         "description": "Must be given if `type=\"SCRIPT\"`.",
         "title": "script",
         "_name_": "script"
        },
        "when": {
         "description": "\"PREINIT\": Early in the boot process before all services have started.\n\"POSTINIT\": Late in the boot process when most services have started.\n\"SHUTDOWN\": On shutdown.",
         "enum": [
          "PREINIT",
          "POSTINIT",
          "SHUTDOWN"
         ],
         "title": "when",
         "type": "string",
         "_name_": "when"
        },
        "enabled": {
         "default": true,
         "title": "enabled",
         "type": "boolean",
         "_name_": "enabled"
        },
        "timeout": {
         "default": 10,
         "description": "An integer time in seconds that the system should wait for the execution of the script/command.\n\nA hard limit for a timeout is configured by the base OS, so when a script/command is set to execute on SHUTDOWN,\nthe hard limit configured by the base OS is changed adding the timeout specified by script/command so it can be\nensured that it executes as desired and is not interrupted by the base OS's limit.",
         "title": "timeout",
         "type": "integer",
         "_name_": "timeout"
        },
        "comment": {
         "default": "",
         "maxLength": 255,
         "title": "comment",
         "type": "string",
         "_name_": "comment"
        }
       },
       "required": [
        "type",
        "when"
       ],
       "title": "data",
       "type": "object",
       "_name_": "data",
       "_attrs_order_": [
        "type",
        "command",
        "script",
        "when",
        "enabled",
        "timeout",
        "comment"
       ]
      },
      "return_schema_of_initshutdownscript_create": {
       "additionalProperties": false,
       "properties": {
        "type": {
         "enum": [
          "COMMAND",
          "SCRIPT"
         ],
         "title": "type",
         "type": "string",
         "_name_": "type"
        },
        "command": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": "",
         "description": "Must be given if `type=\"COMMAND\"`.",
         "title": "command",
         "_name_": "command"
        },
        "script": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": "",
         "description": "Must be given if `type=\"SCRIPT\"`.",
         "title": "script",
         "_name_": "script"
        },
        "when": {
         "description": "\"PREINIT\": Early in the boot process before all services have started.\n\"POSTINIT\": Late in the boot process when most services have started.\n\"SHUTDOWN\": On shutdown.",
         "enum": [
          "PREINIT",
          "POSTINIT",
          "SHUTDOWN"
         ],
         "title": "when",
         "type": "string",
         "_name_": "when"
        },
        "enabled": {
         "default": true,
         "title": "enabled",
         "type": "boolean",
         "_name_": "enabled"
        },
        "timeout": {
         "default": 10,
         "description": "An integer time in seconds that the system should wait for the execution of the script/command.\n\nA hard limit for a timeout is configured by the base OS, so when a script/command is set to execute on SHUTDOWN,\nthe hard limit configured by the base OS is changed adding the timeout specified by script/command so it can be\nensured that it executes as desired and is not interrupted by the base OS's limit.",
         "title": "timeout",
         "type": "integer",
         "_name_": "timeout"
        },
        "comment": {
         "default": "",
         "maxLength": 255,
         "title": "comment",
         "type": "string",
         "_name_": "comment"
        },
        "id": {
         "title": "id",
         "type": "integer",
         "_name_": "id"
        }
       },
       "required": [
        "type",
        "when",
        "id"
       ],
       "title": "result",
       "type": "object",
       "_name_": "result",
       "_attrs_order_": [
        "type",
        "command",
        "script",
        "when",
        "enabled",
        "timeout",
        "comment",
        "id"
       ]
      },
      "return_schema_of_initshutdownscript_delete": {
       "const": true,
       "description": "Always return `True`.",
       "enum": [
        true
       ],
       "title": "result",
       "type": "boolean",
       "_name_": "result"
      },
      "initshutdownscript_update": {
       "additionalProperties": false,
       "properties": {
        "type": {
         "enum": [
          "COMMAND",
          "SCRIPT"
         ],
         "title": "type",
         "type": "string",
         "_name_": "type"
        },
        "command": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "description": "Must be given if `type=\"COMMAND\"`.",
         "title": "command",
         "_name_": "command"
        },
        "script": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "description": "Must be given if `type=\"SCRIPT\"`.",
         "title": "script",
         "_name_": "script"
        },
        "when": {
         "description": "\"PREINIT\": Early in the boot process before all services have started.\n\"POSTINIT\": Late in the boot process when most services have started.\n\"SHUTDOWN\": On shutdown.",
         "enum": [
          "PREINIT",
          "POSTINIT",
          "SHUTDOWN"
         ],
         "title": "when",
         "type": "string",
         "_name_": "when"
        },
        "enabled": {
         "title": "enabled",
         "type": "boolean",
         "_name_": "enabled"
        },
        "timeout": {
         "description": "An integer time in seconds that the system should wait for the execution of the script/command.\n\nA hard limit for a timeout is configured by the base OS, so when a script/command is set to execute on SHUTDOWN,\nthe hard limit configured by the base OS is changed adding the timeout specified by script/command so it can be\nensured that it executes as desired and is not interrupted by the base OS's limit.",
         "title": "timeout",
         "type": "integer",
         "_name_": "timeout"
        },
        "comment": {
         "maxLength": 255,
         "title": "comment",
         "type": "string",
         "_name_": "comment"
        }
       },
       "title": "data",
       "type": "object",
       "_name_": "data",
       "_attrs_order_": [
        "type",
        "command",
        "script",
        "when",
        "enabled",
        "timeout",
        "comment"
       ]
      },
      "return_schema_of_initshutdownscript_update": {
       "additionalProperties": false,
       "properties": {
        "type": {
         "enum": [
          "COMMAND",
          "SCRIPT"
         ],
         "title": "type",
         "type": "string",
         "_name_": "type"
        },
        "command": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": "",
         "description": "Must be given if `type=\"COMMAND\"`.",
         "title": "command",
         "_name_": "command"
        },
        "script": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": "",
         "description": "Must be given if `type=\"SCRIPT\"`.",
         "title": "script",
         "_name_": "script"
        },
        "when": {
         "description": "\"PREINIT\": Early in the boot process before all services have started.\n\"POSTINIT\": Late in the boot process when most services have started.\n\"SHUTDOWN\": On shutdown.",
         "enum": [
          "PREINIT",
          "POSTINIT",
          "SHUTDOWN"
         ],
         "title": "when",
         "type": "string",
         "_name_": "when"
        },
        "enabled": {
         "default": true,
         "title": "enabled",
         "type": "boolean",
         "_name_": "enabled"
        },
        "timeout": {
         "default": 10,
         "description": "An integer time in seconds that the system should wait for the execution of the script/command.\n\nA hard limit for a timeout is configured by the base OS, so when a script/command is set to execute on SHUTDOWN,\nthe hard limit configured by the base OS is changed adding the timeout specified by script/command so it can be\nensured that it executes as desired and is not interrupted by the base OS's limit.",
         "title": "timeout",
         "type": "integer",
         "_name_": "timeout"
        },
        "comment": {
         "default": "",
         "maxLength": 255,
         "title": "comment",
         "type": "string",
         "_name_": "comment"
        },
        "id": {
         "title": "id",
         "type": "integer",
         "_name_": "id"
        }
       },
       "required": [
        "type",
        "when",
        "id"
       ],
       "title": "result",
       "type": "object",
       "_name_": "result",
       "_attrs_order_": [
        "type",
        "command",
        "script",
        "when",
        "enabled",
        "timeout",
        "comment",
        "id"
       ]
      },
      "initshutdownscript_get_instance_0": {
       "title": "id",
       "type": "integer",
       "_name_": "id"
      },
      "initshutdownscript_get_instance_1": {
       "additionalProperties": false,
       "properties": {
        "relationships": {
         "default": true,
         "title": "relationships",
         "type": "boolean",
         "_name_": "relationships"
        },
        "extend": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "extend",
         "_name_": "extend"
        },
        "extend_context": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "extend_context",
         "_name_": "extend_context"
        },
        "prefix": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "prefix",
         "_name_": "prefix"
        },
        "extra": {
         "default": {},
         "title": "extra",
         "type": "object",
         "_name_": "extra"
        },
        "order_by": {
         "default": [],
         "items": {
          "type": "string"
         },
         "title": "order_by",
         "type": "array",
         "_name_": "order_by"
        },
        "select": {
         "default": [],
         "items": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "items": [
             {}
            ],
            "type": "array"
           }
          ]
         },
         "title": "select",
         "type": "array",
         "_name_": "select"
        },
        "count": {
         "default": false,
         "title": "count",
         "type": "boolean",
         "_name_": "count"
        },
        "get": {
         "default": false,
         "title": "get",
         "type": "boolean",
         "_name_": "get"
        },
        "offset": {
         "default": 0,
         "title": "offset",
         "type": "integer",
         "_name_": "offset"
        },
        "limit": {
         "default": 0,
         "title": "limit",
         "type": "integer",
         "_name_": "limit"
        },
        "force_sql_filters": {
         "default": false,
         "title": "force_sql_filters",
         "type": "boolean",
         "_name_": "force_sql_filters"
        }
       },
       "title": "options",
       "type": "object",
       "default": {},
       "_name_": "options",
       "_attrs_order_": [
        "relationships",
        "extend",
        "extend_context",
        "prefix",
        "extra",
        "order_by",
        "select",
        "count",
        "get",
        "offset",
        "limit",
        "force_sql_filters"
       ]
      },
      "initshutdownscript_get_instance": {
       "type": "object",
       "properties": {
        "id": {
         "$ref": "#/components/schemas/initshutdownscript_get_instance_0"
        },
        "options": {
         "$ref": "#/components/schemas/initshutdownscript_get_instance_1"
        }
       }
      },
      "return_schema_of_initshutdownscript_get_instance": {
       "additionalProperties": false,
       "properties": {
        "type": {
         "enum": [
          "COMMAND",
          "SCRIPT"
         ],
         "title": "type",
         "type": "string",
         "_name_": "type"
        },
        "command": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": "",
         "description": "Must be given if `type=\"COMMAND\"`.",
         "title": "command",
         "_name_": "command"
        },
        "script": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": "",
         "description": "Must be given if `type=\"SCRIPT\"`.",
         "title": "script",
         "_name_": "script"
        },
        "when": {
         "description": "\"PREINIT\": Early in the boot process before all services have started.\n\"POSTINIT\": Late in the boot process when most services have started.\n\"SHUTDOWN\": On shutdown.",
         "enum": [
          "PREINIT",
          "POSTINIT",
          "SHUTDOWN"
         ],
         "title": "when",
         "type": "string",
         "_name_": "when"
        },
        "enabled": {
         "default": true,
         "title": "enabled",
         "type": "boolean",
         "_name_": "enabled"
        },
        "timeout": {
         "default": 10,
         "description": "An integer time in seconds that the system should wait for the execution of the script/command.\n\nA hard limit for a timeout is configured by the base OS, so when a script/command is set to execute on SHUTDOWN,\nthe hard limit configured by the base OS is changed adding the timeout specified by script/command so it can be\nensured that it executes as desired and is not interrupted by the base OS's limit.",
         "title": "timeout",
         "type": "integer",
         "_name_": "timeout"
        },
        "comment": {
         "default": "",
         "maxLength": 255,
         "title": "comment",
         "type": "string",
         "_name_": "comment"
        },
        "id": {
         "title": "id",
         "type": "integer",
         "_name_": "id"
        }
       },
       "required": [
        "type",
        "when",
        "id"
       ],
       "title": "result",
       "type": "object",
       "_name_": "result",
       "_attrs_order_": [
        "type",
        "command",
        "script",
        "when",
        "enabled",
        "timeout",
        "comment",
        "id"
       ]
      },
      "return_schema_of_interface_query": {
       "anyOf": [
        {
         "_name_": "query_result",
         "title": "query_result",
         "default": [],
         "_required_": false,
         "type": "array",
         "items": [
          {
           "type": "object",
           "properties": {
            "id": {
             "_name_": "id",
             "title": "id",
             "_required_": true,
             "type": "string"
            },
            "name": {
             "_name_": "name",
             "title": "name",
             "_required_": true,
             "type": "string"
            },
            "fake": {
             "type": "boolean",
             "_name_": "fake",
             "title": "fake",
             "_required_": true
            },
            "type": {
             "_name_": "type",
             "title": "type",
             "_required_": true,
             "type": "string"
            },
            "state": {
             "type": "object",
             "properties": {
              "name": {
               "_name_": "name",
               "title": "name",
               "_required_": true,
               "type": "string"
              },
              "orig_name": {
               "_name_": "orig_name",
               "title": "orig_name",
               "_required_": true,
               "type": "string"
              },
              "description": {
               "_name_": "description",
               "title": "description",
               "_required_": true,
               "type": "string"
              },
              "mtu": {
               "type": "integer",
               "_name_": "mtu",
               "title": "mtu",
               "_required_": true
              },
              "cloned": {
               "type": "boolean",
               "_name_": "cloned",
               "title": "cloned",
               "_required_": true
              },
              "flags": {
               "_name_": "flags",
               "title": "flags",
               "default": [],
               "_required_": true,
               "type": "array",
               "items": [
                {
                 "_name_": "flag",
                 "title": "flag",
                 "_required_": false,
                 "type": "string"
                }
               ]
              },
              "nd6_flags": {
               "_name_": "nd6_flags",
               "title": "nd6_flags",
               "default": [],
               "_required_": true,
               "type": "array",
               "items": []
              },
              "capabilities": {
               "_name_": "capabilities",
               "title": "capabilities",
               "default": [],
               "_required_": true,
               "type": "array",
               "items": []
              },
              "link_state": {
               "_name_": "link_state",
               "title": "link_state",
               "_required_": true,
               "type": "string"
              },
              "media_type": {
               "_name_": "media_type",
               "title": "media_type",
               "_required_": true,
               "type": "string"
              },
              "media_subtype": {
               "_name_": "media_subtype",
               "title": "media_subtype",
               "_required_": true,
               "type": "string"
              },
              "active_media_type": {
               "_name_": "active_media_type",
               "title": "active_media_type",
               "_required_": true,
               "type": "string"
              },
              "active_media_subtype": {
               "_name_": "active_media_subtype",
               "title": "active_media_subtype",
               "_required_": true,
               "type": "string"
              },
              "supported_media": {
               "_name_": "supported_media",
               "title": "supported_media",
               "default": [],
               "_required_": true,
               "type": "array",
               "items": []
              },
              "media_options": {
               "_name_": "media_options",
               "title": "media_options",
               "default": [],
               "_required_": true,
               "type": [
                "array",
                "null"
               ],
               "items": []
              },
              "link_address": {
               "_name_": "link_address",
               "title": "link_address",
               "_required_": true,
               "type": "string"
              },
              "permanent_link_address": {
               "_name_": "permanent_link_address",
               "title": "permanent_link_address",
               "_required_": true,
               "type": [
                "string",
                "null"
               ]
              },
              "hardware_link_address": {
               "_name_": "hardware_link_address",
               "title": "hardware_link_address",
               "_required_": true,
               "type": "string"
              },
              "rx_queues": {
               "type": "integer",
               "_name_": "rx_queues",
               "title": "rx_queues",
               "_required_": true
              },
              "tx_queues": {
               "type": "integer",
               "_name_": "tx_queues",
               "title": "tx_queues",
               "_required_": true
              },
              "aliases": {
               "_name_": "aliases",
               "title": "aliases",
               "default": [],
               "_required_": true,
               "type": "array",
               "items": [
                {
                 "type": "object",
                 "properties": {
                  "type": {
                   "_name_": "type",
                   "title": "type",
                   "_required_": true,
                   "type": "string"
                  },
                  "address": {
                   "_name_": "address",
                   "title": "address",
                   "_required_": true,
                   "type": "string"
                  },
                  "netmask": {
                   "_name_": "netmask",
                   "title": "netmask",
                   "_required_": false,
                   "type": "string"
                  },
                  "broadcast": {
                   "_name_": "broadcast",
                   "title": "broadcast",
                   "_required_": false,
                   "type": "string"
                  }
                 },
                 "additionalProperties": false,
                 "_name_": "alias",
                 "title": "alias",
                 "default": {},
                 "_required_": false,
                 "_attrs_order_": [
                  "type",
                  "address",
                  "netmask",
                  "broadcast"
                 ]
                }
               ]
              },
              "vrrp_config": {
               "_name_": "vrrp_config",
               "title": "vrrp_config",
               "default": [],
               "_required_": false,
               "type": [
                "array",
                "null"
               ],
               "items": []
              },
              "protocol": {
               "_name_": "protocol",
               "title": "protocol",
               "_required_": false,
               "type": [
                "string",
                "null"
               ]
              },
              "ports": {
               "_name_": "ports",
               "title": "ports",
               "default": [],
               "_required_": false,
               "type": "array",
               "items": [
                {
                 "type": "object",
                 "properties": {
                  "name": {
                   "_name_": "name",
                   "title": "name",
                   "_required_": false,
                   "type": "string"
                  },
                  "flags": {
                   "_name_": "flags",
                   "title": "flags",
                   "default": [],
                   "_required_": false,
                   "type": "array",
                   "items": [
                    {
                     "_name_": "flag",
                     "title": "flag",
                     "_required_": false,
                     "type": "string"
                    }
                   ]
                  }
                 },
                 "additionalProperties": false,
                 "_name_": "lag_ports",
                 "title": "lag_ports",
                 "default": {},
                 "_required_": false,
                 "_attrs_order_": [
                  "name",
                  "flags"
                 ]
                }
               ]
              },
              "xmit_hash_policy": {
               "_name_": "xmit_hash_policy",
               "title": "xmit_hash_policy",
               "default": null,
               "_required_": false,
               "type": [
                "string",
                "null"
               ]
              },
              "lacpdu_rate": {
               "_name_": "lacpdu_rate",
               "title": "lacpdu_rate",
               "default": null,
               "_required_": false,
               "type": [
                "string",
                "null"
               ]
              },
              "parent": {
               "_name_": "parent",
               "title": "parent",
               "_required_": false,
               "type": [
                "string",
                "null"
               ]
              },
              "tag": {
               "type": [
                "integer",
                "null"
               ],
               "_name_": "tag",
               "title": "tag",
               "_required_": false
              },
              "pcp": {
               "type": [
                "integer",
                "null"
               ],
               "_name_": "pcp",
               "title": "pcp",
               "_required_": false
              }
             },
             "additionalProperties": false,
             "_name_": "state",
             "title": "state",
             "default": {},
             "_required_": true,
             "_attrs_order_": [
              "name",
              "orig_name",
              "description",
              "mtu",
              "cloned",
              "flags",
              "nd6_flags",
              "capabilities",
              "link_state",
              "media_type",
              "media_subtype",
              "active_media_type",
              "active_media_subtype",
              "supported_media",
              "media_options",
              "link_address",
              "permanent_link_address",
              "hardware_link_address",
              "rx_queues",
              "tx_queues",
              "aliases",
              "vrrp_config",
              "protocol",
              "ports",
              "xmit_hash_policy",
              "lacpdu_rate",
              "parent",
              "tag",
              "pcp"
             ]
            },
            "aliases": {
             "_name_": "aliases",
             "title": "aliases",
             "default": [],
             "_required_": true,
             "type": "array",
             "items": [
              {
               "type": "object",
               "properties": {
                "type": {
                 "_name_": "type",
                 "title": "type",
                 "_required_": true,
                 "type": "string"
                },
                "address": {
                 "_name_": "address",
                 "title": "address",
                 "_required_": true,
                 "type": "string"
                },
                "netmask": {
                 "_name_": "netmask",
                 "title": "netmask",
                 "_required_": true,
                 "type": "string"
                }
               },
               "additionalProperties": false,
               "_name_": "alias",
               "title": "alias",
               "default": {},
               "_required_": false,
               "_attrs_order_": [
                "type",
                "address",
                "netmask"
               ]
              }
             ]
            },
            "ipv4_dhcp": {
             "type": "boolean",
             "_name_": "ipv4_dhcp",
             "title": "ipv4_dhcp",
             "_required_": true
            },
            "ipv6_auto": {
             "type": "boolean",
             "_name_": "ipv6_auto",
             "title": "ipv6_auto",
             "_required_": true
            },
            "description": {
             "_name_": "description",
             "title": "description",
             "_required_": true,
             "type": "string"
            },
            "mtu": {
             "type": [
              "integer",
              "null"
             ],
             "_name_": "mtu",
             "title": "mtu",
             "_required_": true
            },
            "vlan_parent_interface": {
             "_name_": "vlan_parent_interface",
             "title": "vlan_parent_interface",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "vlan_tag": {
             "type": [
              "integer",
              "null"
             ],
             "_name_": "vlan_tag",
             "title": "vlan_tag",
             "_required_": false
            },
            "vlan_pcp": {
             "type": [
              "integer",
              "null"
             ],
             "_name_": "vlan_pcp",
             "title": "vlan_pcp",
             "_required_": false
            },
            "lag_protocol": {
             "_name_": "lag_protocol",
             "title": "lag_protocol",
             "_required_": false,
             "type": "string"
            },
            "lag_ports": {
             "_name_": "lag_ports",
             "title": "lag_ports",
             "default": [],
             "_required_": false,
             "type": "array",
             "items": [
              {
               "_name_": "lag_port",
               "title": "lag_port",
               "_required_": false,
               "type": "string"
              }
             ]
            },
            "bridge_members": {
             "_name_": "bridge_members",
             "title": "bridge_members",
             "default": [],
             "_required_": false,
             "type": "array",
             "items": [
              {
               "_name_": "member",
               "title": "member",
               "_required_": false,
               "type": "string"
              }
             ]
            },
            "enable_learning": {
             "type": "boolean",
             "_name_": "enable_learning",
             "title": "enable_learning",
             "_required_": false
            }
           },
           "additionalProperties": true,
           "_name_": "interface_entry",
           "title": "interface_entry",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "id",
            "name",
            "fake",
            "type",
            "state",
            "aliases",
            "ipv4_dhcp",
            "ipv6_auto",
            "description",
            "mtu",
            "vlan_parent_interface",
            "vlan_tag",
            "vlan_pcp",
            "lag_protocol",
            "lag_ports",
            "bridge_members",
            "enable_learning"
           ]
          }
         ]
        },
        {
         "type": "object",
         "properties": {
          "id": {
           "_name_": "id",
           "title": "id",
           "_required_": true,
           "type": "string"
          },
          "name": {
           "_name_": "name",
           "title": "name",
           "_required_": true,
           "type": "string"
          },
          "fake": {
           "type": "boolean",
           "_name_": "fake",
           "title": "fake",
           "_required_": true
          },
          "type": {
           "_name_": "type",
           "title": "type",
           "_required_": true,
           "type": "string"
          },
          "state": {
           "type": "object",
           "properties": {
            "name": {
             "_name_": "name",
             "title": "name",
             "_required_": true,
             "type": "string"
            },
            "orig_name": {
             "_name_": "orig_name",
             "title": "orig_name",
             "_required_": true,
             "type": "string"
            },
            "description": {
             "_name_": "description",
             "title": "description",
             "_required_": true,
             "type": "string"
            },
            "mtu": {
             "type": "integer",
             "_name_": "mtu",
             "title": "mtu",
             "_required_": true
            },
            "cloned": {
             "type": "boolean",
             "_name_": "cloned",
             "title": "cloned",
             "_required_": true
            },
            "flags": {
             "_name_": "flags",
             "title": "flags",
             "default": [],
             "_required_": true,
             "type": "array",
             "items": [
              {
               "_name_": "flag",
               "title": "flag",
               "_required_": false,
               "type": "string"
              }
             ]
            },
            "nd6_flags": {
             "_name_": "nd6_flags",
             "title": "nd6_flags",
             "default": [],
             "_required_": true,
             "type": "array",
             "items": []
            },
            "capabilities": {
             "_name_": "capabilities",
             "title": "capabilities",
             "default": [],
             "_required_": true,
             "type": "array",
             "items": []
            },
            "link_state": {
             "_name_": "link_state",
             "title": "link_state",
             "_required_": true,
             "type": "string"
            },
            "media_type": {
             "_name_": "media_type",
             "title": "media_type",
             "_required_": true,
             "type": "string"
            },
            "media_subtype": {
             "_name_": "media_subtype",
             "title": "media_subtype",
             "_required_": true,
             "type": "string"
            },
            "active_media_type": {
             "_name_": "active_media_type",
             "title": "active_media_type",
             "_required_": true,
             "type": "string"
            },
            "active_media_subtype": {
             "_name_": "active_media_subtype",
             "title": "active_media_subtype",
             "_required_": true,
             "type": "string"
            },
            "supported_media": {
             "_name_": "supported_media",
             "title": "supported_media",
             "default": [],
             "_required_": true,
             "type": "array",
             "items": []
            },
            "media_options": {
             "_name_": "media_options",
             "title": "media_options",
             "default": [],
             "_required_": true,
             "type": [
              "array",
              "null"
             ],
             "items": []
            },
            "link_address": {
             "_name_": "link_address",
             "title": "link_address",
             "_required_": true,
             "type": "string"
            },
            "permanent_link_address": {
             "_name_": "permanent_link_address",
             "title": "permanent_link_address",
             "_required_": true,
             "type": [
              "string",
              "null"
             ]
            },
            "hardware_link_address": {
             "_name_": "hardware_link_address",
             "title": "hardware_link_address",
             "_required_": true,
             "type": "string"
            },
            "rx_queues": {
             "type": "integer",
             "_name_": "rx_queues",
             "title": "rx_queues",
             "_required_": true
            },
            "tx_queues": {
             "type": "integer",
             "_name_": "tx_queues",
             "title": "tx_queues",
             "_required_": true
            },
            "aliases": {
             "_name_": "aliases",
             "title": "aliases",
             "default": [],
             "_required_": true,
             "type": "array",
             "items": [
              {
               "type": "object",
               "properties": {
                "type": {
                 "_name_": "type",
                 "title": "type",
                 "_required_": true,
                 "type": "string"
                },
                "address": {
                 "_name_": "address",
                 "title": "address",
                 "_required_": true,
                 "type": "string"
                },
                "netmask": {
                 "_name_": "netmask",
                 "title": "netmask",
                 "_required_": false,
                 "type": "string"
                },
                "broadcast": {
                 "_name_": "broadcast",
                 "title": "broadcast",
                 "_required_": false,
                 "type": "string"
                }
               },
               "additionalProperties": false,
               "_name_": "alias",
               "title": "alias",
               "default": {},
               "_required_": false,
               "_attrs_order_": [
                "type",
                "address",
                "netmask",
                "broadcast"
               ]
              }
             ]
            },
            "vrrp_config": {
             "_name_": "vrrp_config",
             "title": "vrrp_config",
             "default": [],
             "_required_": false,
             "type": [
              "array",
              "null"
             ],
             "items": []
            },
            "protocol": {
             "_name_": "protocol",
             "title": "protocol",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "ports": {
             "_name_": "ports",
             "title": "ports",
             "default": [],
             "_required_": false,
             "type": "array",
             "items": [
              {
               "type": "object",
               "properties": {
                "name": {
                 "_name_": "name",
                 "title": "name",
                 "_required_": false,
                 "type": "string"
                },
                "flags": {
                 "_name_": "flags",
                 "title": "flags",
                 "default": [],
                 "_required_": false,
                 "type": "array",
                 "items": [
                  {
                   "_name_": "flag",
                   "title": "flag",
                   "_required_": false,
                   "type": "string"
                  }
                 ]
                }
               },
               "additionalProperties": false,
               "_name_": "lag_ports",
               "title": "lag_ports",
               "default": {},
               "_required_": false,
               "_attrs_order_": [
                "name",
                "flags"
               ]
              }
             ]
            },
            "xmit_hash_policy": {
             "_name_": "xmit_hash_policy",
             "title": "xmit_hash_policy",
             "default": null,
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "lacpdu_rate": {
             "_name_": "lacpdu_rate",
             "title": "lacpdu_rate",
             "default": null,
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "parent": {
             "_name_": "parent",
             "title": "parent",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "tag": {
             "type": [
              "integer",
              "null"
             ],
             "_name_": "tag",
             "title": "tag",
             "_required_": false
            },
            "pcp": {
             "type": [
              "integer",
              "null"
             ],
             "_name_": "pcp",
             "title": "pcp",
             "_required_": false
            }
           },
           "additionalProperties": false,
           "_name_": "state",
           "title": "state",
           "default": {},
           "_required_": true,
           "_attrs_order_": [
            "name",
            "orig_name",
            "description",
            "mtu",
            "cloned",
            "flags",
            "nd6_flags",
            "capabilities",
            "link_state",
            "media_type",
            "media_subtype",
            "active_media_type",
            "active_media_subtype",
            "supported_media",
            "media_options",
            "link_address",
            "permanent_link_address",
            "hardware_link_address",
            "rx_queues",
            "tx_queues",
            "aliases",
            "vrrp_config",
            "protocol",
            "ports",
            "xmit_hash_policy",
            "lacpdu_rate",
            "parent",
            "tag",
            "pcp"
           ]
          },
          "aliases": {
           "_name_": "aliases",
           "title": "aliases",
           "default": [],
           "_required_": true,
           "type": "array",
           "items": [
            {
             "type": "object",
             "properties": {
              "type": {
               "_name_": "type",
               "title": "type",
               "_required_": true,
               "type": "string"
              },
              "address": {
               "_name_": "address",
               "title": "address",
               "_required_": true,
               "type": "string"
              },
              "netmask": {
               "_name_": "netmask",
               "title": "netmask",
               "_required_": true,
               "type": "string"
              }
             },
             "additionalProperties": false,
             "_name_": "alias",
             "title": "alias",
             "default": {},
             "_required_": false,
             "_attrs_order_": [
              "type",
              "address",
              "netmask"
             ]
            }
           ]
          },
          "ipv4_dhcp": {
           "type": "boolean",
           "_name_": "ipv4_dhcp",
           "title": "ipv4_dhcp",
           "_required_": true
          },
          "ipv6_auto": {
           "type": "boolean",
           "_name_": "ipv6_auto",
           "title": "ipv6_auto",
           "_required_": true
          },
          "description": {
           "_name_": "description",
           "title": "description",
           "_required_": true,
           "type": "string"
          },
          "mtu": {
           "type": [
            "integer",
            "null"
           ],
           "_name_": "mtu",
           "title": "mtu",
           "_required_": true
          },
          "vlan_parent_interface": {
           "_name_": "vlan_parent_interface",
           "title": "vlan_parent_interface",
           "_required_": false,
           "type": [
            "string",
            "null"
           ]
          },
          "vlan_tag": {
           "type": [
            "integer",
            "null"
           ],
           "_name_": "vlan_tag",
           "title": "vlan_tag",
           "_required_": false
          },
          "vlan_pcp": {
           "type": [
            "integer",
            "null"
           ],
           "_name_": "vlan_pcp",
           "title": "vlan_pcp",
           "_required_": false
          },
          "lag_protocol": {
           "_name_": "lag_protocol",
           "title": "lag_protocol",
           "_required_": false,
           "type": "string"
          },
          "lag_ports": {
           "_name_": "lag_ports",
           "title": "lag_ports",
           "default": [],
           "_required_": false,
           "type": "array",
           "items": [
            {
             "_name_": "lag_port",
             "title": "lag_port",
             "_required_": false,
             "type": "string"
            }
           ]
          },
          "bridge_members": {
           "_name_": "bridge_members",
           "title": "bridge_members",
           "default": [],
           "_required_": false,
           "type": "array",
           "items": [
            {
             "_name_": "member",
             "title": "member",
             "_required_": false,
             "type": "string"
            }
           ]
          },
          "enable_learning": {
           "type": "boolean",
           "_name_": "enable_learning",
           "title": "enable_learning",
           "_required_": false
          }
         },
         "additionalProperties": true,
         "_name_": "interface_entry",
         "title": "interface_entry",
         "default": {},
         "_required_": false,
         "_attrs_order_": [
          "id",
          "name",
          "fake",
          "type",
          "state",
          "aliases",
          "ipv4_dhcp",
          "ipv6_auto",
          "description",
          "mtu",
          "vlan_parent_interface",
          "vlan_tag",
          "vlan_pcp",
          "lag_protocol",
          "lag_ports",
          "bridge_members",
          "enable_learning"
         ]
        },
        {
         "type": "integer",
         "_name_": "count",
         "title": "count",
         "_required_": false
        },
        {
         "type": "object",
         "properties": {
          "id": {
           "_name_": "id",
           "title": "id",
           "_required_": true,
           "type": "string"
          },
          "name": {
           "_name_": "name",
           "title": "name",
           "_required_": true,
           "type": "string"
          },
          "fake": {
           "type": "boolean",
           "_name_": "fake",
           "title": "fake",
           "_required_": true
          },
          "type": {
           "_name_": "type",
           "title": "type",
           "_required_": true,
           "type": "string"
          },
          "state": {
           "type": "object",
           "properties": {
            "name": {
             "_name_": "name",
             "title": "name",
             "_required_": true,
             "type": "string"
            },
            "orig_name": {
             "_name_": "orig_name",
             "title": "orig_name",
             "_required_": true,
             "type": "string"
            },
            "description": {
             "_name_": "description",
             "title": "description",
             "_required_": true,
             "type": "string"
            },
            "mtu": {
             "type": "integer",
             "_name_": "mtu",
             "title": "mtu",
             "_required_": true
            },
            "cloned": {
             "type": "boolean",
             "_name_": "cloned",
             "title": "cloned",
             "_required_": true
            },
            "flags": {
             "_name_": "flags",
             "title": "flags",
             "default": [],
             "_required_": true,
             "type": "array",
             "items": [
              {
               "_name_": "flag",
               "title": "flag",
               "_required_": false,
               "type": "string"
              }
             ]
            },
            "nd6_flags": {
             "_name_": "nd6_flags",
             "title": "nd6_flags",
             "default": [],
             "_required_": true,
             "type": "array",
             "items": []
            },
            "capabilities": {
             "_name_": "capabilities",
             "title": "capabilities",
             "default": [],
             "_required_": true,
             "type": "array",
             "items": []
            },
            "link_state": {
             "_name_": "link_state",
             "title": "link_state",
             "_required_": true,
             "type": "string"
            },
            "media_type": {
             "_name_": "media_type",
             "title": "media_type",
             "_required_": true,
             "type": "string"
            },
            "media_subtype": {
             "_name_": "media_subtype",
             "title": "media_subtype",
             "_required_": true,
             "type": "string"
            },
            "active_media_type": {
             "_name_": "active_media_type",
             "title": "active_media_type",
             "_required_": true,
             "type": "string"
            },
            "active_media_subtype": {
             "_name_": "active_media_subtype",
             "title": "active_media_subtype",
             "_required_": true,
             "type": "string"
            },
            "supported_media": {
             "_name_": "supported_media",
             "title": "supported_media",
             "default": [],
             "_required_": true,
             "type": "array",
             "items": []
            },
            "media_options": {
             "_name_": "media_options",
             "title": "media_options",
             "default": [],
             "_required_": true,
             "type": [
              "array",
              "null"
             ],
             "items": []
            },
            "link_address": {
             "_name_": "link_address",
             "title": "link_address",
             "_required_": true,
             "type": "string"
            },
            "permanent_link_address": {
             "_name_": "permanent_link_address",
             "title": "permanent_link_address",
             "_required_": true,
             "type": [
              "string",
              "null"
             ]
            },
            "hardware_link_address": {
             "_name_": "hardware_link_address",
             "title": "hardware_link_address",
             "_required_": true,
             "type": "string"
            },
            "rx_queues": {
             "type": "integer",
             "_name_": "rx_queues",
             "title": "rx_queues",
             "_required_": true
            },
            "tx_queues": {
             "type": "integer",
             "_name_": "tx_queues",
             "title": "tx_queues",
             "_required_": true
            },
            "aliases": {
             "_name_": "aliases",
             "title": "aliases",
             "default": [],
             "_required_": true,
             "type": "array",
             "items": [
              {
               "type": "object",
               "properties": {
                "type": {
                 "_name_": "type",
                 "title": "type",
                 "_required_": true,
                 "type": "string"
                },
                "address": {
                 "_name_": "address",
                 "title": "address",
                 "_required_": true,
                 "type": "string"
                },
                "netmask": {
                 "_name_": "netmask",
                 "title": "netmask",
                 "_required_": false,
                 "type": "string"
                },
                "broadcast": {
                 "_name_": "broadcast",
                 "title": "broadcast",
                 "_required_": false,
                 "type": "string"
                }
               },
               "additionalProperties": false,
               "_name_": "alias",
               "title": "alias",
               "default": {},
               "_required_": false,
               "_attrs_order_": [
                "type",
                "address",
                "netmask",
                "broadcast"
               ]
              }
             ]
            },
            "vrrp_config": {
             "_name_": "vrrp_config",
             "title": "vrrp_config",
             "default": [],
             "_required_": false,
             "type": [
              "array",
              "null"
             ],
             "items": []
            },
            "protocol": {
             "_name_": "protocol",
             "title": "protocol",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "ports": {
             "_name_": "ports",
             "title": "ports",
             "default": [],
             "_required_": false,
             "type": "array",
             "items": [
              {
               "type": "object",
               "properties": {
                "name": {
                 "_name_": "name",
                 "title": "name",
                 "_required_": false,
                 "type": "string"
                },
                "flags": {
                 "_name_": "flags",
                 "title": "flags",
                 "default": [],
                 "_required_": false,
                 "type": "array",
                 "items": [
                  {
                   "_name_": "flag",
                   "title": "flag",
                   "_required_": false,
                   "type": "string"
                  }
                 ]
                }
               },
               "additionalProperties": false,
               "_name_": "lag_ports",
               "title": "lag_ports",
               "default": {},
               "_required_": false,
               "_attrs_order_": [
                "name",
                "flags"
               ]
              }
             ]
            },
            "xmit_hash_policy": {
             "_name_": "xmit_hash_policy",
             "title": "xmit_hash_policy",
             "default": null,
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "lacpdu_rate": {
             "_name_": "lacpdu_rate",
             "title": "lacpdu_rate",
             "default": null,
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "parent": {
             "_name_": "parent",
             "title": "parent",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "tag": {
             "type": [
              "integer",
              "null"
             ],
             "_name_": "tag",
             "title": "tag",
             "_required_": false
            },
            "pcp": {
             "type": [
              "integer",
              "null"
             ],
             "_name_": "pcp",
             "title": "pcp",
             "_required_": false
            }
           },
           "additionalProperties": false,
           "_name_": "state",
           "title": "state",
           "default": {},
           "_required_": true,
           "_attrs_order_": [
            "name",
            "orig_name",
            "description",
            "mtu",
            "cloned",
            "flags",
            "nd6_flags",
            "capabilities",
            "link_state",
            "media_type",
            "media_subtype",
            "active_media_type",
            "active_media_subtype",
            "supported_media",
            "media_options",
            "link_address",
            "permanent_link_address",
            "hardware_link_address",
            "rx_queues",
            "tx_queues",
            "aliases",
            "vrrp_config",
            "protocol",
            "ports",
            "xmit_hash_policy",
            "lacpdu_rate",
            "parent",
            "tag",
            "pcp"
           ]
          },
          "aliases": {
           "_name_": "aliases",
           "title": "aliases",
           "default": [],
           "_required_": true,
           "type": "array",
           "items": [
            {
             "type": "object",
             "properties": {
              "type": {
               "_name_": "type",
               "title": "type",
               "_required_": true,
               "type": "string"
              },
              "address": {
               "_name_": "address",
               "title": "address",
               "_required_": true,
               "type": "string"
              },
              "netmask": {
               "_name_": "netmask",
               "title": "netmask",
               "_required_": true,
               "type": "string"
              }
             },
             "additionalProperties": false,
             "_name_": "alias",
             "title": "alias",
             "default": {},
             "_required_": false,
             "_attrs_order_": [
              "type",
              "address",
              "netmask"
             ]
            }
           ]
          },
          "ipv4_dhcp": {
           "type": "boolean",
           "_name_": "ipv4_dhcp",
           "title": "ipv4_dhcp",
           "_required_": true
          },
          "ipv6_auto": {
           "type": "boolean",
           "_name_": "ipv6_auto",
           "title": "ipv6_auto",
           "_required_": true
          },
          "description": {
           "_name_": "description",
           "title": "description",
           "_required_": true,
           "type": "string"
          },
          "mtu": {
           "type": [
            "integer",
            "null"
           ],
           "_name_": "mtu",
           "title": "mtu",
           "_required_": true
          },
          "vlan_parent_interface": {
           "_name_": "vlan_parent_interface",
           "title": "vlan_parent_interface",
           "_required_": false,
           "type": [
            "string",
            "null"
           ]
          },
          "vlan_tag": {
           "type": [
            "integer",
            "null"
           ],
           "_name_": "vlan_tag",
           "title": "vlan_tag",
           "_required_": false
          },
          "vlan_pcp": {
           "type": [
            "integer",
            "null"
           ],
           "_name_": "vlan_pcp",
           "title": "vlan_pcp",
           "_required_": false
          },
          "lag_protocol": {
           "_name_": "lag_protocol",
           "title": "lag_protocol",
           "_required_": false,
           "type": "string"
          },
          "lag_ports": {
           "_name_": "lag_ports",
           "title": "lag_ports",
           "default": [],
           "_required_": false,
           "type": "array",
           "items": [
            {
             "_name_": "lag_port",
             "title": "lag_port",
             "_required_": false,
             "type": "string"
            }
           ]
          },
          "bridge_members": {
           "_name_": "bridge_members",
           "title": "bridge_members",
           "default": [],
           "_required_": false,
           "type": "array",
           "items": [
            {
             "_name_": "member",
             "title": "member",
             "_required_": false,
             "type": "string"
            }
           ]
          },
          "enable_learning": {
           "type": "boolean",
           "_name_": "enable_learning",
           "title": "enable_learning",
           "_required_": false
          }
         },
         "additionalProperties": true,
         "_name_": "interface_entry",
         "title": "interface_entry",
         "default": {},
         "_required_": false,
         "_attrs_order_": [
          "id",
          "name",
          "fake",
          "type",
          "state",
          "aliases",
          "ipv4_dhcp",
          "ipv6_auto",
          "description",
          "mtu",
          "vlan_parent_interface",
          "vlan_tag",
          "vlan_pcp",
          "lag_protocol",
          "lag_ports",
          "bridge_members",
          "enable_learning"
         ]
        }
       ],
       "nullable": false,
       "_name_": "query_result",
       "description": null
      },
      "interface_create": {
       "type": "object",
       "properties": {
        "name": {
         "_name_": "name",
         "title": "name",
         "type": "string"
        },
        "description": {
         "_name_": "description",
         "title": "description",
         "default": "",
         "type": "string"
        },
        "type": {
         "_name_": "type",
         "title": "type",
         "type": "string",
         "enum": [
          "BRIDGE",
          "LINK_AGGREGATION",
          "VLAN"
         ],
         "description": "For BRIDGE `type` the following attribute is required: bridge_members.\nFor LINK_AGGREGATION `type` the following attributes are required: lag_ports,\nlag_protocol.\nFor VLAN `type` the following attributes are required: vlan_parent_interface,\nvlan_tag and vlan_pcp."
        },
        "ipv4_dhcp": {
         "type": "boolean",
         "_name_": "ipv4_dhcp",
         "title": "ipv4_dhcp",
         "default": false
        },
        "ipv6_auto": {
         "type": "boolean",
         "_name_": "ipv6_auto",
         "title": "ipv6_auto",
         "default": false
        },
        "aliases": {
         "_name_": "aliases",
         "title": "aliases",
         "default": [],
         "type": "array",
         "items": {
          "type": "object",
          "properties": {
           "type": {
            "_name_": "type",
            "title": "type",
            "default": "INET",
            "_required_": true,
            "type": "string",
            "enum": [
             "INET",
             "INET6"
            ]
           },
           "address": {
            "_name_": "address",
            "title": "address",
            "_required_": true,
            "type": "string"
           },
           "netmask": {
            "type": "integer",
            "_name_": "netmask",
            "title": "netmask",
            "_required_": true
           }
          },
          "additionalProperties": false,
          "_name_": "interface_alias",
          "title": "interface_alias",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "type",
           "address",
           "netmask"
          ]
         }
        },
        "failover_critical": {
         "type": "boolean",
         "_name_": "failover_critical",
         "title": "failover_critical",
         "default": false
        },
        "failover_group": {
         "type": "integer",
         "_name_": "failover_group",
         "title": "failover_group",
         "nullable": true
        },
        "failover_vhid": {
         "type": "integer",
         "_name_": "failover_vhid",
         "title": "failover_vhid",
         "nullable": true
        },
        "failover_aliases": {
         "_name_": "failover_aliases",
         "title": "failover_aliases",
         "default": [],
         "type": "array",
         "items": {
          "type": "object",
          "properties": {
           "type": {
            "_name_": "type",
            "title": "type",
            "default": "INET",
            "_required_": true,
            "type": "string",
            "enum": [
             "INET",
             "INET6"
            ]
           },
           "address": {
            "_name_": "address",
            "title": "address",
            "_required_": true,
            "type": "string"
           }
          },
          "additionalProperties": false,
          "_name_": "interface_failover_alias",
          "title": "interface_failover_alias",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "type",
           "address"
          ]
         }
        },
        "failover_virtual_aliases": {
         "_name_": "failover_virtual_aliases",
         "title": "failover_virtual_aliases",
         "default": [],
         "type": "array",
         "items": {
          "type": "object",
          "properties": {
           "type": {
            "_name_": "type",
            "title": "type",
            "default": "INET",
            "_required_": true,
            "type": "string",
            "enum": [
             "INET",
             "INET6"
            ]
           },
           "address": {
            "_name_": "address",
            "title": "address",
            "_required_": true,
            "type": "string"
           }
          },
          "additionalProperties": false,
          "_name_": "interface_virtual_alias",
          "title": "interface_virtual_alias",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "type",
           "address"
          ]
         }
        },
        "bridge_members": {
         "_name_": "bridge_members",
         "title": "bridge_members",
         "default": [],
         "type": "array",
         "items": {}
        },
        "enable_learning": {
         "type": "boolean",
         "_name_": "enable_learning",
         "title": "enable_learning",
         "default": true
        },
        "stp": {
         "type": "boolean",
         "_name_": "stp",
         "title": "stp",
         "default": true
        },
        "lag_protocol": {
         "_name_": "lag_protocol",
         "title": "lag_protocol",
         "type": "string",
         "enum": [
          "LACP",
          "FAILOVER",
          "LOADBALANCE",
          "ROUNDROBIN",
          "NONE"
         ]
        },
        "xmit_hash_policy": {
         "_name_": "xmit_hash_policy",
         "title": "xmit_hash_policy",
         "default": null,
         "type": "string",
         "enum": [
          "LAYER2",
          "LAYER2+3",
          "LAYER3+4"
         ],
         "nullable": true
        },
        "lacpdu_rate": {
         "_name_": "lacpdu_rate",
         "title": "lacpdu_rate",
         "default": null,
         "type": "string",
         "enum": [
          "SLOW",
          "FAST"
         ],
         "nullable": true
        },
        "lag_ports": {
         "_name_": "lag_ports",
         "title": "lag_ports",
         "default": [],
         "type": "array",
         "items": {
          "_name_": "interface",
          "title": "interface",
          "_required_": false,
          "type": "string"
         }
        },
        "vlan_parent_interface": {
         "_name_": "vlan_parent_interface",
         "title": "vlan_parent_interface",
         "type": "string"
        },
        "vlan_tag": {
         "type": "integer",
         "_name_": "vlan_tag",
         "title": "vlan_tag"
        },
        "vlan_pcp": {
         "type": "integer",
         "_name_": "vlan_pcp",
         "title": "vlan_pcp",
         "nullable": true
        },
        "mtu": {
         "type": "integer",
         "_name_": "mtu",
         "title": "mtu",
         "default": null,
         "nullable": true
        }
       },
       "additionalProperties": false,
       "_name_": "interface_create",
       "title": "interface_create",
       "default": {},
       "_attrs_order_": [
        "name",
        "description",
        "type",
        "ipv4_dhcp",
        "ipv6_auto",
        "aliases",
        "failover_critical",
        "failover_group",
        "failover_vhid",
        "failover_aliases",
        "failover_virtual_aliases",
        "bridge_members",
        "enable_learning",
        "stp",
        "lag_protocol",
        "xmit_hash_policy",
        "lacpdu_rate",
        "lag_ports",
        "vlan_parent_interface",
        "vlan_tag",
        "vlan_pcp",
        "mtu"
       ]
      },
      "return_schema_of_interface_create": {
       "type": "object",
       "properties": {
        "id": {
         "_name_": "id",
         "title": "id",
         "type": "string"
        },
        "name": {
         "_name_": "name",
         "title": "name",
         "type": "string"
        },
        "fake": {
         "type": "boolean",
         "_name_": "fake",
         "title": "fake"
        },
        "type": {
         "_name_": "type",
         "title": "type",
         "type": "string",
         "description": "For BRIDGE `type` the following attribute is required: bridge_members.\nFor LINK_AGGREGATION `type` the following attributes are required: lag_ports,\nlag_protocol.\nFor VLAN `type` the following attributes are required: vlan_parent_interface,\nvlan_tag and vlan_pcp."
        },
        "state": {
         "type": "object",
         "properties": {
          "name": {
           "_name_": "name",
           "title": "name",
           "type": "string"
          },
          "orig_name": {
           "_name_": "orig_name",
           "title": "orig_name",
           "type": "string"
          },
          "description": {
           "_name_": "description",
           "title": "description",
           "type": "string"
          },
          "mtu": {
           "type": "integer",
           "_name_": "mtu",
           "title": "mtu"
          },
          "cloned": {
           "type": "boolean",
           "_name_": "cloned",
           "title": "cloned"
          },
          "flags": {
           "_name_": "flags",
           "title": "flags",
           "default": [],
           "type": "array",
           "items": {
            "_name_": "flag",
            "title": "flag",
            "_required_": false,
            "type": "string"
           }
          },
          "nd6_flags": {
           "_name_": "nd6_flags",
           "title": "nd6_flags",
           "default": [],
           "type": "array",
           "items": {}
          },
          "capabilities": {
           "_name_": "capabilities",
           "title": "capabilities",
           "default": [],
           "type": "array",
           "items": {}
          },
          "link_state": {
           "_name_": "link_state",
           "title": "link_state",
           "type": "string"
          },
          "media_type": {
           "_name_": "media_type",
           "title": "media_type",
           "type": "string"
          },
          "media_subtype": {
           "_name_": "media_subtype",
           "title": "media_subtype",
           "type": "string"
          },
          "active_media_type": {
           "_name_": "active_media_type",
           "title": "active_media_type",
           "type": "string"
          },
          "active_media_subtype": {
           "_name_": "active_media_subtype",
           "title": "active_media_subtype",
           "type": "string"
          },
          "supported_media": {
           "_name_": "supported_media",
           "title": "supported_media",
           "default": [],
           "type": "array",
           "items": {}
          },
          "media_options": {
           "_name_": "media_options",
           "title": "media_options",
           "default": [],
           "type": "array",
           "items": {},
           "nullable": true
          },
          "link_address": {
           "_name_": "link_address",
           "title": "link_address",
           "type": "string"
          },
          "permanent_link_address": {
           "_name_": "permanent_link_address",
           "title": "permanent_link_address",
           "type": "string",
           "nullable": true
          },
          "hardware_link_address": {
           "_name_": "hardware_link_address",
           "title": "hardware_link_address",
           "type": "string"
          },
          "rx_queues": {
           "type": "integer",
           "_name_": "rx_queues",
           "title": "rx_queues"
          },
          "tx_queues": {
           "type": "integer",
           "_name_": "tx_queues",
           "title": "tx_queues"
          },
          "aliases": {
           "_name_": "aliases",
           "title": "aliases",
           "default": [],
           "type": "array",
           "items": {
            "type": "object",
            "properties": {
             "type": {
              "_name_": "type",
              "title": "type",
              "_required_": true,
              "type": "string"
             },
             "address": {
              "_name_": "address",
              "title": "address",
              "_required_": true,
              "type": "string"
             },
             "netmask": {
              "_name_": "netmask",
              "title": "netmask",
              "_required_": false,
              "type": "string"
             },
             "broadcast": {
              "_name_": "broadcast",
              "title": "broadcast",
              "_required_": false,
              "type": "string"
             }
            },
            "additionalProperties": false,
            "_name_": "alias",
            "title": "alias",
            "default": {},
            "_required_": false,
            "_attrs_order_": [
             "type",
             "address",
             "netmask",
             "broadcast"
            ]
           }
          },
          "vrrp_config": {
           "_name_": "vrrp_config",
           "title": "vrrp_config",
           "default": [],
           "type": "array",
           "items": {},
           "nullable": true
          },
          "protocol": {
           "_name_": "protocol",
           "title": "protocol",
           "type": "string",
           "nullable": true
          },
          "ports": {
           "_name_": "ports",
           "title": "ports",
           "default": [],
           "type": "array",
           "items": {
            "type": "object",
            "properties": {
             "name": {
              "_name_": "name",
              "title": "name",
              "_required_": false,
              "type": "string"
             },
             "flags": {
              "_name_": "flags",
              "title": "flags",
              "default": [],
              "_required_": false,
              "type": "array",
              "items": [
               {
                "_name_": "flag",
                "title": "flag",
                "_required_": false,
                "type": "string"
               }
              ]
             }
            },
            "additionalProperties": false,
            "_name_": "lag_ports",
            "title": "lag_ports",
            "default": {},
            "_required_": false,
            "_attrs_order_": [
             "name",
             "flags"
            ]
           }
          },
          "xmit_hash_policy": {
           "_name_": "xmit_hash_policy",
           "title": "xmit_hash_policy",
           "default": null,
           "type": "string",
           "nullable": true
          },
          "lacpdu_rate": {
           "_name_": "lacpdu_rate",
           "title": "lacpdu_rate",
           "default": null,
           "type": "string",
           "nullable": true
          },
          "parent": {
           "_name_": "parent",
           "title": "parent",
           "type": "string",
           "nullable": true
          },
          "tag": {
           "type": "integer",
           "_name_": "tag",
           "title": "tag",
           "nullable": true
          },
          "pcp": {
           "type": "integer",
           "_name_": "pcp",
           "title": "pcp",
           "nullable": true
          }
         },
         "additionalProperties": false,
         "_name_": "state",
         "title": "state",
         "default": {},
         "_attrs_order_": [
          "name",
          "orig_name",
          "description",
          "mtu",
          "cloned",
          "flags",
          "nd6_flags",
          "capabilities",
          "link_state",
          "media_type",
          "media_subtype",
          "active_media_type",
          "active_media_subtype",
          "supported_media",
          "media_options",
          "link_address",
          "permanent_link_address",
          "hardware_link_address",
          "rx_queues",
          "tx_queues",
          "aliases",
          "vrrp_config",
          "protocol",
          "ports",
          "xmit_hash_policy",
          "lacpdu_rate",
          "parent",
          "tag",
          "pcp"
         ]
        },
        "aliases": {
         "_name_": "aliases",
         "title": "aliases",
         "default": [],
         "type": "array",
         "items": {
          "type": "object",
          "properties": {
           "type": {
            "_name_": "type",
            "title": "type",
            "_required_": true,
            "type": "string"
           },
           "address": {
            "_name_": "address",
            "title": "address",
            "_required_": true,
            "type": "string"
           },
           "netmask": {
            "_name_": "netmask",
            "title": "netmask",
            "_required_": true,
            "type": "string"
           }
          },
          "additionalProperties": false,
          "_name_": "alias",
          "title": "alias",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "type",
           "address",
           "netmask"
          ]
         }
        },
        "ipv4_dhcp": {
         "type": "boolean",
         "_name_": "ipv4_dhcp",
         "title": "ipv4_dhcp"
        },
        "ipv6_auto": {
         "type": "boolean",
         "_name_": "ipv6_auto",
         "title": "ipv6_auto"
        },
        "description": {
         "_name_": "description",
         "title": "description",
         "type": "string"
        },
        "mtu": {
         "type": "integer",
         "_name_": "mtu",
         "title": "mtu",
         "nullable": true
        },
        "vlan_parent_interface": {
         "_name_": "vlan_parent_interface",
         "title": "vlan_parent_interface",
         "type": "string",
         "nullable": true
        },
        "vlan_tag": {
         "type": "integer",
         "_name_": "vlan_tag",
         "title": "vlan_tag",
         "nullable": true
        },
        "vlan_pcp": {
         "type": "integer",
         "_name_": "vlan_pcp",
         "title": "vlan_pcp",
         "nullable": true
        },
        "lag_protocol": {
         "_name_": "lag_protocol",
         "title": "lag_protocol",
         "type": "string"
        },
        "lag_ports": {
         "_name_": "lag_ports",
         "title": "lag_ports",
         "default": [],
         "type": "array",
         "items": {
          "_name_": "lag_port",
          "title": "lag_port",
          "_required_": false,
          "type": "string"
         }
        },
        "bridge_members": {
         "_name_": "bridge_members",
         "title": "bridge_members",
         "default": [],
         "type": "array",
         "items": {
          "_name_": "member",
          "title": "member",
          "_required_": false,
          "type": "string"
         }
        },
        "enable_learning": {
         "type": "boolean",
         "_name_": "enable_learning",
         "title": "enable_learning"
        }
       },
       "additionalProperties": true,
       "_name_": "interface_create_returns",
       "title": "interface_create_returns",
       "default": {},
       "_attrs_order_": [
        "id",
        "name",
        "fake",
        "type",
        "state",
        "aliases",
        "ipv4_dhcp",
        "ipv6_auto",
        "description",
        "mtu",
        "vlan_parent_interface",
        "vlan_tag",
        "vlan_pcp",
        "lag_protocol",
        "lag_ports",
        "bridge_members",
        "enable_learning"
       ]
      },
      "return_schema_of_interface_delete": {
       "_name_": "interface_id",
       "title": "interface_id",
       "type": "string"
      },
      "interface_update": {
       "type": "object",
       "properties": {
        "name": {
         "_name_": "name",
         "title": "name",
         "type": "string"
        },
        "description": {
         "_name_": "description",
         "title": "description",
         "default": "",
         "type": "string"
        },
        "ipv4_dhcp": {
         "type": "boolean",
         "_name_": "ipv4_dhcp",
         "title": "ipv4_dhcp",
         "default": false
        },
        "ipv6_auto": {
         "type": "boolean",
         "_name_": "ipv6_auto",
         "title": "ipv6_auto",
         "default": false
        },
        "aliases": {
         "_name_": "aliases",
         "title": "aliases",
         "default": [],
         "type": "array",
         "items": {
          "type": "object",
          "properties": {
           "type": {
            "_name_": "type",
            "title": "type",
            "default": "INET",
            "_required_": true,
            "type": "string",
            "enum": [
             "INET",
             "INET6"
            ]
           },
           "address": {
            "_name_": "address",
            "title": "address",
            "_required_": true,
            "type": "string"
           },
           "netmask": {
            "type": "integer",
            "_name_": "netmask",
            "title": "netmask",
            "_required_": true
           }
          },
          "additionalProperties": false,
          "_name_": "interface_alias",
          "title": "interface_alias",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "type",
           "address",
           "netmask"
          ]
         }
        },
        "failover_critical": {
         "type": "boolean",
         "_name_": "failover_critical",
         "title": "failover_critical",
         "default": false
        },
        "failover_group": {
         "type": "integer",
         "_name_": "failover_group",
         "title": "failover_group",
         "nullable": true
        },
        "failover_vhid": {
         "type": "integer",
         "_name_": "failover_vhid",
         "title": "failover_vhid",
         "nullable": true
        },
        "failover_aliases": {
         "_name_": "failover_aliases",
         "title": "failover_aliases",
         "default": [],
         "type": "array",
         "items": {
          "type": "object",
          "properties": {
           "type": {
            "_name_": "type",
            "title": "type",
            "default": "INET",
            "_required_": true,
            "type": "string",
            "enum": [
             "INET",
             "INET6"
            ]
           },
           "address": {
            "_name_": "address",
            "title": "address",
            "_required_": true,
            "type": "string"
           }
          },
          "additionalProperties": false,
          "_name_": "interface_failover_alias",
          "title": "interface_failover_alias",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "type",
           "address"
          ]
         }
        },
        "failover_virtual_aliases": {
         "_name_": "failover_virtual_aliases",
         "title": "failover_virtual_aliases",
         "default": [],
         "type": "array",
         "items": {
          "type": "object",
          "properties": {
           "type": {
            "_name_": "type",
            "title": "type",
            "default": "INET",
            "_required_": true,
            "type": "string",
            "enum": [
             "INET",
             "INET6"
            ]
           },
           "address": {
            "_name_": "address",
            "title": "address",
            "_required_": true,
            "type": "string"
           }
          },
          "additionalProperties": false,
          "_name_": "interface_virtual_alias",
          "title": "interface_virtual_alias",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "type",
           "address"
          ]
         }
        },
        "bridge_members": {
         "_name_": "bridge_members",
         "title": "bridge_members",
         "default": [],
         "type": "array",
         "items": {}
        },
        "enable_learning": {
         "type": "boolean",
         "_name_": "enable_learning",
         "title": "enable_learning",
         "default": true
        },
        "stp": {
         "type": "boolean",
         "_name_": "stp",
         "title": "stp",
         "default": true
        },
        "lag_protocol": {
         "_name_": "lag_protocol",
         "title": "lag_protocol",
         "type": "string",
         "enum": [
          "LACP",
          "FAILOVER",
          "LOADBALANCE",
          "ROUNDROBIN",
          "NONE"
         ]
        },
        "xmit_hash_policy": {
         "_name_": "xmit_hash_policy",
         "title": "xmit_hash_policy",
         "default": null,
         "type": "string",
         "enum": [
          "LAYER2",
          "LAYER2+3",
          "LAYER3+4"
         ],
         "nullable": true
        },
        "lacpdu_rate": {
         "_name_": "lacpdu_rate",
         "title": "lacpdu_rate",
         "default": null,
         "type": "string",
         "enum": [
          "SLOW",
          "FAST"
         ],
         "nullable": true
        },
        "lag_ports": {
         "_name_": "lag_ports",
         "title": "lag_ports",
         "default": [],
         "type": "array",
         "items": {
          "_name_": "interface",
          "title": "interface",
          "_required_": false,
          "type": "string"
         }
        },
        "vlan_parent_interface": {
         "_name_": "vlan_parent_interface",
         "title": "vlan_parent_interface",
         "type": "string"
        },
        "vlan_tag": {
         "type": "integer",
         "_name_": "vlan_tag",
         "title": "vlan_tag"
        },
        "vlan_pcp": {
         "type": "integer",
         "_name_": "vlan_pcp",
         "title": "vlan_pcp",
         "nullable": true
        },
        "mtu": {
         "type": "integer",
         "_name_": "mtu",
         "title": "mtu",
         "default": null,
         "nullable": true
        }
       },
       "additionalProperties": false,
       "_name_": "interface_update",
       "title": "interface_update",
       "default": {},
       "_attrs_order_": [
        "name",
        "description",
        "ipv4_dhcp",
        "ipv6_auto",
        "aliases",
        "failover_critical",
        "failover_group",
        "failover_vhid",
        "failover_aliases",
        "failover_virtual_aliases",
        "bridge_members",
        "enable_learning",
        "stp",
        "lag_protocol",
        "xmit_hash_policy",
        "lacpdu_rate",
        "lag_ports",
        "vlan_parent_interface",
        "vlan_tag",
        "vlan_pcp",
        "mtu"
       ]
      },
      "return_schema_of_interface_update": {
       "type": "object",
       "properties": {
        "id": {
         "_name_": "id",
         "title": "id",
         "type": "string",
         "description": "Update Interface of `id`."
        },
        "name": {
         "_name_": "name",
         "title": "name",
         "type": "string"
        },
        "fake": {
         "type": "boolean",
         "_name_": "fake",
         "title": "fake"
        },
        "type": {
         "_name_": "type",
         "title": "type",
         "type": "string",
         "description": "For BRIDGE `type` the following attribute is required: bridge_members.\nFor LINK_AGGREGATION `type` the following attributes are required: lag_ports,\nlag_protocol.\nFor VLAN `type` the following attributes are required: vlan_parent_interface,\nvlan_tag and vlan_pcp."
        },
        "state": {
         "type": "object",
         "properties": {
          "name": {
           "_name_": "name",
           "title": "name",
           "type": "string"
          },
          "orig_name": {
           "_name_": "orig_name",
           "title": "orig_name",
           "type": "string"
          },
          "description": {
           "_name_": "description",
           "title": "description",
           "type": "string"
          },
          "mtu": {
           "type": "integer",
           "_name_": "mtu",
           "title": "mtu"
          },
          "cloned": {
           "type": "boolean",
           "_name_": "cloned",
           "title": "cloned"
          },
          "flags": {
           "_name_": "flags",
           "title": "flags",
           "default": [],
           "type": "array",
           "items": {
            "_name_": "flag",
            "title": "flag",
            "_required_": false,
            "type": "string"
           }
          },
          "nd6_flags": {
           "_name_": "nd6_flags",
           "title": "nd6_flags",
           "default": [],
           "type": "array",
           "items": {}
          },
          "capabilities": {
           "_name_": "capabilities",
           "title": "capabilities",
           "default": [],
           "type": "array",
           "items": {}
          },
          "link_state": {
           "_name_": "link_state",
           "title": "link_state",
           "type": "string"
          },
          "media_type": {
           "_name_": "media_type",
           "title": "media_type",
           "type": "string"
          },
          "media_subtype": {
           "_name_": "media_subtype",
           "title": "media_subtype",
           "type": "string"
          },
          "active_media_type": {
           "_name_": "active_media_type",
           "title": "active_media_type",
           "type": "string"
          },
          "active_media_subtype": {
           "_name_": "active_media_subtype",
           "title": "active_media_subtype",
           "type": "string"
          },
          "supported_media": {
           "_name_": "supported_media",
           "title": "supported_media",
           "default": [],
           "type": "array",
           "items": {}
          },
          "media_options": {
           "_name_": "media_options",
           "title": "media_options",
           "default": [],
           "type": "array",
           "items": {},
           "nullable": true
          },
          "link_address": {
           "_name_": "link_address",
           "title": "link_address",
           "type": "string"
          },
          "permanent_link_address": {
           "_name_": "permanent_link_address",
           "title": "permanent_link_address",
           "type": "string",
           "nullable": true
          },
          "hardware_link_address": {
           "_name_": "hardware_link_address",
           "title": "hardware_link_address",
           "type": "string"
          },
          "rx_queues": {
           "type": "integer",
           "_name_": "rx_queues",
           "title": "rx_queues"
          },
          "tx_queues": {
           "type": "integer",
           "_name_": "tx_queues",
           "title": "tx_queues"
          },
          "aliases": {
           "_name_": "aliases",
           "title": "aliases",
           "default": [],
           "type": "array",
           "items": {
            "type": "object",
            "properties": {
             "type": {
              "_name_": "type",
              "title": "type",
              "_required_": true,
              "type": "string"
             },
             "address": {
              "_name_": "address",
              "title": "address",
              "_required_": true,
              "type": "string"
             },
             "netmask": {
              "_name_": "netmask",
              "title": "netmask",
              "_required_": false,
              "type": "string"
             },
             "broadcast": {
              "_name_": "broadcast",
              "title": "broadcast",
              "_required_": false,
              "type": "string"
             }
            },
            "additionalProperties": false,
            "_name_": "alias",
            "title": "alias",
            "default": {},
            "_required_": false,
            "_attrs_order_": [
             "type",
             "address",
             "netmask",
             "broadcast"
            ]
           }
          },
          "vrrp_config": {
           "_name_": "vrrp_config",
           "title": "vrrp_config",
           "default": [],
           "type": "array",
           "items": {},
           "nullable": true
          },
          "protocol": {
           "_name_": "protocol",
           "title": "protocol",
           "type": "string",
           "nullable": true
          },
          "ports": {
           "_name_": "ports",
           "title": "ports",
           "default": [],
           "type": "array",
           "items": {
            "type": "object",
            "properties": {
             "name": {
              "_name_": "name",
              "title": "name",
              "_required_": false,
              "type": "string"
             },
             "flags": {
              "_name_": "flags",
              "title": "flags",
              "default": [],
              "_required_": false,
              "type": "array",
              "items": [
               {
                "_name_": "flag",
                "title": "flag",
                "_required_": false,
                "type": "string"
               }
              ]
             }
            },
            "additionalProperties": false,
            "_name_": "lag_ports",
            "title": "lag_ports",
            "default": {},
            "_required_": false,
            "_attrs_order_": [
             "name",
             "flags"
            ]
           }
          },
          "xmit_hash_policy": {
           "_name_": "xmit_hash_policy",
           "title": "xmit_hash_policy",
           "default": null,
           "type": "string",
           "nullable": true
          },
          "lacpdu_rate": {
           "_name_": "lacpdu_rate",
           "title": "lacpdu_rate",
           "default": null,
           "type": "string",
           "nullable": true
          },
          "parent": {
           "_name_": "parent",
           "title": "parent",
           "type": "string",
           "nullable": true
          },
          "tag": {
           "type": "integer",
           "_name_": "tag",
           "title": "tag",
           "nullable": true
          },
          "pcp": {
           "type": "integer",
           "_name_": "pcp",
           "title": "pcp",
           "nullable": true
          }
         },
         "additionalProperties": false,
         "_name_": "state",
         "title": "state",
         "default": {},
         "_attrs_order_": [
          "name",
          "orig_name",
          "description",
          "mtu",
          "cloned",
          "flags",
          "nd6_flags",
          "capabilities",
          "link_state",
          "media_type",
          "media_subtype",
          "active_media_type",
          "active_media_subtype",
          "supported_media",
          "media_options",
          "link_address",
          "permanent_link_address",
          "hardware_link_address",
          "rx_queues",
          "tx_queues",
          "aliases",
          "vrrp_config",
          "protocol",
          "ports",
          "xmit_hash_policy",
          "lacpdu_rate",
          "parent",
          "tag",
          "pcp"
         ]
        },
        "aliases": {
         "_name_": "aliases",
         "title": "aliases",
         "default": [],
         "type": "array",
         "items": {
          "type": "object",
          "properties": {
           "type": {
            "_name_": "type",
            "title": "type",
            "_required_": true,
            "type": "string"
           },
           "address": {
            "_name_": "address",
            "title": "address",
            "_required_": true,
            "type": "string"
           },
           "netmask": {
            "_name_": "netmask",
            "title": "netmask",
            "_required_": true,
            "type": "string"
           }
          },
          "additionalProperties": false,
          "_name_": "alias",
          "title": "alias",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "type",
           "address",
           "netmask"
          ]
         }
        },
        "ipv4_dhcp": {
         "type": "boolean",
         "_name_": "ipv4_dhcp",
         "title": "ipv4_dhcp"
        },
        "ipv6_auto": {
         "type": "boolean",
         "_name_": "ipv6_auto",
         "title": "ipv6_auto"
        },
        "description": {
         "_name_": "description",
         "title": "description",
         "type": "string"
        },
        "mtu": {
         "type": "integer",
         "_name_": "mtu",
         "title": "mtu",
         "nullable": true
        },
        "vlan_parent_interface": {
         "_name_": "vlan_parent_interface",
         "title": "vlan_parent_interface",
         "type": "string",
         "nullable": true
        },
        "vlan_tag": {
         "type": "integer",
         "_name_": "vlan_tag",
         "title": "vlan_tag",
         "nullable": true
        },
        "vlan_pcp": {
         "type": "integer",
         "_name_": "vlan_pcp",
         "title": "vlan_pcp",
         "nullable": true
        },
        "lag_protocol": {
         "_name_": "lag_protocol",
         "title": "lag_protocol",
         "type": "string"
        },
        "lag_ports": {
         "_name_": "lag_ports",
         "title": "lag_ports",
         "default": [],
         "type": "array",
         "items": {
          "_name_": "lag_port",
          "title": "lag_port",
          "_required_": false,
          "type": "string"
         }
        },
        "bridge_members": {
         "_name_": "bridge_members",
         "title": "bridge_members",
         "default": [],
         "type": "array",
         "items": {
          "_name_": "member",
          "title": "member",
          "_required_": false,
          "type": "string"
         }
        },
        "enable_learning": {
         "type": "boolean",
         "_name_": "enable_learning",
         "title": "enable_learning"
        }
       },
       "additionalProperties": true,
       "_name_": "interface_update_returns",
       "title": "interface_update_returns",
       "default": {},
       "_attrs_order_": [
        "id",
        "name",
        "fake",
        "type",
        "state",
        "aliases",
        "ipv4_dhcp",
        "ipv6_auto",
        "description",
        "mtu",
        "vlan_parent_interface",
        "vlan_tag",
        "vlan_pcp",
        "lag_protocol",
        "lag_ports",
        "bridge_members",
        "enable_learning"
       ]
      },
      "interface_bridge_members_choices": {
       "_name_": "id",
       "title": "id",
       "default": null,
       "type": "string",
       "nullable": true
      },
      "return_schema_of_interface_bridge_members_choices": {
       "type": "object",
       "properties": {},
       "additionalProperties": true,
       "_name_": "bridge_members_choices",
       "title": "bridge_members_choices",
       "default": {},
       "_attrs_order_": []
      },
      "return_schema_of_interface_checkin_waiting": {
       "type": "integer",
       "_name_": "remaining_seconds",
       "title": "remaining_seconds",
       "nullable": true
      },
      "interface_choices": {
       "type": "object",
       "properties": {
        "bridge_members": {
         "type": "boolean",
         "_name_": "bridge_members",
         "title": "bridge_members",
         "default": false,
         "description": "`bridge_members` will include BRIDGE members."
        },
        "lag_ports": {
         "type": "boolean",
         "_name_": "lag_ports",
         "title": "lag_ports",
         "default": false,
         "description": "`lag_ports` will include LINK_AGGREGATION ports."
        },
        "vlan_parent": {
         "type": "boolean",
         "_name_": "vlan_parent",
         "title": "vlan_parent",
         "default": true,
         "description": "`vlan_parent` will include VLAN parent interface."
        },
        "exclude": {
         "_name_": "exclude",
         "title": "exclude",
         "default": [
          "epair",
          "tap",
          "vnet"
         ],
         "type": "array",
         "items": {},
         "description": "`exclude` is a list of interfaces prefix to remove."
        },
        "exclude_types": {
         "_name_": "exclude_types",
         "title": "exclude_types",
         "default": [],
         "type": "array",
         "items": {
          "_name_": "type",
          "title": "type",
          "_required_": false,
          "type": "string",
          "enum": [
           "BRIDGE",
           "LINK_AGGREGATION",
           "PHYSICAL",
           "UNKNOWN",
           "VLAN"
          ]
         }
        },
        "include": {
         "_name_": "include",
         "title": "include",
         "default": [],
         "type": "array",
         "items": {}
        }
       },
       "additionalProperties": false,
       "_name_": "options",
       "title": "options",
       "default": {},
       "_attrs_order_": [
        "bridge_members",
        "lag_ports",
        "vlan_parent",
        "exclude",
        "exclude_types",
        "include"
       ]
      },
      "return_schema_of_interface_choices": {
       "type": "object",
       "properties": {},
       "additionalProperties": true,
       "_name_": "available_interfaces",
       "title": "available_interfaces",
       "default": {},
       "_attrs_order_": []
      },
      "interface_commit": {
       "type": "object",
       "properties": {
        "rollback": {
         "type": "boolean",
         "_name_": "rollback",
         "title": "rollback",
         "default": true,
         "description": "`rollback` as true (default) will roll back changes in case they fail to apply."
        },
        "checkin_timeout": {
         "type": "integer",
         "_name_": "checkin_timeout",
         "title": "checkin_timeout",
         "default": 60
        }
       },
       "additionalProperties": false,
       "_name_": "options",
       "title": "options",
       "default": {},
       "_attrs_order_": [
        "rollback",
        "checkin_timeout"
       ]
      },
      "return_schema_of_interface_default_route_will_be_removed": {
       "type": "boolean",
       "_name_": "default_route_will_be_removed",
       "title": "default_route_will_be_removed"
      },
      "interface_get_instance_0": {
       "anyOf": [
        {
         "type": "string"
        },
        {
         "type": "integer"
        },
        {
         "type": "boolean"
        },
        {
         "type": "object"
        },
        {
         "type": "array"
        }
       ],
       "nullable": false,
       "_name_": "id",
       "title": "id",
       "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised."
      },
      "interface_get_instance_1": {
       "type": "object",
       "properties": {
        "relationships": {
         "type": "boolean",
         "_name_": "relationships",
         "title": "relationships",
         "default": true
        },
        "extend": {
         "_name_": "extend",
         "title": "extend",
         "default": null,
         "type": "string",
         "nullable": true
        },
        "extend_context": {
         "_name_": "extend_context",
         "title": "extend_context",
         "default": null,
         "type": "string",
         "nullable": true
        },
        "prefix": {
         "_name_": "prefix",
         "title": "prefix",
         "default": null,
         "type": "string",
         "nullable": true
        },
        "extra": {
         "type": "object",
         "properties": {},
         "additionalProperties": true,
         "_name_": "extra",
         "title": "extra",
         "default": {},
         "_attrs_order_": []
        },
        "order_by": {
         "_name_": "order_by",
         "title": "order_by",
         "default": [],
         "type": "array",
         "items": {}
        },
        "select": {
         "_name_": "select",
         "title": "select",
         "default": [],
         "type": "array",
         "items": {}
        },
        "count": {
         "type": "boolean",
         "_name_": "count",
         "title": "count",
         "default": false
        },
        "get": {
         "type": "boolean",
         "_name_": "get",
         "title": "get",
         "default": false
        },
        "offset": {
         "type": "integer",
         "_name_": "offset",
         "title": "offset",
         "default": 0
        },
        "limit": {
         "type": "integer",
         "_name_": "limit",
         "title": "limit",
         "default": 0
        },
        "force_sql_filters": {
         "type": "boolean",
         "_name_": "force_sql_filters",
         "title": "force_sql_filters",
         "default": true
        }
       },
       "additionalProperties": false,
       "_name_": "query-options-get_instance",
       "title": "query-options-get_instance",
       "default": {},
       "_attrs_order_": [
        "relationships",
        "extend",
        "extend_context",
        "prefix",
        "extra",
        "order_by",
        "select",
        "count",
        "get",
        "offset",
        "limit",
        "force_sql_filters"
       ]
      },
      "interface_get_instance": {
       "type": "object",
       "properties": {
        "id": {
         "$ref": "#/components/schemas/interface_get_instance_0"
        },
        "query-options-get_instance": {
         "$ref": "#/components/schemas/interface_get_instance_1"
        }
       }
      },
      "return_schema_of_interface_get_instance": {
       "type": "object",
       "properties": {
        "id": {
         "_name_": "id",
         "title": "id",
         "type": "string",
         "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised."
        },
        "name": {
         "_name_": "name",
         "title": "name",
         "type": "string"
        },
        "fake": {
         "type": "boolean",
         "_name_": "fake",
         "title": "fake"
        },
        "type": {
         "_name_": "type",
         "title": "type",
         "type": "string"
        },
        "state": {
         "type": "object",
         "properties": {
          "name": {
           "_name_": "name",
           "title": "name",
           "type": "string"
          },
          "orig_name": {
           "_name_": "orig_name",
           "title": "orig_name",
           "type": "string"
          },
          "description": {
           "_name_": "description",
           "title": "description",
           "type": "string"
          },
          "mtu": {
           "type": "integer",
           "_name_": "mtu",
           "title": "mtu"
          },
          "cloned": {
           "type": "boolean",
           "_name_": "cloned",
           "title": "cloned"
          },
          "flags": {
           "_name_": "flags",
           "title": "flags",
           "default": [],
           "type": "array",
           "items": {
            "_name_": "flag",
            "title": "flag",
            "_required_": false,
            "type": "string"
           }
          },
          "nd6_flags": {
           "_name_": "nd6_flags",
           "title": "nd6_flags",
           "default": [],
           "type": "array",
           "items": {}
          },
          "capabilities": {
           "_name_": "capabilities",
           "title": "capabilities",
           "default": [],
           "type": "array",
           "items": {}
          },
          "link_state": {
           "_name_": "link_state",
           "title": "link_state",
           "type": "string"
          },
          "media_type": {
           "_name_": "media_type",
           "title": "media_type",
           "type": "string"
          },
          "media_subtype": {
           "_name_": "media_subtype",
           "title": "media_subtype",
           "type": "string"
          },
          "active_media_type": {
           "_name_": "active_media_type",
           "title": "active_media_type",
           "type": "string"
          },
          "active_media_subtype": {
           "_name_": "active_media_subtype",
           "title": "active_media_subtype",
           "type": "string"
          },
          "supported_media": {
           "_name_": "supported_media",
           "title": "supported_media",
           "default": [],
           "type": "array",
           "items": {}
          },
          "media_options": {
           "_name_": "media_options",
           "title": "media_options",
           "default": [],
           "type": "array",
           "items": {},
           "nullable": true
          },
          "link_address": {
           "_name_": "link_address",
           "title": "link_address",
           "type": "string"
          },
          "permanent_link_address": {
           "_name_": "permanent_link_address",
           "title": "permanent_link_address",
           "type": "string",
           "nullable": true
          },
          "hardware_link_address": {
           "_name_": "hardware_link_address",
           "title": "hardware_link_address",
           "type": "string"
          },
          "rx_queues": {
           "type": "integer",
           "_name_": "rx_queues",
           "title": "rx_queues"
          },
          "tx_queues": {
           "type": "integer",
           "_name_": "tx_queues",
           "title": "tx_queues"
          },
          "aliases": {
           "_name_": "aliases",
           "title": "aliases",
           "default": [],
           "type": "array",
           "items": {
            "type": "object",
            "properties": {
             "type": {
              "_name_": "type",
              "title": "type",
              "_required_": true,
              "type": "string"
             },
             "address": {
              "_name_": "address",
              "title": "address",
              "_required_": true,
              "type": "string"
             },
             "netmask": {
              "_name_": "netmask",
              "title": "netmask",
              "_required_": false,
              "type": "string"
             },
             "broadcast": {
              "_name_": "broadcast",
              "title": "broadcast",
              "_required_": false,
              "type": "string"
             }
            },
            "additionalProperties": false,
            "_name_": "alias",
            "title": "alias",
            "default": {},
            "_required_": false,
            "_attrs_order_": [
             "type",
             "address",
             "netmask",
             "broadcast"
            ]
           }
          },
          "vrrp_config": {
           "_name_": "vrrp_config",
           "title": "vrrp_config",
           "default": [],
           "type": "array",
           "items": {},
           "nullable": true
          },
          "protocol": {
           "_name_": "protocol",
           "title": "protocol",
           "type": "string",
           "nullable": true
          },
          "ports": {
           "_name_": "ports",
           "title": "ports",
           "default": [],
           "type": "array",
           "items": {
            "type": "object",
            "properties": {
             "name": {
              "_name_": "name",
              "title": "name",
              "_required_": false,
              "type": "string"
             },
             "flags": {
              "_name_": "flags",
              "title": "flags",
              "default": [],
              "_required_": false,
              "type": "array",
              "items": [
               {
                "_name_": "flag",
                "title": "flag",
                "_required_": false,
                "type": "string"
               }
              ]
             }
            },
            "additionalProperties": false,
            "_name_": "lag_ports",
            "title": "lag_ports",
            "default": {},
            "_required_": false,
            "_attrs_order_": [
             "name",
             "flags"
            ]
           }
          },
          "xmit_hash_policy": {
           "_name_": "xmit_hash_policy",
           "title": "xmit_hash_policy",
           "default": null,
           "type": "string",
           "nullable": true
          },
          "lacpdu_rate": {
           "_name_": "lacpdu_rate",
           "title": "lacpdu_rate",
           "default": null,
           "type": "string",
           "nullable": true
          },
          "parent": {
           "_name_": "parent",
           "title": "parent",
           "type": "string",
           "nullable": true
          },
          "tag": {
           "type": "integer",
           "_name_": "tag",
           "title": "tag",
           "nullable": true
          },
          "pcp": {
           "type": "integer",
           "_name_": "pcp",
           "title": "pcp",
           "nullable": true
          }
         },
         "additionalProperties": false,
         "_name_": "state",
         "title": "state",
         "default": {},
         "_attrs_order_": [
          "name",
          "orig_name",
          "description",
          "mtu",
          "cloned",
          "flags",
          "nd6_flags",
          "capabilities",
          "link_state",
          "media_type",
          "media_subtype",
          "active_media_type",
          "active_media_subtype",
          "supported_media",
          "media_options",
          "link_address",
          "permanent_link_address",
          "hardware_link_address",
          "rx_queues",
          "tx_queues",
          "aliases",
          "vrrp_config",
          "protocol",
          "ports",
          "xmit_hash_policy",
          "lacpdu_rate",
          "parent",
          "tag",
          "pcp"
         ]
        },
        "aliases": {
         "_name_": "aliases",
         "title": "aliases",
         "default": [],
         "type": "array",
         "items": {
          "type": "object",
          "properties": {
           "type": {
            "_name_": "type",
            "title": "type",
            "_required_": true,
            "type": "string"
           },
           "address": {
            "_name_": "address",
            "title": "address",
            "_required_": true,
            "type": "string"
           },
           "netmask": {
            "_name_": "netmask",
            "title": "netmask",
            "_required_": true,
            "type": "string"
           }
          },
          "additionalProperties": false,
          "_name_": "alias",
          "title": "alias",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "type",
           "address",
           "netmask"
          ]
         }
        },
        "ipv4_dhcp": {
         "type": "boolean",
         "_name_": "ipv4_dhcp",
         "title": "ipv4_dhcp"
        },
        "ipv6_auto": {
         "type": "boolean",
         "_name_": "ipv6_auto",
         "title": "ipv6_auto"
        },
        "description": {
         "_name_": "description",
         "title": "description",
         "type": "string"
        },
        "mtu": {
         "type": "integer",
         "_name_": "mtu",
         "title": "mtu",
         "nullable": true
        },
        "vlan_parent_interface": {
         "_name_": "vlan_parent_interface",
         "title": "vlan_parent_interface",
         "type": "string",
         "nullable": true
        },
        "vlan_tag": {
         "type": "integer",
         "_name_": "vlan_tag",
         "title": "vlan_tag",
         "nullable": true
        },
        "vlan_pcp": {
         "type": "integer",
         "_name_": "vlan_pcp",
         "title": "vlan_pcp",
         "nullable": true
        },
        "lag_protocol": {
         "_name_": "lag_protocol",
         "title": "lag_protocol",
         "type": "string"
        },
        "lag_ports": {
         "_name_": "lag_ports",
         "title": "lag_ports",
         "default": [],
         "type": "array",
         "items": {
          "_name_": "lag_port",
          "title": "lag_port",
          "_required_": false,
          "type": "string"
         }
        },
        "bridge_members": {
         "_name_": "bridge_members",
         "title": "bridge_members",
         "default": [],
         "type": "array",
         "items": {
          "_name_": "member",
          "title": "member",
          "_required_": false,
          "type": "string"
         }
        },
        "enable_learning": {
         "type": "boolean",
         "_name_": "enable_learning",
         "title": "enable_learning"
        }
       },
       "additionalProperties": true,
       "_name_": "interface_entry",
       "title": "interface_entry",
       "default": {},
       "_attrs_order_": [
        "id",
        "name",
        "fake",
        "type",
        "state",
        "aliases",
        "ipv4_dhcp",
        "ipv6_auto",
        "description",
        "mtu",
        "vlan_parent_interface",
        "vlan_tag",
        "vlan_pcp",
        "lag_protocol",
        "lag_ports",
        "bridge_members",
        "enable_learning"
       ]
      },
      "return_schema_of_interface_has_pending_changes": {
       "type": "boolean",
       "_name_": "has_pending_changes",
       "title": "has_pending_changes"
      },
      "interface_ip_in_use": {
       "type": "object",
       "properties": {
        "ipv4": {
         "type": "boolean",
         "_name_": "ipv4",
         "title": "ipv4",
         "default": true
        },
        "ipv6": {
         "type": "boolean",
         "_name_": "ipv6",
         "title": "ipv6",
         "default": true
        },
        "ipv6_link_local": {
         "type": "boolean",
         "_name_": "ipv6_link_local",
         "title": "ipv6_link_local",
         "default": false
        },
        "loopback": {
         "type": "boolean",
         "_name_": "loopback",
         "title": "loopback",
         "default": false,
         "description": "`loopback` will return loopback interface addresses."
        },
        "any": {
         "type": "boolean",
         "_name_": "any",
         "title": "any",
         "default": false,
         "description": "`any` will return wildcard addresses (0.0.0.0 and ::)."
        },
        "static": {
         "type": "boolean",
         "_name_": "static",
         "title": "static",
         "default": false,
         "description": "`static` when enabled will ensure we only return static ip's configured."
        }
       },
       "additionalProperties": false,
       "_name_": "ips",
       "title": "ips",
       "default": {},
       "_attrs_order_": [
        "ipv4",
        "ipv6",
        "ipv6_link_local",
        "loopback",
        "any",
        "static"
       ]
      },
      "return_schema_of_interface_ip_in_use": {
       "_name_": "in_use_ips",
       "title": "in_use_ips",
       "default": [],
       "type": "array",
       "items": {
        "type": "object",
        "properties": {
         "type": {
          "_name_": "type",
          "title": "type",
          "_required_": true,
          "type": "string"
         },
         "address": {
          "_name_": "address",
          "title": "address",
          "_required_": true,
          "type": "string"
         },
         "netmask": {
          "type": "integer",
          "_name_": "netmask",
          "title": "netmask",
          "_required_": true
         },
         "broadcast": {
          "_name_": "broadcast",
          "title": "broadcast",
          "_required_": false,
          "type": "string"
         }
        },
        "additionalProperties": false,
        "_name_": "in_use_ip",
        "title": "in_use_ip",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "type",
         "address",
         "netmask",
         "broadcast"
        ]
       }
      },
      "return_schema_of_interface_lacpdu_rate_choices": {
       "type": "object",
       "properties": {
        "SLOW": {
         "_name_": "SLOW",
         "title": "SLOW",
         "type": "string",
         "enum": [
          "SLOW"
         ]
        },
        "FAST": {
         "_name_": "FAST",
         "title": "FAST",
         "type": "string",
         "enum": [
          "FAST"
         ]
        }
       },
       "additionalProperties": false,
       "_name_": "lacpdu_rate_choices",
       "title": "lacpdu_rate_choices",
       "default": {},
       "_attrs_order_": [
        "SLOW",
        "FAST"
       ]
      },
      "interface_lag_ports_choices": {
       "_name_": "id",
       "title": "id",
       "default": null,
       "type": "string",
       "nullable": true
      },
      "return_schema_of_interface_lag_ports_choices": {
       "type": "object",
       "properties": {},
       "additionalProperties": true,
       "_name_": "lag_ports_choices",
       "title": "lag_ports_choices",
       "default": {},
       "_attrs_order_": []
      },
      "interface_save_default_route": {
       "_name_": "gw",
       "title": "gw",
       "type": "string"
      },
      "return_schema_of_interface_services_restarted_on_sync": {
       "_name_": "services_to_be_restarted",
       "title": "services_to_be_restarted",
       "default": [],
       "type": "array",
       "items": {
        "type": "object",
        "properties": {
         "type": {
          "_name_": "type",
          "title": "type",
          "_required_": true,
          "type": "string"
         },
         "service": {
          "_name_": "service",
          "title": "service",
          "_required_": true,
          "type": "string"
         },
         "ips": {
          "_name_": "ips",
          "title": "ips",
          "default": [],
          "_required_": true,
          "type": "array",
          "items": [
           {
            "_name_": "ip",
            "title": "ip",
            "_required_": false,
            "type": "string"
           }
          ]
         }
        },
        "additionalProperties": false,
        "_name_": "service_restart",
        "title": "service_restart",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "type",
         "service",
         "ips"
        ]
       }
      },
      "return_schema_of_interface_vlan_parent_interface_choices": {
       "type": "object",
       "properties": {},
       "additionalProperties": true,
       "_name_": "vlan_parent_interface_choices",
       "title": "vlan_parent_interface_choices",
       "default": {},
       "_attrs_order_": []
      },
      "return_schema_of_interface_xmit_hash_policy_choices": {
       "type": "object",
       "properties": {
        "LAYER2": {
         "_name_": "LAYER2",
         "title": "LAYER2",
         "type": "string",
         "enum": [
          "LAYER2"
         ]
        },
        "LAYER2+3": {
         "_name_": "LAYER2+3",
         "title": "LAYER2+3",
         "type": "string",
         "enum": [
          "LAYER2+3"
         ]
        },
        "LAYER3+4": {
         "_name_": "LAYER3+4",
         "title": "LAYER3+4",
         "type": "string",
         "enum": [
          "LAYER3+4"
         ]
        }
       },
       "additionalProperties": false,
       "_name_": "xmit_hash_policy_choices",
       "title": "xmit_hash_policy_choices",
       "default": {},
       "_attrs_order_": [
        "LAYER2",
        "LAYER2+3",
        "LAYER3+4"
       ]
      },
      "interface_capabilities_get": {
       "_name_": "name",
       "title": "name",
       "type": "string"
      },
      "return_schema_of_interface_capabilities_get": {
       "type": "object",
       "properties": {
        "enabled": {
         "_name_": "enabled",
         "title": "enabled",
         "default": [],
         "type": "array",
         "items": {
          "_name_": "capability",
          "title": "capability",
          "_required_": false,
          "type": "string"
         }
        },
        "disabled": {
         "_name_": "disabled",
         "title": "disabled",
         "default": [],
         "type": "array",
         "items": {
          "_name_": "capability",
          "title": "capability",
          "_required_": false,
          "type": "string"
         }
        },
        "supported": {
         "_name_": "supported",
         "title": "supported",
         "default": [],
         "type": "array",
         "items": {
          "_name_": "capability",
          "title": "capability",
          "_required_": false,
          "type": "string"
         }
        }
       },
       "additionalProperties": false,
       "_name_": "capabilties",
       "title": "capabilties",
       "default": {},
       "_attrs_order_": [
        "enabled",
        "disabled",
        "supported"
       ]
      },
      "interface_capabilities_set": {
       "type": "object",
       "properties": {
        "name": {
         "_name_": "name",
         "title": "name",
         "type": "string",
         "description": "`name` String representing name of the interface\n`capabilities` List representing capabilities to be acted upon"
        },
        "capabilties": {
         "_name_": "capabilties",
         "title": "capabilties",
         "default": [],
         "type": "array",
         "items": {}
        },
        "action": {
         "_name_": "action",
         "title": "action",
         "type": "string",
         "enum": [
          "ENABLE",
          "DISABLE"
         ]
        }
       },
       "additionalProperties": false,
       "_name_": "capabilities_set",
       "title": "capabilities_set",
       "default": {},
       "_attrs_order_": [
        "name",
        "capabilties",
        "action"
       ]
      },
      "return_schema_of_interface_capabilities_set": {
       "_name_": "capabilities",
       "title": "capabilities",
       "default": [],
       "type": "array",
       "items": {
        "_name_": "capability",
        "title": "capability",
        "_required_": false,
        "type": "string"
       }
      },
      "return_schema_of_ipmi_is_loaded": {
       "title": "result",
       "type": "boolean",
       "_name_": "result"
      },
      "ipmi_chassis_identify": {
       "_name_": "verb",
       "title": "verb",
       "default": "ON",
       "type": "string",
       "enum": [
        "ON",
        "OFF"
       ]
      },
      "return_schema_of_ipmi_chassis_info": {
       "type": "object",
       "properties": {},
       "additionalProperties": true,
       "_name_": "chassis_info",
       "title": "chassis_info",
       "default": {},
       "_attrs_order_": []
      },
      "ipmi_lan_query": {
       "type": "object",
       "properties": {
        "query-filters": {
         "_name_": "query-filters",
         "title": "query-filters",
         "default": [],
         "type": "array",
         "items": {
          "_name_": "query-filter",
          "title": "query-filter",
          "default": [],
          "_required_": false,
          "type": "array",
          "items": []
         }
        },
        "query-options": {
         "type": "object",
         "properties": {
          "relationships": {
           "type": "boolean",
           "_name_": "relationships",
           "title": "relationships",
           "default": true
          },
          "extend": {
           "_name_": "extend",
           "title": "extend",
           "default": null,
           "type": "string",
           "nullable": true
          },
          "extend_context": {
           "_name_": "extend_context",
           "title": "extend_context",
           "default": null,
           "type": "string",
           "nullable": true
          },
          "prefix": {
           "_name_": "prefix",
           "title": "prefix",
           "default": null,
           "type": "string",
           "nullable": true
          },
          "extra": {
           "type": "object",
           "properties": {},
           "additionalProperties": true,
           "_name_": "extra",
           "title": "extra",
           "default": {},
           "_attrs_order_": []
          },
          "order_by": {
           "_name_": "order_by",
           "title": "order_by",
           "default": [],
           "type": "array",
           "items": {}
          },
          "select": {
           "_name_": "select",
           "title": "select",
           "default": [],
           "type": "array",
           "items": {}
          },
          "count": {
           "type": "boolean",
           "_name_": "count",
           "title": "count",
           "default": false
          },
          "get": {
           "type": "boolean",
           "_name_": "get",
           "title": "get",
           "default": false
          },
          "offset": {
           "type": "integer",
           "_name_": "offset",
           "title": "offset",
           "default": 0
          },
          "limit": {
           "type": "integer",
           "_name_": "limit",
           "title": "limit",
           "default": 0
          },
          "force_sql_filters": {
           "type": "boolean",
           "_name_": "force_sql_filters",
           "title": "force_sql_filters",
           "default": false
          }
         },
         "additionalProperties": false,
         "_name_": "query-options",
         "title": "query-options",
         "default": {},
         "_attrs_order_": [
          "relationships",
          "extend",
          "extend_context",
          "prefix",
          "extra",
          "order_by",
          "select",
          "count",
          "get",
          "offset",
          "limit",
          "force_sql_filters"
         ]
        },
        "ipmi-options": {
         "type": "object",
         "properties": {
          "query-remote": {
           "type": "boolean",
           "_name_": "query-remote",
           "title": "query-remote",
           "default": false
          }
         },
         "additionalProperties": false,
         "_name_": "ipmi-options",
         "title": "ipmi-options",
         "default": {},
         "_attrs_order_": [
          "query-remote"
         ]
        }
       },
       "additionalProperties": false,
       "_name_": "ipmi_lan_query",
       "title": "ipmi_lan_query",
       "default": {},
       "_attrs_order_": [
        "query-filters",
        "query-options",
        "ipmi-options"
       ]
      },
      "return_schema_of_ipmi_lan_query": {
       "anyOf": [
        {
         "_name_": "query_result",
         "title": "query_result",
         "default": [],
         "_required_": false,
         "type": "array",
         "items": [
          {
           "type": "object",
           "properties": {
            "channel": {
             "type": "integer",
             "_name_": "channel",
             "title": "channel",
             "_required_": false
            },
            "id": {
             "type": "integer",
             "_name_": "id",
             "title": "id",
             "_required_": false
            },
            "ip_address_source": {
             "_name_": "ip_address_source",
             "title": "ip_address_source",
             "_required_": false,
             "type": "string"
            },
            "ip_address": {
             "_name_": "ip_address",
             "title": "ip_address",
             "_required_": false,
             "type": "string"
            },
            "mac_address": {
             "_name_": "mac_address",
             "title": "mac_address",
             "_required_": false,
             "type": "string"
            },
            "subnet_mask": {
             "_name_": "subnet_mask",
             "title": "subnet_mask",
             "_required_": false,
             "type": "string"
            },
            "default_gateway_ip_address": {
             "_name_": "default_gateway_ip_address",
             "title": "default_gateway_ip_address",
             "_required_": false,
             "type": "string"
            },
            "default_gateway_mac_address": {
             "_name_": "default_gateway_mac_address",
             "title": "default_gateway_mac_address",
             "_required_": false,
             "type": "string"
            },
            "backup_gateway_ip_address": {
             "_name_": "backup_gateway_ip_address",
             "title": "backup_gateway_ip_address",
             "_required_": false,
             "type": "string"
            },
            "backup_gateway_mac_address": {
             "_name_": "backup_gateway_mac_address",
             "title": "backup_gateway_mac_address",
             "_required_": false,
             "type": "string"
            },
            "vlan_id": {
             "type": [
              "integer",
              "null"
             ],
             "_name_": "vlan_id",
             "title": "vlan_id",
             "_required_": false
            },
            "vlan_id_enable": {
             "type": "boolean",
             "_name_": "vlan_id_enable",
             "title": "vlan_id_enable",
             "_required_": false
            },
            "vlan_priority": {
             "type": "integer",
             "_name_": "vlan_priority",
             "title": "vlan_priority",
             "_required_": false
            }
           },
           "additionalProperties": false,
           "_name_": "ipmi_channel",
           "title": "ipmi_channel",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "channel",
            "id",
            "ip_address_source",
            "ip_address",
            "mac_address",
            "subnet_mask",
            "default_gateway_ip_address",
            "default_gateway_mac_address",
            "backup_gateway_ip_address",
            "backup_gateway_mac_address",
            "vlan_id",
            "vlan_id_enable",
            "vlan_priority"
           ]
          }
         ]
        },
        {
         "type": "object",
         "properties": {
          "channel": {
           "type": "integer",
           "_name_": "channel",
           "title": "channel",
           "_required_": false
          },
          "id": {
           "type": "integer",
           "_name_": "id",
           "title": "id",
           "_required_": false
          },
          "ip_address_source": {
           "_name_": "ip_address_source",
           "title": "ip_address_source",
           "_required_": false,
           "type": "string"
          },
          "ip_address": {
           "_name_": "ip_address",
           "title": "ip_address",
           "_required_": false,
           "type": "string"
          },
          "mac_address": {
           "_name_": "mac_address",
           "title": "mac_address",
           "_required_": false,
           "type": "string"
          },
          "subnet_mask": {
           "_name_": "subnet_mask",
           "title": "subnet_mask",
           "_required_": false,
           "type": "string"
          },
          "default_gateway_ip_address": {
           "_name_": "default_gateway_ip_address",
           "title": "default_gateway_ip_address",
           "_required_": false,
           "type": "string"
          },
          "default_gateway_mac_address": {
           "_name_": "default_gateway_mac_address",
           "title": "default_gateway_mac_address",
           "_required_": false,
           "type": "string"
          },
          "backup_gateway_ip_address": {
           "_name_": "backup_gateway_ip_address",
           "title": "backup_gateway_ip_address",
           "_required_": false,
           "type": "string"
          },
          "backup_gateway_mac_address": {
           "_name_": "backup_gateway_mac_address",
           "title": "backup_gateway_mac_address",
           "_required_": false,
           "type": "string"
          },
          "vlan_id": {
           "type": [
            "integer",
            "null"
           ],
           "_name_": "vlan_id",
           "title": "vlan_id",
           "_required_": false
          },
          "vlan_id_enable": {
           "type": "boolean",
           "_name_": "vlan_id_enable",
           "title": "vlan_id_enable",
           "_required_": false
          },
          "vlan_priority": {
           "type": "integer",
           "_name_": "vlan_priority",
           "title": "vlan_priority",
           "_required_": false
          }
         },
         "additionalProperties": false,
         "_name_": "ipmi_channel",
         "title": "ipmi_channel",
         "default": {},
         "_required_": false,
         "_attrs_order_": [
          "channel",
          "id",
          "ip_address_source",
          "ip_address",
          "mac_address",
          "subnet_mask",
          "default_gateway_ip_address",
          "default_gateway_mac_address",
          "backup_gateway_ip_address",
          "backup_gateway_mac_address",
          "vlan_id",
          "vlan_id_enable",
          "vlan_priority"
         ]
        },
        {
         "type": "integer",
         "_name_": "count",
         "title": "count",
         "_required_": false
        },
        {
         "type": "object",
         "properties": {
          "channel": {
           "type": "integer",
           "_name_": "channel",
           "title": "channel",
           "_required_": false
          },
          "id": {
           "type": "integer",
           "_name_": "id",
           "title": "id",
           "_required_": false
          },
          "ip_address_source": {
           "_name_": "ip_address_source",
           "title": "ip_address_source",
           "_required_": false,
           "type": "string"
          },
          "ip_address": {
           "_name_": "ip_address",
           "title": "ip_address",
           "_required_": false,
           "type": "string"
          },
          "mac_address": {
           "_name_": "mac_address",
           "title": "mac_address",
           "_required_": false,
           "type": "string"
          },
          "subnet_mask": {
           "_name_": "subnet_mask",
           "title": "subnet_mask",
           "_required_": false,
           "type": "string"
          },
          "default_gateway_ip_address": {
           "_name_": "default_gateway_ip_address",
           "title": "default_gateway_ip_address",
           "_required_": false,
           "type": "string"
          },
          "default_gateway_mac_address": {
           "_name_": "default_gateway_mac_address",
           "title": "default_gateway_mac_address",
           "_required_": false,
           "type": "string"
          },
          "backup_gateway_ip_address": {
           "_name_": "backup_gateway_ip_address",
           "title": "backup_gateway_ip_address",
           "_required_": false,
           "type": "string"
          },
          "backup_gateway_mac_address": {
           "_name_": "backup_gateway_mac_address",
           "title": "backup_gateway_mac_address",
           "_required_": false,
           "type": "string"
          },
          "vlan_id": {
           "type": [
            "integer",
            "null"
           ],
           "_name_": "vlan_id",
           "title": "vlan_id",
           "_required_": false
          },
          "vlan_id_enable": {
           "type": "boolean",
           "_name_": "vlan_id_enable",
           "title": "vlan_id_enable",
           "_required_": false
          },
          "vlan_priority": {
           "type": "integer",
           "_name_": "vlan_priority",
           "title": "vlan_priority",
           "_required_": false
          }
         },
         "additionalProperties": false,
         "_name_": "ipmi_channel",
         "title": "ipmi_channel",
         "default": {},
         "_required_": false,
         "_attrs_order_": [
          "channel",
          "id",
          "ip_address_source",
          "ip_address",
          "mac_address",
          "subnet_mask",
          "default_gateway_ip_address",
          "default_gateway_mac_address",
          "backup_gateway_ip_address",
          "backup_gateway_mac_address",
          "vlan_id",
          "vlan_id_enable",
          "vlan_priority"
         ]
        }
       ],
       "nullable": false,
       "_name_": "query_result",
       "description": null
      },
      "ipmi_lan_update": {
       "type": "object",
       "properties": {
        "ipaddress": {
         "_name_": "ipaddress",
         "title": "ipaddress",
         "type": "string",
         "description": "`ipaddress` is an IPv4 address to be assigned to channel number `id`.\n`netmask` is the subnet mask associated with `ipaddress`.\n`gateway` is an IPv4 address used by `ipaddress` to reach outside the local subnet.\n`dhcp` is a boolean. If False, `ipaddress`, `netmask` and `gateway` must be set."
        },
        "netmask": {
         "_name_": "netmask",
         "title": "netmask",
         "type": "string",
         "description": "`ipaddress` is an IPv4 address to be assigned to channel number `id`.\n`netmask` is the subnet mask associated with `ipaddress`.\n`gateway` is an IPv4 address used by `ipaddress` to reach outside the local subnet.\n`dhcp` is a boolean. If False, `ipaddress`, `netmask` and `gateway` must be set."
        },
        "gateway": {
         "_name_": "gateway",
         "title": "gateway",
         "type": "string",
         "description": "`ipaddress` is an IPv4 address to be assigned to channel number `id`.\n`netmask` is the subnet mask associated with `ipaddress`.\n`gateway` is an IPv4 address used by `ipaddress` to reach outside the local subnet.\n`dhcp` is a boolean. If False, `ipaddress`, `netmask` and `gateway` must be set."
        },
        "password": {
         "_name_": "password",
         "title": "password",
         "type": "string",
         "description": "`password` is a password to be assigned to channel number `id`"
        },
        "dhcp": {
         "type": "boolean",
         "_name_": "dhcp",
         "title": "dhcp",
         "description": "`dhcp` is a boolean. If False, `ipaddress`, `netmask` and `gateway` must be set."
        },
        "vlan": {
         "type": "integer",
         "_name_": "vlan",
         "title": "vlan",
         "description": "`vlan` is an integer representing the vlan tag number. Passing null will disable vlan tagging.",
         "nullable": true
        },
        "apply_remote": {
         "type": "boolean",
         "_name_": "apply_remote",
         "title": "apply_remote",
         "default": false
        }
       },
       "additionalProperties": false,
       "_name_": "ipmi_update",
       "title": "ipmi_update",
       "default": {},
       "_attrs_order_": [
        "ipaddress",
        "netmask",
        "gateway",
        "password",
        "dhcp",
        "vlan",
        "apply_remote"
       ]
      },
      "return_schema_of_ipmi_lan_update": {
       "type": "object",
       "properties": {
        "channel": {
         "type": "integer",
         "_name_": "channel",
         "title": "channel"
        },
        "id": {
         "type": "integer",
         "_name_": "id",
         "title": "id",
         "description": "Update IPMI configuration on channel number `id`."
        },
        "ip_address_source": {
         "_name_": "ip_address_source",
         "title": "ip_address_source",
         "type": "string"
        },
        "ip_address": {
         "_name_": "ip_address",
         "title": "ip_address",
         "type": "string"
        },
        "mac_address": {
         "_name_": "mac_address",
         "title": "mac_address",
         "type": "string"
        },
        "subnet_mask": {
         "_name_": "subnet_mask",
         "title": "subnet_mask",
         "type": "string"
        },
        "default_gateway_ip_address": {
         "_name_": "default_gateway_ip_address",
         "title": "default_gateway_ip_address",
         "type": "string"
        },
        "default_gateway_mac_address": {
         "_name_": "default_gateway_mac_address",
         "title": "default_gateway_mac_address",
         "type": "string"
        },
        "backup_gateway_ip_address": {
         "_name_": "backup_gateway_ip_address",
         "title": "backup_gateway_ip_address",
         "type": "string"
        },
        "backup_gateway_mac_address": {
         "_name_": "backup_gateway_mac_address",
         "title": "backup_gateway_mac_address",
         "type": "string"
        },
        "vlan_id": {
         "type": "integer",
         "_name_": "vlan_id",
         "title": "vlan_id",
         "nullable": true
        },
        "vlan_id_enable": {
         "type": "boolean",
         "_name_": "vlan_id_enable",
         "title": "vlan_id_enable"
        },
        "vlan_priority": {
         "type": "integer",
         "_name_": "vlan_priority",
         "title": "vlan_priority"
        }
       },
       "additionalProperties": false,
       "_name_": "ipmi_lan_update_returns",
       "title": "ipmi_lan_update_returns",
       "default": {},
       "_attrs_order_": [
        "channel",
        "id",
        "ip_address_source",
        "ip_address",
        "mac_address",
        "subnet_mask",
        "default_gateway_ip_address",
        "default_gateway_mac_address",
        "backup_gateway_ip_address",
        "backup_gateway_mac_address",
        "vlan_id",
        "vlan_id_enable",
        "vlan_priority"
       ]
      },
      "return_schema_of_ipmi_lan_channels": {
       "_name_": "lan_channels",
       "title": "lan_channels",
       "default": [],
       "type": "array",
       "items": {
        "type": "integer",
        "_name_": "lan_channel",
        "title": "lan_channel",
        "_required_": false
       }
      },
      "ipmi_lan_get_instance_0": {
       "anyOf": [
        {
         "type": "string"
        },
        {
         "type": "integer"
        },
        {
         "type": "boolean"
        },
        {
         "type": "object"
        },
        {
         "type": "array"
        }
       ],
       "nullable": false,
       "_name_": "id",
       "title": "id",
       "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised."
      },
      "ipmi_lan_get_instance_1": {
       "type": "object",
       "properties": {
        "relationships": {
         "type": "boolean",
         "_name_": "relationships",
         "title": "relationships",
         "default": true
        },
        "extend": {
         "_name_": "extend",
         "title": "extend",
         "default": null,
         "type": "string",
         "nullable": true
        },
        "extend_context": {
         "_name_": "extend_context",
         "title": "extend_context",
         "default": null,
         "type": "string",
         "nullable": true
        },
        "prefix": {
         "_name_": "prefix",
         "title": "prefix",
         "default": null,
         "type": "string",
         "nullable": true
        },
        "extra": {
         "type": "object",
         "properties": {},
         "additionalProperties": true,
         "_name_": "extra",
         "title": "extra",
         "default": {},
         "_attrs_order_": []
        },
        "order_by": {
         "_name_": "order_by",
         "title": "order_by",
         "default": [],
         "type": "array",
         "items": {}
        },
        "select": {
         "_name_": "select",
         "title": "select",
         "default": [],
         "type": "array",
         "items": {}
        },
        "count": {
         "type": "boolean",
         "_name_": "count",
         "title": "count",
         "default": false
        },
        "get": {
         "type": "boolean",
         "_name_": "get",
         "title": "get",
         "default": false
        },
        "offset": {
         "type": "integer",
         "_name_": "offset",
         "title": "offset",
         "default": 0
        },
        "limit": {
         "type": "integer",
         "_name_": "limit",
         "title": "limit",
         "default": 0
        },
        "force_sql_filters": {
         "type": "boolean",
         "_name_": "force_sql_filters",
         "title": "force_sql_filters",
         "default": true
        }
       },
       "additionalProperties": false,
       "_name_": "query-options-get_instance",
       "title": "query-options-get_instance",
       "default": {},
       "_attrs_order_": [
        "relationships",
        "extend",
        "extend_context",
        "prefix",
        "extra",
        "order_by",
        "select",
        "count",
        "get",
        "offset",
        "limit",
        "force_sql_filters"
       ]
      },
      "ipmi_lan_get_instance": {
       "type": "object",
       "properties": {
        "id": {
         "$ref": "#/components/schemas/ipmi_lan_get_instance_0"
        },
        "query-options-get_instance": {
         "$ref": "#/components/schemas/ipmi_lan_get_instance_1"
        }
       }
      },
      "return_schema_of_ipmi_lan_get_instance": {
       "type": "object",
       "properties": {
        "channel": {
         "type": "integer",
         "_name_": "channel",
         "title": "channel"
        },
        "id": {
         "type": "integer",
         "_name_": "id",
         "title": "id",
         "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised."
        },
        "ip_address_source": {
         "_name_": "ip_address_source",
         "title": "ip_address_source",
         "type": "string"
        },
        "ip_address": {
         "_name_": "ip_address",
         "title": "ip_address",
         "type": "string"
        },
        "mac_address": {
         "_name_": "mac_address",
         "title": "mac_address",
         "type": "string"
        },
        "subnet_mask": {
         "_name_": "subnet_mask",
         "title": "subnet_mask",
         "type": "string"
        },
        "default_gateway_ip_address": {
         "_name_": "default_gateway_ip_address",
         "title": "default_gateway_ip_address",
         "type": "string"
        },
        "default_gateway_mac_address": {
         "_name_": "default_gateway_mac_address",
         "title": "default_gateway_mac_address",
         "type": "string"
        },
        "backup_gateway_ip_address": {
         "_name_": "backup_gateway_ip_address",
         "title": "backup_gateway_ip_address",
         "type": "string"
        },
        "backup_gateway_mac_address": {
         "_name_": "backup_gateway_mac_address",
         "title": "backup_gateway_mac_address",
         "type": "string"
        },
        "vlan_id": {
         "type": "integer",
         "_name_": "vlan_id",
         "title": "vlan_id",
         "nullable": true
        },
        "vlan_id_enable": {
         "type": "boolean",
         "_name_": "vlan_id_enable",
         "title": "vlan_id_enable"
        },
        "vlan_priority": {
         "type": "integer",
         "_name_": "vlan_priority",
         "title": "vlan_priority"
        }
       },
       "additionalProperties": false,
       "_name_": "ipmi_channel",
       "title": "ipmi_channel",
       "default": {},
       "_attrs_order_": [
        "channel",
        "id",
        "ip_address_source",
        "ip_address",
        "mac_address",
        "subnet_mask",
        "default_gateway_ip_address",
        "default_gateway_mac_address",
        "backup_gateway_ip_address",
        "backup_gateway_mac_address",
        "vlan_id",
        "vlan_id_enable",
        "vlan_priority"
       ]
      },
      "return_schema_of_ipmi_mc_info": {
       "type": "object",
       "properties": {},
       "additionalProperties": true,
       "_name_": "mc_info",
       "title": "mc_info",
       "default": {},
       "_attrs_order_": []
      },
      "return_schema_of_ipmi_sel_elist": {
       "anyOf": [
        {
         "type": "integer",
         "_name_": "count",
         "title": "count",
         "_required_": false
        },
        {
         "type": "object",
         "properties": {},
         "additionalProperties": true,
         "_name_": "ipmi_elist",
         "title": "ipmi_elist",
         "default": {},
         "_required_": false,
         "_attrs_order_": []
        },
        {
         "_name_": "query_result",
         "title": "query_result",
         "default": [],
         "_required_": false,
         "type": "array",
         "items": [
          {
           "type": "object",
           "properties": {},
           "additionalProperties": true,
           "_name_": "ipmi_elist",
           "title": "ipmi_elist",
           "default": {},
           "_required_": false,
           "_attrs_order_": []
          }
         ]
        }
       ],
       "nullable": false,
       "_name_": "filterable_result",
       "description": null
      },
      "return_schema_of_ipmi_sel_info": {
       "type": "object",
       "properties": {},
       "additionalProperties": true,
       "_name_": "ipmi_sel_info",
       "title": "ipmi_sel_info",
       "default": {},
       "_attrs_order_": []
      },
      "return_schema_of_ipmi_sensors_query": {
       "anyOf": [
        {
         "type": "integer",
         "_name_": "count",
         "title": "count",
         "_required_": false
        },
        {
         "_name_": "sensors",
         "title": "sensors",
         "default": [],
         "_required_": false,
         "type": "array",
         "items": [
          {
           "type": "object",
           "properties": {},
           "additionalProperties": true,
           "_name_": "sensor",
           "title": "sensor",
           "default": {},
           "_required_": false,
           "_attrs_order_": []
          }
         ]
        },
        {
         "_name_": "query_result",
         "title": "query_result",
         "default": [],
         "_required_": false,
         "type": "array",
         "items": [
          {
           "_name_": "sensors",
           "title": "sensors",
           "default": [],
           "_required_": false,
           "type": "array",
           "items": [
            {
             "type": "object",
             "properties": {},
             "additionalProperties": true,
             "_name_": "sensor",
             "title": "sensor",
             "default": {},
             "_required_": false,
             "_attrs_order_": []
            }
           ]
          }
         ]
        }
       ],
       "nullable": false,
       "_name_": "filterable_result",
       "description": null
      },
      "return_schema_of_iscsi_auth_query": {
       "anyOf": [
        {
         "items": [
          {
           "additionalProperties": false,
           "properties": {
            "id": {
             "title": "id",
             "type": "integer",
             "_name_": "id",
             "_required_": false
            },
            "tag": {
             "title": "tag",
             "type": "integer",
             "_name_": "tag",
             "_required_": false
            },
            "user": {
             "title": "user",
             "type": "string",
             "_name_": "user",
             "_required_": false
            },
            "secret": {
             "title": "secret",
             "type": "string",
             "_name_": "secret",
             "_required_": false
            },
            "peeruser": {
             "title": "peeruser",
             "type": "string",
             "_name_": "peeruser",
             "_required_": false
            },
            "peersecret": {
             "title": "peersecret",
             "type": "string",
             "_name_": "peersecret",
             "_required_": false
            },
            "discovery_auth": {
             "enum": [
              "NONE",
              "CHAP",
              "CHAP_MUTUAL"
             ],
             "title": "discovery_auth",
             "type": "string",
             "_name_": "discovery_auth",
             "_required_": false
            }
           },
           "title": "IscsiAuthQueryResultItem",
           "type": "object",
           "_attrs_order_": [
            "id",
            "tag",
            "user",
            "secret",
            "peeruser",
            "peersecret",
            "discovery_auth"
           ]
          }
         ],
         "type": "array"
        },
        {
         "additionalProperties": false,
         "properties": {
          "id": {
           "title": "id",
           "type": "integer",
           "_name_": "id",
           "_required_": false
          },
          "tag": {
           "title": "tag",
           "type": "integer",
           "_name_": "tag",
           "_required_": false
          },
          "user": {
           "title": "user",
           "type": "string",
           "_name_": "user",
           "_required_": false
          },
          "secret": {
           "title": "secret",
           "type": "string",
           "_name_": "secret",
           "_required_": false
          },
          "peeruser": {
           "title": "peeruser",
           "type": "string",
           "_name_": "peeruser",
           "_required_": false
          },
          "peersecret": {
           "title": "peersecret",
           "type": "string",
           "_name_": "peersecret",
           "_required_": false
          },
          "discovery_auth": {
           "enum": [
            "NONE",
            "CHAP",
            "CHAP_MUTUAL"
           ],
           "title": "discovery_auth",
           "type": "string",
           "_name_": "discovery_auth",
           "_required_": false
          }
         },
         "title": "IscsiAuthQueryResultItem",
         "type": "object",
         "_attrs_order_": [
          "id",
          "tag",
          "user",
          "secret",
          "peeruser",
          "peersecret",
          "discovery_auth"
         ]
        },
        {
         "type": "integer"
        }
       ],
       "title": "result",
       "_name_": "result"
      },
      "iscsi_auth_create": {
       "additionalProperties": false,
       "properties": {
        "tag": {
         "title": "tag",
         "type": "integer",
         "_name_": "tag"
        },
        "user": {
         "title": "user",
         "type": "string",
         "_name_": "user"
        },
        "secret": {
         "title": "secret",
         "type": "string",
         "_name_": "secret"
        },
        "peeruser": {
         "default": "",
         "title": "peeruser",
         "type": "string",
         "_name_": "peeruser"
        },
        "peersecret": {
         "default": "",
         "title": "peersecret",
         "type": "string",
         "_name_": "peersecret"
        },
        "discovery_auth": {
         "default": "NONE",
         "enum": [
          "NONE",
          "CHAP",
          "CHAP_MUTUAL"
         ],
         "title": "discovery_auth",
         "type": "string",
         "_name_": "discovery_auth"
        }
       },
       "required": [
        "tag",
        "user",
        "secret"
       ],
       "title": "data",
       "type": "object",
       "_name_": "data",
       "_attrs_order_": [
        "tag",
        "user",
        "secret",
        "peeruser",
        "peersecret",
        "discovery_auth"
       ]
      },
      "return_schema_of_iscsi_auth_create": {
       "additionalProperties": false,
       "properties": {
        "id": {
         "title": "id",
         "type": "integer",
         "_name_": "id"
        },
        "tag": {
         "title": "tag",
         "type": "integer",
         "_name_": "tag"
        },
        "user": {
         "title": "user",
         "type": "string",
         "_name_": "user"
        },
        "secret": {
         "title": "secret",
         "type": "string",
         "_name_": "secret"
        },
        "peeruser": {
         "default": "",
         "title": "peeruser",
         "type": "string",
         "_name_": "peeruser"
        },
        "peersecret": {
         "default": "",
         "title": "peersecret",
         "type": "string",
         "_name_": "peersecret"
        },
        "discovery_auth": {
         "default": "NONE",
         "enum": [
          "NONE",
          "CHAP",
          "CHAP_MUTUAL"
         ],
         "title": "discovery_auth",
         "type": "string",
         "_name_": "discovery_auth"
        }
       },
       "required": [
        "id",
        "tag",
        "user",
        "secret"
       ],
       "title": "result",
       "type": "object",
       "_name_": "result",
       "_attrs_order_": [
        "id",
        "tag",
        "user",
        "secret",
        "peeruser",
        "peersecret",
        "discovery_auth"
       ]
      },
      "return_schema_of_iscsi_auth_delete": {
       "const": true,
       "enum": [
        true
       ],
       "title": "result",
       "type": "boolean",
       "_name_": "result"
      },
      "iscsi_auth_update": {
       "additionalProperties": false,
       "properties": {
        "tag": {
         "title": "tag",
         "type": "integer",
         "_name_": "tag"
        },
        "user": {
         "title": "user",
         "type": "string",
         "_name_": "user"
        },
        "secret": {
         "title": "secret",
         "type": "string",
         "_name_": "secret"
        },
        "peeruser": {
         "title": "peeruser",
         "type": "string",
         "_name_": "peeruser"
        },
        "peersecret": {
         "title": "peersecret",
         "type": "string",
         "_name_": "peersecret"
        },
        "discovery_auth": {
         "enum": [
          "NONE",
          "CHAP",
          "CHAP_MUTUAL"
         ],
         "title": "discovery_auth",
         "type": "string",
         "_name_": "discovery_auth"
        }
       },
       "title": "data",
       "type": "object",
       "_name_": "data",
       "_attrs_order_": [
        "tag",
        "user",
        "secret",
        "peeruser",
        "peersecret",
        "discovery_auth"
       ]
      },
      "return_schema_of_iscsi_auth_update": {
       "additionalProperties": false,
       "properties": {
        "id": {
         "title": "id",
         "type": "integer",
         "_name_": "id"
        },
        "tag": {
         "title": "tag",
         "type": "integer",
         "_name_": "tag"
        },
        "user": {
         "title": "user",
         "type": "string",
         "_name_": "user"
        },
        "secret": {
         "title": "secret",
         "type": "string",
         "_name_": "secret"
        },
        "peeruser": {
         "default": "",
         "title": "peeruser",
         "type": "string",
         "_name_": "peeruser"
        },
        "peersecret": {
         "default": "",
         "title": "peersecret",
         "type": "string",
         "_name_": "peersecret"
        },
        "discovery_auth": {
         "default": "NONE",
         "enum": [
          "NONE",
          "CHAP",
          "CHAP_MUTUAL"
         ],
         "title": "discovery_auth",
         "type": "string",
         "_name_": "discovery_auth"
        }
       },
       "required": [
        "id",
        "tag",
        "user",
        "secret"
       ],
       "title": "result",
       "type": "object",
       "_name_": "result",
       "_attrs_order_": [
        "id",
        "tag",
        "user",
        "secret",
        "peeruser",
        "peersecret",
        "discovery_auth"
       ]
      },
      "iscsi_auth_get_instance_0": {
       "title": "id",
       "type": "integer",
       "_name_": "id"
      },
      "iscsi_auth_get_instance_1": {
       "additionalProperties": false,
       "properties": {
        "relationships": {
         "default": true,
         "title": "relationships",
         "type": "boolean",
         "_name_": "relationships"
        },
        "extend": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "extend",
         "_name_": "extend"
        },
        "extend_context": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "extend_context",
         "_name_": "extend_context"
        },
        "prefix": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "prefix",
         "_name_": "prefix"
        },
        "extra": {
         "default": {},
         "title": "extra",
         "type": "object",
         "_name_": "extra"
        },
        "order_by": {
         "default": [],
         "items": {
          "type": "string"
         },
         "title": "order_by",
         "type": "array",
         "_name_": "order_by"
        },
        "select": {
         "default": [],
         "items": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "items": [
             {}
            ],
            "type": "array"
           }
          ]
         },
         "title": "select",
         "type": "array",
         "_name_": "select"
        },
        "count": {
         "default": false,
         "title": "count",
         "type": "boolean",
         "_name_": "count"
        },
        "get": {
         "default": false,
         "title": "get",
         "type": "boolean",
         "_name_": "get"
        },
        "offset": {
         "default": 0,
         "title": "offset",
         "type": "integer",
         "_name_": "offset"
        },
        "limit": {
         "default": 0,
         "title": "limit",
         "type": "integer",
         "_name_": "limit"
        },
        "force_sql_filters": {
         "default": false,
         "title": "force_sql_filters",
         "type": "boolean",
         "_name_": "force_sql_filters"
        }
       },
       "title": "options",
       "type": "object",
       "default": {},
       "_name_": "options",
       "_attrs_order_": [
        "relationships",
        "extend",
        "extend_context",
        "prefix",
        "extra",
        "order_by",
        "select",
        "count",
        "get",
        "offset",
        "limit",
        "force_sql_filters"
       ]
      },
      "iscsi_auth_get_instance": {
       "type": "object",
       "properties": {
        "id": {
         "$ref": "#/components/schemas/iscsi_auth_get_instance_0"
        },
        "options": {
         "$ref": "#/components/schemas/iscsi_auth_get_instance_1"
        }
       }
      },
      "return_schema_of_iscsi_auth_get_instance": {
       "additionalProperties": false,
       "properties": {
        "id": {
         "title": "id",
         "type": "integer",
         "_name_": "id"
        },
        "tag": {
         "title": "tag",
         "type": "integer",
         "_name_": "tag"
        },
        "user": {
         "title": "user",
         "type": "string",
         "_name_": "user"
        },
        "secret": {
         "title": "secret",
         "type": "string",
         "_name_": "secret"
        },
        "peeruser": {
         "default": "",
         "title": "peeruser",
         "type": "string",
         "_name_": "peeruser"
        },
        "peersecret": {
         "default": "",
         "title": "peersecret",
         "type": "string",
         "_name_": "peersecret"
        },
        "discovery_auth": {
         "default": "NONE",
         "enum": [
          "NONE",
          "CHAP",
          "CHAP_MUTUAL"
         ],
         "title": "discovery_auth",
         "type": "string",
         "_name_": "discovery_auth"
        }
       },
       "required": [
        "id",
        "tag",
        "user",
        "secret"
       ],
       "title": "result",
       "type": "object",
       "_name_": "result",
       "_attrs_order_": [
        "id",
        "tag",
        "user",
        "secret",
        "peeruser",
        "peersecret",
        "discovery_auth"
       ]
      },
      "return_schema_of_iscsi_extent_query": {
       "anyOf": [
        {
         "items": [
          {
           "additionalProperties": false,
           "properties": {
            "id": {
             "title": "id",
             "type": "integer",
             "_name_": "id",
             "_required_": false
            },
            "name": {
             "maxLength": 64,
             "minLength": 1,
             "title": "name",
             "type": "string",
             "_name_": "name",
             "_required_": false
            },
            "type": {
             "enum": [
              "DISK",
              "FILE"
             ],
             "title": "type",
             "type": "string",
             "_name_": "type",
             "_required_": false
            },
            "disk": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "null"
              }
             ],
             "title": "disk",
             "_name_": "disk",
             "_required_": false
            },
            "serial": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "null"
              }
             ],
             "title": "serial",
             "_name_": "serial",
             "_required_": false
            },
            "path": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "null"
              }
             ],
             "title": "path",
             "_name_": "path",
             "_required_": false
            },
            "filesize": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              }
             ],
             "title": "filesize",
             "_name_": "filesize",
             "_required_": false
            },
            "blocksize": {
             "enum": [
              512,
              1024,
              2048,
              4096
             ],
             "title": "blocksize",
             "type": "integer",
             "_name_": "blocksize",
             "_required_": false
            },
            "pblocksize": {
             "title": "pblocksize",
             "type": "boolean",
             "_name_": "pblocksize",
             "_required_": false
            },
            "avail_threshold": {
             "anyOf": [
              {
               "maximum": 99,
               "minimum": 1,
               "type": "integer"
              },
              {
               "type": "null"
              }
             ],
             "title": "avail_threshold",
             "_name_": "avail_threshold",
             "_required_": false
            },
            "comment": {
             "title": "comment",
             "type": "string",
             "_name_": "comment",
             "_required_": false
            },
            "naa": {
             "maxLength": 34,
             "title": "naa",
             "type": "string",
             "_name_": "naa",
             "_required_": false
            },
            "insecure_tpc": {
             "title": "insecure_tpc",
             "type": "boolean",
             "_name_": "insecure_tpc",
             "_required_": false
            },
            "xen": {
             "title": "xen",
             "type": "boolean",
             "_name_": "xen",
             "_required_": false
            },
            "rpm": {
             "enum": [
              "UNKNOWN",
              "SSD",
              "5400",
              "7200",
              "10000",
              "15000"
             ],
             "title": "rpm",
             "type": "string",
             "_name_": "rpm",
             "_required_": false
            },
            "ro": {
             "title": "ro",
             "type": "boolean",
             "_name_": "ro",
             "_required_": false
            },
            "enabled": {
             "title": "enabled",
             "type": "boolean",
             "_name_": "enabled",
             "_required_": false
            },
            "vendor": {
             "title": "vendor",
             "type": "string",
             "_name_": "vendor",
             "_required_": false
            },
            "locked": {
             "anyOf": [
              {
               "type": "boolean"
              },
              {
               "type": "null"
              }
             ],
             "title": "locked",
             "_name_": "locked",
             "_required_": false
            }
           },
           "title": "IscsiExtentQueryResultItem",
           "type": "object",
           "_attrs_order_": [
            "id",
            "name",
            "type",
            "disk",
            "serial",
            "path",
            "filesize",
            "blocksize",
            "pblocksize",
            "avail_threshold",
            "comment",
            "naa",
            "insecure_tpc",
            "xen",
            "rpm",
            "ro",
            "enabled",
            "vendor",
            "locked"
           ]
          }
         ],
         "type": "array"
        },
        {
         "additionalProperties": false,
         "properties": {
          "id": {
           "title": "id",
           "type": "integer",
           "_name_": "id",
           "_required_": false
          },
          "name": {
           "maxLength": 64,
           "minLength": 1,
           "title": "name",
           "type": "string",
           "_name_": "name",
           "_required_": false
          },
          "type": {
           "enum": [
            "DISK",
            "FILE"
           ],
           "title": "type",
           "type": "string",
           "_name_": "type",
           "_required_": false
          },
          "disk": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "null"
            }
           ],
           "title": "disk",
           "_name_": "disk",
           "_required_": false
          },
          "serial": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "null"
            }
           ],
           "title": "serial",
           "_name_": "serial",
           "_required_": false
          },
          "path": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "null"
            }
           ],
           "title": "path",
           "_name_": "path",
           "_required_": false
          },
          "filesize": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            }
           ],
           "title": "filesize",
           "_name_": "filesize",
           "_required_": false
          },
          "blocksize": {
           "enum": [
            512,
            1024,
            2048,
            4096
           ],
           "title": "blocksize",
           "type": "integer",
           "_name_": "blocksize",
           "_required_": false
          },
          "pblocksize": {
           "title": "pblocksize",
           "type": "boolean",
           "_name_": "pblocksize",
           "_required_": false
          },
          "avail_threshold": {
           "anyOf": [
            {
             "maximum": 99,
             "minimum": 1,
             "type": "integer"
            },
            {
             "type": "null"
            }
           ],
           "title": "avail_threshold",
           "_name_": "avail_threshold",
           "_required_": false
          },
          "comment": {
           "title": "comment",
           "type": "string",
           "_name_": "comment",
           "_required_": false
          },
          "naa": {
           "maxLength": 34,
           "title": "naa",
           "type": "string",
           "_name_": "naa",
           "_required_": false
          },
          "insecure_tpc": {
           "title": "insecure_tpc",
           "type": "boolean",
           "_name_": "insecure_tpc",
           "_required_": false
          },
          "xen": {
           "title": "xen",
           "type": "boolean",
           "_name_": "xen",
           "_required_": false
          },
          "rpm": {
           "enum": [
            "UNKNOWN",
            "SSD",
            "5400",
            "7200",
            "10000",
            "15000"
           ],
           "title": "rpm",
           "type": "string",
           "_name_": "rpm",
           "_required_": false
          },
          "ro": {
           "title": "ro",
           "type": "boolean",
           "_name_": "ro",
           "_required_": false
          },
          "enabled": {
           "title": "enabled",
           "type": "boolean",
           "_name_": "enabled",
           "_required_": false
          },
          "vendor": {
           "title": "vendor",
           "type": "string",
           "_name_": "vendor",
           "_required_": false
          },
          "locked": {
           "anyOf": [
            {
             "type": "boolean"
            },
            {
             "type": "null"
            }
           ],
           "title": "locked",
           "_name_": "locked",
           "_required_": false
          }
         },
         "title": "IscsiExtentQueryResultItem",
         "type": "object",
         "_attrs_order_": [
          "id",
          "name",
          "type",
          "disk",
          "serial",
          "path",
          "filesize",
          "blocksize",
          "pblocksize",
          "avail_threshold",
          "comment",
          "naa",
          "insecure_tpc",
          "xen",
          "rpm",
          "ro",
          "enabled",
          "vendor",
          "locked"
         ]
        },
        {
         "type": "integer"
        }
       ],
       "title": "result",
       "_name_": "result"
      },
      "iscsi_extent_create": {
       "additionalProperties": false,
       "properties": {
        "name": {
         "maxLength": 64,
         "minLength": 1,
         "title": "name",
         "type": "string",
         "_name_": "name"
        },
        "type": {
         "default": "DISK",
         "enum": [
          "DISK",
          "FILE"
         ],
         "title": "type",
         "type": "string",
         "_name_": "type"
        },
        "disk": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "disk",
         "_name_": "disk"
        },
        "serial": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "serial",
         "_name_": "serial"
        },
        "path": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "path",
         "_name_": "path"
        },
        "filesize": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "integer"
          }
         ],
         "default": "0",
         "title": "filesize",
         "_name_": "filesize"
        },
        "blocksize": {
         "default": 512,
         "enum": [
          512,
          1024,
          2048,
          4096
         ],
         "title": "blocksize",
         "type": "integer",
         "_name_": "blocksize"
        },
        "pblocksize": {
         "default": false,
         "title": "pblocksize",
         "type": "boolean",
         "_name_": "pblocksize"
        },
        "avail_threshold": {
         "anyOf": [
          {
           "maximum": 99,
           "minimum": 1,
           "type": "integer"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "avail_threshold",
         "_name_": "avail_threshold"
        },
        "comment": {
         "default": "",
         "title": "comment",
         "type": "string",
         "_name_": "comment"
        },
        "insecure_tpc": {
         "default": true,
         "title": "insecure_tpc",
         "type": "boolean",
         "_name_": "insecure_tpc"
        },
        "xen": {
         "default": false,
         "title": "xen",
         "type": "boolean",
         "_name_": "xen"
        },
        "rpm": {
         "default": "SSD",
         "enum": [
          "UNKNOWN",
          "SSD",
          "5400",
          "7200",
          "10000",
          "15000"
         ],
         "title": "rpm",
         "type": "string",
         "_name_": "rpm"
        },
        "ro": {
         "default": false,
         "title": "ro",
         "type": "boolean",
         "_name_": "ro"
        },
        "enabled": {
         "default": true,
         "title": "enabled",
         "type": "boolean",
         "_name_": "enabled"
        }
       },
       "required": [
        "name"
       ],
       "title": "iscsi_extent_create",
       "type": "object",
       "_name_": "iscsi_extent_create",
       "_attrs_order_": [
        "name",
        "type",
        "disk",
        "serial",
        "path",
        "filesize",
        "blocksize",
        "pblocksize",
        "avail_threshold",
        "comment",
        "insecure_tpc",
        "xen",
        "rpm",
        "ro",
        "enabled"
       ]
      },
      "return_schema_of_iscsi_extent_create": {
       "additionalProperties": false,
       "properties": {
        "id": {
         "title": "id",
         "type": "integer",
         "_name_": "id"
        },
        "name": {
         "maxLength": 64,
         "minLength": 1,
         "title": "name",
         "type": "string",
         "_name_": "name"
        },
        "type": {
         "default": "DISK",
         "enum": [
          "DISK",
          "FILE"
         ],
         "title": "type",
         "type": "string",
         "_name_": "type"
        },
        "disk": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "disk",
         "_name_": "disk"
        },
        "serial": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "serial",
         "_name_": "serial"
        },
        "path": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "path",
         "_name_": "path"
        },
        "filesize": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "integer"
          }
         ],
         "default": "0",
         "title": "filesize",
         "_name_": "filesize"
        },
        "blocksize": {
         "default": 512,
         "enum": [
          512,
          1024,
          2048,
          4096
         ],
         "title": "blocksize",
         "type": "integer",
         "_name_": "blocksize"
        },
        "pblocksize": {
         "default": false,
         "title": "pblocksize",
         "type": "boolean",
         "_name_": "pblocksize"
        },
        "avail_threshold": {
         "anyOf": [
          {
           "maximum": 99,
           "minimum": 1,
           "type": "integer"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "avail_threshold",
         "_name_": "avail_threshold"
        },
        "comment": {
         "default": "",
         "title": "comment",
         "type": "string",
         "_name_": "comment"
        },
        "naa": {
         "maxLength": 34,
         "title": "naa",
         "type": "string",
         "_name_": "naa"
        },
        "insecure_tpc": {
         "default": true,
         "title": "insecure_tpc",
         "type": "boolean",
         "_name_": "insecure_tpc"
        },
        "xen": {
         "default": false,
         "title": "xen",
         "type": "boolean",
         "_name_": "xen"
        },
        "rpm": {
         "default": "SSD",
         "enum": [
          "UNKNOWN",
          "SSD",
          "5400",
          "7200",
          "10000",
          "15000"
         ],
         "title": "rpm",
         "type": "string",
         "_name_": "rpm"
        },
        "ro": {
         "default": false,
         "title": "ro",
         "type": "boolean",
         "_name_": "ro"
        },
        "enabled": {
         "default": true,
         "title": "enabled",
         "type": "boolean",
         "_name_": "enabled"
        },
        "vendor": {
         "title": "vendor",
         "type": "string",
         "_name_": "vendor"
        },
        "locked": {
         "anyOf": [
          {
           "type": "boolean"
          },
          {
           "type": "null"
          }
         ],
         "title": "locked",
         "_name_": "locked"
        }
       },
       "required": [
        "id",
        "name",
        "naa",
        "vendor",
        "locked"
       ],
       "title": "result",
       "type": "object",
       "_name_": "result",
       "_attrs_order_": [
        "id",
        "name",
        "type",
        "disk",
        "serial",
        "path",
        "filesize",
        "blocksize",
        "pblocksize",
        "avail_threshold",
        "comment",
        "naa",
        "insecure_tpc",
        "xen",
        "rpm",
        "ro",
        "enabled",
        "vendor",
        "locked"
       ]
      },
      "iscsi_extent_delete_1": {
       "default": false,
       "title": "remove",
       "type": "boolean",
       "_name_": "remove"
      },
      "iscsi_extent_delete_2": {
       "default": false,
       "title": "force",
       "type": "boolean",
       "_name_": "force"
      },
      "iscsi_extent_delete": {
       "type": "object",
       "properties": {
        "remove": {
         "$ref": "#/components/schemas/iscsi_extent_delete_1"
        },
        "force": {
         "$ref": "#/components/schemas/iscsi_extent_delete_2"
        }
       }
      },
      "return_schema_of_iscsi_extent_delete": {
       "const": true,
       "enum": [
        true
       ],
       "title": "result",
       "type": "boolean",
       "_name_": "result"
      },
      "iscsi_extent_update": {
       "additionalProperties": false,
       "properties": {
        "name": {
         "maxLength": 64,
         "minLength": 1,
         "title": "name",
         "type": "string",
         "_name_": "name"
        },
        "type": {
         "enum": [
          "DISK",
          "FILE"
         ],
         "title": "type",
         "type": "string",
         "_name_": "type"
        },
        "disk": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "title": "disk",
         "_name_": "disk"
        },
        "serial": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "title": "serial",
         "_name_": "serial"
        },
        "path": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "title": "path",
         "_name_": "path"
        },
        "filesize": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "integer"
          }
         ],
         "title": "filesize",
         "_name_": "filesize"
        },
        "blocksize": {
         "enum": [
          512,
          1024,
          2048,
          4096
         ],
         "title": "blocksize",
         "type": "integer",
         "_name_": "blocksize"
        },
        "pblocksize": {
         "title": "pblocksize",
         "type": "boolean",
         "_name_": "pblocksize"
        },
        "avail_threshold": {
         "anyOf": [
          {
           "maximum": 99,
           "minimum": 1,
           "type": "integer"
          },
          {
           "type": "null"
          }
         ],
         "title": "avail_threshold",
         "_name_": "avail_threshold"
        },
        "comment": {
         "title": "comment",
         "type": "string",
         "_name_": "comment"
        },
        "insecure_tpc": {
         "title": "insecure_tpc",
         "type": "boolean",
         "_name_": "insecure_tpc"
        },
        "xen": {
         "title": "xen",
         "type": "boolean",
         "_name_": "xen"
        },
        "rpm": {
         "enum": [
          "UNKNOWN",
          "SSD",
          "5400",
          "7200",
          "10000",
          "15000"
         ],
         "title": "rpm",
         "type": "string",
         "_name_": "rpm"
        },
        "ro": {
         "title": "ro",
         "type": "boolean",
         "_name_": "ro"
        },
        "enabled": {
         "title": "enabled",
         "type": "boolean",
         "_name_": "enabled"
        }
       },
       "title": "iscsi_extent_update",
       "type": "object",
       "_name_": "iscsi_extent_update",
       "_attrs_order_": [
        "name",
        "type",
        "disk",
        "serial",
        "path",
        "filesize",
        "blocksize",
        "pblocksize",
        "avail_threshold",
        "comment",
        "insecure_tpc",
        "xen",
        "rpm",
        "ro",
        "enabled"
       ]
      },
      "return_schema_of_iscsi_extent_update": {
       "additionalProperties": false,
       "properties": {
        "id": {
         "title": "id",
         "type": "integer",
         "_name_": "id"
        },
        "name": {
         "maxLength": 64,
         "minLength": 1,
         "title": "name",
         "type": "string",
         "_name_": "name"
        },
        "type": {
         "default": "DISK",
         "enum": [
          "DISK",
          "FILE"
         ],
         "title": "type",
         "type": "string",
         "_name_": "type"
        },
        "disk": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "disk",
         "_name_": "disk"
        },
        "serial": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "serial",
         "_name_": "serial"
        },
        "path": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "path",
         "_name_": "path"
        },
        "filesize": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "integer"
          }
         ],
         "default": "0",
         "title": "filesize",
         "_name_": "filesize"
        },
        "blocksize": {
         "default": 512,
         "enum": [
          512,
          1024,
          2048,
          4096
         ],
         "title": "blocksize",
         "type": "integer",
         "_name_": "blocksize"
        },
        "pblocksize": {
         "default": false,
         "title": "pblocksize",
         "type": "boolean",
         "_name_": "pblocksize"
        },
        "avail_threshold": {
         "anyOf": [
          {
           "maximum": 99,
           "minimum": 1,
           "type": "integer"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "avail_threshold",
         "_name_": "avail_threshold"
        },
        "comment": {
         "default": "",
         "title": "comment",
         "type": "string",
         "_name_": "comment"
        },
        "naa": {
         "maxLength": 34,
         "title": "naa",
         "type": "string",
         "_name_": "naa"
        },
        "insecure_tpc": {
         "default": true,
         "title": "insecure_tpc",
         "type": "boolean",
         "_name_": "insecure_tpc"
        },
        "xen": {
         "default": false,
         "title": "xen",
         "type": "boolean",
         "_name_": "xen"
        },
        "rpm": {
         "default": "SSD",
         "enum": [
          "UNKNOWN",
          "SSD",
          "5400",
          "7200",
          "10000",
          "15000"
         ],
         "title": "rpm",
         "type": "string",
         "_name_": "rpm"
        },
        "ro": {
         "default": false,
         "title": "ro",
         "type": "boolean",
         "_name_": "ro"
        },
        "enabled": {
         "default": true,
         "title": "enabled",
         "type": "boolean",
         "_name_": "enabled"
        },
        "vendor": {
         "title": "vendor",
         "type": "string",
         "_name_": "vendor"
        },
        "locked": {
         "anyOf": [
          {
           "type": "boolean"
          },
          {
           "type": "null"
          }
         ],
         "title": "locked",
         "_name_": "locked"
        }
       },
       "required": [
        "id",
        "name",
        "naa",
        "vendor",
        "locked"
       ],
       "title": "result",
       "type": "object",
       "_name_": "result",
       "_attrs_order_": [
        "id",
        "name",
        "type",
        "disk",
        "serial",
        "path",
        "filesize",
        "blocksize",
        "pblocksize",
        "avail_threshold",
        "comment",
        "naa",
        "insecure_tpc",
        "xen",
        "rpm",
        "ro",
        "enabled",
        "vendor",
        "locked"
       ]
      },
      "return_schema_of_iscsi_extent_disk_choices": {
       "additionalProperties": {
        "type": "string"
       },
       "title": "result",
       "type": "object",
       "_name_": "result"
      },
      "iscsi_extent_get_instance_0": {
       "title": "id",
       "type": "integer",
       "_name_": "id"
      },
      "iscsi_extent_get_instance_1": {
       "additionalProperties": false,
       "properties": {
        "relationships": {
         "default": true,
         "title": "relationships",
         "type": "boolean",
         "_name_": "relationships"
        },
        "extend": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "extend",
         "_name_": "extend"
        },
        "extend_context": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "extend_context",
         "_name_": "extend_context"
        },
        "prefix": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "prefix",
         "_name_": "prefix"
        },
        "extra": {
         "default": {},
         "title": "extra",
         "type": "object",
         "_name_": "extra"
        },
        "order_by": {
         "default": [],
         "items": {
          "type": "string"
         },
         "title": "order_by",
         "type": "array",
         "_name_": "order_by"
        },
        "select": {
         "default": [],
         "items": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "items": [
             {}
            ],
            "type": "array"
           }
          ]
         },
         "title": "select",
         "type": "array",
         "_name_": "select"
        },
        "count": {
         "default": false,
         "title": "count",
         "type": "boolean",
         "_name_": "count"
        },
        "get": {
         "default": false,
         "title": "get",
         "type": "boolean",
         "_name_": "get"
        },
        "offset": {
         "default": 0,
         "title": "offset",
         "type": "integer",
         "_name_": "offset"
        },
        "limit": {
         "default": 0,
         "title": "limit",
         "type": "integer",
         "_name_": "limit"
        },
        "force_sql_filters": {
         "default": false,
         "title": "force_sql_filters",
         "type": "boolean",
         "_name_": "force_sql_filters"
        }
       },
       "title": "options",
       "type": "object",
       "default": {},
       "_name_": "options",
       "_attrs_order_": [
        "relationships",
        "extend",
        "extend_context",
        "prefix",
        "extra",
        "order_by",
        "select",
        "count",
        "get",
        "offset",
        "limit",
        "force_sql_filters"
       ]
      },
      "iscsi_extent_get_instance": {
       "type": "object",
       "properties": {
        "id": {
         "$ref": "#/components/schemas/iscsi_extent_get_instance_0"
        },
        "options": {
         "$ref": "#/components/schemas/iscsi_extent_get_instance_1"
        }
       }
      },
      "return_schema_of_iscsi_extent_get_instance": {
       "additionalProperties": false,
       "properties": {
        "id": {
         "title": "id",
         "type": "integer",
         "_name_": "id"
        },
        "name": {
         "maxLength": 64,
         "minLength": 1,
         "title": "name",
         "type": "string",
         "_name_": "name"
        },
        "type": {
         "default": "DISK",
         "enum": [
          "DISK",
          "FILE"
         ],
         "title": "type",
         "type": "string",
         "_name_": "type"
        },
        "disk": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "disk",
         "_name_": "disk"
        },
        "serial": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "serial",
         "_name_": "serial"
        },
        "path": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "path",
         "_name_": "path"
        },
        "filesize": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "integer"
          }
         ],
         "default": "0",
         "title": "filesize",
         "_name_": "filesize"
        },
        "blocksize": {
         "default": 512,
         "enum": [
          512,
          1024,
          2048,
          4096
         ],
         "title": "blocksize",
         "type": "integer",
         "_name_": "blocksize"
        },
        "pblocksize": {
         "default": false,
         "title": "pblocksize",
         "type": "boolean",
         "_name_": "pblocksize"
        },
        "avail_threshold": {
         "anyOf": [
          {
           "maximum": 99,
           "minimum": 1,
           "type": "integer"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "avail_threshold",
         "_name_": "avail_threshold"
        },
        "comment": {
         "default": "",
         "title": "comment",
         "type": "string",
         "_name_": "comment"
        },
        "naa": {
         "maxLength": 34,
         "title": "naa",
         "type": "string",
         "_name_": "naa"
        },
        "insecure_tpc": {
         "default": true,
         "title": "insecure_tpc",
         "type": "boolean",
         "_name_": "insecure_tpc"
        },
        "xen": {
         "default": false,
         "title": "xen",
         "type": "boolean",
         "_name_": "xen"
        },
        "rpm": {
         "default": "SSD",
         "enum": [
          "UNKNOWN",
          "SSD",
          "5400",
          "7200",
          "10000",
          "15000"
         ],
         "title": "rpm",
         "type": "string",
         "_name_": "rpm"
        },
        "ro": {
         "default": false,
         "title": "ro",
         "type": "boolean",
         "_name_": "ro"
        },
        "enabled": {
         "default": true,
         "title": "enabled",
         "type": "boolean",
         "_name_": "enabled"
        },
        "vendor": {
         "title": "vendor",
         "type": "string",
         "_name_": "vendor"
        },
        "locked": {
         "anyOf": [
          {
           "type": "boolean"
          },
          {
           "type": "null"
          }
         ],
         "title": "locked",
         "_name_": "locked"
        }
       },
       "required": [
        "id",
        "name",
        "naa",
        "vendor",
        "locked"
       ],
       "title": "result",
       "type": "object",
       "_name_": "result",
       "_attrs_order_": [
        "id",
        "name",
        "type",
        "disk",
        "serial",
        "path",
        "filesize",
        "blocksize",
        "pblocksize",
        "avail_threshold",
        "comment",
        "naa",
        "insecure_tpc",
        "xen",
        "rpm",
        "ro",
        "enabled",
        "vendor",
        "locked"
       ]
      },
      "return_schema_of_iscsi_global_config": {
       "additionalProperties": false,
       "properties": {
        "id": {
         "title": "id",
         "type": "integer",
         "_name_": "id"
        },
        "basename": {
         "title": "basename",
         "type": "string",
         "_name_": "basename"
        },
        "isns_servers": {
         "items": {
          "type": "string"
         },
         "title": "isns_servers",
         "type": "array",
         "_name_": "isns_servers"
        },
        "listen_port": {
         "default": 3260,
         "maximum": 65535,
         "minimum": 1025,
         "title": "listen_port",
         "type": "integer",
         "_name_": "listen_port"
        },
        "pool_avail_threshold": {
         "anyOf": [
          {
           "maximum": 99,
           "minimum": 1,
           "type": "integer"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "pool_avail_threshold",
         "_name_": "pool_avail_threshold"
        },
        "alua": {
         "title": "alua",
         "type": "boolean",
         "_name_": "alua"
        },
        "iser": {
         "title": "iser",
         "type": "boolean",
         "_name_": "iser"
        }
       },
       "required": [
        "id",
        "basename",
        "isns_servers",
        "alua",
        "iser"
       ],
       "title": "result",
       "type": "object",
       "_name_": "result",
       "_attrs_order_": [
        "id",
        "basename",
        "isns_servers",
        "listen_port",
        "pool_avail_threshold",
        "alua",
        "iser"
       ]
      },
      "iscsi_global_update": {
       "additionalProperties": false,
       "properties": {
        "basename": {
         "title": "basename",
         "type": "string",
         "_name_": "basename"
        },
        "isns_servers": {
         "items": {
          "type": "string"
         },
         "title": "isns_servers",
         "type": "array",
         "_name_": "isns_servers"
        },
        "listen_port": {
         "maximum": 65535,
         "minimum": 1025,
         "title": "listen_port",
         "type": "integer",
         "_name_": "listen_port"
        },
        "pool_avail_threshold": {
         "anyOf": [
          {
           "maximum": 99,
           "minimum": 1,
           "type": "integer"
          },
          {
           "type": "null"
          }
         ],
         "title": "pool_avail_threshold",
         "_name_": "pool_avail_threshold"
        },
        "alua": {
         "title": "alua",
         "type": "boolean",
         "_name_": "alua"
        },
        "iser": {
         "title": "iser",
         "type": "boolean",
         "_name_": "iser"
        }
       },
       "title": "iscsi_update",
       "type": "object",
       "_name_": "iscsi_update",
       "_attrs_order_": [
        "basename",
        "isns_servers",
        "listen_port",
        "pool_avail_threshold",
        "alua",
        "iser"
       ]
      },
      "return_schema_of_iscsi_global_update": {
       "additionalProperties": false,
       "properties": {
        "id": {
         "title": "id",
         "type": "integer",
         "_name_": "id"
        },
        "basename": {
         "title": "basename",
         "type": "string",
         "_name_": "basename"
        },
        "isns_servers": {
         "items": {
          "type": "string"
         },
         "title": "isns_servers",
         "type": "array",
         "_name_": "isns_servers"
        },
        "listen_port": {
         "default": 3260,
         "maximum": 65535,
         "minimum": 1025,
         "title": "listen_port",
         "type": "integer",
         "_name_": "listen_port"
        },
        "pool_avail_threshold": {
         "anyOf": [
          {
           "maximum": 99,
           "minimum": 1,
           "type": "integer"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "pool_avail_threshold",
         "_name_": "pool_avail_threshold"
        },
        "alua": {
         "title": "alua",
         "type": "boolean",
         "_name_": "alua"
        },
        "iser": {
         "title": "iser",
         "type": "boolean",
         "_name_": "iser"
        }
       },
       "required": [
        "id",
        "basename",
        "isns_servers",
        "alua",
        "iser"
       ],
       "title": "result",
       "type": "object",
       "_name_": "result",
       "_attrs_order_": [
        "id",
        "basename",
        "isns_servers",
        "listen_port",
        "pool_avail_threshold",
        "alua",
        "iser"
       ]
      },
      "return_schema_of_iscsi_global_alua_enabled": {
       "title": "result",
       "type": "boolean",
       "_name_": "result"
      },
      "return_schema_of_iscsi_global_client_count": {
       "title": "result",
       "type": "integer",
       "_name_": "result"
      },
      "return_schema_of_iscsi_global_iser_enabled": {
       "title": "result",
       "type": "boolean",
       "_name_": "result"
      },
      "iscsi_global_sessions_0": {
       "default": [],
       "items": {},
       "title": "query_filters",
       "type": "array",
       "_name_": "query_filters"
      },
      "iscsi_global_sessions_1": {
       "additionalProperties": false,
       "properties": {
        "relationships": {
         "default": true,
         "title": "relationships",
         "type": "boolean",
         "_name_": "relationships"
        },
        "extend": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "extend",
         "_name_": "extend"
        },
        "extend_context": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "extend_context",
         "_name_": "extend_context"
        },
        "prefix": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "prefix",
         "_name_": "prefix"
        },
        "extra": {
         "default": {},
         "title": "extra",
         "type": "object",
         "_name_": "extra"
        },
        "order_by": {
         "default": [],
         "items": {
          "type": "string"
         },
         "title": "order_by",
         "type": "array",
         "_name_": "order_by"
        },
        "select": {
         "default": [],
         "items": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "items": [
             {}
            ],
            "type": "array"
           }
          ]
         },
         "title": "select",
         "type": "array",
         "_name_": "select"
        },
        "count": {
         "default": false,
         "title": "count",
         "type": "boolean",
         "_name_": "count"
        },
        "get": {
         "default": false,
         "title": "get",
         "type": "boolean",
         "_name_": "get"
        },
        "offset": {
         "default": 0,
         "title": "offset",
         "type": "integer",
         "_name_": "offset"
        },
        "limit": {
         "default": 0,
         "title": "limit",
         "type": "integer",
         "_name_": "limit"
        },
        "force_sql_filters": {
         "default": false,
         "title": "force_sql_filters",
         "type": "boolean",
         "_name_": "force_sql_filters"
        }
       },
       "title": "query_options",
       "type": "object",
       "default": {
        "relationships": true,
        "extend": null,
        "extend_context": null,
        "prefix": null,
        "extra": {},
        "order_by": [],
        "select": [],
        "count": false,
        "get": false,
        "offset": 0,
        "limit": 0,
        "force_sql_filters": false
       },
       "_name_": "query_options",
       "_attrs_order_": [
        "relationships",
        "extend",
        "extend_context",
        "prefix",
        "extra",
        "order_by",
        "select",
        "count",
        "get",
        "offset",
        "limit",
        "force_sql_filters"
       ]
      },
      "iscsi_global_sessions": {
       "type": "object",
       "properties": {
        "query_filters": {
         "$ref": "#/components/schemas/iscsi_global_sessions_0"
        },
        "query_options": {
         "$ref": "#/components/schemas/iscsi_global_sessions_1"
        }
       }
      },
      "return_schema_of_iscsi_global_sessions": {
       "anyOf": [
        {
         "items": [
          {
           "additionalProperties": false,
           "properties": {
            "initiator": {
             "title": "initiator",
             "type": "string",
             "_name_": "initiator",
             "_required_": false
            },
            "initiator_addr": {
             "title": "initiator_addr",
             "type": "string",
             "_name_": "initiator_addr",
             "_required_": false
            },
            "initiator_alias": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "null"
              }
             ],
             "title": "initiator_alias",
             "_name_": "initiator_alias",
             "_required_": false
            },
            "target": {
             "title": "target",
             "type": "string",
             "_name_": "target",
             "_required_": false
            },
            "target_alias": {
             "title": "target_alias",
             "type": "string",
             "_name_": "target_alias",
             "_required_": false
            },
            "header_digest": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "null"
              }
             ],
             "title": "header_digest",
             "_name_": "header_digest",
             "_required_": false
            },
            "data_digest": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "null"
              }
             ],
             "title": "data_digest",
             "_name_": "data_digest",
             "_required_": false
            },
            "max_data_segment_length": {
             "anyOf": [
              {
               "type": "integer"
              },
              {
               "type": "null"
              }
             ],
             "title": "max_data_segment_length",
             "_name_": "max_data_segment_length",
             "_required_": false
            },
            "max_receive_data_segment_length": {
             "anyOf": [
              {
               "type": "integer"
              },
              {
               "type": "null"
              }
             ],
             "title": "max_receive_data_segment_length",
             "_name_": "max_receive_data_segment_length",
             "_required_": false
            },
            "max_xmit_data_segment_length": {
             "anyOf": [
              {
               "type": "integer"
              },
              {
               "type": "null"
              }
             ],
             "title": "max_xmit_data_segment_length",
             "_name_": "max_xmit_data_segment_length",
             "_required_": false
            },
            "max_burst_length": {
             "anyOf": [
              {
               "type": "integer"
              },
              {
               "type": "null"
              }
             ],
             "title": "max_burst_length",
             "_name_": "max_burst_length",
             "_required_": false
            },
            "first_burst_length": {
             "anyOf": [
              {
               "type": "integer"
              },
              {
               "type": "null"
              }
             ],
             "title": "first_burst_length",
             "_name_": "first_burst_length",
             "_required_": false
            },
            "immediate_data": {
             "title": "immediate_data",
             "type": "boolean",
             "_name_": "immediate_data",
             "_required_": false
            },
            "iser": {
             "title": "iser",
             "type": "boolean",
             "_name_": "iser",
             "_required_": false
            },
            "offload": {
             "title": "offload",
             "type": "boolean",
             "_name_": "offload",
             "_required_": false
            }
           },
           "title": "IscsiSessionQueryResultItem",
           "type": "object",
           "_attrs_order_": [
            "initiator",
            "initiator_addr",
            "initiator_alias",
            "target",
            "target_alias",
            "header_digest",
            "data_digest",
            "max_data_segment_length",
            "max_receive_data_segment_length",
            "max_xmit_data_segment_length",
            "max_burst_length",
            "first_burst_length",
            "immediate_data",
            "iser",
            "offload"
           ]
          }
         ],
         "type": "array"
        },
        {
         "additionalProperties": false,
         "properties": {
          "initiator": {
           "title": "initiator",
           "type": "string",
           "_name_": "initiator",
           "_required_": false
          },
          "initiator_addr": {
           "title": "initiator_addr",
           "type": "string",
           "_name_": "initiator_addr",
           "_required_": false
          },
          "initiator_alias": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "null"
            }
           ],
           "title": "initiator_alias",
           "_name_": "initiator_alias",
           "_required_": false
          },
          "target": {
           "title": "target",
           "type": "string",
           "_name_": "target",
           "_required_": false
          },
          "target_alias": {
           "title": "target_alias",
           "type": "string",
           "_name_": "target_alias",
           "_required_": false
          },
          "header_digest": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "null"
            }
           ],
           "title": "header_digest",
           "_name_": "header_digest",
           "_required_": false
          },
          "data_digest": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "null"
            }
           ],
           "title": "data_digest",
           "_name_": "data_digest",
           "_required_": false
          },
          "max_data_segment_length": {
           "anyOf": [
            {
             "type": "integer"
            },
            {
             "type": "null"
            }
           ],
           "title": "max_data_segment_length",
           "_name_": "max_data_segment_length",
           "_required_": false
          },
          "max_receive_data_segment_length": {
           "anyOf": [
            {
             "type": "integer"
            },
            {
             "type": "null"
            }
           ],
           "title": "max_receive_data_segment_length",
           "_name_": "max_receive_data_segment_length",
           "_required_": false
          },
          "max_xmit_data_segment_length": {
           "anyOf": [
            {
             "type": "integer"
            },
            {
             "type": "null"
            }
           ],
           "title": "max_xmit_data_segment_length",
           "_name_": "max_xmit_data_segment_length",
           "_required_": false
          },
          "max_burst_length": {
           "anyOf": [
            {
             "type": "integer"
            },
            {
             "type": "null"
            }
           ],
           "title": "max_burst_length",
           "_name_": "max_burst_length",
           "_required_": false
          },
          "first_burst_length": {
           "anyOf": [
            {
             "type": "integer"
            },
            {
             "type": "null"
            }
           ],
           "title": "first_burst_length",
           "_name_": "first_burst_length",
           "_required_": false
          },
          "immediate_data": {
           "title": "immediate_data",
           "type": "boolean",
           "_name_": "immediate_data",
           "_required_": false
          },
          "iser": {
           "title": "iser",
           "type": "boolean",
           "_name_": "iser",
           "_required_": false
          },
          "offload": {
           "title": "offload",
           "type": "boolean",
           "_name_": "offload",
           "_required_": false
          }
         },
         "title": "IscsiSessionQueryResultItem",
         "type": "object",
         "_attrs_order_": [
          "initiator",
          "initiator_addr",
          "initiator_alias",
          "target",
          "target_alias",
          "header_digest",
          "data_digest",
          "max_data_segment_length",
          "max_receive_data_segment_length",
          "max_xmit_data_segment_length",
          "max_burst_length",
          "first_burst_length",
          "immediate_data",
          "iser",
          "offload"
         ]
        },
        {
         "type": "integer"
        }
       ],
       "title": "result",
       "_name_": "result"
      },
      "return_schema_of_iscsi_initiator_query": {
       "anyOf": [
        {
         "items": [
          {
           "additionalProperties": false,
           "properties": {
            "id": {
             "title": "id",
             "type": "integer",
             "_name_": "id",
             "_required_": false
            },
            "initiators": {
             "items": [
              {
               "type": "string"
              }
             ],
             "title": "initiators",
             "type": "array",
             "_name_": "initiators",
             "_required_": false
            },
            "comment": {
             "title": "comment",
             "type": "string",
             "_name_": "comment",
             "_required_": false
            }
           },
           "title": "IscsiInitiatorQueryResultItem",
           "type": "object",
           "_attrs_order_": [
            "id",
            "initiators",
            "comment"
           ]
          }
         ],
         "type": "array"
        },
        {
         "additionalProperties": false,
         "properties": {
          "id": {
           "title": "id",
           "type": "integer",
           "_name_": "id",
           "_required_": false
          },
          "initiators": {
           "items": [
            {
             "type": "string"
            }
           ],
           "title": "initiators",
           "type": "array",
           "_name_": "initiators",
           "_required_": false
          },
          "comment": {
           "title": "comment",
           "type": "string",
           "_name_": "comment",
           "_required_": false
          }
         },
         "title": "IscsiInitiatorQueryResultItem",
         "type": "object",
         "_attrs_order_": [
          "id",
          "initiators",
          "comment"
         ]
        },
        {
         "type": "integer"
        }
       ],
       "title": "result",
       "_name_": "result"
      },
      "iscsi_initiator_create": {
       "additionalProperties": false,
       "properties": {
        "initiators": {
         "default": [],
         "items": {
          "type": "string"
         },
         "title": "initiators",
         "type": "array",
         "_name_": "initiators"
        },
        "comment": {
         "default": "",
         "title": "comment",
         "type": "string",
         "_name_": "comment"
        }
       },
       "title": "iscsi_initiator_create",
       "type": "object",
       "_name_": "iscsi_initiator_create",
       "_attrs_order_": [
        "initiators",
        "comment"
       ]
      },
      "return_schema_of_iscsi_initiator_create": {
       "additionalProperties": false,
       "properties": {
        "id": {
         "title": "id",
         "type": "integer",
         "_name_": "id"
        },
        "initiators": {
         "default": [],
         "items": {
          "type": "string"
         },
         "title": "initiators",
         "type": "array",
         "_name_": "initiators"
        },
        "comment": {
         "default": "",
         "title": "comment",
         "type": "string",
         "_name_": "comment"
        }
       },
       "required": [
        "id"
       ],
       "title": "result",
       "type": "object",
       "_name_": "result",
       "_attrs_order_": [
        "id",
        "initiators",
        "comment"
       ]
      },
      "return_schema_of_iscsi_initiator_delete": {
       "const": true,
       "enum": [
        true
       ],
       "title": "result",
       "type": "boolean",
       "_name_": "result"
      },
      "iscsi_initiator_update": {
       "additionalProperties": false,
       "properties": {
        "id": {
         "title": "id",
         "type": "integer",
         "_name_": "id"
        },
        "initiators": {
         "items": {
          "type": "string"
         },
         "title": "initiators",
         "type": "array",
         "_name_": "initiators"
        },
        "comment": {
         "title": "comment",
         "type": "string",
         "_name_": "comment"
        }
       },
       "title": "iscsi_initiator_update",
       "type": "object",
       "_name_": "iscsi_initiator_update",
       "_attrs_order_": [
        "id",
        "initiators",
        "comment"
       ]
      },
      "return_schema_of_iscsi_initiator_update": {
       "additionalProperties": false,
       "properties": {
        "id": {
         "title": "id",
         "type": "integer",
         "_name_": "id"
        },
        "initiators": {
         "default": [],
         "items": {
          "type": "string"
         },
         "title": "initiators",
         "type": "array",
         "_name_": "initiators"
        },
        "comment": {
         "default": "",
         "title": "comment",
         "type": "string",
         "_name_": "comment"
        }
       },
       "required": [
        "id"
       ],
       "title": "result",
       "type": "object",
       "_name_": "result",
       "_attrs_order_": [
        "id",
        "initiators",
        "comment"
       ]
      },
      "iscsi_initiator_get_instance_0": {
       "title": "id",
       "type": "integer",
       "_name_": "id"
      },
      "iscsi_initiator_get_instance_1": {
       "additionalProperties": false,
       "properties": {
        "relationships": {
         "default": true,
         "title": "relationships",
         "type": "boolean",
         "_name_": "relationships"
        },
        "extend": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "extend",
         "_name_": "extend"
        },
        "extend_context": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "extend_context",
         "_name_": "extend_context"
        },
        "prefix": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "prefix",
         "_name_": "prefix"
        },
        "extra": {
         "default": {},
         "title": "extra",
         "type": "object",
         "_name_": "extra"
        },
        "order_by": {
         "default": [],
         "items": {
          "type": "string"
         },
         "title": "order_by",
         "type": "array",
         "_name_": "order_by"
        },
        "select": {
         "default": [],
         "items": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "items": [
             {}
            ],
            "type": "array"
           }
          ]
         },
         "title": "select",
         "type": "array",
         "_name_": "select"
        },
        "count": {
         "default": false,
         "title": "count",
         "type": "boolean",
         "_name_": "count"
        },
        "get": {
         "default": false,
         "title": "get",
         "type": "boolean",
         "_name_": "get"
        },
        "offset": {
         "default": 0,
         "title": "offset",
         "type": "integer",
         "_name_": "offset"
        },
        "limit": {
         "default": 0,
         "title": "limit",
         "type": "integer",
         "_name_": "limit"
        },
        "force_sql_filters": {
         "default": false,
         "title": "force_sql_filters",
         "type": "boolean",
         "_name_": "force_sql_filters"
        }
       },
       "title": "options",
       "type": "object",
       "default": {},
       "_name_": "options",
       "_attrs_order_": [
        "relationships",
        "extend",
        "extend_context",
        "prefix",
        "extra",
        "order_by",
        "select",
        "count",
        "get",
        "offset",
        "limit",
        "force_sql_filters"
       ]
      },
      "iscsi_initiator_get_instance": {
       "type": "object",
       "properties": {
        "id": {
         "$ref": "#/components/schemas/iscsi_initiator_get_instance_0"
        },
        "options": {
         "$ref": "#/components/schemas/iscsi_initiator_get_instance_1"
        }
       }
      },
      "return_schema_of_iscsi_initiator_get_instance": {
       "additionalProperties": false,
       "properties": {
        "id": {
         "title": "id",
         "type": "integer",
         "_name_": "id"
        },
        "initiators": {
         "default": [],
         "items": {
          "type": "string"
         },
         "title": "initiators",
         "type": "array",
         "_name_": "initiators"
        },
        "comment": {
         "default": "",
         "title": "comment",
         "type": "string",
         "_name_": "comment"
        }
       },
       "required": [
        "id"
       ],
       "title": "result",
       "type": "object",
       "_name_": "result",
       "_attrs_order_": [
        "id",
        "initiators",
        "comment"
       ]
      },
      "return_schema_of_iscsi_portal_query": {
       "anyOf": [
        {
         "items": [
          {
           "additionalProperties": false,
           "properties": {
            "id": {
             "title": "id",
             "type": "integer",
             "_name_": "id",
             "_required_": false
            },
            "listen": {
             "items": [
              {}
             ],
             "title": "listen",
             "type": "array",
             "_name_": "listen",
             "_required_": false
            },
            "tag": {
             "title": "tag",
             "type": "integer",
             "_name_": "tag",
             "_required_": false
            },
            "comment": {
             "title": "comment",
             "type": "string",
             "_name_": "comment",
             "_required_": false
            }
           },
           "title": "IscsiPortalQueryResultItem",
           "type": "object",
           "_attrs_order_": [
            "id",
            "listen",
            "tag",
            "comment"
           ]
          }
         ],
         "type": "array"
        },
        {
         "additionalProperties": false,
         "properties": {
          "id": {
           "title": "id",
           "type": "integer",
           "_name_": "id",
           "_required_": false
          },
          "listen": {
           "items": [
            {}
           ],
           "title": "listen",
           "type": "array",
           "_name_": "listen",
           "_required_": false
          },
          "tag": {
           "title": "tag",
           "type": "integer",
           "_name_": "tag",
           "_required_": false
          },
          "comment": {
           "title": "comment",
           "type": "string",
           "_name_": "comment",
           "_required_": false
          }
         },
         "title": "IscsiPortalQueryResultItem",
         "type": "object",
         "_attrs_order_": [
          "id",
          "listen",
          "tag",
          "comment"
         ]
        },
        {
         "type": "integer"
        }
       ],
       "title": "result",
       "_name_": "result"
      },
      "iscsi_portal_create": {
       "additionalProperties": false,
       "properties": {
        "listen": {
         "items": {},
         "title": "listen",
         "type": "array",
         "_name_": "listen"
        },
        "comment": {
         "default": "",
         "title": "comment",
         "type": "string",
         "_name_": "comment"
        }
       },
       "required": [
        "listen"
       ],
       "title": "iscsi_portal_create",
       "type": "object",
       "_name_": "iscsi_portal_create",
       "_attrs_order_": [
        "listen",
        "comment"
       ]
      },
      "return_schema_of_iscsi_portal_create": {
       "additionalProperties": false,
       "properties": {
        "id": {
         "title": "id",
         "type": "integer",
         "_name_": "id"
        },
        "listen": {
         "items": {},
         "title": "listen",
         "type": "array",
         "_name_": "listen"
        },
        "tag": {
         "title": "tag",
         "type": "integer",
         "_name_": "tag"
        },
        "comment": {
         "default": "",
         "title": "comment",
         "type": "string",
         "_name_": "comment"
        }
       },
       "required": [
        "id",
        "listen",
        "tag"
       ],
       "title": "result",
       "type": "object",
       "_name_": "result",
       "_attrs_order_": [
        "id",
        "listen",
        "tag",
        "comment"
       ]
      },
      "return_schema_of_iscsi_portal_delete": {
       "const": true,
       "enum": [
        true
       ],
       "title": "result",
       "type": "boolean",
       "_name_": "result"
      },
      "iscsi_portal_update": {
       "additionalProperties": false,
       "properties": {
        "listen": {
         "items": {},
         "title": "listen",
         "type": "array",
         "_name_": "listen"
        },
        "comment": {
         "title": "comment",
         "type": "string",
         "_name_": "comment"
        }
       },
       "title": "iscsi_portal_update",
       "type": "object",
       "_name_": "iscsi_portal_update",
       "_attrs_order_": [
        "listen",
        "comment"
       ]
      },
      "return_schema_of_iscsi_portal_update": {
       "additionalProperties": false,
       "properties": {
        "id": {
         "title": "id",
         "type": "integer",
         "_name_": "id"
        },
        "listen": {
         "items": {},
         "title": "listen",
         "type": "array",
         "_name_": "listen"
        },
        "tag": {
         "title": "tag",
         "type": "integer",
         "_name_": "tag"
        },
        "comment": {
         "default": "",
         "title": "comment",
         "type": "string",
         "_name_": "comment"
        }
       },
       "required": [
        "id",
        "listen",
        "tag"
       ],
       "title": "result",
       "type": "object",
       "_name_": "result",
       "_attrs_order_": [
        "id",
        "listen",
        "tag",
        "comment"
       ]
      },
      "iscsi_portal_get_instance_0": {
       "title": "id",
       "type": "integer",
       "_name_": "id"
      },
      "iscsi_portal_get_instance_1": {
       "additionalProperties": false,
       "properties": {
        "relationships": {
         "default": true,
         "title": "relationships",
         "type": "boolean",
         "_name_": "relationships"
        },
        "extend": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "extend",
         "_name_": "extend"
        },
        "extend_context": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "extend_context",
         "_name_": "extend_context"
        },
        "prefix": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "prefix",
         "_name_": "prefix"
        },
        "extra": {
         "default": {},
         "title": "extra",
         "type": "object",
         "_name_": "extra"
        },
        "order_by": {
         "default": [],
         "items": {
          "type": "string"
         },
         "title": "order_by",
         "type": "array",
         "_name_": "order_by"
        },
        "select": {
         "default": [],
         "items": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "items": [
             {}
            ],
            "type": "array"
           }
          ]
         },
         "title": "select",
         "type": "array",
         "_name_": "select"
        },
        "count": {
         "default": false,
         "title": "count",
         "type": "boolean",
         "_name_": "count"
        },
        "get": {
         "default": false,
         "title": "get",
         "type": "boolean",
         "_name_": "get"
        },
        "offset": {
         "default": 0,
         "title": "offset",
         "type": "integer",
         "_name_": "offset"
        },
        "limit": {
         "default": 0,
         "title": "limit",
         "type": "integer",
         "_name_": "limit"
        },
        "force_sql_filters": {
         "default": false,
         "title": "force_sql_filters",
         "type": "boolean",
         "_name_": "force_sql_filters"
        }
       },
       "title": "options",
       "type": "object",
       "default": {},
       "_name_": "options",
       "_attrs_order_": [
        "relationships",
        "extend",
        "extend_context",
        "prefix",
        "extra",
        "order_by",
        "select",
        "count",
        "get",
        "offset",
        "limit",
        "force_sql_filters"
       ]
      },
      "iscsi_portal_get_instance": {
       "type": "object",
       "properties": {
        "id": {
         "$ref": "#/components/schemas/iscsi_portal_get_instance_0"
        },
        "options": {
         "$ref": "#/components/schemas/iscsi_portal_get_instance_1"
        }
       }
      },
      "return_schema_of_iscsi_portal_get_instance": {
       "additionalProperties": false,
       "properties": {
        "id": {
         "title": "id",
         "type": "integer",
         "_name_": "id"
        },
        "listen": {
         "items": {},
         "title": "listen",
         "type": "array",
         "_name_": "listen"
        },
        "tag": {
         "title": "tag",
         "type": "integer",
         "_name_": "tag"
        },
        "comment": {
         "default": "",
         "title": "comment",
         "type": "string",
         "_name_": "comment"
        }
       },
       "required": [
        "id",
        "listen",
        "tag"
       ],
       "title": "result",
       "type": "object",
       "_name_": "result",
       "_attrs_order_": [
        "id",
        "listen",
        "tag",
        "comment"
       ]
      },
      "return_schema_of_iscsi_portal_listen_ip_choices": {
       "additionalProperties": {
        "type": "string"
       },
       "title": "result",
       "type": "object",
       "_name_": "result"
      },
      "return_schema_of_iscsi_target_query": {
       "anyOf": [
        {
         "items": [
          {
           "additionalProperties": false,
           "properties": {
            "id": {
             "title": "id",
             "type": "integer",
             "_name_": "id",
             "_required_": false
            },
            "name": {
             "maxLength": 120,
             "minLength": 1,
             "title": "name",
             "type": "string",
             "_name_": "name",
             "_required_": false
            },
            "alias": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "null"
              }
             ],
             "title": "alias",
             "_name_": "alias",
             "_required_": false
            },
            "mode": {
             "enum": [
              "ISCSI",
              "FC",
              "BOTH"
             ],
             "title": "mode",
             "type": "string",
             "_name_": "mode",
             "_required_": false
            },
            "groups": {
             "items": [
              {}
             ],
             "title": "groups",
             "type": "array",
             "_name_": "groups",
             "_required_": false
            },
            "auth_networks": {
             "items": [
              {
               "type": "string"
              }
             ],
             "title": "auth_networks",
             "type": "array",
             "_name_": "auth_networks",
             "_required_": false
            },
            "rel_tgt_id": {
             "title": "rel_tgt_id",
             "type": "integer",
             "_name_": "rel_tgt_id",
             "_required_": false
            },
            "iscsi_parameters": {
             "anyOf": [
              {},
              {
               "type": "null"
              }
             ],
             "title": "iscsi_parameters",
             "_name_": "iscsi_parameters",
             "_required_": false
            }
           },
           "title": "IscsiTargetQueryResultItem",
           "type": "object",
           "_attrs_order_": [
            "id",
            "name",
            "alias",
            "mode",
            "groups",
            "auth_networks",
            "rel_tgt_id",
            "iscsi_parameters"
           ]
          }
         ],
         "type": "array"
        },
        {
         "additionalProperties": false,
         "properties": {
          "id": {
           "title": "id",
           "type": "integer",
           "_name_": "id",
           "_required_": false
          },
          "name": {
           "maxLength": 120,
           "minLength": 1,
           "title": "name",
           "type": "string",
           "_name_": "name",
           "_required_": false
          },
          "alias": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "null"
            }
           ],
           "title": "alias",
           "_name_": "alias",
           "_required_": false
          },
          "mode": {
           "enum": [
            "ISCSI",
            "FC",
            "BOTH"
           ],
           "title": "mode",
           "type": "string",
           "_name_": "mode",
           "_required_": false
          },
          "groups": {
           "items": [
            {}
           ],
           "title": "groups",
           "type": "array",
           "_name_": "groups",
           "_required_": false
          },
          "auth_networks": {
           "items": [
            {
             "type": "string"
            }
           ],
           "title": "auth_networks",
           "type": "array",
           "_name_": "auth_networks",
           "_required_": false
          },
          "rel_tgt_id": {
           "title": "rel_tgt_id",
           "type": "integer",
           "_name_": "rel_tgt_id",
           "_required_": false
          },
          "iscsi_parameters": {
           "anyOf": [
            {},
            {
             "type": "null"
            }
           ],
           "title": "iscsi_parameters",
           "_name_": "iscsi_parameters",
           "_required_": false
          }
         },
         "title": "IscsiTargetQueryResultItem",
         "type": "object",
         "_attrs_order_": [
          "id",
          "name",
          "alias",
          "mode",
          "groups",
          "auth_networks",
          "rel_tgt_id",
          "iscsi_parameters"
         ]
        },
        {
         "type": "integer"
        }
       ],
       "title": "result",
       "_name_": "result"
      },
      "iscsi_target_create": {
       "additionalProperties": false,
       "properties": {
        "name": {
         "maxLength": 120,
         "minLength": 1,
         "title": "name",
         "type": "string",
         "_name_": "name"
        },
        "alias": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "alias",
         "_name_": "alias"
        },
        "mode": {
         "default": "ISCSI",
         "enum": [
          "ISCSI",
          "FC",
          "BOTH"
         ],
         "title": "mode",
         "type": "string",
         "_name_": "mode"
        },
        "groups": {
         "default": [],
         "items": {},
         "title": "groups",
         "type": "array",
         "_name_": "groups"
        },
        "auth_networks": {
         "default": [],
         "items": {
          "type": "string"
         },
         "title": "auth_networks",
         "type": "array",
         "_name_": "auth_networks"
        },
        "iscsi_parameters": {
         "anyOf": [
          {},
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "iscsi_parameters",
         "_name_": "iscsi_parameters"
        }
       },
       "required": [
        "name"
       ],
       "title": "iscsi_target_create",
       "type": "object",
       "_name_": "iscsi_target_create",
       "_attrs_order_": [
        "name",
        "alias",
        "mode",
        "groups",
        "auth_networks",
        "iscsi_parameters"
       ]
      },
      "return_schema_of_iscsi_target_create": {
       "additionalProperties": false,
       "properties": {
        "id": {
         "title": "id",
         "type": "integer",
         "_name_": "id"
        },
        "name": {
         "maxLength": 120,
         "minLength": 1,
         "title": "name",
         "type": "string",
         "_name_": "name"
        },
        "alias": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "alias",
         "_name_": "alias"
        },
        "mode": {
         "default": "ISCSI",
         "enum": [
          "ISCSI",
          "FC",
          "BOTH"
         ],
         "title": "mode",
         "type": "string",
         "_name_": "mode"
        },
        "groups": {
         "default": [],
         "items": {},
         "title": "groups",
         "type": "array",
         "_name_": "groups"
        },
        "auth_networks": {
         "default": [],
         "items": {
          "type": "string"
         },
         "title": "auth_networks",
         "type": "array",
         "_name_": "auth_networks"
        },
        "rel_tgt_id": {
         "title": "rel_tgt_id",
         "type": "integer",
         "_name_": "rel_tgt_id"
        },
        "iscsi_parameters": {
         "anyOf": [
          {},
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "iscsi_parameters",
         "_name_": "iscsi_parameters"
        }
       },
       "required": [
        "id",
        "name",
        "rel_tgt_id"
       ],
       "title": "result",
       "type": "object",
       "_name_": "result",
       "_attrs_order_": [
        "id",
        "name",
        "alias",
        "mode",
        "groups",
        "auth_networks",
        "rel_tgt_id",
        "iscsi_parameters"
       ]
      },
      "iscsi_target_delete_1": {
       "default": false,
       "title": "force",
       "type": "boolean",
       "_name_": "force"
      },
      "iscsi_target_delete_2": {
       "default": false,
       "title": "delete_extents",
       "type": "boolean",
       "_name_": "delete_extents"
      },
      "iscsi_target_delete": {
       "type": "object",
       "properties": {
        "force": {
         "$ref": "#/components/schemas/iscsi_target_delete_1"
        },
        "delete_extents": {
         "$ref": "#/components/schemas/iscsi_target_delete_2"
        }
       }
      },
      "return_schema_of_iscsi_target_delete": {
       "const": true,
       "enum": [
        true
       ],
       "title": "result",
       "type": "boolean",
       "_name_": "result"
      },
      "iscsi_target_update": {
       "additionalProperties": false,
       "properties": {
        "name": {
         "maxLength": 120,
         "minLength": 1,
         "title": "name",
         "type": "string",
         "_name_": "name"
        },
        "alias": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "title": "alias",
         "_name_": "alias"
        },
        "mode": {
         "enum": [
          "ISCSI",
          "FC",
          "BOTH"
         ],
         "title": "mode",
         "type": "string",
         "_name_": "mode"
        },
        "groups": {
         "items": {},
         "title": "groups",
         "type": "array",
         "_name_": "groups"
        },
        "auth_networks": {
         "items": {
          "type": "string"
         },
         "title": "auth_networks",
         "type": "array",
         "_name_": "auth_networks"
        },
        "iscsi_parameters": {
         "anyOf": [
          {},
          {
           "type": "null"
          }
         ],
         "title": "iscsi_parameters",
         "_name_": "iscsi_parameters"
        }
       },
       "title": "iscsi_target_update",
       "type": "object",
       "_name_": "iscsi_target_update",
       "_attrs_order_": [
        "name",
        "alias",
        "mode",
        "groups",
        "auth_networks",
        "iscsi_parameters"
       ]
      },
      "return_schema_of_iscsi_target_update": {
       "additionalProperties": false,
       "properties": {
        "id": {
         "title": "id",
         "type": "integer",
         "_name_": "id"
        },
        "name": {
         "maxLength": 120,
         "minLength": 1,
         "title": "name",
         "type": "string",
         "_name_": "name"
        },
        "alias": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "alias",
         "_name_": "alias"
        },
        "mode": {
         "default": "ISCSI",
         "enum": [
          "ISCSI",
          "FC",
          "BOTH"
         ],
         "title": "mode",
         "type": "string",
         "_name_": "mode"
        },
        "groups": {
         "default": [],
         "items": {},
         "title": "groups",
         "type": "array",
         "_name_": "groups"
        },
        "auth_networks": {
         "default": [],
         "items": {
          "type": "string"
         },
         "title": "auth_networks",
         "type": "array",
         "_name_": "auth_networks"
        },
        "rel_tgt_id": {
         "title": "rel_tgt_id",
         "type": "integer",
         "_name_": "rel_tgt_id"
        },
        "iscsi_parameters": {
         "anyOf": [
          {},
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "iscsi_parameters",
         "_name_": "iscsi_parameters"
        }
       },
       "required": [
        "id",
        "name",
        "rel_tgt_id"
       ],
       "title": "result",
       "type": "object",
       "_name_": "result",
       "_attrs_order_": [
        "id",
        "name",
        "alias",
        "mode",
        "groups",
        "auth_networks",
        "rel_tgt_id",
        "iscsi_parameters"
       ]
      },
      "iscsi_target_get_instance_0": {
       "title": "id",
       "type": "integer",
       "_name_": "id"
      },
      "iscsi_target_get_instance_1": {
       "additionalProperties": false,
       "properties": {
        "relationships": {
         "default": true,
         "title": "relationships",
         "type": "boolean",
         "_name_": "relationships"
        },
        "extend": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "extend",
         "_name_": "extend"
        },
        "extend_context": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "extend_context",
         "_name_": "extend_context"
        },
        "prefix": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "prefix",
         "_name_": "prefix"
        },
        "extra": {
         "default": {},
         "title": "extra",
         "type": "object",
         "_name_": "extra"
        },
        "order_by": {
         "default": [],
         "items": {
          "type": "string"
         },
         "title": "order_by",
         "type": "array",
         "_name_": "order_by"
        },
        "select": {
         "default": [],
         "items": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "items": [
             {}
            ],
            "type": "array"
           }
          ]
         },
         "title": "select",
         "type": "array",
         "_name_": "select"
        },
        "count": {
         "default": false,
         "title": "count",
         "type": "boolean",
         "_name_": "count"
        },
        "get": {
         "default": false,
         "title": "get",
         "type": "boolean",
         "_name_": "get"
        },
        "offset": {
         "default": 0,
         "title": "offset",
         "type": "integer",
         "_name_": "offset"
        },
        "limit": {
         "default": 0,
         "title": "limit",
         "type": "integer",
         "_name_": "limit"
        },
        "force_sql_filters": {
         "default": false,
         "title": "force_sql_filters",
         "type": "boolean",
         "_name_": "force_sql_filters"
        }
       },
       "title": "options",
       "type": "object",
       "default": {},
       "_name_": "options",
       "_attrs_order_": [
        "relationships",
        "extend",
        "extend_context",
        "prefix",
        "extra",
        "order_by",
        "select",
        "count",
        "get",
        "offset",
        "limit",
        "force_sql_filters"
       ]
      },
      "iscsi_target_get_instance": {
       "type": "object",
       "properties": {
        "id": {
         "$ref": "#/components/schemas/iscsi_target_get_instance_0"
        },
        "options": {
         "$ref": "#/components/schemas/iscsi_target_get_instance_1"
        }
       }
      },
      "return_schema_of_iscsi_target_get_instance": {
       "additionalProperties": false,
       "properties": {
        "id": {
         "title": "id",
         "type": "integer",
         "_name_": "id"
        },
        "name": {
         "maxLength": 120,
         "minLength": 1,
         "title": "name",
         "type": "string",
         "_name_": "name"
        },
        "alias": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "alias",
         "_name_": "alias"
        },
        "mode": {
         "default": "ISCSI",
         "enum": [
          "ISCSI",
          "FC",
          "BOTH"
         ],
         "title": "mode",
         "type": "string",
         "_name_": "mode"
        },
        "groups": {
         "default": [],
         "items": {},
         "title": "groups",
         "type": "array",
         "_name_": "groups"
        },
        "auth_networks": {
         "default": [],
         "items": {
          "type": "string"
         },
         "title": "auth_networks",
         "type": "array",
         "_name_": "auth_networks"
        },
        "rel_tgt_id": {
         "title": "rel_tgt_id",
         "type": "integer",
         "_name_": "rel_tgt_id"
        },
        "iscsi_parameters": {
         "anyOf": [
          {},
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "iscsi_parameters",
         "_name_": "iscsi_parameters"
        }
       },
       "required": [
        "id",
        "name",
        "rel_tgt_id"
       ],
       "title": "result",
       "type": "object",
       "_name_": "result",
       "_attrs_order_": [
        "id",
        "name",
        "alias",
        "mode",
        "groups",
        "auth_networks",
        "rel_tgt_id",
        "iscsi_parameters"
       ]
      },
      "iscsi_target_validate_name_0": {
       "title": "name",
       "type": "string",
       "_name_": "name"
      },
      "iscsi_target_validate_name_1": {
       "anyOf": [
        {
         "type": "integer"
        },
        {
         "type": "null"
        }
       ],
       "default": null,
       "title": "existing_id",
       "_name_": "existing_id"
      },
      "iscsi_target_validate_name": {
       "type": "object",
       "properties": {
        "name": {
         "$ref": "#/components/schemas/iscsi_target_validate_name_0"
        },
        "existing_id": {
         "$ref": "#/components/schemas/iscsi_target_validate_name_1"
        }
       }
      },
      "return_schema_of_iscsi_target_validate_name": {
       "anyOf": [
        {
         "type": "string"
        },
        {
         "type": "null"
        }
       ],
       "title": "result",
       "_name_": "result"
      },
      "return_schema_of_iscsi_targetextent_query": {
       "anyOf": [
        {
         "items": [
          {
           "additionalProperties": false,
           "properties": {
            "id": {
             "title": "id",
             "type": "integer",
             "_name_": "id",
             "_required_": false
            },
            "target": {
             "title": "target",
             "type": "integer",
             "_name_": "target",
             "_required_": false
            },
            "lunid": {
             "title": "lunid",
             "type": "integer",
             "_name_": "lunid",
             "_required_": false
            },
            "extent": {
             "title": "extent",
             "type": "integer",
             "_name_": "extent",
             "_required_": false
            }
           },
           "title": "IscsiTargetToExtentQueryResultItem",
           "type": "object",
           "_attrs_order_": [
            "id",
            "target",
            "lunid",
            "extent"
           ]
          }
         ],
         "type": "array"
        },
        {
         "additionalProperties": false,
         "properties": {
          "id": {
           "title": "id",
           "type": "integer",
           "_name_": "id",
           "_required_": false
          },
          "target": {
           "title": "target",
           "type": "integer",
           "_name_": "target",
           "_required_": false
          },
          "lunid": {
           "title": "lunid",
           "type": "integer",
           "_name_": "lunid",
           "_required_": false
          },
          "extent": {
           "title": "extent",
           "type": "integer",
           "_name_": "extent",
           "_required_": false
          }
         },
         "title": "IscsiTargetToExtentQueryResultItem",
         "type": "object",
         "_attrs_order_": [
          "id",
          "target",
          "lunid",
          "extent"
         ]
        },
        {
         "type": "integer"
        }
       ],
       "title": "result",
       "_name_": "result"
      },
      "iscsi_targetextent_create": {
       "additionalProperties": false,
       "properties": {
        "target": {
         "title": "target",
         "type": "integer",
         "_name_": "target"
        },
        "lunid": {
         "anyOf": [
          {
           "type": "integer"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "lunid",
         "_name_": "lunid"
        },
        "extent": {
         "title": "extent",
         "type": "integer",
         "_name_": "extent"
        }
       },
       "required": [
        "target",
        "extent"
       ],
       "title": "iscsi_target_to_extent_create",
       "type": "object",
       "_name_": "iscsi_target_to_extent_create",
       "_attrs_order_": [
        "target",
        "lunid",
        "extent"
       ]
      },
      "return_schema_of_iscsi_targetextent_create": {
       "additionalProperties": false,
       "properties": {
        "id": {
         "title": "id",
         "type": "integer",
         "_name_": "id"
        },
        "target": {
         "title": "target",
         "type": "integer",
         "_name_": "target"
        },
        "lunid": {
         "title": "lunid",
         "type": "integer",
         "_name_": "lunid"
        },
        "extent": {
         "title": "extent",
         "type": "integer",
         "_name_": "extent"
        }
       },
       "required": [
        "id",
        "target",
        "lunid",
        "extent"
       ],
       "title": "result",
       "type": "object",
       "_name_": "result",
       "_attrs_order_": [
        "id",
        "target",
        "lunid",
        "extent"
       ]
      },
      "iscsi_targetextent_delete": {
       "default": false,
       "title": "force",
       "type": "boolean",
       "_name_": "force"
      },
      "return_schema_of_iscsi_targetextent_delete": {
       "const": true,
       "enum": [
        true
       ],
       "title": "result",
       "type": "boolean",
       "_name_": "result"
      },
      "iscsi_targetextent_update": {
       "additionalProperties": false,
       "properties": {
        "id": {
         "title": "id",
         "type": "integer",
         "_name_": "id"
        },
        "target": {
         "title": "target",
         "type": "integer",
         "_name_": "target"
        },
        "lunid": {
         "title": "lunid",
         "type": "integer",
         "_name_": "lunid"
        },
        "extent": {
         "title": "extent",
         "type": "integer",
         "_name_": "extent"
        }
       },
       "title": "iscsi_target_to_extent_update",
       "type": "object",
       "_name_": "iscsi_target_to_extent_update",
       "_attrs_order_": [
        "id",
        "target",
        "lunid",
        "extent"
       ]
      },
      "return_schema_of_iscsi_targetextent_update": {
       "additionalProperties": false,
       "properties": {
        "id": {
         "title": "id",
         "type": "integer",
         "_name_": "id"
        },
        "target": {
         "title": "target",
         "type": "integer",
         "_name_": "target"
        },
        "lunid": {
         "title": "lunid",
         "type": "integer",
         "_name_": "lunid"
        },
        "extent": {
         "title": "extent",
         "type": "integer",
         "_name_": "extent"
        }
       },
       "required": [
        "id",
        "target",
        "lunid",
        "extent"
       ],
       "title": "result",
       "type": "object",
       "_name_": "result",
       "_attrs_order_": [
        "id",
        "target",
        "lunid",
        "extent"
       ]
      },
      "iscsi_targetextent_get_instance_0": {
       "title": "id",
       "type": "integer",
       "_name_": "id"
      },
      "iscsi_targetextent_get_instance_1": {
       "additionalProperties": false,
       "properties": {
        "relationships": {
         "default": true,
         "title": "relationships",
         "type": "boolean",
         "_name_": "relationships"
        },
        "extend": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "extend",
         "_name_": "extend"
        },
        "extend_context": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "extend_context",
         "_name_": "extend_context"
        },
        "prefix": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "prefix",
         "_name_": "prefix"
        },
        "extra": {
         "default": {},
         "title": "extra",
         "type": "object",
         "_name_": "extra"
        },
        "order_by": {
         "default": [],
         "items": {
          "type": "string"
         },
         "title": "order_by",
         "type": "array",
         "_name_": "order_by"
        },
        "select": {
         "default": [],
         "items": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "items": [
             {}
            ],
            "type": "array"
           }
          ]
         },
         "title": "select",
         "type": "array",
         "_name_": "select"
        },
        "count": {
         "default": false,
         "title": "count",
         "type": "boolean",
         "_name_": "count"
        },
        "get": {
         "default": false,
         "title": "get",
         "type": "boolean",
         "_name_": "get"
        },
        "offset": {
         "default": 0,
         "title": "offset",
         "type": "integer",
         "_name_": "offset"
        },
        "limit": {
         "default": 0,
         "title": "limit",
         "type": "integer",
         "_name_": "limit"
        },
        "force_sql_filters": {
         "default": false,
         "title": "force_sql_filters",
         "type": "boolean",
         "_name_": "force_sql_filters"
        }
       },
       "title": "options",
       "type": "object",
       "default": {},
       "_name_": "options",
       "_attrs_order_": [
        "relationships",
        "extend",
        "extend_context",
        "prefix",
        "extra",
        "order_by",
        "select",
        "count",
        "get",
        "offset",
        "limit",
        "force_sql_filters"
       ]
      },
      "iscsi_targetextent_get_instance": {
       "type": "object",
       "properties": {
        "id": {
         "$ref": "#/components/schemas/iscsi_targetextent_get_instance_0"
        },
        "options": {
         "$ref": "#/components/schemas/iscsi_targetextent_get_instance_1"
        }
       }
      },
      "return_schema_of_iscsi_targetextent_get_instance": {
       "additionalProperties": false,
       "properties": {
        "id": {
         "title": "id",
         "type": "integer",
         "_name_": "id"
        },
        "target": {
         "title": "target",
         "type": "integer",
         "_name_": "target"
        },
        "lunid": {
         "title": "lunid",
         "type": "integer",
         "_name_": "lunid"
        },
        "extent": {
         "title": "extent",
         "type": "integer",
         "_name_": "extent"
        }
       },
       "required": [
        "id",
        "target",
        "lunid",
        "extent"
       ],
       "title": "result",
       "type": "object",
       "_name_": "result",
       "_attrs_order_": [
        "id",
        "target",
        "lunid",
        "extent"
       ]
      },
      "return_schema_of_jbof_query": {
       "anyOf": [
        {
         "_name_": "query_result",
         "title": "query_result",
         "default": [],
         "_required_": false,
         "type": "array",
         "items": [
          {
           "type": "object",
           "properties": {
            "id": {
             "type": "integer",
             "_name_": "id",
             "title": "id",
             "_required_": true
            },
            "description": {
             "_name_": "description",
             "title": "description",
             "_required_": false,
             "type": "string"
            },
            "mgmt_ip1": {
             "_name_": "mgmt_ip1",
             "title": "mgmt_ip1",
             "_required_": true,
             "type": "string"
            },
            "mgmt_ip2": {
             "_name_": "mgmt_ip2",
             "title": "mgmt_ip2",
             "_required_": false,
             "type": "string"
            },
            "mgmt_username": {
             "_name_": "mgmt_username",
             "title": "mgmt_username",
             "_required_": true,
             "type": "string"
            },
            "mgmt_password": {
             "_name_": "mgmt_password",
             "title": "mgmt_password",
             "_required_": true,
             "type": "string"
            }
           },
           "additionalProperties": false,
           "_name_": "jbof_entry",
           "title": "jbof_entry",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "id",
            "description",
            "mgmt_ip1",
            "mgmt_ip2",
            "mgmt_username",
            "mgmt_password"
           ]
          }
         ]
        },
        {
         "type": "object",
         "properties": {
          "id": {
           "type": "integer",
           "_name_": "id",
           "title": "id",
           "_required_": true
          },
          "description": {
           "_name_": "description",
           "title": "description",
           "_required_": false,
           "type": "string"
          },
          "mgmt_ip1": {
           "_name_": "mgmt_ip1",
           "title": "mgmt_ip1",
           "_required_": true,
           "type": "string"
          },
          "mgmt_ip2": {
           "_name_": "mgmt_ip2",
           "title": "mgmt_ip2",
           "_required_": false,
           "type": "string"
          },
          "mgmt_username": {
           "_name_": "mgmt_username",
           "title": "mgmt_username",
           "_required_": true,
           "type": "string"
          },
          "mgmt_password": {
           "_name_": "mgmt_password",
           "title": "mgmt_password",
           "_required_": true,
           "type": "string"
          }
         },
         "additionalProperties": false,
         "_name_": "jbof_entry",
         "title": "jbof_entry",
         "default": {},
         "_required_": false,
         "_attrs_order_": [
          "id",
          "description",
          "mgmt_ip1",
          "mgmt_ip2",
          "mgmt_username",
          "mgmt_password"
         ]
        },
        {
         "type": "integer",
         "_name_": "count",
         "title": "count",
         "_required_": false
        },
        {
         "type": "object",
         "properties": {
          "id": {
           "type": "integer",
           "_name_": "id",
           "title": "id",
           "_required_": true
          },
          "description": {
           "_name_": "description",
           "title": "description",
           "_required_": false,
           "type": "string"
          },
          "mgmt_ip1": {
           "_name_": "mgmt_ip1",
           "title": "mgmt_ip1",
           "_required_": true,
           "type": "string"
          },
          "mgmt_ip2": {
           "_name_": "mgmt_ip2",
           "title": "mgmt_ip2",
           "_required_": false,
           "type": "string"
          },
          "mgmt_username": {
           "_name_": "mgmt_username",
           "title": "mgmt_username",
           "_required_": true,
           "type": "string"
          },
          "mgmt_password": {
           "_name_": "mgmt_password",
           "title": "mgmt_password",
           "_required_": true,
           "type": "string"
          }
         },
         "additionalProperties": false,
         "_name_": "jbof_entry",
         "title": "jbof_entry",
         "default": {},
         "_required_": false,
         "_attrs_order_": [
          "id",
          "description",
          "mgmt_ip1",
          "mgmt_ip2",
          "mgmt_username",
          "mgmt_password"
         ]
        }
       ],
       "nullable": false,
       "_name_": "query_result",
       "description": null
      },
      "jbof_create": {
       "type": "object",
       "properties": {
        "description": {
         "_name_": "description",
         "title": "description",
         "type": "string",
         "description": "`description` Optional description of the JBOF."
        },
        "mgmt_ip1": {
         "_name_": "mgmt_ip1",
         "title": "mgmt_ip1",
         "type": "string",
         "description": "`mgmt_ip1` IP of 1st Redfish management interface."
        },
        "mgmt_ip2": {
         "_name_": "mgmt_ip2",
         "title": "mgmt_ip2",
         "type": "string",
         "description": "`mgmt_ip2` Optional IP of 2nd Redfish management interface."
        },
        "mgmt_username": {
         "_name_": "mgmt_username",
         "title": "mgmt_username",
         "type": "string",
         "description": "`mgmt_username` Redfish administrative username."
        },
        "mgmt_password": {
         "_name_": "mgmt_password",
         "title": "mgmt_password",
         "type": "string"
        }
       },
       "additionalProperties": false,
       "_name_": "jbof_create",
       "title": "jbof_create",
       "default": {},
       "_attrs_order_": [
        "description",
        "mgmt_ip1",
        "mgmt_ip2",
        "mgmt_username",
        "mgmt_password"
       ]
      },
      "return_schema_of_jbof_create": {
       "type": "object",
       "properties": {
        "id": {
         "type": "integer",
         "_name_": "id",
         "title": "id"
        },
        "description": {
         "_name_": "description",
         "title": "description",
         "type": "string",
         "description": "`description` Optional description of the JBOF."
        },
        "mgmt_ip1": {
         "_name_": "mgmt_ip1",
         "title": "mgmt_ip1",
         "type": "string",
         "description": "`mgmt_ip1` IP of 1st Redfish management interface."
        },
        "mgmt_ip2": {
         "_name_": "mgmt_ip2",
         "title": "mgmt_ip2",
         "type": "string",
         "description": "`mgmt_ip2` Optional IP of 2nd Redfish management interface."
        },
        "mgmt_username": {
         "_name_": "mgmt_username",
         "title": "mgmt_username",
         "type": "string",
         "description": "`mgmt_username` Redfish administrative username."
        },
        "mgmt_password": {
         "_name_": "mgmt_password",
         "title": "mgmt_password",
         "type": "string"
        }
       },
       "additionalProperties": false,
       "_name_": "jbof_create_returns",
       "title": "jbof_create_returns",
       "default": {},
       "_attrs_order_": [
        "id",
        "description",
        "mgmt_ip1",
        "mgmt_ip2",
        "mgmt_username",
        "mgmt_password"
       ]
      },
      "jbof_delete": {
       "type": "boolean",
       "_name_": "force",
       "title": "force",
       "default": false
      },
      "return_schema_of_jbof_delete": {
       "type": "boolean",
       "_name_": "deleted",
       "title": "deleted",
       "description": "Will return `true` if `id` is deleted successfully"
      },
      "jbof_update": {
       "type": "object",
       "properties": {
        "description": {
         "_name_": "description",
         "title": "description",
         "type": "string",
         "description": "`description` Optional description of the JBOF."
        },
        "mgmt_ip1": {
         "_name_": "mgmt_ip1",
         "title": "mgmt_ip1",
         "type": "string",
         "description": "`mgmt_ip1` IP of 1st Redfish management interface."
        },
        "mgmt_ip2": {
         "_name_": "mgmt_ip2",
         "title": "mgmt_ip2",
         "type": "string",
         "description": "`mgmt_ip2` Optional IP of 2nd Redfish management interface."
        },
        "mgmt_username": {
         "_name_": "mgmt_username",
         "title": "mgmt_username",
         "type": "string",
         "description": "`mgmt_username` Redfish administrative username."
        },
        "mgmt_password": {
         "_name_": "mgmt_password",
         "title": "mgmt_password",
         "type": "string"
        }
       },
       "additionalProperties": false,
       "_name_": "jbof_update",
       "title": "jbof_update",
       "default": {},
       "_attrs_order_": [
        "description",
        "mgmt_ip1",
        "mgmt_ip2",
        "mgmt_username",
        "mgmt_password"
       ]
      },
      "return_schema_of_jbof_update": {
       "type": "object",
       "properties": {
        "id": {
         "type": "integer",
         "_name_": "id",
         "title": "id",
         "description": "Update JBOF of `id`\nCreate a new JBOF."
        },
        "description": {
         "_name_": "description",
         "title": "description",
         "type": "string",
         "description": "`description` Optional description of the JBOF."
        },
        "mgmt_ip1": {
         "_name_": "mgmt_ip1",
         "title": "mgmt_ip1",
         "type": "string",
         "description": "`mgmt_ip1` IP of 1st Redfish management interface."
        },
        "mgmt_ip2": {
         "_name_": "mgmt_ip2",
         "title": "mgmt_ip2",
         "type": "string",
         "description": "`mgmt_ip2` Optional IP of 2nd Redfish management interface."
        },
        "mgmt_username": {
         "_name_": "mgmt_username",
         "title": "mgmt_username",
         "type": "string",
         "description": "`mgmt_username` Redfish administrative username."
        },
        "mgmt_password": {
         "_name_": "mgmt_password",
         "title": "mgmt_password",
         "type": "string"
        }
       },
       "additionalProperties": false,
       "_name_": "jbof_update_returns",
       "title": "jbof_update_returns",
       "default": {},
       "_attrs_order_": [
        "id",
        "description",
        "mgmt_ip1",
        "mgmt_ip2",
        "mgmt_username",
        "mgmt_password"
       ]
      },
      "jbof_get_instance_0": {
       "anyOf": [
        {
         "type": "string"
        },
        {
         "type": "integer"
        },
        {
         "type": "boolean"
        },
        {
         "type": "object"
        },
        {
         "type": "array"
        }
       ],
       "nullable": false,
       "_name_": "id",
       "title": "id",
       "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised."
      },
      "jbof_get_instance_1": {
       "type": "object",
       "properties": {
        "relationships": {
         "type": "boolean",
         "_name_": "relationships",
         "title": "relationships",
         "default": true
        },
        "extend": {
         "_name_": "extend",
         "title": "extend",
         "default": null,
         "type": "string",
         "nullable": true
        },
        "extend_context": {
         "_name_": "extend_context",
         "title": "extend_context",
         "default": null,
         "type": "string",
         "nullable": true
        },
        "prefix": {
         "_name_": "prefix",
         "title": "prefix",
         "default": null,
         "type": "string",
         "nullable": true
        },
        "extra": {
         "type": "object",
         "properties": {},
         "additionalProperties": true,
         "_name_": "extra",
         "title": "extra",
         "default": {},
         "_attrs_order_": []
        },
        "order_by": {
         "_name_": "order_by",
         "title": "order_by",
         "default": [],
         "type": "array",
         "items": {}
        },
        "select": {
         "_name_": "select",
         "title": "select",
         "default": [],
         "type": "array",
         "items": {}
        },
        "count": {
         "type": "boolean",
         "_name_": "count",
         "title": "count",
         "default": false
        },
        "get": {
         "type": "boolean",
         "_name_": "get",
         "title": "get",
         "default": false
        },
        "offset": {
         "type": "integer",
         "_name_": "offset",
         "title": "offset",
         "default": 0
        },
        "limit": {
         "type": "integer",
         "_name_": "limit",
         "title": "limit",
         "default": 0
        },
        "force_sql_filters": {
         "type": "boolean",
         "_name_": "force_sql_filters",
         "title": "force_sql_filters",
         "default": true
        }
       },
       "additionalProperties": false,
       "_name_": "query-options-get_instance",
       "title": "query-options-get_instance",
       "default": {},
       "_attrs_order_": [
        "relationships",
        "extend",
        "extend_context",
        "prefix",
        "extra",
        "order_by",
        "select",
        "count",
        "get",
        "offset",
        "limit",
        "force_sql_filters"
       ]
      },
      "jbof_get_instance": {
       "type": "object",
       "properties": {
        "id": {
         "$ref": "#/components/schemas/jbof_get_instance_0"
        },
        "query-options-get_instance": {
         "$ref": "#/components/schemas/jbof_get_instance_1"
        }
       }
      },
      "return_schema_of_jbof_get_instance": {
       "type": "object",
       "properties": {
        "id": {
         "type": "integer",
         "_name_": "id",
         "title": "id",
         "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised."
        },
        "description": {
         "_name_": "description",
         "title": "description",
         "type": "string"
        },
        "mgmt_ip1": {
         "_name_": "mgmt_ip1",
         "title": "mgmt_ip1",
         "type": "string"
        },
        "mgmt_ip2": {
         "_name_": "mgmt_ip2",
         "title": "mgmt_ip2",
         "type": "string"
        },
        "mgmt_username": {
         "_name_": "mgmt_username",
         "title": "mgmt_username",
         "type": "string"
        },
        "mgmt_password": {
         "_name_": "mgmt_password",
         "title": "mgmt_password",
         "type": "string"
        }
       },
       "additionalProperties": false,
       "_name_": "jbof_entry",
       "title": "jbof_entry",
       "default": {},
       "_attrs_order_": [
        "id",
        "description",
        "mgmt_ip1",
        "mgmt_ip2",
        "mgmt_username",
        "mgmt_password"
       ]
      },
      "return_schema_of_jbof_licensed": {
       "type": "integer",
       "_name_": "licensed",
       "title": "licensed"
      },
      "k8s_to_docker_list_backups": {
       "title": "kubernetes_pool",
       "type": "string",
       "_name_": "kubernetes_pool"
      },
      "return_schema_of_k8s_to_docker_list_backups": {
       "additionalProperties": false,
       "properties": {
        "error": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "title": "error",
         "_name_": "error"
        },
        "backups": {
         "title": "backups",
         "_name_": "backups"
        }
       },
       "required": [
        "error",
        "backups"
       ],
       "title": "result",
       "type": "object",
       "_name_": "result",
       "_attrs_order_": [
        "error",
        "backups"
       ]
      },
      "k8s_to_docker_migrate_0": {
       "title": "kubernetes_pool",
       "type": "string",
       "_name_": "kubernetes_pool"
      },
      "k8s_to_docker_migrate_1": {
       "additionalProperties": false,
       "properties": {
        "backup_name": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "backup_name",
         "_name_": "backup_name"
        }
       },
       "title": "options",
       "type": "object",
       "default": {
        "backup_name": null
       },
       "_name_": "options",
       "_attrs_order_": [
        "backup_name"
       ]
      },
      "k8s_to_docker_migrate": {
       "type": "object",
       "properties": {
        "kubernetes_pool": {
         "$ref": "#/components/schemas/k8s_to_docker_migrate_0"
        },
        "options": {
         "$ref": "#/components/schemas/k8s_to_docker_migrate_1"
        }
       }
      },
      "return_schema_of_k8s_to_docker_migrate": {
       "items": {
        "additionalProperties": false,
        "properties": {
         "name": {
          "title": "name",
          "type": "string",
          "_name_": "name",
          "_required_": true
         },
         "successfully_migrated": {
          "title": "successfully_migrated",
          "type": "boolean",
          "_name_": "successfully_migrated",
          "_required_": true
         },
         "error": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "null"
           }
          ],
          "title": "error",
          "_name_": "error",
          "_required_": true
         }
        },
        "required": [
         "name",
         "successfully_migrated",
         "error"
        ],
        "title": "AppMigrationDetails",
        "type": "object",
        "_attrs_order_": [
         "name",
         "successfully_migrated",
         "error"
        ]
       },
       "title": "result",
       "type": "array",
       "_name_": "result"
      },
      "return_schema_of_kerberos_config": {
       "type": "object",
       "properties": {},
       "additionalProperties": true,
       "_name_": "kerberos_entry",
       "title": "kerberos_entry",
       "default": {},
       "_attrs_order_": []
      },
      "kerberos_update": {
       "type": "object",
       "properties": {
        "appdefaults_aux": {
         "_name_": "appdefaults_aux",
         "title": "appdefaults_aux",
         "type": "string",
         "description": "`appdefaults_aux` add parameters to \"appdefaults\" section of the krb5.conf file."
        },
        "libdefaults_aux": {
         "_name_": "libdefaults_aux",
         "title": "libdefaults_aux",
         "type": "string"
        }
       },
       "additionalProperties": false,
       "_name_": "kerberos_settings_update",
       "title": "kerberos_settings_update",
       "default": {},
       "_attrs_order_": [
        "appdefaults_aux",
        "libdefaults_aux"
       ]
      },
      "return_schema_of_kerberos_update": {
       "type": "object",
       "properties": {},
       "additionalProperties": true,
       "_name_": "kerberos_update_returns",
       "title": "kerberos_update_returns",
       "default": {},
       "_attrs_order_": []
      },
      "return_schema_of_kerberos_keytab_query": {
       "anyOf": [
        {
         "_name_": "query_result",
         "title": "query_result",
         "default": [],
         "_required_": false,
         "type": "array",
         "items": [
          {
           "type": "object",
           "properties": {
            "file": {
             "_name_": "file",
             "title": "file",
             "_required_": false,
             "type": "string"
            },
            "name": {
             "_name_": "name",
             "title": "name",
             "_required_": false,
             "type": "string"
            },
            "id": {
             "type": "integer",
             "_name_": "id",
             "title": "id",
             "_required_": false
            }
           },
           "additionalProperties": false,
           "_name_": "kerberos_keytab_entry",
           "title": "kerberos_keytab_entry",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "file",
            "name",
            "id"
           ]
          }
         ]
        },
        {
         "type": "object",
         "properties": {
          "file": {
           "_name_": "file",
           "title": "file",
           "_required_": false,
           "type": "string"
          },
          "name": {
           "_name_": "name",
           "title": "name",
           "_required_": false,
           "type": "string"
          },
          "id": {
           "type": "integer",
           "_name_": "id",
           "title": "id",
           "_required_": false
          }
         },
         "additionalProperties": false,
         "_name_": "kerberos_keytab_entry",
         "title": "kerberos_keytab_entry",
         "default": {},
         "_required_": false,
         "_attrs_order_": [
          "file",
          "name",
          "id"
         ]
        },
        {
         "type": "integer",
         "_name_": "count",
         "title": "count",
         "_required_": false
        },
        {
         "type": "object",
         "properties": {
          "file": {
           "_name_": "file",
           "title": "file",
           "_required_": false,
           "type": "string"
          },
          "name": {
           "_name_": "name",
           "title": "name",
           "_required_": false,
           "type": "string"
          },
          "id": {
           "type": "integer",
           "_name_": "id",
           "title": "id",
           "_required_": false
          }
         },
         "additionalProperties": false,
         "_name_": "kerberos_keytab_entry",
         "title": "kerberos_keytab_entry",
         "default": {},
         "_required_": false,
         "_attrs_order_": [
          "file",
          "name",
          "id"
         ]
        }
       ],
       "nullable": false,
       "_name_": "query_result",
       "description": null
      },
      "kerberos_keytab_create": {
       "type": "object",
       "properties": {
        "file": {
         "_name_": "file",
         "title": "file",
         "type": "string",
         "description": "`file` b64encoded kerberos keytab"
        },
        "name": {
         "_name_": "name",
         "title": "name",
         "type": "string"
        }
       },
       "additionalProperties": false,
       "_name_": "kerberos_keytab_create",
       "title": "kerberos_keytab_create",
       "default": {},
       "_attrs_order_": [
        "file",
        "name"
       ]
      },
      "return_schema_of_kerberos_keytab_create": {
       "type": "object",
       "properties": {
        "file": {
         "_name_": "file",
         "title": "file",
         "type": "string",
         "description": "`file` b64encoded kerberos keytab"
        },
        "name": {
         "_name_": "name",
         "title": "name",
         "type": "string"
        },
        "id": {
         "type": "integer",
         "_name_": "id",
         "title": "id"
        }
       },
       "additionalProperties": false,
       "_name_": "kerberos_keytab_create_returns",
       "title": "kerberos_keytab_create_returns",
       "default": {},
       "_attrs_order_": [
        "file",
        "name",
        "id"
       ]
      },
      "return_schema_of_kerberos_keytab_delete": {
       "type": "boolean",
       "_name_": "deleted",
       "title": "deleted",
       "description": "Will return `true` if `id` is deleted successfully"
      },
      "kerberos_keytab_update": {
       "type": "object",
       "properties": {
        "file": {
         "_name_": "file",
         "title": "file",
         "type": "string",
         "description": "`file` b64encoded kerberos keytab"
        },
        "name": {
         "_name_": "name",
         "title": "name",
         "type": "string"
        }
       },
       "additionalProperties": false,
       "_name_": "kerberos_keytab_update",
       "title": "kerberos_keytab_update",
       "default": {},
       "_attrs_order_": [
        "file",
        "name"
       ]
      },
      "return_schema_of_kerberos_keytab_update": {
       "type": "object",
       "properties": {
        "file": {
         "_name_": "file",
         "title": "file",
         "type": "string",
         "description": "`file` b64encoded kerberos keytab"
        },
        "name": {
         "_name_": "name",
         "title": "name",
         "type": "string"
        },
        "id": {
         "type": "integer",
         "_name_": "id",
         "title": "id"
        }
       },
       "additionalProperties": false,
       "_name_": "kerberos_keytab_update_returns",
       "title": "kerberos_keytab_update_returns",
       "default": {},
       "_attrs_order_": [
        "file",
        "name",
        "id"
       ]
      },
      "kerberos_keytab_get_instance_0": {
       "anyOf": [
        {
         "type": "string"
        },
        {
         "type": "integer"
        },
        {
         "type": "boolean"
        },
        {
         "type": "object"
        },
        {
         "type": "array"
        }
       ],
       "nullable": false,
       "_name_": "id",
       "title": "id",
       "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised."
      },
      "kerberos_keytab_get_instance_1": {
       "type": "object",
       "properties": {
        "relationships": {
         "type": "boolean",
         "_name_": "relationships",
         "title": "relationships",
         "default": true
        },
        "extend": {
         "_name_": "extend",
         "title": "extend",
         "default": null,
         "type": "string",
         "nullable": true
        },
        "extend_context": {
         "_name_": "extend_context",
         "title": "extend_context",
         "default": null,
         "type": "string",
         "nullable": true
        },
        "prefix": {
         "_name_": "prefix",
         "title": "prefix",
         "default": null,
         "type": "string",
         "nullable": true
        },
        "extra": {
         "type": "object",
         "properties": {},
         "additionalProperties": true,
         "_name_": "extra",
         "title": "extra",
         "default": {},
         "_attrs_order_": []
        },
        "order_by": {
         "_name_": "order_by",
         "title": "order_by",
         "default": [],
         "type": "array",
         "items": {}
        },
        "select": {
         "_name_": "select",
         "title": "select",
         "default": [],
         "type": "array",
         "items": {}
        },
        "count": {
         "type": "boolean",
         "_name_": "count",
         "title": "count",
         "default": false
        },
        "get": {
         "type": "boolean",
         "_name_": "get",
         "title": "get",
         "default": false
        },
        "offset": {
         "type": "integer",
         "_name_": "offset",
         "title": "offset",
         "default": 0
        },
        "limit": {
         "type": "integer",
         "_name_": "limit",
         "title": "limit",
         "default": 0
        },
        "force_sql_filters": {
         "type": "boolean",
         "_name_": "force_sql_filters",
         "title": "force_sql_filters",
         "default": true
        }
       },
       "additionalProperties": false,
       "_name_": "query-options-get_instance",
       "title": "query-options-get_instance",
       "default": {},
       "_attrs_order_": [
        "relationships",
        "extend",
        "extend_context",
        "prefix",
        "extra",
        "order_by",
        "select",
        "count",
        "get",
        "offset",
        "limit",
        "force_sql_filters"
       ]
      },
      "kerberos_keytab_get_instance": {
       "type": "object",
       "properties": {
        "id": {
         "$ref": "#/components/schemas/kerberos_keytab_get_instance_0"
        },
        "query-options-get_instance": {
         "$ref": "#/components/schemas/kerberos_keytab_get_instance_1"
        }
       }
      },
      "return_schema_of_kerberos_keytab_get_instance": {
       "type": "object",
       "properties": {
        "file": {
         "_name_": "file",
         "title": "file",
         "type": "string"
        },
        "name": {
         "_name_": "name",
         "title": "name",
         "type": "string"
        },
        "id": {
         "type": "integer",
         "_name_": "id",
         "title": "id",
         "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised."
        }
       },
       "additionalProperties": false,
       "_name_": "kerberos_keytab_entry",
       "title": "kerberos_keytab_entry",
       "default": {},
       "_attrs_order_": [
        "file",
        "name",
        "id"
       ]
      },
      "return_schema_of_kerberos_realm_query": {
       "anyOf": [
        {
         "_name_": "query_result",
         "title": "query_result",
         "default": [],
         "_required_": false,
         "type": "array",
         "items": [
          {
           "type": "object",
           "properties": {
            "realm": {
             "_name_": "realm",
             "title": "realm",
             "_required_": true,
             "type": "string"
            },
            "kdc": {
             "_name_": "kdc",
             "title": "kdc",
             "default": [],
             "_required_": false,
             "type": "array",
             "items": []
            },
            "admin_server": {
             "_name_": "admin_server",
             "title": "admin_server",
             "default": [],
             "_required_": false,
             "type": "array",
             "items": []
            },
            "kpasswd_server": {
             "_name_": "kpasswd_server",
             "title": "kpasswd_server",
             "default": [],
             "_required_": false,
             "type": "array",
             "items": []
            },
            "id": {
             "type": "integer",
             "_name_": "id",
             "title": "id",
             "_required_": false
            }
           },
           "additionalProperties": false,
           "_name_": "kerberos_realm_entry",
           "title": "kerberos_realm_entry",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "realm",
            "kdc",
            "admin_server",
            "kpasswd_server",
            "id"
           ]
          }
         ]
        },
        {
         "type": "object",
         "properties": {
          "realm": {
           "_name_": "realm",
           "title": "realm",
           "_required_": true,
           "type": "string"
          },
          "kdc": {
           "_name_": "kdc",
           "title": "kdc",
           "default": [],
           "_required_": false,
           "type": "array",
           "items": []
          },
          "admin_server": {
           "_name_": "admin_server",
           "title": "admin_server",
           "default": [],
           "_required_": false,
           "type": "array",
           "items": []
          },
          "kpasswd_server": {
           "_name_": "kpasswd_server",
           "title": "kpasswd_server",
           "default": [],
           "_required_": false,
           "type": "array",
           "items": []
          },
          "id": {
           "type": "integer",
           "_name_": "id",
           "title": "id",
           "_required_": false
          }
         },
         "additionalProperties": false,
         "_name_": "kerberos_realm_entry",
         "title": "kerberos_realm_entry",
         "default": {},
         "_required_": false,
         "_attrs_order_": [
          "realm",
          "kdc",
          "admin_server",
          "kpasswd_server",
          "id"
         ]
        },
        {
         "type": "integer",
         "_name_": "count",
         "title": "count",
         "_required_": false
        },
        {
         "type": "object",
         "properties": {
          "realm": {
           "_name_": "realm",
           "title": "realm",
           "_required_": true,
           "type": "string"
          },
          "kdc": {
           "_name_": "kdc",
           "title": "kdc",
           "default": [],
           "_required_": false,
           "type": "array",
           "items": []
          },
          "admin_server": {
           "_name_": "admin_server",
           "title": "admin_server",
           "default": [],
           "_required_": false,
           "type": "array",
           "items": []
          },
          "kpasswd_server": {
           "_name_": "kpasswd_server",
           "title": "kpasswd_server",
           "default": [],
           "_required_": false,
           "type": "array",
           "items": []
          },
          "id": {
           "type": "integer",
           "_name_": "id",
           "title": "id",
           "_required_": false
          }
         },
         "additionalProperties": false,
         "_name_": "kerberos_realm_entry",
         "title": "kerberos_realm_entry",
         "default": {},
         "_required_": false,
         "_attrs_order_": [
          "realm",
          "kdc",
          "admin_server",
          "kpasswd_server",
          "id"
         ]
        }
       ],
       "nullable": false,
       "_name_": "query_result",
       "description": null
      },
      "kerberos_realm_create": {
       "type": "object",
       "properties": {
        "realm": {
         "_name_": "realm",
         "title": "realm",
         "type": "string"
        },
        "kdc": {
         "_name_": "kdc",
         "title": "kdc",
         "default": [],
         "type": "array",
         "items": {}
        },
        "admin_server": {
         "_name_": "admin_server",
         "title": "admin_server",
         "default": [],
         "type": "array",
         "items": {}
        },
        "kpasswd_server": {
         "_name_": "kpasswd_server",
         "title": "kpasswd_server",
         "default": [],
         "type": "array",
         "items": {}
        }
       },
       "additionalProperties": false,
       "_name_": "kerberos_realm_create",
       "title": "kerberos_realm_create",
       "default": {},
       "_attrs_order_": [
        "realm",
        "kdc",
        "admin_server",
        "kpasswd_server"
       ]
      },
      "return_schema_of_kerberos_realm_create": {
       "type": "object",
       "properties": {
        "realm": {
         "_name_": "realm",
         "title": "realm",
         "type": "string"
        },
        "kdc": {
         "_name_": "kdc",
         "title": "kdc",
         "default": [],
         "type": "array",
         "items": {}
        },
        "admin_server": {
         "_name_": "admin_server",
         "title": "admin_server",
         "default": [],
         "type": "array",
         "items": {}
        },
        "kpasswd_server": {
         "_name_": "kpasswd_server",
         "title": "kpasswd_server",
         "default": [],
         "type": "array",
         "items": {}
        },
        "id": {
         "type": "integer",
         "_name_": "id",
         "title": "id"
        }
       },
       "additionalProperties": false,
       "_name_": "kerberos_realm_create_returns",
       "title": "kerberos_realm_create_returns",
       "default": {},
       "_attrs_order_": [
        "realm",
        "kdc",
        "admin_server",
        "kpasswd_server",
        "id"
       ]
      },
      "return_schema_of_kerberos_realm_delete": {
       "type": "boolean",
       "_name_": "deleted",
       "title": "deleted",
       "description": "Will return `true` if `id` is deleted successfully"
      },
      "kerberos_realm_update": {
       "type": "object",
       "properties": {
        "realm": {
         "_name_": "realm",
         "title": "realm",
         "type": "string"
        },
        "kdc": {
         "_name_": "kdc",
         "title": "kdc",
         "default": [],
         "type": "array",
         "items": {}
        },
        "admin_server": {
         "_name_": "admin_server",
         "title": "admin_server",
         "default": [],
         "type": "array",
         "items": {}
        },
        "kpasswd_server": {
         "_name_": "kpasswd_server",
         "title": "kpasswd_server",
         "default": [],
         "type": "array",
         "items": {}
        }
       },
       "additionalProperties": false,
       "_name_": "kerberos_realm_update",
       "title": "kerberos_realm_update",
       "default": {},
       "_attrs_order_": [
        "realm",
        "kdc",
        "admin_server",
        "kpasswd_server"
       ]
      },
      "return_schema_of_kerberos_realm_update": {
       "type": "object",
       "properties": {
        "realm": {
         "_name_": "realm",
         "title": "realm",
         "type": "string"
        },
        "kdc": {
         "_name_": "kdc",
         "title": "kdc",
         "default": [],
         "type": "array",
         "items": {}
        },
        "admin_server": {
         "_name_": "admin_server",
         "title": "admin_server",
         "default": [],
         "type": "array",
         "items": {}
        },
        "kpasswd_server": {
         "_name_": "kpasswd_server",
         "title": "kpasswd_server",
         "default": [],
         "type": "array",
         "items": {}
        },
        "id": {
         "type": "integer",
         "_name_": "id",
         "title": "id"
        }
       },
       "additionalProperties": false,
       "_name_": "kerberos_realm_update_returns",
       "title": "kerberos_realm_update_returns",
       "default": {},
       "_attrs_order_": [
        "realm",
        "kdc",
        "admin_server",
        "kpasswd_server",
        "id"
       ]
      },
      "kerberos_realm_get_instance_0": {
       "anyOf": [
        {
         "type": "string"
        },
        {
         "type": "integer"
        },
        {
         "type": "boolean"
        },
        {
         "type": "object"
        },
        {
         "type": "array"
        }
       ],
       "nullable": false,
       "_name_": "id",
       "title": "id",
       "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised."
      },
      "kerberos_realm_get_instance_1": {
       "type": "object",
       "properties": {
        "relationships": {
         "type": "boolean",
         "_name_": "relationships",
         "title": "relationships",
         "default": true
        },
        "extend": {
         "_name_": "extend",
         "title": "extend",
         "default": null,
         "type": "string",
         "nullable": true
        },
        "extend_context": {
         "_name_": "extend_context",
         "title": "extend_context",
         "default": null,
         "type": "string",
         "nullable": true
        },
        "prefix": {
         "_name_": "prefix",
         "title": "prefix",
         "default": null,
         "type": "string",
         "nullable": true
        },
        "extra": {
         "type": "object",
         "properties": {},
         "additionalProperties": true,
         "_name_": "extra",
         "title": "extra",
         "default": {},
         "_attrs_order_": []
        },
        "order_by": {
         "_name_": "order_by",
         "title": "order_by",
         "default": [],
         "type": "array",
         "items": {}
        },
        "select": {
         "_name_": "select",
         "title": "select",
         "default": [],
         "type": "array",
         "items": {}
        },
        "count": {
         "type": "boolean",
         "_name_": "count",
         "title": "count",
         "default": false
        },
        "get": {
         "type": "boolean",
         "_name_": "get",
         "title": "get",
         "default": false
        },
        "offset": {
         "type": "integer",
         "_name_": "offset",
         "title": "offset",
         "default": 0
        },
        "limit": {
         "type": "integer",
         "_name_": "limit",
         "title": "limit",
         "default": 0
        },
        "force_sql_filters": {
         "type": "boolean",
         "_name_": "force_sql_filters",
         "title": "force_sql_filters",
         "default": true
        }
       },
       "additionalProperties": false,
       "_name_": "query-options-get_instance",
       "title": "query-options-get_instance",
       "default": {},
       "_attrs_order_": [
        "relationships",
        "extend",
        "extend_context",
        "prefix",
        "extra",
        "order_by",
        "select",
        "count",
        "get",
        "offset",
        "limit",
        "force_sql_filters"
       ]
      },
      "kerberos_realm_get_instance": {
       "type": "object",
       "properties": {
        "id": {
         "$ref": "#/components/schemas/kerberos_realm_get_instance_0"
        },
        "query-options-get_instance": {
         "$ref": "#/components/schemas/kerberos_realm_get_instance_1"
        }
       }
      },
      "return_schema_of_kerberos_realm_get_instance": {
       "type": "object",
       "properties": {
        "realm": {
         "_name_": "realm",
         "title": "realm",
         "type": "string"
        },
        "kdc": {
         "_name_": "kdc",
         "title": "kdc",
         "default": [],
         "type": "array",
         "items": {}
        },
        "admin_server": {
         "_name_": "admin_server",
         "title": "admin_server",
         "default": [],
         "type": "array",
         "items": {}
        },
        "kpasswd_server": {
         "_name_": "kpasswd_server",
         "title": "kpasswd_server",
         "default": [],
         "type": "array",
         "items": {}
        },
        "id": {
         "type": "integer",
         "_name_": "id",
         "title": "id",
         "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised."
        }
       },
       "additionalProperties": false,
       "_name_": "kerberos_realm_entry",
       "title": "kerberos_realm_entry",
       "default": {},
       "_attrs_order_": [
        "realm",
        "kdc",
        "admin_server",
        "kpasswd_server",
        "id"
       ]
      },
      "return_schema_of_keychaincredential_query": {
       "anyOf": [
        {
         "items": [
          {
           "additionalProperties": false,
           "properties": {
            "id": {
             "title": "id",
             "type": "integer",
             "_name_": "id",
             "_required_": false
            },
            "name": {
             "description": "Distinguishes this Keychain Credential from others.",
             "minLength": 1,
             "title": "name",
             "type": "string",
             "_name_": "name",
             "_required_": false
            },
            "type": {
             "enum": [
              "SSH_KEY_PAIR",
              "SSH_CREDENTIALS"
             ],
             "title": "type",
             "type": "string",
             "_name_": "type",
             "_required_": false
            },
            "attributes": {
             "anyOf": [
              {},
              {}
             ],
             "title": "attributes",
             "_name_": "attributes",
             "_required_": false
            }
           },
           "title": "KeychainCredentialQueryResultItem",
           "type": "object",
           "_attrs_order_": [
            "id",
            "name",
            "type",
            "attributes"
           ]
          }
         ],
         "type": "array"
        },
        {
         "additionalProperties": false,
         "properties": {
          "id": {
           "title": "id",
           "type": "integer",
           "_name_": "id",
           "_required_": false
          },
          "name": {
           "description": "Distinguishes this Keychain Credential from others.",
           "minLength": 1,
           "title": "name",
           "type": "string",
           "_name_": "name",
           "_required_": false
          },
          "type": {
           "enum": [
            "SSH_KEY_PAIR",
            "SSH_CREDENTIALS"
           ],
           "title": "type",
           "type": "string",
           "_name_": "type",
           "_required_": false
          },
          "attributes": {
           "anyOf": [
            {},
            {}
           ],
           "title": "attributes",
           "_name_": "attributes",
           "_required_": false
          }
         },
         "title": "KeychainCredentialQueryResultItem",
         "type": "object",
         "_attrs_order_": [
          "id",
          "name",
          "type",
          "attributes"
         ]
        },
        {
         "type": "integer"
        }
       ],
       "title": "result",
       "_name_": "result"
      },
      "keychaincredential_create": {
       "anyOf": [
        {
         "additionalProperties": false,
         "properties": {
          "name": {
           "description": "Distinguishes this Keychain Credential from others.",
           "minLength": 1,
           "title": "name",
           "type": "string",
           "_name_": "name",
           "_required_": true
          },
          "type": {
           "const": "SSH_KEY_PAIR",
           "enum": [
            "SSH_KEY_PAIR"
           ],
           "title": "type",
           "type": "string",
           "_name_": "type",
           "_required_": true
          },
          "attributes": {
           "title": "attributes",
           "_name_": "attributes",
           "_required_": true
          }
         },
         "required": [
          "name",
          "type",
          "attributes"
         ],
         "title": "KeychainCredentialCreateSSHKeyPairEntry",
         "type": "object",
         "_attrs_order_": [
          "name",
          "type",
          "attributes"
         ]
        },
        {
         "additionalProperties": false,
         "properties": {
          "name": {
           "description": "Distinguishes this Keychain Credential from others.",
           "minLength": 1,
           "title": "name",
           "type": "string",
           "_name_": "name",
           "_required_": true
          },
          "type": {
           "const": "SSH_CREDENTIALS",
           "enum": [
            "SSH_CREDENTIALS"
           ],
           "title": "type",
           "type": "string",
           "_name_": "type",
           "_required_": true
          },
          "attributes": {
           "title": "attributes",
           "_name_": "attributes",
           "_required_": true
          }
         },
         "required": [
          "name",
          "type",
          "attributes"
         ],
         "title": "KeychainCredentialCreateSSHCredentialsEntry",
         "type": "object",
         "_attrs_order_": [
          "name",
          "type",
          "attributes"
         ]
        }
       ],
       "title": "keychain_credential_create",
       "_name_": "keychain_credential_create"
      },
      "return_schema_of_keychaincredential_create": {
       "anyOf": [
        {
         "additionalProperties": false,
         "properties": {
          "id": {
           "title": "id",
           "type": "integer",
           "_name_": "id",
           "_required_": true
          },
          "name": {
           "description": "Distinguishes this Keychain Credential from others.",
           "minLength": 1,
           "title": "name",
           "type": "string",
           "_name_": "name",
           "_required_": true
          },
          "type": {
           "const": "SSH_KEY_PAIR",
           "enum": [
            "SSH_KEY_PAIR"
           ],
           "title": "type",
           "type": "string",
           "_name_": "type",
           "_required_": true
          },
          "attributes": {
           "title": "attributes",
           "_name_": "attributes",
           "_required_": true
          }
         },
         "required": [
          "id",
          "name",
          "type",
          "attributes"
         ],
         "title": "SSHKeyPairEntry",
         "type": "object",
         "_attrs_order_": [
          "id",
          "name",
          "type",
          "attributes"
         ]
        },
        {
         "additionalProperties": false,
         "properties": {
          "id": {
           "title": "id",
           "type": "integer",
           "_name_": "id",
           "_required_": true
          },
          "name": {
           "description": "Distinguishes this Keychain Credential from others.",
           "minLength": 1,
           "title": "name",
           "type": "string",
           "_name_": "name",
           "_required_": true
          },
          "type": {
           "const": "SSH_CREDENTIALS",
           "enum": [
            "SSH_CREDENTIALS"
           ],
           "title": "type",
           "type": "string",
           "_name_": "type",
           "_required_": true
          },
          "attributes": {
           "title": "attributes",
           "_name_": "attributes",
           "_required_": true
          }
         },
         "required": [
          "id",
          "name",
          "type",
          "attributes"
         ],
         "title": "SSHCredentialsEntry",
         "type": "object",
         "_attrs_order_": [
          "id",
          "name",
          "type",
          "attributes"
         ]
        }
       ],
       "title": "result",
       "_name_": "result"
      },
      "keychaincredential_delete": {
       "additionalProperties": false,
       "properties": {
        "cascade": {
         "default": false,
         "title": "cascade",
         "type": "boolean",
         "_name_": "cascade"
        }
       },
       "title": "options",
       "type": "object",
       "default": {
        "cascade": false
       },
       "_name_": "options",
       "_attrs_order_": [
        "cascade"
       ]
      },
      "return_schema_of_keychaincredential_delete": {
       "title": "result",
       "type": "null",
       "_name_": "result"
      },
      "keychaincredential_update": {
       "anyOf": [
        {
         "additionalProperties": false,
         "properties": {
          "name": {
           "description": "Distinguishes this Keychain Credential from others.",
           "minLength": 1,
           "title": "name",
           "type": "string",
           "_name_": "name",
           "_required_": false
          },
          "attributes": {
           "title": "attributes",
           "_name_": "attributes",
           "_required_": false
          }
         },
         "title": "KeychainCredentialUpdateSSHKeyPairEntry",
         "type": "object",
         "_attrs_order_": [
          "name",
          "attributes"
         ]
        },
        {
         "additionalProperties": false,
         "properties": {
          "name": {
           "description": "Distinguishes this Keychain Credential from others.",
           "minLength": 1,
           "title": "name",
           "type": "string",
           "_name_": "name",
           "_required_": false
          },
          "attributes": {
           "title": "attributes",
           "_name_": "attributes",
           "_required_": false
          }
         },
         "title": "KeychainCredentialUpdateSSHCredentialsEntry",
         "type": "object",
         "_attrs_order_": [
          "name",
          "attributes"
         ]
        }
       ],
       "title": "keychain_credential_update",
       "_name_": "keychain_credential_update"
      },
      "return_schema_of_keychaincredential_update": {
       "anyOf": [
        {
         "additionalProperties": false,
         "properties": {
          "id": {
           "title": "id",
           "type": "integer",
           "_name_": "id",
           "_required_": true
          },
          "name": {
           "description": "Distinguishes this Keychain Credential from others.",
           "minLength": 1,
           "title": "name",
           "type": "string",
           "_name_": "name",
           "_required_": true
          },
          "type": {
           "const": "SSH_KEY_PAIR",
           "enum": [
            "SSH_KEY_PAIR"
           ],
           "title": "type",
           "type": "string",
           "_name_": "type",
           "_required_": true
          },
          "attributes": {
           "title": "attributes",
           "_name_": "attributes",
           "_required_": true
          }
         },
         "required": [
          "id",
          "name",
          "type",
          "attributes"
         ],
         "title": "SSHKeyPairEntry",
         "type": "object",
         "_attrs_order_": [
          "id",
          "name",
          "type",
          "attributes"
         ]
        },
        {
         "additionalProperties": false,
         "properties": {
          "id": {
           "title": "id",
           "type": "integer",
           "_name_": "id",
           "_required_": true
          },
          "name": {
           "description": "Distinguishes this Keychain Credential from others.",
           "minLength": 1,
           "title": "name",
           "type": "string",
           "_name_": "name",
           "_required_": true
          },
          "type": {
           "const": "SSH_CREDENTIALS",
           "enum": [
            "SSH_CREDENTIALS"
           ],
           "title": "type",
           "type": "string",
           "_name_": "type",
           "_required_": true
          },
          "attributes": {
           "title": "attributes",
           "_name_": "attributes",
           "_required_": true
          }
         },
         "required": [
          "id",
          "name",
          "type",
          "attributes"
         ],
         "title": "SSHCredentialsEntry",
         "type": "object",
         "_attrs_order_": [
          "id",
          "name",
          "type",
          "attributes"
         ]
        }
       ],
       "title": "result",
       "_name_": "result"
      },
      "return_schema_of_keychaincredential_generate_ssh_key_pair": {
       "additionalProperties": false,
       "properties": {
        "private_key": {
         "title": "private_key",
         "type": "string",
         "_name_": "private_key"
        },
        "public_key": {
         "title": "public_key",
         "type": "string",
         "_name_": "public_key"
        }
       },
       "required": [
        "private_key",
        "public_key"
       ],
       "title": "result",
       "type": "object",
       "_name_": "result",
       "_attrs_order_": [
        "private_key",
        "public_key"
       ]
      },
      "keychaincredential_get_instance_0": {
       "title": "id",
       "type": "integer",
       "_name_": "id"
      },
      "keychaincredential_get_instance_1": {
       "additionalProperties": false,
       "properties": {
        "relationships": {
         "default": true,
         "title": "relationships",
         "type": "boolean",
         "_name_": "relationships"
        },
        "extend": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "extend",
         "_name_": "extend"
        },
        "extend_context": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "extend_context",
         "_name_": "extend_context"
        },
        "prefix": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "prefix",
         "_name_": "prefix"
        },
        "extra": {
         "default": {},
         "title": "extra",
         "type": "object",
         "_name_": "extra"
        },
        "order_by": {
         "default": [],
         "items": {
          "type": "string"
         },
         "title": "order_by",
         "type": "array",
         "_name_": "order_by"
        },
        "select": {
         "default": [],
         "items": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "items": [
             {}
            ],
            "type": "array"
           }
          ]
         },
         "title": "select",
         "type": "array",
         "_name_": "select"
        },
        "count": {
         "default": false,
         "title": "count",
         "type": "boolean",
         "_name_": "count"
        },
        "get": {
         "default": false,
         "title": "get",
         "type": "boolean",
         "_name_": "get"
        },
        "offset": {
         "default": 0,
         "title": "offset",
         "type": "integer",
         "_name_": "offset"
        },
        "limit": {
         "default": 0,
         "title": "limit",
         "type": "integer",
         "_name_": "limit"
        },
        "force_sql_filters": {
         "default": false,
         "title": "force_sql_filters",
         "type": "boolean",
         "_name_": "force_sql_filters"
        }
       },
       "title": "options",
       "type": "object",
       "default": {},
       "_name_": "options",
       "_attrs_order_": [
        "relationships",
        "extend",
        "extend_context",
        "prefix",
        "extra",
        "order_by",
        "select",
        "count",
        "get",
        "offset",
        "limit",
        "force_sql_filters"
       ]
      },
      "keychaincredential_get_instance": {
       "type": "object",
       "properties": {
        "id": {
         "$ref": "#/components/schemas/keychaincredential_get_instance_0"
        },
        "options": {
         "$ref": "#/components/schemas/keychaincredential_get_instance_1"
        }
       }
      },
      "return_schema_of_keychaincredential_get_instance": {
       "additionalProperties": false,
       "properties": {
        "id": {
         "title": "id",
         "type": "integer",
         "_name_": "id"
        },
        "name": {
         "description": "Distinguishes this Keychain Credential from others.",
         "minLength": 1,
         "title": "name",
         "type": "string",
         "_name_": "name"
        },
        "type": {
         "enum": [
          "SSH_KEY_PAIR",
          "SSH_CREDENTIALS"
         ],
         "title": "type",
         "type": "string",
         "_name_": "type"
        },
        "attributes": {
         "anyOf": [
          {},
          {}
         ],
         "title": "attributes",
         "_name_": "attributes"
        }
       },
       "required": [
        "id",
        "name",
        "type",
        "attributes"
       ],
       "title": "result",
       "type": "object",
       "_name_": "result",
       "_attrs_order_": [
        "id",
        "name",
        "type",
        "attributes"
       ]
      },
      "keychaincredential_remote_ssh_host_key_scan": {
       "additionalProperties": false,
       "properties": {
        "host": {
         "minLength": 1,
         "title": "host",
         "type": "string",
         "_name_": "host"
        },
        "port": {
         "default": 22,
         "title": "port",
         "type": "integer",
         "_name_": "port"
        },
        "connect_timeout": {
         "default": 10,
         "title": "connect_timeout",
         "type": "integer",
         "_name_": "connect_timeout"
        }
       },
       "required": [
        "host"
       ],
       "title": "keychain_remote_ssh_host_key_scan",
       "type": "object",
       "_name_": "keychain_remote_ssh_host_key_scan",
       "_attrs_order_": [
        "host",
        "port",
        "connect_timeout"
       ]
      },
      "return_schema_of_keychaincredential_remote_ssh_host_key_scan": {
       "title": "result",
       "type": "string",
       "_name_": "result"
      },
      "keychaincredential_remote_ssh_semiautomatic_setup": {
       "additionalProperties": false,
       "properties": {
        "name": {
         "minLength": 1,
         "title": "name",
         "type": "string",
         "_name_": "name"
        },
        "url": {
         "format": "uri",
         "maxLength": 2083,
         "minLength": 1,
         "title": "url",
         "type": "string",
         "_name_": "url"
        },
        "verify_ssl": {
         "default": true,
         "title": "verify_ssl",
         "type": "boolean",
         "_name_": "verify_ssl"
        },
        "token": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "token",
         "_name_": "token"
        },
        "admin_username": {
         "default": "root",
         "title": "admin_username",
         "type": "string",
         "_name_": "admin_username"
        },
        "password": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "password",
         "_name_": "password"
        },
        "otp_token": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "otp_token",
         "_name_": "otp_token"
        },
        "username": {
         "default": "root",
         "title": "username",
         "type": "string",
         "_name_": "username"
        },
        "private_key": {
         "title": "private_key",
         "type": "integer",
         "_name_": "private_key"
        },
        "connect_timeout": {
         "default": 10,
         "title": "connect_timeout",
         "type": "integer",
         "_name_": "connect_timeout"
        },
        "sudo": {
         "default": false,
         "title": "sudo",
         "type": "boolean",
         "_name_": "sudo"
        }
       },
       "required": [
        "name",
        "url",
        "private_key"
       ],
       "title": "data",
       "type": "object",
       "_name_": "data",
       "_attrs_order_": [
        "name",
        "url",
        "verify_ssl",
        "token",
        "admin_username",
        "password",
        "otp_token",
        "username",
        "private_key",
        "connect_timeout",
        "sudo"
       ]
      },
      "return_schema_of_keychaincredential_remote_ssh_semiautomatic_setup": {
       "additionalProperties": false,
       "properties": {
        "id": {
         "title": "id",
         "type": "integer",
         "_name_": "id"
        },
        "name": {
         "description": "Distinguishes this Keychain Credential from others.",
         "minLength": 1,
         "title": "name",
         "type": "string",
         "_name_": "name"
        },
        "type": {
         "const": "SSH_CREDENTIALS",
         "enum": [
          "SSH_CREDENTIALS"
         ],
         "title": "type",
         "type": "string",
         "_name_": "type"
        },
        "attributes": {
         "title": "attributes",
         "_name_": "attributes"
        }
       },
       "required": [
        "id",
        "name",
        "type",
        "attributes"
       ],
       "title": "result",
       "type": "object",
       "_name_": "result",
       "_attrs_order_": [
        "id",
        "name",
        "type",
        "attributes"
       ]
      },
      "keychaincredential_setup_ssh_connection": {
       "discriminator": {
        "mapping": {
         "MANUAL": "#/$defs/SetupSSHConnectionManual",
         "SEMI-AUTOMATIC": "#/$defs/SetupSSHConnectionSemiautomatic"
        },
        "propertyName": "setup_type"
       },
       "oneOf": [
        {
         "additionalProperties": false,
         "properties": {
          "private_key": {
           "discriminator": {
            "mapping": {
             "False": "#/$defs/KeychainCredentialSetupSSHConnectionKeyExisting",
             "True": "#/$defs/KeychainCredentialSetupSSHConnectionKeyNew"
            },
            "propertyName": "generate_key"
           },
           "oneOf": [
            {},
            {}
           ],
           "title": "private_key",
           "_name_": "private_key",
           "_required_": true
          },
          "connection_name": {
           "minLength": 1,
           "title": "connection_name",
           "type": "string",
           "_name_": "connection_name",
           "_required_": true
          },
          "setup_type": {
           "const": "MANUAL",
           "default": "MANUAL",
           "enum": [
            "MANUAL"
           ],
           "title": "setup_type",
           "type": "string",
           "_name_": "setup_type",
           "_required_": false
          },
          "manual_setup": {
           "title": "manual_setup",
           "_name_": "manual_setup",
           "_required_": true
          }
         },
         "required": [
          "private_key",
          "connection_name",
          "manual_setup"
         ],
         "title": "SetupSSHConnectionManual",
         "type": "object",
         "_attrs_order_": [
          "private_key",
          "connection_name",
          "setup_type",
          "manual_setup"
         ]
        },
        {
         "additionalProperties": false,
         "properties": {
          "private_key": {
           "discriminator": {
            "mapping": {
             "False": "#/$defs/KeychainCredentialSetupSSHConnectionKeyExisting",
             "True": "#/$defs/KeychainCredentialSetupSSHConnectionKeyNew"
            },
            "propertyName": "generate_key"
           },
           "oneOf": [
            {},
            {}
           ],
           "title": "private_key",
           "_name_": "private_key",
           "_required_": true
          },
          "connection_name": {
           "minLength": 1,
           "title": "connection_name",
           "type": "string",
           "_name_": "connection_name",
           "_required_": true
          },
          "setup_type": {
           "const": "SEMI-AUTOMATIC",
           "default": "SEMI-AUTOMATIC",
           "enum": [
            "SEMI-AUTOMATIC"
           ],
           "title": "setup_type",
           "type": "string",
           "_name_": "setup_type",
           "_required_": false
          },
          "semi_automatic_setup": {
           "title": "semi_automatic_setup",
           "_name_": "semi_automatic_setup",
           "_required_": true
          }
         },
         "required": [
          "private_key",
          "connection_name",
          "semi_automatic_setup"
         ],
         "title": "SetupSSHConnectionSemiautomatic",
         "type": "object",
         "_attrs_order_": [
          "private_key",
          "connection_name",
          "setup_type",
          "semi_automatic_setup"
         ]
        }
       ],
       "title": "options",
       "_name_": "options"
      },
      "return_schema_of_keychaincredential_setup_ssh_connection": {
       "additionalProperties": false,
       "properties": {
        "id": {
         "title": "id",
         "type": "integer",
         "_name_": "id"
        },
        "name": {
         "description": "Distinguishes this Keychain Credential from others.",
         "minLength": 1,
         "title": "name",
         "type": "string",
         "_name_": "name"
        },
        "type": {
         "const": "SSH_CREDENTIALS",
         "enum": [
          "SSH_CREDENTIALS"
         ],
         "title": "type",
         "type": "string",
         "_name_": "type"
        },
        "attributes": {
         "title": "attributes",
         "_name_": "attributes"
        }
       },
       "required": [
        "id",
        "name",
        "type",
        "attributes"
       ],
       "title": "result",
       "type": "object",
       "_name_": "result",
       "_attrs_order_": [
        "id",
        "name",
        "type",
        "attributes"
       ]
      },
      "keychaincredential_used_by": {
       "title": "id",
       "type": "integer",
       "_name_": "id"
      },
      "return_schema_of_keychaincredential_used_by": {
       "items": {
        "additionalProperties": false,
        "properties": {
         "title": {
          "title": "title",
          "type": "string",
          "_name_": "title",
          "_required_": true
         },
         "unbind_method": {
          "enum": [
           "delete",
           "disable"
          ],
          "title": "unbind_method",
          "type": "string",
          "_name_": "unbind_method",
          "_required_": true
         }
        },
        "required": [
         "title",
         "unbind_method"
        ],
        "title": "UsedKeychainCredential",
        "type": "object",
        "_attrs_order_": [
         "title",
         "unbind_method"
        ]
       },
       "title": "result",
       "type": "array",
       "_name_": "result"
      },
      "return_schema_of_kmip_config": {
       "type": "object",
       "properties": {
        "id": {
         "type": "integer",
         "_name_": "id",
         "title": "id"
        },
        "enabled": {
         "type": "boolean",
         "_name_": "enabled",
         "title": "enabled"
        },
        "manage_sed_disks": {
         "type": "boolean",
         "_name_": "manage_sed_disks",
         "title": "manage_sed_disks"
        },
        "manage_zfs_keys": {
         "type": "boolean",
         "_name_": "manage_zfs_keys",
         "title": "manage_zfs_keys"
        },
        "certificate": {
         "type": "integer",
         "_name_": "certificate",
         "title": "certificate",
         "nullable": true
        },
        "certificate_authority": {
         "type": "integer",
         "_name_": "certificate_authority",
         "title": "certificate_authority",
         "nullable": true
        },
        "port": {
         "type": "integer",
         "_name_": "port",
         "title": "port"
        },
        "server": {
         "_name_": "server",
         "title": "server",
         "type": "string",
         "nullable": true
        },
        "ssl_version": {
         "_name_": "ssl_version",
         "title": "ssl_version",
         "type": "string",
         "enum": [
          "PROTOCOL_TLSv1",
          "PROTOCOL_TLSv1_1",
          "PROTOCOL_TLSv1_2"
         ]
        }
       },
       "additionalProperties": false,
       "_name_": "kmip_entry",
       "title": "kmip_entry",
       "default": {},
       "_attrs_order_": [
        "id",
        "enabled",
        "manage_sed_disks",
        "manage_zfs_keys",
        "certificate",
        "certificate_authority",
        "port",
        "server",
        "ssl_version"
       ]
      },
      "kmip_update": {
       "type": "object",
       "properties": {
        "enabled": {
         "type": "boolean",
         "_name_": "enabled",
         "title": "enabled",
         "description": "`enabled` if true, cannot be set to disabled if there are existing keys pending to be synced. However users\ncan still perform this action by enabling `force_clear`."
        },
        "manage_sed_disks": {
         "type": "boolean",
         "_name_": "manage_sed_disks",
         "title": "manage_sed_disks",
         "description": "`manage_zfs_keys`/`manage_sed_disks` when enabled will sync keys from local database to remote KMIP server.\nWhen disabled, if there are any keys left to be retrieved from the KMIP server,\nit will sync them back to local database."
        },
        "manage_zfs_keys": {
         "type": "boolean",
         "_name_": "manage_zfs_keys",
         "title": "manage_zfs_keys",
         "description": "`manage_zfs_keys`/`manage_sed_disks` when enabled will sync keys from local database to remote KMIP server.\nWhen disabled, if there are any keys left to be retrieved from the KMIP server,\nit will sync them back to local database."
        },
        "certificate": {
         "type": "integer",
         "_name_": "certificate",
         "title": "certificate",
         "description": "System currently authenticates connection with remote KMIP Server with a TLS handshake. `certificate` and",
         "nullable": true
        },
        "certificate_authority": {
         "type": "integer",
         "_name_": "certificate_authority",
         "title": "certificate_authority",
         "description": "`certificate_authority` determine the certs which will be used to initiate the TLS handshake with `server`.",
         "nullable": true
        },
        "port": {
         "type": "integer",
         "_name_": "port",
         "title": "port"
        },
        "server": {
         "_name_": "server",
         "title": "server",
         "type": "string",
         "description": "`certificate_authority` determine the certs which will be used to initiate the TLS handshake with `server`.\n`validate` is enabled by default. When enabled, system will test connection to `server` making sure\nit's reachable.",
         "nullable": true
        },
        "ssl_version": {
         "_name_": "ssl_version",
         "title": "ssl_version",
         "type": "string",
         "enum": [
          "PROTOCOL_TLSv1",
          "PROTOCOL_TLSv1_1",
          "PROTOCOL_TLSv1_2"
         ],
         "description": "`ssl_version` can be specified to match the ssl configuration being used by KMIP server."
        },
        "force_clear": {
         "type": "boolean",
         "_name_": "force_clear",
         "title": "force_clear",
         "description": "`enabled` if true, cannot be set to disabled if there are existing keys pending to be synced. However users\ncan still perform this action by enabling `force_clear`.\n`change_server` is a boolean field which allows users to migrate data between two KMIP servers. System\nwill first migrate keys from old KMIP server to local database and then migrate the keys from local database\nto new KMIP server. If it is unable to retrieve all the keys from old server, this will fail. Users can bypass\nthis by enabling `force_clear`."
        },
        "change_server": {
         "type": "boolean",
         "_name_": "change_server",
         "title": "change_server",
         "description": "`change_server` is a boolean field which allows users to migrate data between two KMIP servers. System\nwill first migrate keys from old KMIP server to local database and then migrate the keys from local database\nto new KMIP server. If it is unable to retrieve all the keys from old server, this will fail. Users can bypass\nthis by enabling `force_clear`."
        },
        "validate": {
         "type": "boolean",
         "_name_": "validate",
         "title": "validate",
         "description": "`validate` is enabled by default. When enabled, system will test connection to `server` making sure\nit's reachable."
        }
       },
       "additionalProperties": false,
       "_name_": "kmip_update",
       "title": "kmip_update",
       "default": {},
       "_attrs_order_": [
        "enabled",
        "manage_sed_disks",
        "manage_zfs_keys",
        "certificate",
        "certificate_authority",
        "port",
        "server",
        "ssl_version",
        "force_clear",
        "change_server",
        "validate"
       ]
      },
      "return_schema_of_kmip_update": {
       "type": "object",
       "properties": {
        "id": {
         "type": "integer",
         "_name_": "id",
         "title": "id"
        },
        "enabled": {
         "type": "boolean",
         "_name_": "enabled",
         "title": "enabled",
         "description": "`enabled` if true, cannot be set to disabled if there are existing keys pending to be synced. However users\ncan still perform this action by enabling `force_clear`."
        },
        "manage_sed_disks": {
         "type": "boolean",
         "_name_": "manage_sed_disks",
         "title": "manage_sed_disks",
         "description": "`manage_zfs_keys`/`manage_sed_disks` when enabled will sync keys from local database to remote KMIP server.\nWhen disabled, if there are any keys left to be retrieved from the KMIP server,\nit will sync them back to local database."
        },
        "manage_zfs_keys": {
         "type": "boolean",
         "_name_": "manage_zfs_keys",
         "title": "manage_zfs_keys",
         "description": "`manage_zfs_keys`/`manage_sed_disks` when enabled will sync keys from local database to remote KMIP server.\nWhen disabled, if there are any keys left to be retrieved from the KMIP server,\nit will sync them back to local database."
        },
        "certificate": {
         "type": "integer",
         "_name_": "certificate",
         "title": "certificate",
         "description": "System currently authenticates connection with remote KMIP Server with a TLS handshake. `certificate` and",
         "nullable": true
        },
        "certificate_authority": {
         "type": "integer",
         "_name_": "certificate_authority",
         "title": "certificate_authority",
         "description": "`certificate_authority` determine the certs which will be used to initiate the TLS handshake with `server`.",
         "nullable": true
        },
        "port": {
         "type": "integer",
         "_name_": "port",
         "title": "port"
        },
        "server": {
         "_name_": "server",
         "title": "server",
         "type": "string",
         "description": "`certificate_authority` determine the certs which will be used to initiate the TLS handshake with `server`.\n`validate` is enabled by default. When enabled, system will test connection to `server` making sure\nit's reachable.",
         "nullable": true
        },
        "ssl_version": {
         "_name_": "ssl_version",
         "title": "ssl_version",
         "type": "string",
         "enum": [
          "PROTOCOL_TLSv1",
          "PROTOCOL_TLSv1_1",
          "PROTOCOL_TLSv1_2"
         ],
         "description": "`ssl_version` can be specified to match the ssl configuration being used by KMIP server."
        }
       },
       "additionalProperties": false,
       "_name_": "kmip_update_returns",
       "title": "kmip_update_returns",
       "default": {},
       "_attrs_order_": [
        "id",
        "enabled",
        "manage_sed_disks",
        "manage_zfs_keys",
        "certificate",
        "certificate_authority",
        "port",
        "server",
        "ssl_version"
       ]
      },
      "return_schema_of_kmip_kmip_sync_pending": {
       "type": "boolean",
       "_name_": "pending_kmip_sync",
       "title": "pending_kmip_sync"
      },
      "return_schema_of_ldap_config": {
       "type": "object",
       "properties": {
        "hostname": {
         "_name_": "hostname",
         "title": "hostname",
         "default": null,
         "type": "array",
         "items": {}
        },
        "basedn": {
         "_name_": "basedn",
         "title": "basedn",
         "type": "string"
        },
        "binddn": {
         "_name_": "binddn",
         "title": "binddn",
         "type": "string"
        },
        "bindpw": {
         "_name_": "bindpw",
         "title": "bindpw",
         "type": "string"
        },
        "anonbind": {
         "type": "boolean",
         "_name_": "anonbind",
         "title": "anonbind",
         "default": false
        },
        "ssl": {
         "_name_": "ssl",
         "title": "ldap_ssl_choice",
         "default": "ON",
         "type": "string",
         "enum": [
          "OFF",
          "ON",
          "START_TLS"
         ]
        },
        "certificate": {
         "type": "integer",
         "_name_": "certificate",
         "title": "certificate",
         "nullable": true
        },
        "validate_certificates": {
         "type": "boolean",
         "_name_": "validate_certificates",
         "title": "validate_certificates",
         "default": true
        },
        "disable_freenas_cache": {
         "type": "boolean",
         "_name_": "disable_freenas_cache",
         "title": "disable_freenas_cache"
        },
        "timeout": {
         "type": "integer",
         "_name_": "timeout",
         "title": "timeout",
         "default": 30
        },
        "dns_timeout": {
         "type": "integer",
         "_name_": "dns_timeout",
         "title": "dns_timeout",
         "default": 5
        },
        "kerberos_realm": {
         "type": "integer",
         "_name_": "kerberos_realm",
         "title": "kerberos_realm",
         "nullable": true
        },
        "kerberos_principal": {
         "_name_": "kerberos_principal",
         "title": "kerberos_principal",
         "type": "string"
        },
        "auxiliary_parameters": {
         "_name_": "auxiliary_parameters",
         "title": "auxiliary_parameters",
         "type": "string"
        },
        "schema": {
         "_name_": "schema",
         "title": "nss_info_ldap",
         "default": "RFC2307",
         "type": "string",
         "enum": [
          "RFC2307",
          "RFC2307BIS"
         ]
        },
        "enable": {
         "type": "boolean",
         "_name_": "enable",
         "title": "enable"
        },
        "search_bases": {
         "type": "object",
         "properties": {
          "base_user": {
           "_name_": "base_user",
           "title": "base_user",
           "type": "string",
           "nullable": true
          },
          "base_group": {
           "_name_": "base_group",
           "title": "base_group",
           "type": "string",
           "nullable": true
          },
          "base_netgroup": {
           "_name_": "base_netgroup",
           "title": "base_netgroup",
           "type": "string",
           "nullable": true
          }
         },
         "additionalProperties": false,
         "_name_": "search_bases",
         "title": "search_bases",
         "default": {},
         "_attrs_order_": [
          "base_user",
          "base_group",
          "base_netgroup"
         ]
        },
        "attribute_maps": {
         "type": "object",
         "properties": {
          "passwd": {
           "type": "object",
           "properties": {
            "user_object_class": {
             "_name_": "user_object_class",
             "title": "user_object_class",
             "type": "string",
             "nullable": true
            },
            "user_name": {
             "_name_": "user_name",
             "title": "user_name",
             "type": "string",
             "nullable": true
            },
            "user_uid": {
             "_name_": "user_uid",
             "title": "user_uid",
             "type": "string",
             "nullable": true
            },
            "user_gid": {
             "_name_": "user_gid",
             "title": "user_gid",
             "type": "string",
             "nullable": true
            },
            "user_gecos": {
             "_name_": "user_gecos",
             "title": "user_gecos",
             "type": "string",
             "nullable": true
            },
            "user_home_directory": {
             "_name_": "user_home_directory",
             "title": "user_home_directory",
             "type": "string",
             "nullable": true
            },
            "user_shell": {
             "_name_": "user_shell",
             "title": "user_shell",
             "type": "string",
             "nullable": true
            }
           },
           "additionalProperties": false,
           "_name_": "passwd",
           "title": "passwd",
           "default": {},
           "_attrs_order_": [
            "user_object_class",
            "user_name",
            "user_uid",
            "user_gid",
            "user_gecos",
            "user_home_directory",
            "user_shell"
           ]
          },
          "shadow": {
           "type": "object",
           "properties": {
            "shadow_object_class": {
             "_name_": "shadow_object_class",
             "title": "shadow_object_class",
             "type": "string",
             "nullable": true
            },
            "shadow_last_change": {
             "_name_": "shadow_last_change",
             "title": "shadow_last_change",
             "type": "string",
             "nullable": true
            },
            "shadow_min": {
             "_name_": "shadow_min",
             "title": "shadow_min",
             "type": "string",
             "nullable": true
            },
            "shadow_max": {
             "_name_": "shadow_max",
             "title": "shadow_max",
             "type": "string",
             "nullable": true
            },
            "shadow_warning": {
             "_name_": "shadow_warning",
             "title": "shadow_warning",
             "type": "string",
             "nullable": true
            },
            "shadow_inactive": {
             "_name_": "shadow_inactive",
             "title": "shadow_inactive",
             "type": "string",
             "nullable": true
            },
            "shadow_expire": {
             "_name_": "shadow_expire",
             "title": "shadow_expire",
             "type": "string",
             "nullable": true
            }
           },
           "additionalProperties": false,
           "_name_": "shadow",
           "title": "shadow",
           "default": {},
           "_attrs_order_": [
            "shadow_object_class",
            "shadow_last_change",
            "shadow_min",
            "shadow_max",
            "shadow_warning",
            "shadow_inactive",
            "shadow_expire"
           ]
          },
          "group": {
           "type": "object",
           "properties": {
            "group_object_class": {
             "_name_": "group_object_class",
             "title": "group_object_class",
             "type": "string",
             "nullable": true
            },
            "group_gid": {
             "_name_": "group_gid",
             "title": "group_gid",
             "type": "string",
             "nullable": true
            },
            "group_member": {
             "_name_": "group_member",
             "title": "group_member",
             "type": "string",
             "nullable": true
            }
           },
           "additionalProperties": false,
           "_name_": "group",
           "title": "group",
           "default": {},
           "_attrs_order_": [
            "group_object_class",
            "group_gid",
            "group_member"
           ]
          },
          "netgroup": {
           "type": "object",
           "properties": {
            "netgroup_object_class": {
             "_name_": "netgroup_object_class",
             "title": "netgroup_object_class",
             "type": "string",
             "nullable": true
            },
            "netgroup_member": {
             "_name_": "netgroup_member",
             "title": "netgroup_member",
             "type": "string",
             "nullable": true
            },
            "netgroup_triple": {
             "_name_": "netgroup_triple",
             "title": "netgroup_triple",
             "type": "string",
             "nullable": true
            }
           },
           "additionalProperties": false,
           "_name_": "netgroup",
           "title": "netgroup",
           "default": {},
           "_attrs_order_": [
            "netgroup_object_class",
            "netgroup_member",
            "netgroup_triple"
           ]
          }
         },
         "additionalProperties": false,
         "_name_": "attribute_maps",
         "title": "attribute_maps",
         "default": {},
         "_attrs_order_": [
          "passwd",
          "shadow",
          "group",
          "netgroup"
         ]
        }
       },
       "additionalProperties": false,
       "_name_": "ldap_update",
       "title": "ldap_update",
       "default": {},
       "_attrs_order_": [
        "hostname",
        "basedn",
        "binddn",
        "bindpw",
        "anonbind",
        "ssl",
        "certificate",
        "validate_certificates",
        "disable_freenas_cache",
        "timeout",
        "dns_timeout",
        "kerberos_realm",
        "kerberos_principal",
        "auxiliary_parameters",
        "schema",
        "enable",
        "search_bases",
        "attribute_maps"
       ]
      },
      "ldap_update": {
       "type": "object",
       "properties": {
        "hostname": {
         "_name_": "hostname",
         "title": "hostname",
         "default": null,
         "type": "array",
         "items": {},
         "description": "`hostname` list of ip addresses or hostnames of LDAP servers with\nwhich to communicate in order of preference. Failover only occurs\nif the current LDAP server is unresponsive."
        },
        "basedn": {
         "_name_": "basedn",
         "title": "basedn",
         "type": "string",
         "description": "`basedn` specifies the default base DN to use when performing ldap\noperations. The base must be specified as a Distinguished Name in LDAP\nformat."
        },
        "binddn": {
         "_name_": "binddn",
         "title": "binddn",
         "type": "string",
         "description": "`binddn` specifies the default bind DN to use when performing ldap\noperations. The bind DN must be specified as a Distinguished Name in\nLDAP format.\n`kerberos_principal` kerberos principal to use for SASL GSSAPI\nauthentication to the remote server. If `kerberos_realm` is specified\nwithout a keytab, then the `binddn` and `bindpw` are used to\nperform to obtain the ticket necessary for GSSAPI authentication."
        },
        "bindpw": {
         "_name_": "bindpw",
         "title": "bindpw",
         "type": "string",
         "description": "`kerberos_principal` kerberos principal to use for SASL GSSAPI\nauthentication to the remote server. If `kerberos_realm` is specified\nwithout a keytab, then the `binddn` and `bindpw` are used to\nperform to obtain the ticket necessary for GSSAPI authentication."
        },
        "anonbind": {
         "type": "boolean",
         "_name_": "anonbind",
         "title": "anonbind",
         "default": false,
         "description": "`anonbind` use anonymous authentication."
        },
        "ssl": {
         "_name_": "ssl",
         "title": "ldap_ssl_choice",
         "default": "ON",
         "type": "string",
         "enum": [
          "OFF",
          "ON",
          "START_TLS"
         ],
         "description": "`ssl` establish SSL/TLS-protected connections to the LDAP server(s).\nGSSAPI signing is disabled on SSL/TLS-protected connections if\nkerberos authentication is used."
        },
        "certificate": {
         "type": "integer",
         "_name_": "certificate",
         "title": "certificate",
         "description": "`certificate` LDAPs client certificate to be used for certificate-\nbased authentication.",
         "nullable": true
        },
        "validate_certificates": {
         "type": "boolean",
         "_name_": "validate_certificates",
         "title": "validate_certificates",
         "default": true,
         "description": "`validate_certificates` specifies whether to perform checks on server\ncertificates in a TLS session. If enabled, TLS_REQCERT demand is set.\nThe server certificate is requested. If no certificate is provided or\nif a bad certificate is provided, the session is immediately terminated.\nIf disabled, TLS_REQCERT allow is set. The server certificate is\nrequested, but all errors are ignored."
        },
        "disable_freenas_cache": {
         "type": "boolean",
         "_name_": "disable_freenas_cache",
         "title": "disable_freenas_cache"
        },
        "timeout": {
         "type": "integer",
         "_name_": "timeout",
         "title": "timeout",
         "default": 30,
         "description": "`timeout` specifies  a  timeout  (in  seconds) after which calls to\nsynchronous LDAP APIs will abort if no response is received."
        },
        "dns_timeout": {
         "type": "integer",
         "_name_": "dns_timeout",
         "title": "dns_timeout",
         "default": 5,
         "description": "`dns_timeout` specifies the timeout (in seconds) after which the\npoll(2)/select(2) following a connect(2) returns in case of no activity\nfor openldap. For nslcd this specifies the time limit (in seconds) to\nuse when connecting to the directory server. This directly impacts the\nlength of time that the LDAP service tries before failing over to\na secondary LDAP URI."
        },
        "kerberos_realm": {
         "type": "integer",
         "_name_": "kerberos_realm",
         "title": "kerberos_realm",
         "description": "`kerberos_realm` in which the server is located. This parameter is\nonly required for SASL GSSAPI authentication to the remote LDAP server.\n`kerberos_principal` kerberos principal to use for SASL GSSAPI\nauthentication to the remote server. If `kerberos_realm` is specified\nwithout a keytab, then the `binddn` and `bindpw` are used to\nperform to obtain the ticket necessary for GSSAPI authentication.",
         "nullable": true
        },
        "kerberos_principal": {
         "_name_": "kerberos_principal",
         "title": "kerberos_principal",
         "type": "string",
         "description": "`kerberos_principal` kerberos principal to use for SASL GSSAPI\nauthentication to the remote server. If `kerberos_realm` is specified\nwithout a keytab, then the `binddn` and `bindpw` are used to\nperform to obtain the ticket necessary for GSSAPI authentication."
        },
        "auxiliary_parameters": {
         "_name_": "auxiliary_parameters",
         "title": "auxiliary_parameters",
         "type": "string"
        },
        "schema": {
         "_name_": "schema",
         "title": "nss_info_ldap",
         "default": "RFC2307",
         "type": "string",
         "enum": [
          "RFC2307",
          "RFC2307BIS"
         ]
        },
        "enable": {
         "type": "boolean",
         "_name_": "enable",
         "title": "enable"
        },
        "search_bases": {
         "type": "object",
         "properties": {
          "base_user": {
           "_name_": "base_user",
           "title": "base_user",
           "type": "string",
           "nullable": true
          },
          "base_group": {
           "_name_": "base_group",
           "title": "base_group",
           "type": "string",
           "nullable": true
          },
          "base_netgroup": {
           "_name_": "base_netgroup",
           "title": "base_netgroup",
           "type": "string",
           "nullable": true
          }
         },
         "additionalProperties": false,
         "_name_": "search_bases",
         "title": "search_bases",
         "default": {},
         "_attrs_order_": [
          "base_user",
          "base_group",
          "base_netgroup"
         ],
         "description": "`search_bases` - these parameters allow specifying a non-standard\nsearch base for users (`base_user`), groups (`base_group`), and\nnetgroups (`base_netgroup`). Must be a valid LDAP DN. No remote\nvalidation is performed that the search base exists or contains\nexpected objects."
        },
        "attribute_maps": {
         "type": "object",
         "properties": {
          "passwd": {
           "type": "object",
           "properties": {
            "user_object_class": {
             "_name_": "user_object_class",
             "title": "user_object_class",
             "type": "string",
             "nullable": true
            },
            "user_name": {
             "_name_": "user_name",
             "title": "user_name",
             "type": "string",
             "nullable": true
            },
            "user_uid": {
             "_name_": "user_uid",
             "title": "user_uid",
             "type": "string",
             "nullable": true
            },
            "user_gid": {
             "_name_": "user_gid",
             "title": "user_gid",
             "type": "string",
             "nullable": true
            },
            "user_gecos": {
             "_name_": "user_gecos",
             "title": "user_gecos",
             "type": "string",
             "nullable": true
            },
            "user_home_directory": {
             "_name_": "user_home_directory",
             "title": "user_home_directory",
             "type": "string",
             "nullable": true
            },
            "user_shell": {
             "_name_": "user_shell",
             "title": "user_shell",
             "type": "string",
             "nullable": true
            }
           },
           "additionalProperties": false,
           "_name_": "passwd",
           "title": "passwd",
           "default": {},
           "_attrs_order_": [
            "user_object_class",
            "user_name",
            "user_uid",
            "user_gid",
            "user_gecos",
            "user_home_directory",
            "user_shell"
           ]
          },
          "shadow": {
           "type": "object",
           "properties": {
            "shadow_object_class": {
             "_name_": "shadow_object_class",
             "title": "shadow_object_class",
             "type": "string",
             "nullable": true
            },
            "shadow_last_change": {
             "_name_": "shadow_last_change",
             "title": "shadow_last_change",
             "type": "string",
             "nullable": true
            },
            "shadow_min": {
             "_name_": "shadow_min",
             "title": "shadow_min",
             "type": "string",
             "nullable": true
            },
            "shadow_max": {
             "_name_": "shadow_max",
             "title": "shadow_max",
             "type": "string",
             "nullable": true
            },
            "shadow_warning": {
             "_name_": "shadow_warning",
             "title": "shadow_warning",
             "type": "string",
             "nullable": true
            },
            "shadow_inactive": {
             "_name_": "shadow_inactive",
             "title": "shadow_inactive",
             "type": "string",
             "nullable": true
            },
            "shadow_expire": {
             "_name_": "shadow_expire",
             "title": "shadow_expire",
             "type": "string",
             "nullable": true
            }
           },
           "additionalProperties": false,
           "_name_": "shadow",
           "title": "shadow",
           "default": {},
           "_attrs_order_": [
            "shadow_object_class",
            "shadow_last_change",
            "shadow_min",
            "shadow_max",
            "shadow_warning",
            "shadow_inactive",
            "shadow_expire"
           ]
          },
          "group": {
           "type": "object",
           "properties": {
            "group_object_class": {
             "_name_": "group_object_class",
             "title": "group_object_class",
             "type": "string",
             "nullable": true
            },
            "group_gid": {
             "_name_": "group_gid",
             "title": "group_gid",
             "type": "string",
             "nullable": true
            },
            "group_member": {
             "_name_": "group_member",
             "title": "group_member",
             "type": "string",
             "nullable": true
            }
           },
           "additionalProperties": false,
           "_name_": "group",
           "title": "group",
           "default": {},
           "_attrs_order_": [
            "group_object_class",
            "group_gid",
            "group_member"
           ]
          },
          "netgroup": {
           "type": "object",
           "properties": {
            "netgroup_object_class": {
             "_name_": "netgroup_object_class",
             "title": "netgroup_object_class",
             "type": "string",
             "nullable": true
            },
            "netgroup_member": {
             "_name_": "netgroup_member",
             "title": "netgroup_member",
             "type": "string",
             "nullable": true
            },
            "netgroup_triple": {
             "_name_": "netgroup_triple",
             "title": "netgroup_triple",
             "type": "string",
             "nullable": true
            }
           },
           "additionalProperties": false,
           "_name_": "netgroup",
           "title": "netgroup",
           "default": {},
           "_attrs_order_": [
            "netgroup_object_class",
            "netgroup_member",
            "netgroup_triple"
           ]
          }
         },
         "additionalProperties": false,
         "_name_": "attribute_maps",
         "title": "attribute_maps",
         "default": {},
         "_attrs_order_": [
          "passwd",
          "shadow",
          "group",
          "netgroup"
         ],
         "description": "`attribute_maps` - allow specifying alternate non-RFC-compliant\nattribute names for `passwd`, `shadow`, `group`, and `netgroup` object\nclasses as specified in RFC 2307. Setting key to `null` has special\nmeaning that RFC defaults for the configure `nss_info_schema` will\nbe used."
        }
       },
       "additionalProperties": false,
       "_name_": "ldap_update",
       "title": "ldap_update",
       "default": {},
       "_attrs_order_": [
        "hostname",
        "basedn",
        "binddn",
        "bindpw",
        "anonbind",
        "ssl",
        "certificate",
        "validate_certificates",
        "disable_freenas_cache",
        "timeout",
        "dns_timeout",
        "kerberos_realm",
        "kerberos_principal",
        "auxiliary_parameters",
        "schema",
        "enable",
        "search_bases",
        "attribute_maps"
       ]
      },
      "return_schema_of_ldap_update": {
       "type": "object",
       "properties": {
        "hostname": {
         "_name_": "hostname",
         "title": "hostname",
         "default": null,
         "type": "array",
         "items": {},
         "description": "`hostname` list of ip addresses or hostnames of LDAP servers with\nwhich to communicate in order of preference. Failover only occurs\nif the current LDAP server is unresponsive."
        },
        "basedn": {
         "_name_": "basedn",
         "title": "basedn",
         "type": "string",
         "description": "`basedn` specifies the default base DN to use when performing ldap\noperations. The base must be specified as a Distinguished Name in LDAP\nformat."
        },
        "binddn": {
         "_name_": "binddn",
         "title": "binddn",
         "type": "string",
         "description": "`binddn` specifies the default bind DN to use when performing ldap\noperations. The bind DN must be specified as a Distinguished Name in\nLDAP format.\n`kerberos_principal` kerberos principal to use for SASL GSSAPI\nauthentication to the remote server. If `kerberos_realm` is specified\nwithout a keytab, then the `binddn` and `bindpw` are used to\nperform to obtain the ticket necessary for GSSAPI authentication."
        },
        "bindpw": {
         "_name_": "bindpw",
         "title": "bindpw",
         "type": "string",
         "description": "`kerberos_principal` kerberos principal to use for SASL GSSAPI\nauthentication to the remote server. If `kerberos_realm` is specified\nwithout a keytab, then the `binddn` and `bindpw` are used to\nperform to obtain the ticket necessary for GSSAPI authentication."
        },
        "anonbind": {
         "type": "boolean",
         "_name_": "anonbind",
         "title": "anonbind",
         "default": false,
         "description": "`anonbind` use anonymous authentication."
        },
        "ssl": {
         "_name_": "ssl",
         "title": "ldap_ssl_choice",
         "default": "ON",
         "type": "string",
         "enum": [
          "OFF",
          "ON",
          "START_TLS"
         ],
         "description": "`ssl` establish SSL/TLS-protected connections to the LDAP server(s).\nGSSAPI signing is disabled on SSL/TLS-protected connections if\nkerberos authentication is used."
        },
        "certificate": {
         "type": "integer",
         "_name_": "certificate",
         "title": "certificate",
         "description": "`certificate` LDAPs client certificate to be used for certificate-\nbased authentication.",
         "nullable": true
        },
        "validate_certificates": {
         "type": "boolean",
         "_name_": "validate_certificates",
         "title": "validate_certificates",
         "default": true,
         "description": "`validate_certificates` specifies whether to perform checks on server\ncertificates in a TLS session. If enabled, TLS_REQCERT demand is set.\nThe server certificate is requested. If no certificate is provided or\nif a bad certificate is provided, the session is immediately terminated.\nIf disabled, TLS_REQCERT allow is set. The server certificate is\nrequested, but all errors are ignored."
        },
        "disable_freenas_cache": {
         "type": "boolean",
         "_name_": "disable_freenas_cache",
         "title": "disable_freenas_cache"
        },
        "timeout": {
         "type": "integer",
         "_name_": "timeout",
         "title": "timeout",
         "default": 30,
         "description": "`timeout` specifies  a  timeout  (in  seconds) after which calls to\nsynchronous LDAP APIs will abort if no response is received."
        },
        "dns_timeout": {
         "type": "integer",
         "_name_": "dns_timeout",
         "title": "dns_timeout",
         "default": 5,
         "description": "`dns_timeout` specifies the timeout (in seconds) after which the\npoll(2)/select(2) following a connect(2) returns in case of no activity\nfor openldap. For nslcd this specifies the time limit (in seconds) to\nuse when connecting to the directory server. This directly impacts the\nlength of time that the LDAP service tries before failing over to\na secondary LDAP URI."
        },
        "kerberos_realm": {
         "type": "integer",
         "_name_": "kerberos_realm",
         "title": "kerberos_realm",
         "description": "`kerberos_realm` in which the server is located. This parameter is\nonly required for SASL GSSAPI authentication to the remote LDAP server.\n`kerberos_principal` kerberos principal to use for SASL GSSAPI\nauthentication to the remote server. If `kerberos_realm` is specified\nwithout a keytab, then the `binddn` and `bindpw` are used to\nperform to obtain the ticket necessary for GSSAPI authentication.",
         "nullable": true
        },
        "kerberos_principal": {
         "_name_": "kerberos_principal",
         "title": "kerberos_principal",
         "type": "string",
         "description": "`kerberos_principal` kerberos principal to use for SASL GSSAPI\nauthentication to the remote server. If `kerberos_realm` is specified\nwithout a keytab, then the `binddn` and `bindpw` are used to\nperform to obtain the ticket necessary for GSSAPI authentication."
        },
        "auxiliary_parameters": {
         "_name_": "auxiliary_parameters",
         "title": "auxiliary_parameters",
         "type": "string"
        },
        "schema": {
         "_name_": "schema",
         "title": "nss_info_ldap",
         "default": "RFC2307",
         "type": "string",
         "enum": [
          "RFC2307",
          "RFC2307BIS"
         ]
        },
        "enable": {
         "type": "boolean",
         "_name_": "enable",
         "title": "enable"
        },
        "search_bases": {
         "type": "object",
         "properties": {
          "base_user": {
           "_name_": "base_user",
           "title": "base_user",
           "type": "string",
           "nullable": true
          },
          "base_group": {
           "_name_": "base_group",
           "title": "base_group",
           "type": "string",
           "nullable": true
          },
          "base_netgroup": {
           "_name_": "base_netgroup",
           "title": "base_netgroup",
           "type": "string",
           "nullable": true
          }
         },
         "additionalProperties": false,
         "_name_": "search_bases",
         "title": "search_bases",
         "default": {},
         "_attrs_order_": [
          "base_user",
          "base_group",
          "base_netgroup"
         ],
         "description": "`search_bases` - these parameters allow specifying a non-standard\nsearch base for users (`base_user`), groups (`base_group`), and\nnetgroups (`base_netgroup`). Must be a valid LDAP DN. No remote\nvalidation is performed that the search base exists or contains\nexpected objects."
        },
        "attribute_maps": {
         "type": "object",
         "properties": {
          "passwd": {
           "type": "object",
           "properties": {
            "user_object_class": {
             "_name_": "user_object_class",
             "title": "user_object_class",
             "type": "string",
             "nullable": true
            },
            "user_name": {
             "_name_": "user_name",
             "title": "user_name",
             "type": "string",
             "nullable": true
            },
            "user_uid": {
             "_name_": "user_uid",
             "title": "user_uid",
             "type": "string",
             "nullable": true
            },
            "user_gid": {
             "_name_": "user_gid",
             "title": "user_gid",
             "type": "string",
             "nullable": true
            },
            "user_gecos": {
             "_name_": "user_gecos",
             "title": "user_gecos",
             "type": "string",
             "nullable": true
            },
            "user_home_directory": {
             "_name_": "user_home_directory",
             "title": "user_home_directory",
             "type": "string",
             "nullable": true
            },
            "user_shell": {
             "_name_": "user_shell",
             "title": "user_shell",
             "type": "string",
             "nullable": true
            }
           },
           "additionalProperties": false,
           "_name_": "passwd",
           "title": "passwd",
           "default": {},
           "_attrs_order_": [
            "user_object_class",
            "user_name",
            "user_uid",
            "user_gid",
            "user_gecos",
            "user_home_directory",
            "user_shell"
           ]
          },
          "shadow": {
           "type": "object",
           "properties": {
            "shadow_object_class": {
             "_name_": "shadow_object_class",
             "title": "shadow_object_class",
             "type": "string",
             "nullable": true
            },
            "shadow_last_change": {
             "_name_": "shadow_last_change",
             "title": "shadow_last_change",
             "type": "string",
             "nullable": true
            },
            "shadow_min": {
             "_name_": "shadow_min",
             "title": "shadow_min",
             "type": "string",
             "nullable": true
            },
            "shadow_max": {
             "_name_": "shadow_max",
             "title": "shadow_max",
             "type": "string",
             "nullable": true
            },
            "shadow_warning": {
             "_name_": "shadow_warning",
             "title": "shadow_warning",
             "type": "string",
             "nullable": true
            },
            "shadow_inactive": {
             "_name_": "shadow_inactive",
             "title": "shadow_inactive",
             "type": "string",
             "nullable": true
            },
            "shadow_expire": {
             "_name_": "shadow_expire",
             "title": "shadow_expire",
             "type": "string",
             "nullable": true
            }
           },
           "additionalProperties": false,
           "_name_": "shadow",
           "title": "shadow",
           "default": {},
           "_attrs_order_": [
            "shadow_object_class",
            "shadow_last_change",
            "shadow_min",
            "shadow_max",
            "shadow_warning",
            "shadow_inactive",
            "shadow_expire"
           ]
          },
          "group": {
           "type": "object",
           "properties": {
            "group_object_class": {
             "_name_": "group_object_class",
             "title": "group_object_class",
             "type": "string",
             "nullable": true
            },
            "group_gid": {
             "_name_": "group_gid",
             "title": "group_gid",
             "type": "string",
             "nullable": true
            },
            "group_member": {
             "_name_": "group_member",
             "title": "group_member",
             "type": "string",
             "nullable": true
            }
           },
           "additionalProperties": false,
           "_name_": "group",
           "title": "group",
           "default": {},
           "_attrs_order_": [
            "group_object_class",
            "group_gid",
            "group_member"
           ]
          },
          "netgroup": {
           "type": "object",
           "properties": {
            "netgroup_object_class": {
             "_name_": "netgroup_object_class",
             "title": "netgroup_object_class",
             "type": "string",
             "nullable": true
            },
            "netgroup_member": {
             "_name_": "netgroup_member",
             "title": "netgroup_member",
             "type": "string",
             "nullable": true
            },
            "netgroup_triple": {
             "_name_": "netgroup_triple",
             "title": "netgroup_triple",
             "type": "string",
             "nullable": true
            }
           },
           "additionalProperties": false,
           "_name_": "netgroup",
           "title": "netgroup",
           "default": {},
           "_attrs_order_": [
            "netgroup_object_class",
            "netgroup_member",
            "netgroup_triple"
           ]
          }
         },
         "additionalProperties": false,
         "_name_": "attribute_maps",
         "title": "attribute_maps",
         "default": {},
         "_attrs_order_": [
          "passwd",
          "shadow",
          "group",
          "netgroup"
         ],
         "description": "`attribute_maps` - allow specifying alternate non-RFC-compliant\nattribute names for `passwd`, `shadow`, `group`, and `netgroup` object\nclasses as specified in RFC 2307. Setting key to `null` has special\nmeaning that RFC defaults for the configure `nss_info_schema` will\nbe used."
        }
       },
       "additionalProperties": false,
       "_name_": "ldap_update_returns",
       "title": "ldap_update_returns",
       "default": {},
       "_attrs_order_": [
        "hostname",
        "basedn",
        "binddn",
        "bindpw",
        "anonbind",
        "ssl",
        "certificate",
        "validate_certificates",
        "disable_freenas_cache",
        "timeout",
        "dns_timeout",
        "kerberos_realm",
        "kerberos_principal",
        "auxiliary_parameters",
        "schema",
        "enable",
        "search_bases",
        "attribute_maps"
       ]
      },
      "return_schema_of_ldap_schema_choices": {
       "_name_": "schema_choices",
       "title": "schema_choices",
       "default": [],
       "type": "array",
       "items": {
        "_name_": "nss_info_ldap",
        "title": "nss_info_ldap",
        "default": "RFC2307",
        "_required_": false,
        "type": "string",
        "enum": [
         "RFC2307",
         "RFC2307BIS"
        ]
       }
      },
      "return_schema_of_ldap_ssl_choices": {
       "_name_": "ssl_choices",
       "title": "ssl_choices",
       "default": [],
       "type": "array",
       "items": {
        "_name_": "ssl",
        "title": "ldap_ssl_choice",
        "default": "ON",
        "_required_": false,
        "type": "string",
        "enum": [
         "OFF",
         "ON",
         "START_TLS"
        ]
       }
      },
      "return_schema_of_mail_config": {
       "type": "object",
       "properties": {
        "fromemail": {
         "_name_": "fromemail",
         "title": "fromemail",
         "type": "string"
        },
        "fromname": {
         "_name_": "fromname",
         "title": "fromname",
         "type": "string"
        },
        "outgoingserver": {
         "_name_": "outgoingserver",
         "title": "outgoingserver",
         "type": "string"
        },
        "port": {
         "type": "integer",
         "_name_": "port",
         "title": "port"
        },
        "security": {
         "_name_": "security",
         "title": "security",
         "type": "string",
         "enum": [
          "PLAIN",
          "SSL",
          "TLS"
         ]
        },
        "smtp": {
         "type": "boolean",
         "_name_": "smtp",
         "title": "smtp"
        },
        "user": {
         "_name_": "user",
         "title": "user",
         "type": "string",
         "nullable": true
        },
        "pass": {
         "_name_": "pass",
         "title": "pass",
         "type": "string",
         "nullable": true
        },
        "oauth": {
         "type": "object",
         "properties": {
          "provider": {
           "_name_": "provider",
           "title": "provider",
           "type": "string"
          },
          "client_id": {
           "_name_": "client_id",
           "title": "client_id",
           "type": "string"
          },
          "client_secret": {
           "_name_": "client_secret",
           "title": "client_secret",
           "type": "string"
          },
          "refresh_token": {
           "_name_": "refresh_token",
           "title": "refresh_token",
           "type": "string"
          }
         },
         "additionalProperties": false,
         "_name_": "oauth",
         "title": "oauth",
         "default": {},
         "_attrs_order_": [
          "provider",
          "client_id",
          "client_secret",
          "refresh_token"
         ]
        },
        "id": {
         "type": "integer",
         "_name_": "id",
         "title": "id"
        }
       },
       "additionalProperties": false,
       "_name_": "mail_entry",
       "title": "mail_entry",
       "default": {},
       "_attrs_order_": [
        "fromemail",
        "fromname",
        "outgoingserver",
        "port",
        "security",
        "smtp",
        "user",
        "pass",
        "oauth",
        "id"
       ]
      },
      "mail_update": {
       "type": "object",
       "properties": {
        "fromemail": {
         "_name_": "fromemail",
         "title": "fromemail",
         "type": "string",
         "description": "`fromemail` is used as a sending address which the mail server will use for sending emails."
        },
        "fromname": {
         "_name_": "fromname",
         "title": "fromname",
         "type": "string"
        },
        "outgoingserver": {
         "_name_": "outgoingserver",
         "title": "outgoingserver",
         "type": "string",
         "description": "`outgoingserver` is the hostname or IP address of SMTP server used for sending an email."
        },
        "port": {
         "type": "integer",
         "_name_": "port",
         "title": "port"
        },
        "security": {
         "_name_": "security",
         "title": "security",
         "type": "string",
         "enum": [
          "PLAIN",
          "SSL",
          "TLS"
         ],
         "description": "`security` is type of encryption desired."
        },
        "smtp": {
         "type": "boolean",
         "_name_": "smtp",
         "title": "smtp"
        },
        "user": {
         "_name_": "user",
         "title": "user",
         "type": "string",
         "nullable": true
        },
        "pass": {
         "_name_": "pass",
         "title": "pass",
         "type": "string",
         "nullable": true
        },
        "oauth": {
         "type": "object",
         "properties": {
          "provider": {
           "_name_": "provider",
           "title": "provider",
           "type": "string"
          },
          "client_id": {
           "_name_": "client_id",
           "title": "client_id",
           "type": "string"
          },
          "client_secret": {
           "_name_": "client_secret",
           "title": "client_secret",
           "type": "string"
          },
          "refresh_token": {
           "_name_": "refresh_token",
           "title": "refresh_token",
           "type": "string"
          }
         },
         "additionalProperties": false,
         "_name_": "oauth",
         "title": "oauth",
         "default": {},
         "_attrs_order_": [
          "provider",
          "client_id",
          "client_secret",
          "refresh_token"
         ]
        }
       },
       "additionalProperties": false,
       "_name_": "mail_update",
       "title": "mail_update",
       "default": {},
       "_attrs_order_": [
        "fromemail",
        "fromname",
        "outgoingserver",
        "port",
        "security",
        "smtp",
        "user",
        "pass",
        "oauth"
       ]
      },
      "return_schema_of_mail_update": {
       "type": "object",
       "properties": {
        "fromemail": {
         "_name_": "fromemail",
         "title": "fromemail",
         "type": "string",
         "description": "`fromemail` is used as a sending address which the mail server will use for sending emails."
        },
        "fromname": {
         "_name_": "fromname",
         "title": "fromname",
         "type": "string"
        },
        "outgoingserver": {
         "_name_": "outgoingserver",
         "title": "outgoingserver",
         "type": "string",
         "description": "`outgoingserver` is the hostname or IP address of SMTP server used for sending an email."
        },
        "port": {
         "type": "integer",
         "_name_": "port",
         "title": "port"
        },
        "security": {
         "_name_": "security",
         "title": "security",
         "type": "string",
         "enum": [
          "PLAIN",
          "SSL",
          "TLS"
         ],
         "description": "`security` is type of encryption desired."
        },
        "smtp": {
         "type": "boolean",
         "_name_": "smtp",
         "title": "smtp"
        },
        "user": {
         "_name_": "user",
         "title": "user",
         "type": "string",
         "nullable": true
        },
        "pass": {
         "_name_": "pass",
         "title": "pass",
         "type": "string",
         "nullable": true
        },
        "oauth": {
         "type": "object",
         "properties": {
          "provider": {
           "_name_": "provider",
           "title": "provider",
           "type": "string"
          },
          "client_id": {
           "_name_": "client_id",
           "title": "client_id",
           "type": "string"
          },
          "client_secret": {
           "_name_": "client_secret",
           "title": "client_secret",
           "type": "string"
          },
          "refresh_token": {
           "_name_": "refresh_token",
           "title": "refresh_token",
           "type": "string"
          }
         },
         "additionalProperties": false,
         "_name_": "oauth",
         "title": "oauth",
         "default": {},
         "_attrs_order_": [
          "provider",
          "client_id",
          "client_secret",
          "refresh_token"
         ]
        },
        "id": {
         "type": "integer",
         "_name_": "id",
         "title": "id"
        }
       },
       "additionalProperties": false,
       "_name_": "mail_update_returns",
       "title": "mail_update_returns",
       "default": {},
       "_attrs_order_": [
        "fromemail",
        "fromname",
        "outgoingserver",
        "port",
        "security",
        "smtp",
        "user",
        "pass",
        "oauth",
        "id"
       ]
      },
      "mail_send_0": {
       "type": "object",
       "properties": {
        "subject": {
         "_name_": "subject",
         "title": "subject",
         "type": "string"
        },
        "text": {
         "_name_": "text",
         "title": "text",
         "type": "string",
         "description": "`text` will be formatted to HTML using Markdown and rendered using default E-Mail template."
        },
        "html": {
         "_name_": "html",
         "title": "html",
         "type": "string",
         "description": "You can put your own HTML using `html`. If `html` is null, no HTML MIME part will be added to E-Mail.",
         "nullable": true
        },
        "to": {
         "_name_": "to",
         "title": "to",
         "default": [],
         "type": "array",
         "items": {
          "_name_": "email",
          "title": "email",
          "_required_": false,
          "type": "string"
         }
        },
        "cc": {
         "_name_": "cc",
         "title": "cc",
         "default": [],
         "type": "array",
         "items": {
          "_name_": "email",
          "title": "email",
          "_required_": false,
          "type": "string"
         }
        },
        "interval": {
         "type": "integer",
         "_name_": "interval",
         "title": "interval",
         "nullable": true
        },
        "channel": {
         "_name_": "channel",
         "title": "channel",
         "type": "string",
         "nullable": true
        },
        "timeout": {
         "type": "integer",
         "_name_": "timeout",
         "title": "timeout",
         "default": 300
        },
        "attachments": {
         "type": "boolean",
         "_name_": "attachments",
         "title": "attachments",
         "default": false,
         "description": "If `attachments` is true, a list compromised of the following dict is required\nvia HTTP upload:\n  - headers(list)\n    - name(str)\n    - value(str)\n    - params(dict)\n  - content (str)"
        },
        "queue": {
         "type": "boolean",
         "_name_": "queue",
         "title": "queue",
         "default": true
        },
        "extra_headers": {
         "type": "object",
         "properties": {},
         "additionalProperties": true,
         "_name_": "extra_headers",
         "title": "extra_headers",
         "default": {},
         "_attrs_order_": []
        }
       },
       "additionalProperties": false,
       "_name_": "mail_message",
       "title": "mail_message",
       "default": {},
       "_attrs_order_": [
        "subject",
        "text",
        "html",
        "to",
        "cc",
        "interval",
        "channel",
        "timeout",
        "attachments",
        "queue",
        "extra_headers"
       ]
      },
      "mail_send_1": {
       "type": "object",
       "properties": {
        "fromemail": {
         "_name_": "fromemail",
         "title": "fromemail",
         "type": "string"
        },
        "fromname": {
         "_name_": "fromname",
         "title": "fromname",
         "type": "string"
        },
        "outgoingserver": {
         "_name_": "outgoingserver",
         "title": "outgoingserver",
         "type": "string"
        },
        "port": {
         "type": "integer",
         "_name_": "port",
         "title": "port"
        },
        "security": {
         "_name_": "security",
         "title": "security",
         "type": "string",
         "enum": [
          "PLAIN",
          "SSL",
          "TLS"
         ]
        },
        "smtp": {
         "type": "boolean",
         "_name_": "smtp",
         "title": "smtp"
        },
        "user": {
         "_name_": "user",
         "title": "user",
         "type": "string",
         "nullable": true
        },
        "pass": {
         "_name_": "pass",
         "title": "pass",
         "type": "string",
         "nullable": true
        },
        "oauth": {
         "type": "object",
         "properties": {
          "provider": {
           "_name_": "provider",
           "title": "provider",
           "type": "string"
          },
          "client_id": {
           "_name_": "client_id",
           "title": "client_id",
           "type": "string"
          },
          "client_secret": {
           "_name_": "client_secret",
           "title": "client_secret",
           "type": "string"
          },
          "refresh_token": {
           "_name_": "refresh_token",
           "title": "refresh_token",
           "type": "string"
          }
         },
         "additionalProperties": false,
         "_name_": "oauth",
         "title": "oauth",
         "default": {},
         "_attrs_order_": [
          "provider",
          "client_id",
          "client_secret",
          "refresh_token"
         ]
        }
       },
       "additionalProperties": false,
       "_name_": "mail_update",
       "title": "mail_update",
       "default": {},
       "_attrs_order_": [
        "fromemail",
        "fromname",
        "outgoingserver",
        "port",
        "security",
        "smtp",
        "user",
        "pass",
        "oauth"
       ]
      },
      "mail_send": {
       "type": "object",
       "properties": {
        "mail_message": {
         "$ref": "#/components/schemas/mail_send_0"
        },
        "mail_update": {
         "$ref": "#/components/schemas/mail_send_1"
        }
       }
      },
      "return_schema_of_mail_send": {
       "type": "boolean",
       "_name_": "successfully_sent",
       "title": "successfully_sent"
      },
      "return_schema_of_network_configuration_config": {
       "type": "object",
       "properties": {
        "id": {
         "type": "integer",
         "_name_": "id",
         "title": "id"
        },
        "hostname": {
         "_name_": "hostname",
         "title": "hostname",
         "type": "string"
        },
        "domain": {
         "_name_": "domain",
         "title": "domain",
         "type": "string"
        },
        "ipv4gateway": {
         "_name_": "ipv4gateway",
         "title": "ipv4gateway",
         "type": "string"
        },
        "ipv6gateway": {
         "_name_": "ipv6gateway",
         "title": "ipv6gateway",
         "type": "string"
        },
        "nameserver1": {
         "_name_": "nameserver1",
         "title": "nameserver1",
         "type": "string"
        },
        "nameserver2": {
         "_name_": "nameserver2",
         "title": "nameserver2",
         "type": "string"
        },
        "nameserver3": {
         "_name_": "nameserver3",
         "title": "nameserver3",
         "type": "string"
        },
        "httpproxy": {
         "_name_": "httpproxy",
         "title": "httpproxy",
         "type": "string"
        },
        "hosts": {
         "_name_": "hosts",
         "title": "hosts",
         "default": [],
         "type": "array",
         "items": {
          "_name_": "host",
          "title": "host",
          "_required_": false,
          "type": "string"
         }
        },
        "domains": {
         "_name_": "domains",
         "title": "domains",
         "default": [],
         "type": "array",
         "items": {
          "_name_": "domain",
          "title": "domain",
          "_required_": false,
          "type": "string"
         }
        },
        "service_announcement": {
         "type": "object",
         "properties": {
          "netbios": {
           "type": "boolean",
           "_name_": "netbios",
           "title": "netbios"
          },
          "mdns": {
           "type": "boolean",
           "_name_": "mdns",
           "title": "mdns"
          },
          "wsd": {
           "type": "boolean",
           "_name_": "wsd",
           "title": "wsd"
          }
         },
         "additionalProperties": false,
         "_name_": "service_announcement",
         "title": "service_announcement",
         "default": {},
         "_attrs_order_": [
          "netbios",
          "mdns",
          "wsd"
         ]
        },
        "activity": {
         "type": "object",
         "properties": {
          "type": {
           "_name_": "type",
           "title": "type",
           "type": "string",
           "enum": [
            "ALLOW",
            "DENY"
           ]
          },
          "activities": {
           "_name_": "activities",
           "title": "activities",
           "default": [],
           "type": "array",
           "items": {
            "_name_": "activity",
            "title": "activity",
            "_required_": false,
            "type": "string"
           }
          }
         },
         "additionalProperties": false,
         "_name_": "activity",
         "title": "activity",
         "default": {},
         "_attrs_order_": [
          "type",
          "activities"
         ]
        },
        "hostname_local": {
         "_name_": "hostname_local",
         "title": "hostname_local",
         "type": "string"
        },
        "hostname_b": {
         "_name_": "hostname_b",
         "title": "hostname_b",
         "type": "string",
         "nullable": true
        },
        "hostname_virtual": {
         "_name_": "hostname_virtual",
         "title": "hostname_virtual",
         "type": "string",
         "nullable": true
        },
        "state": {
         "type": "object",
         "properties": {
          "ipv4gateway": {
           "_name_": "ipv4gateway",
           "title": "ipv4gateway",
           "type": "string"
          },
          "ipv6gateway": {
           "_name_": "ipv6gateway",
           "title": "ipv6gateway",
           "type": "string"
          },
          "nameserver1": {
           "_name_": "nameserver1",
           "title": "nameserver1",
           "type": "string"
          },
          "nameserver2": {
           "_name_": "nameserver2",
           "title": "nameserver2",
           "type": "string"
          },
          "nameserver3": {
           "_name_": "nameserver3",
           "title": "nameserver3",
           "type": "string"
          }
         },
         "additionalProperties": false,
         "_name_": "state",
         "title": "state",
         "default": {},
         "_attrs_order_": [
          "ipv4gateway",
          "ipv6gateway",
          "nameserver1",
          "nameserver2",
          "nameserver3"
         ]
        }
       },
       "additionalProperties": false,
       "_name_": "network_configuration_entry",
       "title": "network_configuration_entry",
       "default": {},
       "_attrs_order_": [
        "id",
        "hostname",
        "domain",
        "ipv4gateway",
        "ipv6gateway",
        "nameserver1",
        "nameserver2",
        "nameserver3",
        "httpproxy",
        "hosts",
        "domains",
        "service_announcement",
        "activity",
        "hostname_local",
        "hostname_b",
        "hostname_virtual",
        "state"
       ]
      },
      "network_configuration_update": {
       "type": "object",
       "properties": {
        "hostname": {
         "_name_": "hostname",
         "title": "hostname",
         "type": "string"
        },
        "domain": {
         "_name_": "domain",
         "title": "domain",
         "type": "string"
        },
        "ipv4gateway": {
         "_name_": "ipv4gateway",
         "title": "ipv4gateway",
         "type": "string",
         "description": "`ipv4gateway` if set is used instead of the default gateway provided by DHCP."
        },
        "ipv6gateway": {
         "_name_": "ipv6gateway",
         "title": "ipv6gateway",
         "type": "string"
        },
        "nameserver1": {
         "_name_": "nameserver1",
         "title": "nameserver1",
         "type": "string",
         "description": "`nameserver1` is primary DNS server."
        },
        "nameserver2": {
         "_name_": "nameserver2",
         "title": "nameserver2",
         "type": "string",
         "description": "`nameserver2` is secondary DNS server."
        },
        "nameserver3": {
         "_name_": "nameserver3",
         "title": "nameserver3",
         "type": "string",
         "description": "`nameserver3` is tertiary DNS server."
        },
        "httpproxy": {
         "_name_": "httpproxy",
         "title": "httpproxy",
         "type": "string",
         "description": "`httpproxy` attribute must be provided if a proxy is to be used for network operations."
        },
        "hosts": {
         "_name_": "hosts",
         "title": "hosts",
         "default": [],
         "type": "array",
         "items": {
          "_name_": "host",
          "title": "host",
          "_required_": false,
          "type": "string"
         }
        },
        "domains": {
         "_name_": "domains",
         "title": "domains",
         "default": [],
         "type": "array",
         "items": {
          "_name_": "domain",
          "title": "domain",
          "_required_": false,
          "type": "string"
         }
        },
        "service_announcement": {
         "type": "object",
         "properties": {
          "netbios": {
           "type": "boolean",
           "_name_": "netbios",
           "title": "netbios"
          },
          "mdns": {
           "type": "boolean",
           "_name_": "mdns",
           "title": "mdns"
          },
          "wsd": {
           "type": "boolean",
           "_name_": "wsd",
           "title": "wsd"
          }
         },
         "additionalProperties": false,
         "_name_": "service_announcement",
         "title": "service_announcement",
         "default": {},
         "_attrs_order_": [
          "netbios",
          "mdns",
          "wsd"
         ]
        },
        "activity": {
         "type": "object",
         "properties": {
          "type": {
           "_name_": "type",
           "title": "type",
           "type": "string",
           "enum": [
            "ALLOW",
            "DENY"
           ]
          },
          "activities": {
           "_name_": "activities",
           "title": "activities",
           "default": [],
           "type": "array",
           "items": {
            "_name_": "activity",
            "title": "activity",
            "_required_": false,
            "type": "string"
           }
          }
         },
         "additionalProperties": false,
         "_name_": "activity",
         "title": "activity",
         "default": {},
         "_attrs_order_": [
          "type",
          "activities"
         ]
        },
        "hostname_b": {
         "_name_": "hostname_b",
         "title": "hostname_b",
         "type": "string",
         "nullable": true
        },
        "hostname_virtual": {
         "_name_": "hostname_virtual",
         "title": "hostname_virtual",
         "type": "string",
         "nullable": true
        }
       },
       "additionalProperties": false,
       "_name_": "global_configuration_update",
       "title": "global_configuration_update",
       "default": {},
       "_attrs_order_": [
        "hostname",
        "domain",
        "ipv4gateway",
        "ipv6gateway",
        "nameserver1",
        "nameserver2",
        "nameserver3",
        "httpproxy",
        "hosts",
        "domains",
        "service_announcement",
        "activity",
        "hostname_b",
        "hostname_virtual"
       ]
      },
      "return_schema_of_network_configuration_update": {
       "type": "object",
       "properties": {
        "id": {
         "type": "integer",
         "_name_": "id",
         "title": "id"
        },
        "hostname": {
         "_name_": "hostname",
         "title": "hostname",
         "type": "string"
        },
        "domain": {
         "_name_": "domain",
         "title": "domain",
         "type": "string"
        },
        "ipv4gateway": {
         "_name_": "ipv4gateway",
         "title": "ipv4gateway",
         "type": "string",
         "description": "`ipv4gateway` if set is used instead of the default gateway provided by DHCP."
        },
        "ipv6gateway": {
         "_name_": "ipv6gateway",
         "title": "ipv6gateway",
         "type": "string"
        },
        "nameserver1": {
         "_name_": "nameserver1",
         "title": "nameserver1",
         "type": "string",
         "description": "`nameserver1` is primary DNS server."
        },
        "nameserver2": {
         "_name_": "nameserver2",
         "title": "nameserver2",
         "type": "string",
         "description": "`nameserver2` is secondary DNS server."
        },
        "nameserver3": {
         "_name_": "nameserver3",
         "title": "nameserver3",
         "type": "string",
         "description": "`nameserver3` is tertiary DNS server."
        },
        "httpproxy": {
         "_name_": "httpproxy",
         "title": "httpproxy",
         "type": "string",
         "description": "`httpproxy` attribute must be provided if a proxy is to be used for network operations."
        },
        "hosts": {
         "_name_": "hosts",
         "title": "hosts",
         "default": [],
         "type": "array",
         "items": {
          "_name_": "host",
          "title": "host",
          "_required_": false,
          "type": "string"
         }
        },
        "domains": {
         "_name_": "domains",
         "title": "domains",
         "default": [],
         "type": "array",
         "items": {
          "_name_": "domain",
          "title": "domain",
          "_required_": false,
          "type": "string"
         }
        },
        "service_announcement": {
         "type": "object",
         "properties": {
          "netbios": {
           "type": "boolean",
           "_name_": "netbios",
           "title": "netbios"
          },
          "mdns": {
           "type": "boolean",
           "_name_": "mdns",
           "title": "mdns"
          },
          "wsd": {
           "type": "boolean",
           "_name_": "wsd",
           "title": "wsd"
          }
         },
         "additionalProperties": false,
         "_name_": "service_announcement",
         "title": "service_announcement",
         "default": {},
         "_attrs_order_": [
          "netbios",
          "mdns",
          "wsd"
         ]
        },
        "activity": {
         "type": "object",
         "properties": {
          "type": {
           "_name_": "type",
           "title": "type",
           "type": "string",
           "enum": [
            "ALLOW",
            "DENY"
           ]
          },
          "activities": {
           "_name_": "activities",
           "title": "activities",
           "default": [],
           "type": "array",
           "items": {
            "_name_": "activity",
            "title": "activity",
            "_required_": false,
            "type": "string"
           }
          }
         },
         "additionalProperties": false,
         "_name_": "activity",
         "title": "activity",
         "default": {},
         "_attrs_order_": [
          "type",
          "activities"
         ]
        },
        "hostname_local": {
         "_name_": "hostname_local",
         "title": "hostname_local",
         "type": "string"
        },
        "hostname_b": {
         "_name_": "hostname_b",
         "title": "hostname_b",
         "type": "string",
         "nullable": true
        },
        "hostname_virtual": {
         "_name_": "hostname_virtual",
         "title": "hostname_virtual",
         "type": "string",
         "nullable": true
        },
        "state": {
         "type": "object",
         "properties": {
          "ipv4gateway": {
           "_name_": "ipv4gateway",
           "title": "ipv4gateway",
           "type": "string"
          },
          "ipv6gateway": {
           "_name_": "ipv6gateway",
           "title": "ipv6gateway",
           "type": "string"
          },
          "nameserver1": {
           "_name_": "nameserver1",
           "title": "nameserver1",
           "type": "string"
          },
          "nameserver2": {
           "_name_": "nameserver2",
           "title": "nameserver2",
           "type": "string"
          },
          "nameserver3": {
           "_name_": "nameserver3",
           "title": "nameserver3",
           "type": "string"
          }
         },
         "additionalProperties": false,
         "_name_": "state",
         "title": "state",
         "default": {},
         "_attrs_order_": [
          "ipv4gateway",
          "ipv6gateway",
          "nameserver1",
          "nameserver2",
          "nameserver3"
         ]
        }
       },
       "additionalProperties": false,
       "_name_": "network_configuration_update_returns",
       "title": "network_configuration_update_returns",
       "default": {},
       "_attrs_order_": [
        "id",
        "hostname",
        "domain",
        "ipv4gateway",
        "ipv6gateway",
        "nameserver1",
        "nameserver2",
        "nameserver3",
        "httpproxy",
        "hosts",
        "domains",
        "service_announcement",
        "activity",
        "hostname_local",
        "hostname_b",
        "hostname_virtual",
        "state"
       ]
      },
      "return_schema_of_network_configuration_activity_choices": {
       "_name_": "activity_choices",
       "title": "activity_choices",
       "default": [],
       "type": "array",
       "items": {
        "_name_": "activity_choice",
        "title": "activity_choice",
        "default": [],
        "_required_": false,
        "type": "array",
        "items": [
         {
          "_name_": "activity",
          "title": "activity",
          "_required_": false,
          "type": "string"
         }
        ]
       }
      },
      "return_schema_of_network_general_summary": {
       "type": "object",
       "properties": {
        "ips": {
         "type": "object",
         "properties": {},
         "additionalProperties": true,
         "_name_": "ips",
         "title": "ips",
         "default": {},
         "_attrs_order_": []
        },
        "default_routes": {
         "_name_": "default_routes",
         "title": "default_routes",
         "default": [],
         "type": "array",
         "items": {
          "_name_": "default_route",
          "title": "default_route",
          "_required_": false,
          "type": "string"
         }
        },
        "nameservers": {
         "_name_": "nameservers",
         "title": "nameservers",
         "default": [],
         "type": "array",
         "items": {
          "_name_": "nameserver",
          "title": "nameserver",
          "_required_": false,
          "type": "string"
         }
        }
       },
       "additionalProperties": false,
       "_name_": "network_summary",
       "title": "network_summary",
       "default": {},
       "_attrs_order_": [
        "ips",
        "default_routes",
        "nameservers"
       ]
      },
      "return_schema_of_nfs_config": {
       "additionalProperties": false,
       "properties": {
        "id": {
         "title": "id",
         "type": "integer",
         "_name_": "id"
        },
        "servers": {
         "anyOf": [
          {
           "maximum": 256,
           "minimum": 1,
           "type": "integer"
          },
          {
           "type": "null"
          }
         ],
         "description": "Specify the number of nfsd. Default: Number of nfsd is equal number of CPU. ",
         "title": "servers",
         "_name_": "servers"
        },
        "allow_nonroot": {
         "description": "Allow non-root mount requests.  This equates to 'insecure' share option. ",
         "title": "allow_nonroot",
         "type": "boolean",
         "_name_": "allow_nonroot"
        },
        "protocols": {
         "description": "Specify supported NFS protocols:  NFSv3, NFSv4 or both can be listed. ",
         "items": {
          "enum": [
           "NFSV3",
           "NFSV4"
          ],
          "type": "string"
         },
         "title": "protocols",
         "type": "array",
         "_name_": "protocols"
        },
        "v4_krb": {
         "description": "Force Kerberos authentication on NFS shares. ",
         "title": "v4_krb",
         "type": "boolean",
         "_name_": "v4_krb"
        },
        "v4_domain": {
         "description": "Specify a DNS domain (NFSv4 only). ",
         "title": "v4_domain",
         "type": "string",
         "_name_": "v4_domain"
        },
        "bindip": {
         "default": [],
         "description": "Limit the server IP addresses available for NFS. ",
         "items": {
          "minLength": 1,
          "type": "string"
         },
         "title": "bindip",
         "type": "array",
         "_name_": "bindip"
        },
        "mountd_port": {
         "anyOf": [
          {
           "maximum": 65535,
           "minimum": 1,
           "type": "integer"
          },
          {
           "type": "null"
          }
         ],
         "description": "Specify the mountd port binding. ",
         "title": "mountd_port",
         "_name_": "mountd_port"
        },
        "rpcstatd_port": {
         "anyOf": [
          {
           "maximum": 65535,
           "minimum": 1,
           "type": "integer"
          },
          {
           "type": "null"
          }
         ],
         "description": "Specify the rpc.statd port binding. ",
         "title": "rpcstatd_port",
         "_name_": "rpcstatd_port"
        },
        "rpclockd_port": {
         "anyOf": [
          {
           "maximum": 65535,
           "minimum": 1,
           "type": "integer"
          },
          {
           "type": "null"
          }
         ],
         "description": "Specify the rpc.lockd port binding. ",
         "title": "rpclockd_port",
         "_name_": "rpclockd_port"
        },
        "mountd_log": {
         "description": "Enable or disable mountd logging. ",
         "title": "mountd_log",
         "type": "boolean",
         "_name_": "mountd_log"
        },
        "statd_lockd_log": {
         "description": "Enable or disable statd and lockd logging. ",
         "title": "statd_lockd_log",
         "type": "boolean",
         "_name_": "statd_lockd_log"
        },
        "v4_krb_enabled": {
         "description": "Status of NFSv4 authentication requirement (status only). ",
         "title": "v4_krb_enabled",
         "type": "boolean",
         "_name_": "v4_krb_enabled"
        },
        "userd_manage_gids": {
         "description": "Enable to allow server to manage gids. ",
         "title": "userd_manage_gids",
         "type": "boolean",
         "_name_": "userd_manage_gids"
        },
        "keytab_has_nfs_spn": {
         "description": "Report status of NFS Principal Name in keytab (status only). ",
         "title": "keytab_has_nfs_spn",
         "type": "boolean",
         "_name_": "keytab_has_nfs_spn"
        },
        "managed_nfsd": {
         "description": "Report status of 'servers' field.\nIf True the number of nfsd are managed by the server (status only). ",
         "title": "managed_nfsd",
         "type": "boolean",
         "_name_": "managed_nfsd"
        },
        "rdma": {
         "description": "Enable or disable NFS over RDMA.  Requires RDMA capable NIC. ",
         "title": "rdma",
         "type": "boolean",
         "_name_": "rdma"
        }
       },
       "required": [
        "id",
        "servers",
        "allow_nonroot",
        "protocols",
        "v4_krb",
        "v4_domain",
        "mountd_port",
        "rpcstatd_port",
        "rpclockd_port",
        "mountd_log",
        "statd_lockd_log",
        "v4_krb_enabled",
        "userd_manage_gids",
        "keytab_has_nfs_spn",
        "managed_nfsd",
        "rdma"
       ],
       "title": "result",
       "type": "object",
       "_name_": "result",
       "_attrs_order_": [
        "id",
        "servers",
        "allow_nonroot",
        "protocols",
        "v4_krb",
        "v4_domain",
        "bindip",
        "mountd_port",
        "rpcstatd_port",
        "rpclockd_port",
        "mountd_log",
        "statd_lockd_log",
        "v4_krb_enabled",
        "userd_manage_gids",
        "keytab_has_nfs_spn",
        "managed_nfsd",
        "rdma"
       ]
      },
      "nfs_update": {
       "additionalProperties": false,
       "properties": {
        "servers": {
         "anyOf": [
          {
           "maximum": 256,
           "minimum": 1,
           "type": "integer"
          },
          {
           "type": "null"
          }
         ],
         "description": "Specify the number of nfsd. Default: Number of nfsd is equal number of CPU. ",
         "title": "servers",
         "_name_": "servers"
        },
        "allow_nonroot": {
         "description": "Allow non-root mount requests.  This equates to 'insecure' share option. ",
         "title": "allow_nonroot",
         "type": "boolean",
         "_name_": "allow_nonroot"
        },
        "protocols": {
         "description": "Specify supported NFS protocols:  NFSv3, NFSv4 or both can be listed. ",
         "items": {
          "enum": [
           "NFSV3",
           "NFSV4"
          ],
          "type": "string"
         },
         "title": "protocols",
         "type": "array",
         "_name_": "protocols"
        },
        "v4_krb": {
         "description": "Force Kerberos authentication on NFS shares. ",
         "title": "v4_krb",
         "type": "boolean",
         "_name_": "v4_krb"
        },
        "v4_domain": {
         "description": "Specify a DNS domain (NFSv4 only). ",
         "title": "v4_domain",
         "type": "string",
         "_name_": "v4_domain"
        },
        "bindip": {
         "description": "Limit the server IP addresses available for NFS. ",
         "items": {
          "minLength": 1,
          "type": "string"
         },
         "title": "bindip",
         "type": "array",
         "_name_": "bindip"
        },
        "mountd_port": {
         "anyOf": [
          {
           "maximum": 65535,
           "minimum": 1,
           "type": "integer"
          },
          {
           "type": "null"
          }
         ],
         "description": "Specify the mountd port binding. ",
         "title": "mountd_port",
         "_name_": "mountd_port"
        },
        "rpcstatd_port": {
         "anyOf": [
          {
           "maximum": 65535,
           "minimum": 1,
           "type": "integer"
          },
          {
           "type": "null"
          }
         ],
         "description": "Specify the rpc.statd port binding. ",
         "title": "rpcstatd_port",
         "_name_": "rpcstatd_port"
        },
        "rpclockd_port": {
         "anyOf": [
          {
           "maximum": 65535,
           "minimum": 1,
           "type": "integer"
          },
          {
           "type": "null"
          }
         ],
         "description": "Specify the rpc.lockd port binding. ",
         "title": "rpclockd_port",
         "_name_": "rpclockd_port"
        },
        "mountd_log": {
         "description": "Enable or disable mountd logging. ",
         "title": "mountd_log",
         "type": "boolean",
         "_name_": "mountd_log"
        },
        "statd_lockd_log": {
         "description": "Enable or disable statd and lockd logging. ",
         "title": "statd_lockd_log",
         "type": "boolean",
         "_name_": "statd_lockd_log"
        },
        "userd_manage_gids": {
         "description": "Enable to allow server to manage gids. ",
         "title": "userd_manage_gids",
         "type": "boolean",
         "_name_": "userd_manage_gids"
        },
        "rdma": {
         "description": "Enable or disable NFS over RDMA.  Requires RDMA capable NIC. ",
         "title": "rdma",
         "type": "boolean",
         "_name_": "rdma"
        }
       },
       "title": "nfs_update",
       "type": "object",
       "_name_": "nfs_update",
       "_attrs_order_": [
        "servers",
        "allow_nonroot",
        "protocols",
        "v4_krb",
        "v4_domain",
        "bindip",
        "mountd_port",
        "rpcstatd_port",
        "rpclockd_port",
        "mountd_log",
        "statd_lockd_log",
        "userd_manage_gids",
        "rdma"
       ]
      },
      "return_schema_of_nfs_update": {
       "additionalProperties": false,
       "properties": {
        "id": {
         "title": "id",
         "type": "integer",
         "_name_": "id"
        },
        "servers": {
         "anyOf": [
          {
           "maximum": 256,
           "minimum": 1,
           "type": "integer"
          },
          {
           "type": "null"
          }
         ],
         "description": "Specify the number of nfsd. Default: Number of nfsd is equal number of CPU. ",
         "title": "servers",
         "_name_": "servers"
        },
        "allow_nonroot": {
         "description": "Allow non-root mount requests.  This equates to 'insecure' share option. ",
         "title": "allow_nonroot",
         "type": "boolean",
         "_name_": "allow_nonroot"
        },
        "protocols": {
         "description": "Specify supported NFS protocols:  NFSv3, NFSv4 or both can be listed. ",
         "items": {
          "enum": [
           "NFSV3",
           "NFSV4"
          ],
          "type": "string"
         },
         "title": "protocols",
         "type": "array",
         "_name_": "protocols"
        },
        "v4_krb": {
         "description": "Force Kerberos authentication on NFS shares. ",
         "title": "v4_krb",
         "type": "boolean",
         "_name_": "v4_krb"
        },
        "v4_domain": {
         "description": "Specify a DNS domain (NFSv4 only). ",
         "title": "v4_domain",
         "type": "string",
         "_name_": "v4_domain"
        },
        "bindip": {
         "default": [],
         "description": "Limit the server IP addresses available for NFS. ",
         "items": {
          "minLength": 1,
          "type": "string"
         },
         "title": "bindip",
         "type": "array",
         "_name_": "bindip"
        },
        "mountd_port": {
         "anyOf": [
          {
           "maximum": 65535,
           "minimum": 1,
           "type": "integer"
          },
          {
           "type": "null"
          }
         ],
         "description": "Specify the mountd port binding. ",
         "title": "mountd_port",
         "_name_": "mountd_port"
        },
        "rpcstatd_port": {
         "anyOf": [
          {
           "maximum": 65535,
           "minimum": 1,
           "type": "integer"
          },
          {
           "type": "null"
          }
         ],
         "description": "Specify the rpc.statd port binding. ",
         "title": "rpcstatd_port",
         "_name_": "rpcstatd_port"
        },
        "rpclockd_port": {
         "anyOf": [
          {
           "maximum": 65535,
           "minimum": 1,
           "type": "integer"
          },
          {
           "type": "null"
          }
         ],
         "description": "Specify the rpc.lockd port binding. ",
         "title": "rpclockd_port",
         "_name_": "rpclockd_port"
        },
        "mountd_log": {
         "description": "Enable or disable mountd logging. ",
         "title": "mountd_log",
         "type": "boolean",
         "_name_": "mountd_log"
        },
        "statd_lockd_log": {
         "description": "Enable or disable statd and lockd logging. ",
         "title": "statd_lockd_log",
         "type": "boolean",
         "_name_": "statd_lockd_log"
        },
        "v4_krb_enabled": {
         "description": "Status of NFSv4 authentication requirement (status only). ",
         "title": "v4_krb_enabled",
         "type": "boolean",
         "_name_": "v4_krb_enabled"
        },
        "userd_manage_gids": {
         "description": "Enable to allow server to manage gids. ",
         "title": "userd_manage_gids",
         "type": "boolean",
         "_name_": "userd_manage_gids"
        },
        "keytab_has_nfs_spn": {
         "description": "Report status of NFS Principal Name in keytab (status only). ",
         "title": "keytab_has_nfs_spn",
         "type": "boolean",
         "_name_": "keytab_has_nfs_spn"
        },
        "managed_nfsd": {
         "description": "Report status of 'servers' field.\nIf True the number of nfsd are managed by the server (status only). ",
         "title": "managed_nfsd",
         "type": "boolean",
         "_name_": "managed_nfsd"
        },
        "rdma": {
         "description": "Enable or disable NFS over RDMA.  Requires RDMA capable NIC. ",
         "title": "rdma",
         "type": "boolean",
         "_name_": "rdma"
        }
       },
       "required": [
        "id",
        "servers",
        "allow_nonroot",
        "protocols",
        "v4_krb",
        "v4_domain",
        "mountd_port",
        "rpcstatd_port",
        "rpclockd_port",
        "mountd_log",
        "statd_lockd_log",
        "v4_krb_enabled",
        "userd_manage_gids",
        "keytab_has_nfs_spn",
        "managed_nfsd",
        "rdma"
       ],
       "title": "result",
       "type": "object",
       "_name_": "result",
       "_attrs_order_": [
        "id",
        "servers",
        "allow_nonroot",
        "protocols",
        "v4_krb",
        "v4_domain",
        "bindip",
        "mountd_port",
        "rpcstatd_port",
        "rpclockd_port",
        "mountd_log",
        "statd_lockd_log",
        "v4_krb_enabled",
        "userd_manage_gids",
        "keytab_has_nfs_spn",
        "managed_nfsd",
        "rdma"
       ]
      },
      "return_schema_of_nfs_bindip_choices": {
       "additionalProperties": {
        "type": "string"
       },
       "title": "result",
       "type": "object",
       "_name_": "result"
      },
      "return_schema_of_nfs_client_count": {
       "type": "integer",
       "_name_": "number_of_clients",
       "title": "number_of_clients"
      },
      "return_schema_of_nfs_get_nfs4_clients": {
       "anyOf": [
        {
         "type": "integer",
         "_name_": "count",
         "title": "count",
         "_required_": false
        },
        {
         "type": "object",
         "properties": {
          "id": {
           "_name_": "id",
           "title": "id",
           "_required_": false,
           "type": "string"
          },
          "info": {
           "type": "object",
           "properties": {},
           "additionalProperties": true,
           "_name_": "info",
           "title": "info",
           "default": {},
           "_required_": false,
           "_attrs_order_": []
          },
          "state": {
           "type": "object",
           "properties": {},
           "additionalProperties": true,
           "_name_": "state",
           "title": "state",
           "default": {},
           "_required_": false,
           "_attrs_order_": []
          }
         },
         "additionalProperties": false,
         "_name_": "client",
         "title": "client",
         "default": {},
         "_required_": false,
         "_attrs_order_": [
          "id",
          "info",
          "state"
         ]
        },
        {
         "_name_": "query_result",
         "title": "query_result",
         "default": [],
         "_required_": false,
         "type": "array",
         "items": [
          {
           "type": "object",
           "properties": {
            "id": {
             "_name_": "id",
             "title": "id",
             "_required_": false,
             "type": "string"
            },
            "info": {
             "type": "object",
             "properties": {},
             "additionalProperties": true,
             "_name_": "info",
             "title": "info",
             "default": {},
             "_required_": false,
             "_attrs_order_": []
            },
            "state": {
             "type": "object",
             "properties": {},
             "additionalProperties": true,
             "_name_": "state",
             "title": "state",
             "default": {},
             "_required_": false,
             "_attrs_order_": []
            }
           },
           "additionalProperties": false,
           "_name_": "client",
           "title": "client",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "id",
            "info",
            "state"
           ]
          }
         ]
        }
       ],
       "nullable": false,
       "_name_": "filterable_result",
       "description": null
      },
      "return_schema_of_pool_query": {
       "anyOf": [
        {
         "_name_": "query_result",
         "title": "query_result",
         "default": [],
         "_required_": false,
         "type": "array",
         "items": [
          {
           "type": "object",
           "properties": {
            "id": {
             "type": "integer",
             "_name_": "id",
             "title": "id",
             "_required_": true
            },
            "name": {
             "_name_": "name",
             "title": "name",
             "_required_": true,
             "type": "string"
            },
            "guid": {
             "_name_": "guid",
             "title": "guid",
             "_required_": true,
             "type": "string"
            },
            "status": {
             "_name_": "status",
             "title": "status",
             "_required_": true,
             "type": "string"
            },
            "path": {
             "_name_": "path",
             "title": "path",
             "_required_": true,
             "type": "string"
            },
            "scan": {
             "type": "object",
             "properties": {},
             "additionalProperties": true,
             "_name_": "scan",
             "title": "scan",
             "description": "\n\nExample(s):\n```\n{\n    \"function\": null,\n    \"state\": null,\n    \"start_time\": null,\n    \"end_time\": null,\n    \"percentage\": null,\n    \"bytes_to_process\": null,\n    \"bytes_processed\": null,\n    \"bytes_issued\": null,\n    \"pause\": null,\n    \"errors\": null,\n    \"total_secs_left\": null\n}\n```\n",
             "default": {},
             "_required_": true,
             "_attrs_order_": []
            },
            "expand": {
             "type": "object",
             "properties": {},
             "additionalProperties": true,
             "_name_": "expand",
             "title": "expand",
             "description": "\n\nExample(s):\n```\n{\n    \"state\": \"FINISHED\",\n    \"expanding_vdev\": 0,\n    \"start_time\": null,\n    \"end_time\": null,\n    \"bytes_to_reflow\": 835584,\n    \"bytes_reflowed\": 978944,\n    \"waiting_for_resilver\": 0,\n    \"total_secs_left\": null,\n    \"percentage\": 85.35564853556485\n}\n```\n",
             "default": {},
             "_required_": true,
             "_attrs_order_": []
            },
            "is_upgraded": {
             "type": "boolean",
             "_name_": "is_upgraded",
             "title": "is_upgraded",
             "_required_": false
            },
            "healthy": {
             "type": "boolean",
             "_name_": "healthy",
             "title": "healthy",
             "_required_": true
            },
            "warning": {
             "type": "boolean",
             "_name_": "warning",
             "title": "warning",
             "_required_": true
            },
            "status_code": {
             "_name_": "status_code",
             "title": "status_code",
             "_required_": true,
             "type": [
              "string",
              "null"
             ]
            },
            "status_detail": {
             "_name_": "status_detail",
             "title": "status_detail",
             "_required_": true,
             "type": [
              "string",
              "null"
             ]
            },
            "size": {
             "type": [
              "integer",
              "null"
             ],
             "_name_": "size",
             "title": "size",
             "_required_": true
            },
            "allocated": {
             "type": [
              "integer",
              "null"
             ],
             "_name_": "allocated",
             "title": "allocated",
             "_required_": true
            },
            "free": {
             "type": [
              "integer",
              "null"
             ],
             "_name_": "free",
             "title": "free",
             "_required_": true
            },
            "freeing": {
             "type": [
              "integer",
              "null"
             ],
             "_name_": "freeing",
             "title": "freeing",
             "_required_": true
            },
            "dedup_table_size": {
             "type": [
              "integer",
              "null"
             ],
             "_name_": "dedup_table_size",
             "title": "dedup_table_size",
             "_required_": true
            },
            "dedup_table_quota": {
             "_name_": "dedup_table_quota",
             "title": "dedup_table_quota",
             "_required_": true,
             "type": [
              "string",
              "null"
             ]
            },
            "fragmentation": {
             "_name_": "fragmentation",
             "title": "fragmentation",
             "_required_": true,
             "type": [
              "string",
              "null"
             ]
            },
            "size_str": {
             "_name_": "size_str",
             "title": "size_str",
             "_required_": true,
             "type": [
              "string",
              "null"
             ]
            },
            "allocated_str": {
             "_name_": "allocated_str",
             "title": "allocated_str",
             "_required_": true,
             "type": [
              "string",
              "null"
             ]
            },
            "free_str": {
             "_name_": "free_str",
             "title": "free_str",
             "_required_": true,
             "type": [
              "string",
              "null"
             ]
            },
            "freeing_str": {
             "_name_": "freeing_str",
             "title": "freeing_str",
             "_required_": true,
             "type": [
              "string",
              "null"
             ]
            },
            "autotrim": {
             "type": "object",
             "properties": {},
             "additionalProperties": true,
             "_name_": "autotrim",
             "title": "autotrim",
             "description": "\n\nExample(s):\n```\n{\n    \"parsed\": \"off\",\n    \"rawvalue\": \"off\",\n    \"source\": \"DEFAULT\",\n    \"value\": \"off\"\n}\n```\n",
             "default": {},
             "_required_": true,
             "_attrs_order_": []
            },
            "topology": {
             "type": "object",
             "properties": {
              "data": {
               "_name_": "data",
               "title": "data",
               "default": [],
               "_required_": true,
               "type": "array",
               "items": []
              },
              "log": {
               "_name_": "log",
               "title": "log",
               "default": [],
               "_required_": true,
               "type": "array",
               "items": []
              },
              "cache": {
               "_name_": "cache",
               "title": "cache",
               "default": [],
               "_required_": true,
               "type": "array",
               "items": []
              },
              "spare": {
               "_name_": "spare",
               "title": "spare",
               "default": [],
               "_required_": true,
               "type": "array",
               "items": []
              },
              "special": {
               "_name_": "special",
               "title": "special",
               "default": [],
               "_required_": true,
               "type": "array",
               "items": []
              },
              "dedup": {
               "_name_": "dedup",
               "title": "dedup",
               "default": [],
               "_required_": true,
               "type": "array",
               "items": []
              }
             },
             "additionalProperties": false,
             "_name_": "topology",
             "title": "topology",
             "default": {},
             "_required_": true,
             "_attrs_order_": [
              "data",
              "log",
              "cache",
              "spare",
              "special",
              "dedup"
             ]
            }
           },
           "additionalProperties": false,
           "_name_": "pool_entry",
           "title": "pool_entry",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "id",
            "name",
            "guid",
            "status",
            "path",
            "scan",
            "expand",
            "is_upgraded",
            "healthy",
            "warning",
            "status_code",
            "status_detail",
            "size",
            "allocated",
            "free",
            "freeing",
            "dedup_table_size",
            "dedup_table_quota",
            "fragmentation",
            "size_str",
            "allocated_str",
            "free_str",
            "freeing_str",
            "autotrim",
            "topology"
           ]
          }
         ]
        },
        {
         "type": "object",
         "properties": {
          "id": {
           "type": "integer",
           "_name_": "id",
           "title": "id",
           "_required_": true
          },
          "name": {
           "_name_": "name",
           "title": "name",
           "_required_": true,
           "type": "string"
          },
          "guid": {
           "_name_": "guid",
           "title": "guid",
           "_required_": true,
           "type": "string"
          },
          "status": {
           "_name_": "status",
           "title": "status",
           "_required_": true,
           "type": "string"
          },
          "path": {
           "_name_": "path",
           "title": "path",
           "_required_": true,
           "type": "string"
          },
          "scan": {
           "type": "object",
           "properties": {},
           "additionalProperties": true,
           "_name_": "scan",
           "title": "scan",
           "description": "\n\nExample(s):\n```\n{\n    \"function\": null,\n    \"state\": null,\n    \"start_time\": null,\n    \"end_time\": null,\n    \"percentage\": null,\n    \"bytes_to_process\": null,\n    \"bytes_processed\": null,\n    \"bytes_issued\": null,\n    \"pause\": null,\n    \"errors\": null,\n    \"total_secs_left\": null\n}\n```\n",
           "default": {},
           "_required_": true,
           "_attrs_order_": []
          },
          "expand": {
           "type": "object",
           "properties": {},
           "additionalProperties": true,
           "_name_": "expand",
           "title": "expand",
           "description": "\n\nExample(s):\n```\n{\n    \"state\": \"FINISHED\",\n    \"expanding_vdev\": 0,\n    \"start_time\": null,\n    \"end_time\": null,\n    \"bytes_to_reflow\": 835584,\n    \"bytes_reflowed\": 978944,\n    \"waiting_for_resilver\": 0,\n    \"total_secs_left\": null,\n    \"percentage\": 85.35564853556485\n}\n```\n",
           "default": {},
           "_required_": true,
           "_attrs_order_": []
          },
          "is_upgraded": {
           "type": "boolean",
           "_name_": "is_upgraded",
           "title": "is_upgraded",
           "_required_": false
          },
          "healthy": {
           "type": "boolean",
           "_name_": "healthy",
           "title": "healthy",
           "_required_": true
          },
          "warning": {
           "type": "boolean",
           "_name_": "warning",
           "title": "warning",
           "_required_": true
          },
          "status_code": {
           "_name_": "status_code",
           "title": "status_code",
           "_required_": true,
           "type": [
            "string",
            "null"
           ]
          },
          "status_detail": {
           "_name_": "status_detail",
           "title": "status_detail",
           "_required_": true,
           "type": [
            "string",
            "null"
           ]
          },
          "size": {
           "type": [
            "integer",
            "null"
           ],
           "_name_": "size",
           "title": "size",
           "_required_": true
          },
          "allocated": {
           "type": [
            "integer",
            "null"
           ],
           "_name_": "allocated",
           "title": "allocated",
           "_required_": true
          },
          "free": {
           "type": [
            "integer",
            "null"
           ],
           "_name_": "free",
           "title": "free",
           "_required_": true
          },
          "freeing": {
           "type": [
            "integer",
            "null"
           ],
           "_name_": "freeing",
           "title": "freeing",
           "_required_": true
          },
          "dedup_table_size": {
           "type": [
            "integer",
            "null"
           ],
           "_name_": "dedup_table_size",
           "title": "dedup_table_size",
           "_required_": true
          },
          "dedup_table_quota": {
           "_name_": "dedup_table_quota",
           "title": "dedup_table_quota",
           "_required_": true,
           "type": [
            "string",
            "null"
           ]
          },
          "fragmentation": {
           "_name_": "fragmentation",
           "title": "fragmentation",
           "_required_": true,
           "type": [
            "string",
            "null"
           ]
          },
          "size_str": {
           "_name_": "size_str",
           "title": "size_str",
           "_required_": true,
           "type": [
            "string",
            "null"
           ]
          },
          "allocated_str": {
           "_name_": "allocated_str",
           "title": "allocated_str",
           "_required_": true,
           "type": [
            "string",
            "null"
           ]
          },
          "free_str": {
           "_name_": "free_str",
           "title": "free_str",
           "_required_": true,
           "type": [
            "string",
            "null"
           ]
          },
          "freeing_str": {
           "_name_": "freeing_str",
           "title": "freeing_str",
           "_required_": true,
           "type": [
            "string",
            "null"
           ]
          },
          "autotrim": {
           "type": "object",
           "properties": {},
           "additionalProperties": true,
           "_name_": "autotrim",
           "title": "autotrim",
           "description": "\n\nExample(s):\n```\n{\n    \"parsed\": \"off\",\n    \"rawvalue\": \"off\",\n    \"source\": \"DEFAULT\",\n    \"value\": \"off\"\n}\n```\n",
           "default": {},
           "_required_": true,
           "_attrs_order_": []
          },
          "topology": {
           "type": "object",
           "properties": {
            "data": {
             "_name_": "data",
             "title": "data",
             "default": [],
             "_required_": true,
             "type": "array",
             "items": []
            },
            "log": {
             "_name_": "log",
             "title": "log",
             "default": [],
             "_required_": true,
             "type": "array",
             "items": []
            },
            "cache": {
             "_name_": "cache",
             "title": "cache",
             "default": [],
             "_required_": true,
             "type": "array",
             "items": []
            },
            "spare": {
             "_name_": "spare",
             "title": "spare",
             "default": [],
             "_required_": true,
             "type": "array",
             "items": []
            },
            "special": {
             "_name_": "special",
             "title": "special",
             "default": [],
             "_required_": true,
             "type": "array",
             "items": []
            },
            "dedup": {
             "_name_": "dedup",
             "title": "dedup",
             "default": [],
             "_required_": true,
             "type": "array",
             "items": []
            }
           },
           "additionalProperties": false,
           "_name_": "topology",
           "title": "topology",
           "default": {},
           "_required_": true,
           "_attrs_order_": [
            "data",
            "log",
            "cache",
            "spare",
            "special",
            "dedup"
           ]
          }
         },
         "additionalProperties": false,
         "_name_": "pool_entry",
         "title": "pool_entry",
         "default": {},
         "_required_": false,
         "_attrs_order_": [
          "id",
          "name",
          "guid",
          "status",
          "path",
          "scan",
          "expand",
          "is_upgraded",
          "healthy",
          "warning",
          "status_code",
          "status_detail",
          "size",
          "allocated",
          "free",
          "freeing",
          "dedup_table_size",
          "dedup_table_quota",
          "fragmentation",
          "size_str",
          "allocated_str",
          "free_str",
          "freeing_str",
          "autotrim",
          "topology"
         ]
        },
        {
         "type": "integer",
         "_name_": "count",
         "title": "count",
         "_required_": false
        },
        {
         "type": "object",
         "properties": {
          "id": {
           "type": "integer",
           "_name_": "id",
           "title": "id",
           "_required_": true
          },
          "name": {
           "_name_": "name",
           "title": "name",
           "_required_": true,
           "type": "string"
          },
          "guid": {
           "_name_": "guid",
           "title": "guid",
           "_required_": true,
           "type": "string"
          },
          "status": {
           "_name_": "status",
           "title": "status",
           "_required_": true,
           "type": "string"
          },
          "path": {
           "_name_": "path",
           "title": "path",
           "_required_": true,
           "type": "string"
          },
          "scan": {
           "type": "object",
           "properties": {},
           "additionalProperties": true,
           "_name_": "scan",
           "title": "scan",
           "description": "\n\nExample(s):\n```\n{\n    \"function\": null,\n    \"state\": null,\n    \"start_time\": null,\n    \"end_time\": null,\n    \"percentage\": null,\n    \"bytes_to_process\": null,\n    \"bytes_processed\": null,\n    \"bytes_issued\": null,\n    \"pause\": null,\n    \"errors\": null,\n    \"total_secs_left\": null\n}\n```\n",
           "default": {},
           "_required_": true,
           "_attrs_order_": []
          },
          "expand": {
           "type": "object",
           "properties": {},
           "additionalProperties": true,
           "_name_": "expand",
           "title": "expand",
           "description": "\n\nExample(s):\n```\n{\n    \"state\": \"FINISHED\",\n    \"expanding_vdev\": 0,\n    \"start_time\": null,\n    \"end_time\": null,\n    \"bytes_to_reflow\": 835584,\n    \"bytes_reflowed\": 978944,\n    \"waiting_for_resilver\": 0,\n    \"total_secs_left\": null,\n    \"percentage\": 85.35564853556485\n}\n```\n",
           "default": {},
           "_required_": true,
           "_attrs_order_": []
          },
          "is_upgraded": {
           "type": "boolean",
           "_name_": "is_upgraded",
           "title": "is_upgraded",
           "_required_": false
          },
          "healthy": {
           "type": "boolean",
           "_name_": "healthy",
           "title": "healthy",
           "_required_": true
          },
          "warning": {
           "type": "boolean",
           "_name_": "warning",
           "title": "warning",
           "_required_": true
          },
          "status_code": {
           "_name_": "status_code",
           "title": "status_code",
           "_required_": true,
           "type": [
            "string",
            "null"
           ]
          },
          "status_detail": {
           "_name_": "status_detail",
           "title": "status_detail",
           "_required_": true,
           "type": [
            "string",
            "null"
           ]
          },
          "size": {
           "type": [
            "integer",
            "null"
           ],
           "_name_": "size",
           "title": "size",
           "_required_": true
          },
          "allocated": {
           "type": [
            "integer",
            "null"
           ],
           "_name_": "allocated",
           "title": "allocated",
           "_required_": true
          },
          "free": {
           "type": [
            "integer",
            "null"
           ],
           "_name_": "free",
           "title": "free",
           "_required_": true
          },
          "freeing": {
           "type": [
            "integer",
            "null"
           ],
           "_name_": "freeing",
           "title": "freeing",
           "_required_": true
          },
          "dedup_table_size": {
           "type": [
            "integer",
            "null"
           ],
           "_name_": "dedup_table_size",
           "title": "dedup_table_size",
           "_required_": true
          },
          "dedup_table_quota": {
           "_name_": "dedup_table_quota",
           "title": "dedup_table_quota",
           "_required_": true,
           "type": [
            "string",
            "null"
           ]
          },
          "fragmentation": {
           "_name_": "fragmentation",
           "title": "fragmentation",
           "_required_": true,
           "type": [
            "string",
            "null"
           ]
          },
          "size_str": {
           "_name_": "size_str",
           "title": "size_str",
           "_required_": true,
           "type": [
            "string",
            "null"
           ]
          },
          "allocated_str": {
           "_name_": "allocated_str",
           "title": "allocated_str",
           "_required_": true,
           "type": [
            "string",
            "null"
           ]
          },
          "free_str": {
           "_name_": "free_str",
           "title": "free_str",
           "_required_": true,
           "type": [
            "string",
            "null"
           ]
          },
          "freeing_str": {
           "_name_": "freeing_str",
           "title": "freeing_str",
           "_required_": true,
           "type": [
            "string",
            "null"
           ]
          },
          "autotrim": {
           "type": "object",
           "properties": {},
           "additionalProperties": true,
           "_name_": "autotrim",
           "title": "autotrim",
           "description": "\n\nExample(s):\n```\n{\n    \"parsed\": \"off\",\n    \"rawvalue\": \"off\",\n    \"source\": \"DEFAULT\",\n    \"value\": \"off\"\n}\n```\n",
           "default": {},
           "_required_": true,
           "_attrs_order_": []
          },
          "topology": {
           "type": "object",
           "properties": {
            "data": {
             "_name_": "data",
             "title": "data",
             "default": [],
             "_required_": true,
             "type": "array",
             "items": []
            },
            "log": {
             "_name_": "log",
             "title": "log",
             "default": [],
             "_required_": true,
             "type": "array",
             "items": []
            },
            "cache": {
             "_name_": "cache",
             "title": "cache",
             "default": [],
             "_required_": true,
             "type": "array",
             "items": []
            },
            "spare": {
             "_name_": "spare",
             "title": "spare",
             "default": [],
             "_required_": true,
             "type": "array",
             "items": []
            },
            "special": {
             "_name_": "special",
             "title": "special",
             "default": [],
             "_required_": true,
             "type": "array",
             "items": []
            },
            "dedup": {
             "_name_": "dedup",
             "title": "dedup",
             "default": [],
             "_required_": true,
             "type": "array",
             "items": []
            }
           },
           "additionalProperties": false,
           "_name_": "topology",
           "title": "topology",
           "default": {},
           "_required_": true,
           "_attrs_order_": [
            "data",
            "log",
            "cache",
            "spare",
            "special",
            "dedup"
           ]
          }
         },
         "additionalProperties": false,
         "_name_": "pool_entry",
         "title": "pool_entry",
         "default": {},
         "_required_": false,
         "_attrs_order_": [
          "id",
          "name",
          "guid",
          "status",
          "path",
          "scan",
          "expand",
          "is_upgraded",
          "healthy",
          "warning",
          "status_code",
          "status_detail",
          "size",
          "allocated",
          "free",
          "freeing",
          "dedup_table_size",
          "dedup_table_quota",
          "fragmentation",
          "size_str",
          "allocated_str",
          "free_str",
          "freeing_str",
          "autotrim",
          "topology"
         ]
        }
       ],
       "nullable": false,
       "_name_": "query_result",
       "description": null
      },
      "pool_create": {
       "type": "object",
       "properties": {
        "name": {
         "_name_": "name",
         "title": "name",
         "type": "string",
         "description": "`encryption` when enabled will create an ZFS encrypted root dataset for `name` pool.\n`encryption_options` specifies configuration for encryption of root dataset for `name` pool.\n`encryption_options.passphrase` must be specified if encryption for root dataset is desired with a passphrase\nas a key.\nOtherwise a hex encoded key can be specified by providing `encryption_options.key`.\n`encryption_options.generate_key` when enabled automatically generates the key to be used\nfor dataset encryption."
        },
        "encryption": {
         "type": "boolean",
         "_name_": "encryption",
         "title": "encryption",
         "default": false,
         "description": "`encryption` when enabled will create an ZFS encrypted root dataset for `name` pool."
        },
        "dedup_table_quota": {
         "_name_": "dedup_table_quota",
         "title": "dedup_table_quota",
         "default": "AUTO",
         "type": "string",
         "enum": [
          "AUTO",
          null,
          "CUSTOM"
         ],
         "nullable": true
        },
        "dedup_table_quota_value": {
         "type": "integer",
         "_name_": "dedup_table_quota_value",
         "title": "dedup_table_quota_value",
         "default": null,
         "nullable": true
        },
        "deduplication": {
         "_name_": "deduplication",
         "title": "deduplication",
         "default": null,
         "type": "string",
         "enum": [
          null,
          "ON",
          "VERIFY",
          "OFF"
         ],
         "description": "`deduplication` when set to ON or VERIFY makes sure that no block of data is duplicated in the pool. When\nVERIFY is specified, if two blocks have similar signatures, byte to byte comparison is performed to ensure that\nthe blocks are identical. This should be used in special circumstances as it carries a significant overhead.",
         "nullable": true
        },
        "checksum": {
         "_name_": "checksum",
         "title": "checksum",
         "default": null,
         "type": "string",
         "enum": [
          null,
          "ON",
          "OFF",
          "FLETCHER2",
          "FLETCHER4",
          "SHA256",
          "SHA512",
          "SKEIN",
          "EDONR",
          "BLAKE3"
         ],
         "nullable": true
        },
        "encryption_options": {
         "type": "object",
         "properties": {
          "generate_key": {
           "type": "boolean",
           "_name_": "generate_key",
           "title": "generate_key",
           "default": false
          },
          "pbkdf2iters": {
           "type": "integer",
           "_name_": "pbkdf2iters",
           "title": "pbkdf2iters",
           "default": 350000
          },
          "algorithm": {
           "_name_": "algorithm",
           "title": "algorithm",
           "default": "AES-256-GCM",
           "type": "string",
           "enum": [
            "AES-128-CCM",
            "AES-192-CCM",
            "AES-256-CCM",
            "AES-128-GCM",
            "AES-192-GCM",
            "AES-256-GCM"
           ]
          },
          "passphrase": {
           "_name_": "passphrase",
           "title": "passphrase",
           "default": null,
           "type": "string",
           "nullable": true
          },
          "key": {
           "_name_": "key",
           "title": "key",
           "default": null,
           "type": "string",
           "nullable": true
          }
         },
         "additionalProperties": false,
         "_name_": "encryption_options",
         "title": "encryption_options",
         "default": {},
         "_attrs_order_": [
          "generate_key",
          "pbkdf2iters",
          "algorithm",
          "passphrase",
          "key"
         ],
         "description": "`encryption_options` specifies configuration for encryption of root dataset for `name` pool.\n`encryption_options.passphrase` must be specified if encryption for root dataset is desired with a passphrase\nas a key.\nOtherwise a hex encoded key can be specified by providing `encryption_options.key`.\n`encryption_options.generate_key` when enabled automatically generates the key to be used\nfor dataset encryption."
        },
        "topology": {
         "type": "object",
         "properties": {
          "data": {
           "_name_": "data",
           "title": "data",
           "default": [],
           "type": "array",
           "items": {
            "type": "object",
            "properties": {
             "type": {
              "_name_": "type",
              "title": "type",
              "_required_": true,
              "type": "string",
              "enum": [
               "DRAID1",
               "DRAID2",
               "DRAID3",
               "RAIDZ1",
               "RAIDZ2",
               "RAIDZ3",
               "MIRROR",
               "STRIPE"
              ]
             },
             "disks": {
              "_name_": "disks",
              "title": "disks",
              "default": [],
              "_required_": true,
              "type": "array",
              "items": [
               {
                "_name_": "disk",
                "title": "disk",
                "_required_": false,
                "type": "string"
               }
              ]
             },
             "draid_data_disks": {
              "type": "integer",
              "_name_": "draid_data_disks",
              "title": "draid_data_disks",
              "_required_": false
             },
             "draid_spare_disks": {
              "type": "integer",
              "_name_": "draid_spare_disks",
              "title": "draid_spare_disks",
              "_required_": false
             }
            },
            "additionalProperties": false,
            "_name_": "datavdevs",
            "title": "datavdevs",
            "default": {},
            "_required_": false,
            "_attrs_order_": [
             "type",
             "disks",
             "draid_data_disks",
             "draid_spare_disks"
            ]
           }
          },
          "special": {
           "_name_": "special",
           "title": "special",
           "default": [],
           "type": "array",
           "items": {
            "type": "object",
            "properties": {
             "type": {
              "_name_": "type",
              "title": "type",
              "_required_": true,
              "type": "string",
              "enum": [
               "MIRROR",
               "STRIPE"
              ]
             },
             "disks": {
              "_name_": "disks",
              "title": "disks",
              "default": [],
              "_required_": true,
              "type": "array",
              "items": [
               {
                "_name_": "disk",
                "title": "disk",
                "_required_": false,
                "type": "string"
               }
              ]
             }
            },
            "additionalProperties": false,
            "_name_": "specialvdevs",
            "title": "specialvdevs",
            "default": {},
            "_required_": false,
            "_attrs_order_": [
             "type",
             "disks"
            ]
           }
          },
          "dedup": {
           "_name_": "dedup",
           "title": "dedup",
           "default": [],
           "type": "array",
           "items": {
            "type": "object",
            "properties": {
             "type": {
              "_name_": "type",
              "title": "type",
              "_required_": true,
              "type": "string",
              "enum": [
               "MIRROR",
               "STRIPE"
              ]
             },
             "disks": {
              "_name_": "disks",
              "title": "disks",
              "default": [],
              "_required_": true,
              "type": "array",
              "items": [
               {
                "_name_": "disk",
                "title": "disk",
                "_required_": false,
                "type": "string"
               }
              ]
             }
            },
            "additionalProperties": false,
            "_name_": "dedupvdevs",
            "title": "dedupvdevs",
            "default": {},
            "_required_": false,
            "_attrs_order_": [
             "type",
             "disks"
            ]
           }
          },
          "cache": {
           "_name_": "cache",
           "title": "cache",
           "default": [],
           "type": "array",
           "items": {
            "type": "object",
            "properties": {
             "type": {
              "_name_": "type",
              "title": "type",
              "_required_": true,
              "type": "string",
              "enum": [
               "STRIPE"
              ]
             },
             "disks": {
              "_name_": "disks",
              "title": "disks",
              "default": [],
              "_required_": true,
              "type": "array",
              "items": [
               {
                "_name_": "disk",
                "title": "disk",
                "_required_": false,
                "type": "string"
               }
              ]
             }
            },
            "additionalProperties": false,
            "_name_": "cachevdevs",
            "title": "cachevdevs",
            "default": {},
            "_required_": false,
            "_attrs_order_": [
             "type",
             "disks"
            ]
           }
          },
          "log": {
           "_name_": "log",
           "title": "log",
           "default": [],
           "type": "array",
           "items": {
            "type": "object",
            "properties": {
             "type": {
              "_name_": "type",
              "title": "type",
              "_required_": true,
              "type": "string",
              "enum": [
               "STRIPE",
               "MIRROR"
              ]
             },
             "disks": {
              "_name_": "disks",
              "title": "disks",
              "default": [],
              "_required_": true,
              "type": "array",
              "items": [
               {
                "_name_": "disk",
                "title": "disk",
                "_required_": false,
                "type": "string"
               }
              ]
             }
            },
            "additionalProperties": false,
            "_name_": "logvdevs",
            "title": "logvdevs",
            "default": {},
            "_required_": false,
            "_attrs_order_": [
             "type",
             "disks"
            ]
           }
          },
          "spares": {
           "_name_": "spares",
           "title": "spares",
           "default": [],
           "type": "array",
           "items": {
            "_name_": "disk",
            "title": "disk",
            "_required_": false,
            "type": "string"
           }
          }
         },
         "additionalProperties": false,
         "_name_": "topology",
         "title": "topology",
         "default": {},
         "_attrs_order_": [
          "data",
          "special",
          "dedup",
          "cache",
          "log",
          "spares"
         ],
         "description": "`topology` is a object which requires at least one `data` entry.\nAll of `data` entries (vdevs) require to be of the same type.\nExample of `topology`:"
        },
        "allow_duplicate_serials": {
         "type": "boolean",
         "_name_": "allow_duplicate_serials",
         "title": "allow_duplicate_serials",
         "default": false
        }
       },
       "additionalProperties": false,
       "_name_": "pool_create",
       "title": "pool_create",
       "default": {},
       "_attrs_order_": [
        "name",
        "encryption",
        "dedup_table_quota",
        "dedup_table_quota_value",
        "deduplication",
        "checksum",
        "encryption_options",
        "topology",
        "allow_duplicate_serials"
       ]
      },
      "return_schema_of_pool_create": {
       "type": "object",
       "properties": {
        "id": {
         "type": "integer",
         "_name_": "id",
         "title": "id"
        },
        "name": {
         "_name_": "name",
         "title": "name",
         "type": "string",
         "description": "`encryption` when enabled will create an ZFS encrypted root dataset for `name` pool.\n`encryption_options` specifies configuration for encryption of root dataset for `name` pool.\n`encryption_options.passphrase` must be specified if encryption for root dataset is desired with a passphrase\nas a key.\nOtherwise a hex encoded key can be specified by providing `encryption_options.key`.\n`encryption_options.generate_key` when enabled automatically generates the key to be used\nfor dataset encryption."
        },
        "guid": {
         "_name_": "guid",
         "title": "guid",
         "type": "string"
        },
        "status": {
         "_name_": "status",
         "title": "status",
         "type": "string"
        },
        "path": {
         "_name_": "path",
         "title": "path",
         "type": "string"
        },
        "scan": {
         "type": "object",
         "properties": {},
         "additionalProperties": true,
         "_name_": "scan",
         "title": "scan",
         "description": "\n\nExample(s):\n```\n{\n    \"function\": null,\n    \"state\": null,\n    \"start_time\": null,\n    \"end_time\": null,\n    \"percentage\": null,\n    \"bytes_to_process\": null,\n    \"bytes_processed\": null,\n    \"bytes_issued\": null,\n    \"pause\": null,\n    \"errors\": null,\n    \"total_secs_left\": null\n}\n```\n",
         "default": {},
         "_attrs_order_": []
        },
        "expand": {
         "type": "object",
         "properties": {},
         "additionalProperties": true,
         "_name_": "expand",
         "title": "expand",
         "description": "\n\nExample(s):\n```\n{\n    \"state\": \"FINISHED\",\n    \"expanding_vdev\": 0,\n    \"start_time\": null,\n    \"end_time\": null,\n    \"bytes_to_reflow\": 835584,\n    \"bytes_reflowed\": 978944,\n    \"waiting_for_resilver\": 0,\n    \"total_secs_left\": null,\n    \"percentage\": 85.35564853556485\n}\n```\n",
         "default": {},
         "_attrs_order_": []
        },
        "is_upgraded": {
         "type": "boolean",
         "_name_": "is_upgraded",
         "title": "is_upgraded"
        },
        "healthy": {
         "type": "boolean",
         "_name_": "healthy",
         "title": "healthy"
        },
        "warning": {
         "type": "boolean",
         "_name_": "warning",
         "title": "warning"
        },
        "status_code": {
         "_name_": "status_code",
         "title": "status_code",
         "type": "string",
         "nullable": true
        },
        "status_detail": {
         "_name_": "status_detail",
         "title": "status_detail",
         "type": "string",
         "nullable": true
        },
        "size": {
         "type": "integer",
         "_name_": "size",
         "title": "size",
         "nullable": true
        },
        "allocated": {
         "type": "integer",
         "_name_": "allocated",
         "title": "allocated",
         "nullable": true
        },
        "free": {
         "type": "integer",
         "_name_": "free",
         "title": "free",
         "nullable": true
        },
        "freeing": {
         "type": "integer",
         "_name_": "freeing",
         "title": "freeing",
         "nullable": true
        },
        "dedup_table_size": {
         "type": "integer",
         "_name_": "dedup_table_size",
         "title": "dedup_table_size",
         "nullable": true
        },
        "dedup_table_quota": {
         "_name_": "dedup_table_quota",
         "title": "dedup_table_quota",
         "type": "string",
         "nullable": true
        },
        "fragmentation": {
         "_name_": "fragmentation",
         "title": "fragmentation",
         "type": "string",
         "nullable": true
        },
        "size_str": {
         "_name_": "size_str",
         "title": "size_str",
         "type": "string",
         "nullable": true
        },
        "allocated_str": {
         "_name_": "allocated_str",
         "title": "allocated_str",
         "type": "string",
         "nullable": true
        },
        "free_str": {
         "_name_": "free_str",
         "title": "free_str",
         "type": "string",
         "nullable": true
        },
        "freeing_str": {
         "_name_": "freeing_str",
         "title": "freeing_str",
         "type": "string",
         "nullable": true
        },
        "autotrim": {
         "type": "object",
         "properties": {},
         "additionalProperties": true,
         "_name_": "autotrim",
         "title": "autotrim",
         "description": "\n\nExample(s):\n```\n{\n    \"parsed\": \"off\",\n    \"rawvalue\": \"off\",\n    \"source\": \"DEFAULT\",\n    \"value\": \"off\"\n}\n```\n",
         "default": {},
         "_attrs_order_": []
        },
        "topology": {
         "type": "object",
         "properties": {
          "data": {
           "_name_": "data",
           "title": "data",
           "default": [],
           "type": "array",
           "items": {}
          },
          "log": {
           "_name_": "log",
           "title": "log",
           "default": [],
           "type": "array",
           "items": {}
          },
          "cache": {
           "_name_": "cache",
           "title": "cache",
           "default": [],
           "type": "array",
           "items": {}
          },
          "spare": {
           "_name_": "spare",
           "title": "spare",
           "default": [],
           "type": "array",
           "items": {}
          },
          "special": {
           "_name_": "special",
           "title": "special",
           "default": [],
           "type": "array",
           "items": {}
          },
          "dedup": {
           "_name_": "dedup",
           "title": "dedup",
           "default": [],
           "type": "array",
           "items": {}
          }
         },
         "additionalProperties": false,
         "_name_": "topology",
         "title": "topology",
         "default": {},
         "_attrs_order_": [
          "data",
          "log",
          "cache",
          "spare",
          "special",
          "dedup"
         ],
         "description": "`topology` is a object which requires at least one `data` entry.\nAll of `data` entries (vdevs) require to be of the same type.\nExample of `topology`:"
        }
       },
       "additionalProperties": false,
       "_name_": "pool_create_returns",
       "title": "pool_create_returns",
       "default": {},
       "_attrs_order_": [
        "id",
        "name",
        "guid",
        "status",
        "path",
        "scan",
        "expand",
        "is_upgraded",
        "healthy",
        "warning",
        "status_code",
        "status_detail",
        "size",
        "allocated",
        "free",
        "freeing",
        "dedup_table_size",
        "dedup_table_quota",
        "fragmentation",
        "size_str",
        "allocated_str",
        "free_str",
        "freeing_str",
        "autotrim",
        "topology"
       ]
      },
      "pool_update": {
       "type": "object",
       "properties": {
        "dedup_table_quota": {
         "_name_": "dedup_table_quota",
         "title": "dedup_table_quota",
         "default": "AUTO",
         "type": "string",
         "enum": [
          "AUTO",
          null,
          "CUSTOM"
         ],
         "nullable": true
        },
        "dedup_table_quota_value": {
         "type": "integer",
         "_name_": "dedup_table_quota_value",
         "title": "dedup_table_quota_value",
         "default": null,
         "nullable": true
        },
        "topology": {
         "type": "object",
         "properties": {
          "data": {
           "_name_": "data",
           "title": "data",
           "default": [],
           "type": "array",
           "items": {
            "type": "object",
            "properties": {
             "type": {
              "_name_": "type",
              "title": "type",
              "_required_": true,
              "type": "string",
              "enum": [
               "DRAID1",
               "DRAID2",
               "DRAID3",
               "RAIDZ1",
               "RAIDZ2",
               "RAIDZ3",
               "MIRROR",
               "STRIPE"
              ]
             },
             "disks": {
              "_name_": "disks",
              "title": "disks",
              "default": [],
              "_required_": true,
              "type": "array",
              "items": [
               {
                "_name_": "disk",
                "title": "disk",
                "_required_": false,
                "type": "string"
               }
              ]
             },
             "draid_data_disks": {
              "type": "integer",
              "_name_": "draid_data_disks",
              "title": "draid_data_disks",
              "_required_": false
             },
             "draid_spare_disks": {
              "type": "integer",
              "_name_": "draid_spare_disks",
              "title": "draid_spare_disks",
              "_required_": false
             }
            },
            "additionalProperties": false,
            "_name_": "datavdevs",
            "title": "datavdevs",
            "default": {},
            "_required_": false,
            "_attrs_order_": [
             "type",
             "disks",
             "draid_data_disks",
             "draid_spare_disks"
            ]
           }
          },
          "special": {
           "_name_": "special",
           "title": "special",
           "default": [],
           "type": "array",
           "items": {
            "type": "object",
            "properties": {
             "type": {
              "_name_": "type",
              "title": "type",
              "_required_": true,
              "type": "string",
              "enum": [
               "MIRROR",
               "STRIPE"
              ]
             },
             "disks": {
              "_name_": "disks",
              "title": "disks",
              "default": [],
              "_required_": true,
              "type": "array",
              "items": [
               {
                "_name_": "disk",
                "title": "disk",
                "_required_": false,
                "type": "string"
               }
              ]
             }
            },
            "additionalProperties": false,
            "_name_": "specialvdevs",
            "title": "specialvdevs",
            "default": {},
            "_required_": false,
            "_attrs_order_": [
             "type",
             "disks"
            ]
           }
          },
          "dedup": {
           "_name_": "dedup",
           "title": "dedup",
           "default": [],
           "type": "array",
           "items": {
            "type": "object",
            "properties": {
             "type": {
              "_name_": "type",
              "title": "type",
              "_required_": true,
              "type": "string",
              "enum": [
               "MIRROR",
               "STRIPE"
              ]
             },
             "disks": {
              "_name_": "disks",
              "title": "disks",
              "default": [],
              "_required_": true,
              "type": "array",
              "items": [
               {
                "_name_": "disk",
                "title": "disk",
                "_required_": false,
                "type": "string"
               }
              ]
             }
            },
            "additionalProperties": false,
            "_name_": "dedupvdevs",
            "title": "dedupvdevs",
            "default": {},
            "_required_": false,
            "_attrs_order_": [
             "type",
             "disks"
            ]
           }
          },
          "cache": {
           "_name_": "cache",
           "title": "cache",
           "default": [],
           "type": "array",
           "items": {
            "type": "object",
            "properties": {
             "type": {
              "_name_": "type",
              "title": "type",
              "_required_": true,
              "type": "string",
              "enum": [
               "STRIPE"
              ]
             },
             "disks": {
              "_name_": "disks",
              "title": "disks",
              "default": [],
              "_required_": true,
              "type": "array",
              "items": [
               {
                "_name_": "disk",
                "title": "disk",
                "_required_": false,
                "type": "string"
               }
              ]
             }
            },
            "additionalProperties": false,
            "_name_": "cachevdevs",
            "title": "cachevdevs",
            "default": {},
            "_required_": false,
            "_attrs_order_": [
             "type",
             "disks"
            ]
           }
          },
          "log": {
           "_name_": "log",
           "title": "log",
           "default": [],
           "type": "array",
           "items": {
            "type": "object",
            "properties": {
             "type": {
              "_name_": "type",
              "title": "type",
              "_required_": true,
              "type": "string",
              "enum": [
               "STRIPE",
               "MIRROR"
              ]
             },
             "disks": {
              "_name_": "disks",
              "title": "disks",
              "default": [],
              "_required_": true,
              "type": "array",
              "items": [
               {
                "_name_": "disk",
                "title": "disk",
                "_required_": false,
                "type": "string"
               }
              ]
             }
            },
            "additionalProperties": false,
            "_name_": "logvdevs",
            "title": "logvdevs",
            "default": {},
            "_required_": false,
            "_attrs_order_": [
             "type",
             "disks"
            ]
           }
          },
          "spares": {
           "_name_": "spares",
           "title": "spares",
           "default": [],
           "type": "array",
           "items": {
            "_name_": "disk",
            "title": "disk",
            "_required_": false,
            "type": "string"
           }
          }
         },
         "additionalProperties": false,
         "_name_": "topology",
         "title": "topology",
         "default": {},
         "_attrs_order_": [
          "data",
          "special",
          "dedup",
          "cache",
          "log",
          "spares"
         ],
         "description": "`topology` is a object which requires at least one `data` entry.\nAll of `data` entries (vdevs) require to be of the same type.\nExample of `topology`:"
        },
        "allow_duplicate_serials": {
         "type": "boolean",
         "_name_": "allow_duplicate_serials",
         "title": "allow_duplicate_serials",
         "default": false
        },
        "autotrim": {
         "_name_": "autotrim",
         "title": "autotrim",
         "type": "string",
         "enum": [
          "ON",
          "OFF"
         ]
        }
       },
       "additionalProperties": false,
       "_name_": "pool_update",
       "title": "pool_update",
       "default": {},
       "_attrs_order_": [
        "dedup_table_quota",
        "dedup_table_quota_value",
        "topology",
        "allow_duplicate_serials",
        "autotrim"
       ]
      },
      "return_schema_of_pool_update": {
       "type": "object",
       "properties": {
        "id": {
         "type": "integer",
         "_name_": "id",
         "title": "id",
         "description": "Update pool of `id`, adding the new topology."
        },
        "name": {
         "_name_": "name",
         "title": "name",
         "type": "string",
         "description": "`encryption` when enabled will create an ZFS encrypted root dataset for `name` pool.\n`encryption_options` specifies configuration for encryption of root dataset for `name` pool.\n`encryption_options.passphrase` must be specified if encryption for root dataset is desired with a passphrase\nas a key.\nOtherwise a hex encoded key can be specified by providing `encryption_options.key`.\n`encryption_options.generate_key` when enabled automatically generates the key to be used\nfor dataset encryption."
        },
        "guid": {
         "_name_": "guid",
         "title": "guid",
         "type": "string"
        },
        "status": {
         "_name_": "status",
         "title": "status",
         "type": "string"
        },
        "path": {
         "_name_": "path",
         "title": "path",
         "type": "string"
        },
        "scan": {
         "type": "object",
         "properties": {},
         "additionalProperties": true,
         "_name_": "scan",
         "title": "scan",
         "description": "\n\nExample(s):\n```\n{\n    \"function\": null,\n    \"state\": null,\n    \"start_time\": null,\n    \"end_time\": null,\n    \"percentage\": null,\n    \"bytes_to_process\": null,\n    \"bytes_processed\": null,\n    \"bytes_issued\": null,\n    \"pause\": null,\n    \"errors\": null,\n    \"total_secs_left\": null\n}\n```\n",
         "default": {},
         "_attrs_order_": []
        },
        "expand": {
         "type": "object",
         "properties": {},
         "additionalProperties": true,
         "_name_": "expand",
         "title": "expand",
         "description": "\n\nExample(s):\n```\n{\n    \"state\": \"FINISHED\",\n    \"expanding_vdev\": 0,\n    \"start_time\": null,\n    \"end_time\": null,\n    \"bytes_to_reflow\": 835584,\n    \"bytes_reflowed\": 978944,\n    \"waiting_for_resilver\": 0,\n    \"total_secs_left\": null,\n    \"percentage\": 85.35564853556485\n}\n```\n",
         "default": {},
         "_attrs_order_": []
        },
        "is_upgraded": {
         "type": "boolean",
         "_name_": "is_upgraded",
         "title": "is_upgraded"
        },
        "healthy": {
         "type": "boolean",
         "_name_": "healthy",
         "title": "healthy"
        },
        "warning": {
         "type": "boolean",
         "_name_": "warning",
         "title": "warning"
        },
        "status_code": {
         "_name_": "status_code",
         "title": "status_code",
         "type": "string",
         "nullable": true
        },
        "status_detail": {
         "_name_": "status_detail",
         "title": "status_detail",
         "type": "string",
         "nullable": true
        },
        "size": {
         "type": "integer",
         "_name_": "size",
         "title": "size",
         "nullable": true
        },
        "allocated": {
         "type": "integer",
         "_name_": "allocated",
         "title": "allocated",
         "nullable": true
        },
        "free": {
         "type": "integer",
         "_name_": "free",
         "title": "free",
         "nullable": true
        },
        "freeing": {
         "type": "integer",
         "_name_": "freeing",
         "title": "freeing",
         "nullable": true
        },
        "dedup_table_size": {
         "type": "integer",
         "_name_": "dedup_table_size",
         "title": "dedup_table_size",
         "nullable": true
        },
        "dedup_table_quota": {
         "_name_": "dedup_table_quota",
         "title": "dedup_table_quota",
         "type": "string",
         "nullable": true
        },
        "fragmentation": {
         "_name_": "fragmentation",
         "title": "fragmentation",
         "type": "string",
         "nullable": true
        },
        "size_str": {
         "_name_": "size_str",
         "title": "size_str",
         "type": "string",
         "nullable": true
        },
        "allocated_str": {
         "_name_": "allocated_str",
         "title": "allocated_str",
         "type": "string",
         "nullable": true
        },
        "free_str": {
         "_name_": "free_str",
         "title": "free_str",
         "type": "string",
         "nullable": true
        },
        "freeing_str": {
         "_name_": "freeing_str",
         "title": "freeing_str",
         "type": "string",
         "nullable": true
        },
        "autotrim": {
         "type": "object",
         "properties": {},
         "additionalProperties": true,
         "_name_": "autotrim",
         "title": "autotrim",
         "description": "\n\nExample(s):\n```\n{\n    \"parsed\": \"off\",\n    \"rawvalue\": \"off\",\n    \"source\": \"DEFAULT\",\n    \"value\": \"off\"\n}\n```\n",
         "default": {},
         "_attrs_order_": []
        },
        "topology": {
         "type": "object",
         "properties": {
          "data": {
           "_name_": "data",
           "title": "data",
           "default": [],
           "type": "array",
           "items": {}
          },
          "log": {
           "_name_": "log",
           "title": "log",
           "default": [],
           "type": "array",
           "items": {}
          },
          "cache": {
           "_name_": "cache",
           "title": "cache",
           "default": [],
           "type": "array",
           "items": {}
          },
          "spare": {
           "_name_": "spare",
           "title": "spare",
           "default": [],
           "type": "array",
           "items": {}
          },
          "special": {
           "_name_": "special",
           "title": "special",
           "default": [],
           "type": "array",
           "items": {}
          },
          "dedup": {
           "_name_": "dedup",
           "title": "dedup",
           "default": [],
           "type": "array",
           "items": {}
          }
         },
         "additionalProperties": false,
         "_name_": "topology",
         "title": "topology",
         "default": {},
         "_attrs_order_": [
          "data",
          "log",
          "cache",
          "spare",
          "special",
          "dedup"
         ],
         "description": "`topology` is a object which requires at least one `data` entry.\nAll of `data` entries (vdevs) require to be of the same type.\nExample of `topology`:"
        }
       },
       "additionalProperties": false,
       "_name_": "pool_update_returns",
       "title": "pool_update_returns",
       "default": {},
       "_attrs_order_": [
        "id",
        "name",
        "guid",
        "status",
        "path",
        "scan",
        "expand",
        "is_upgraded",
        "healthy",
        "warning",
        "status_code",
        "status_detail",
        "size",
        "allocated",
        "free",
        "freeing",
        "dedup_table_size",
        "dedup_table_quota",
        "fragmentation",
        "size_str",
        "allocated_str",
        "free_str",
        "freeing_str",
        "autotrim",
        "topology"
       ]
      },
      "pool_attach_0": {
       "type": "integer",
       "_name_": "oid",
       "title": "oid"
      },
      "pool_attach_1": {
       "type": "object",
       "properties": {
        "target_vdev": {
         "_name_": "target_vdev",
         "title": "target_vdev",
         "type": "string"
        },
        "new_disk": {
         "_name_": "new_disk",
         "title": "new_disk",
         "type": "string"
        },
        "allow_duplicate_serials": {
         "type": "boolean",
         "_name_": "allow_duplicate_serials",
         "title": "allow_duplicate_serials",
         "default": false
        }
       },
       "additionalProperties": false,
       "_name_": "pool_attach",
       "title": "pool_attach",
       "default": {},
       "_attrs_order_": [
        "target_vdev",
        "new_disk",
        "allow_duplicate_serials"
       ]
      },
      "pool_attach": {
       "type": "object",
       "properties": {
        "oid": {
         "$ref": "#/components/schemas/pool_attach_0"
        },
        "pool_attach": {
         "$ref": "#/components/schemas/pool_attach_1"
        }
       }
      },
      "pool_attachments": {
       "type": "object",
       "properties": {}
      },
      "return_schema_of_pool_attachments": {
       "_name_": "attachments",
       "title": "attachments",
       "default": [],
       "type": "array",
       "items": {
        "type": "object",
        "properties": {
         "type": {
          "_name_": "type",
          "title": "type",
          "_required_": true,
          "type": "string"
         },
         "service": {
          "_name_": "service",
          "title": "service",
          "_required_": true,
          "type": [
           "string",
           "null"
          ]
         },
         "attachments": {
          "_name_": "attachments",
          "title": "attachments",
          "default": [],
          "_required_": false,
          "type": "array",
          "items": [
           {
            "_name_": "attachment_name",
            "title": "attachment_name",
            "_required_": false,
            "type": "string"
           }
          ]
         }
        },
        "additionalProperties": false,
        "_name_": "attachment",
        "title": "attachment",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "type",
         "service",
         "attachments"
        ]
       }
      },
      "pool_ddt_prefetch": {
       "minLength": 1,
       "title": "pool_name",
       "type": "string",
       "_name_": "pool_name"
      },
      "return_schema_of_pool_ddt_prefetch": {
       "title": "result",
       "type": "null",
       "_name_": "result"
      },
      "pool_ddt_prune": {
       "additionalProperties": false,
       "properties": {
        "pool_name": {
         "minLength": 1,
         "title": "pool_name",
         "type": "string",
         "_name_": "pool_name"
        },
        "percentage": {
         "anyOf": [
          {
           "maximum": 100,
           "minimum": 1,
           "type": "integer"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "percentage",
         "_name_": "percentage"
        },
        "days": {
         "anyOf": [
          {
           "minimum": 1,
           "type": "integer"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "days",
         "_name_": "days"
        }
       },
       "required": [
        "pool_name"
       ],
       "title": "options",
       "type": "object",
       "_name_": "options",
       "_attrs_order_": [
        "pool_name",
        "percentage",
        "days"
       ]
      },
      "return_schema_of_pool_ddt_prune": {
       "title": "result",
       "type": "null",
       "_name_": "result"
      },
      "pool_detach": {
       "type": "object",
       "properties": {
        "label": {
         "_name_": "label",
         "title": "label",
         "type": "string",
         "description": "`label` is the vdev guid or device name."
        },
        "wipe": {
         "type": "boolean",
         "_name_": "wipe",
         "title": "wipe",
         "default": false
        }
       },
       "additionalProperties": false,
       "_name_": "options",
       "title": "options",
       "default": {},
       "_attrs_order_": [
        "label",
        "wipe"
       ]
      },
      "return_schema_of_pool_detach": {
       "type": "boolean",
       "_name_": "detached",
       "title": "detached"
      },
      "pool_expand": {
       "type": "object",
       "properties": {}
      },
      "pool_export": {
       "type": "object",
       "properties": {
        "cascade": {
         "type": "boolean",
         "_name_": "cascade",
         "title": "cascade",
         "default": false,
         "description": "`cascade` will delete all attachments of the given pool (`pool.attachments`)."
        },
        "restart_services": {
         "type": "boolean",
         "_name_": "restart_services",
         "title": "restart_services",
         "default": false,
         "description": "`restart_services` will restart services that have open files on given pool."
        },
        "destroy": {
         "type": "boolean",
         "_name_": "destroy",
         "title": "destroy",
         "default": false,
         "description": "`destroy` will also PERMANENTLY destroy the pool/data."
        }
       },
       "additionalProperties": false,
       "_name_": "options",
       "title": "options",
       "default": {},
       "_attrs_order_": [
        "cascade",
        "restart_services",
        "destroy"
       ]
      },
      "pool_filesystem_choices": {
       "_name_": "types",
       "title": "types",
       "default": [
        "FILESYSTEM",
        "VOLUME"
       ],
       "type": "array",
       "items": {
        "_name_": "type",
        "title": "type",
        "_required_": false,
        "type": "string",
        "enum": [
         "FILESYSTEM",
         "VOLUME"
        ]
       }
      },
      "return_schema_of_pool_filesystem_choices": {
       "_name_": "filesystem_choices",
       "title": "filesystem_choices",
       "default": [],
       "type": "array",
       "items": {
        "_name_": "filesystem_name",
        "title": "filesystem_name",
        "_required_": false,
        "type": "string"
       }
      },
      "pool_get_disks": {
       "type": "object",
       "properties": {}
      },
      "return_schema_of_pool_get_disks": {
       "_name_": "pool_disks",
       "title": "pool_disks",
       "default": [],
       "type": "array",
       "items": {
        "_name_": "disk",
        "title": "disk",
        "_required_": false,
        "type": "string"
       }
      },
      "pool_get_instance_0": {
       "anyOf": [
        {
         "type": "string"
        },
        {
         "type": "integer"
        },
        {
         "type": "boolean"
        },
        {
         "type": "object"
        },
        {
         "type": "array"
        }
       ],
       "nullable": false,
       "_name_": "id",
       "title": "id",
       "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised."
      },
      "pool_get_instance_1": {
       "type": "object",
       "properties": {
        "relationships": {
         "type": "boolean",
         "_name_": "relationships",
         "title": "relationships",
         "default": true
        },
        "extend": {
         "_name_": "extend",
         "title": "extend",
         "default": null,
         "type": "string",
         "nullable": true
        },
        "extend_context": {
         "_name_": "extend_context",
         "title": "extend_context",
         "default": null,
         "type": "string",
         "nullable": true
        },
        "prefix": {
         "_name_": "prefix",
         "title": "prefix",
         "default": null,
         "type": "string",
         "nullable": true
        },
        "extra": {
         "type": "object",
         "properties": {},
         "additionalProperties": true,
         "_name_": "extra",
         "title": "extra",
         "default": {},
         "_attrs_order_": []
        },
        "order_by": {
         "_name_": "order_by",
         "title": "order_by",
         "default": [],
         "type": "array",
         "items": {}
        },
        "select": {
         "_name_": "select",
         "title": "select",
         "default": [],
         "type": "array",
         "items": {}
        },
        "count": {
         "type": "boolean",
         "_name_": "count",
         "title": "count",
         "default": false
        },
        "get": {
         "type": "boolean",
         "_name_": "get",
         "title": "get",
         "default": false
        },
        "offset": {
         "type": "integer",
         "_name_": "offset",
         "title": "offset",
         "default": 0
        },
        "limit": {
         "type": "integer",
         "_name_": "limit",
         "title": "limit",
         "default": 0
        },
        "force_sql_filters": {
         "type": "boolean",
         "_name_": "force_sql_filters",
         "title": "force_sql_filters",
         "default": true
        }
       },
       "additionalProperties": false,
       "_name_": "query-options-get_instance",
       "title": "query-options-get_instance",
       "default": {},
       "_attrs_order_": [
        "relationships",
        "extend",
        "extend_context",
        "prefix",
        "extra",
        "order_by",
        "select",
        "count",
        "get",
        "offset",
        "limit",
        "force_sql_filters"
       ]
      },
      "pool_get_instance": {
       "type": "object",
       "properties": {
        "id": {
         "$ref": "#/components/schemas/pool_get_instance_0"
        },
        "query-options-get_instance": {
         "$ref": "#/components/schemas/pool_get_instance_1"
        }
       }
      },
      "return_schema_of_pool_get_instance": {
       "type": "object",
       "properties": {
        "id": {
         "type": "integer",
         "_name_": "id",
         "title": "id",
         "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised."
        },
        "name": {
         "_name_": "name",
         "title": "name",
         "type": "string"
        },
        "guid": {
         "_name_": "guid",
         "title": "guid",
         "type": "string"
        },
        "status": {
         "_name_": "status",
         "title": "status",
         "type": "string"
        },
        "path": {
         "_name_": "path",
         "title": "path",
         "type": "string"
        },
        "scan": {
         "type": "object",
         "properties": {},
         "additionalProperties": true,
         "_name_": "scan",
         "title": "scan",
         "description": "\n\nExample(s):\n```\n{\n    \"function\": null,\n    \"state\": null,\n    \"start_time\": null,\n    \"end_time\": null,\n    \"percentage\": null,\n    \"bytes_to_process\": null,\n    \"bytes_processed\": null,\n    \"bytes_issued\": null,\n    \"pause\": null,\n    \"errors\": null,\n    \"total_secs_left\": null\n}\n```\n",
         "default": {},
         "_attrs_order_": []
        },
        "expand": {
         "type": "object",
         "properties": {},
         "additionalProperties": true,
         "_name_": "expand",
         "title": "expand",
         "description": "\n\nExample(s):\n```\n{\n    \"state\": \"FINISHED\",\n    \"expanding_vdev\": 0,\n    \"start_time\": null,\n    \"end_time\": null,\n    \"bytes_to_reflow\": 835584,\n    \"bytes_reflowed\": 978944,\n    \"waiting_for_resilver\": 0,\n    \"total_secs_left\": null,\n    \"percentage\": 85.35564853556485\n}\n```\n",
         "default": {},
         "_attrs_order_": []
        },
        "is_upgraded": {
         "type": "boolean",
         "_name_": "is_upgraded",
         "title": "is_upgraded"
        },
        "healthy": {
         "type": "boolean",
         "_name_": "healthy",
         "title": "healthy"
        },
        "warning": {
         "type": "boolean",
         "_name_": "warning",
         "title": "warning"
        },
        "status_code": {
         "_name_": "status_code",
         "title": "status_code",
         "type": "string",
         "nullable": true
        },
        "status_detail": {
         "_name_": "status_detail",
         "title": "status_detail",
         "type": "string",
         "nullable": true
        },
        "size": {
         "type": "integer",
         "_name_": "size",
         "title": "size",
         "nullable": true
        },
        "allocated": {
         "type": "integer",
         "_name_": "allocated",
         "title": "allocated",
         "nullable": true
        },
        "free": {
         "type": "integer",
         "_name_": "free",
         "title": "free",
         "nullable": true
        },
        "freeing": {
         "type": "integer",
         "_name_": "freeing",
         "title": "freeing",
         "nullable": true
        },
        "dedup_table_size": {
         "type": "integer",
         "_name_": "dedup_table_size",
         "title": "dedup_table_size",
         "nullable": true
        },
        "dedup_table_quota": {
         "_name_": "dedup_table_quota",
         "title": "dedup_table_quota",
         "type": "string",
         "nullable": true
        },
        "fragmentation": {
         "_name_": "fragmentation",
         "title": "fragmentation",
         "type": "string",
         "nullable": true
        },
        "size_str": {
         "_name_": "size_str",
         "title": "size_str",
         "type": "string",
         "nullable": true
        },
        "allocated_str": {
         "_name_": "allocated_str",
         "title": "allocated_str",
         "type": "string",
         "nullable": true
        },
        "free_str": {
         "_name_": "free_str",
         "title": "free_str",
         "type": "string",
         "nullable": true
        },
        "freeing_str": {
         "_name_": "freeing_str",
         "title": "freeing_str",
         "type": "string",
         "nullable": true
        },
        "autotrim": {
         "type": "object",
         "properties": {},
         "additionalProperties": true,
         "_name_": "autotrim",
         "title": "autotrim",
         "description": "\n\nExample(s):\n```\n{\n    \"parsed\": \"off\",\n    \"rawvalue\": \"off\",\n    \"source\": \"DEFAULT\",\n    \"value\": \"off\"\n}\n```\n",
         "default": {},
         "_attrs_order_": []
        },
        "topology": {
         "type": "object",
         "properties": {
          "data": {
           "_name_": "data",
           "title": "data",
           "default": [],
           "type": "array",
           "items": {}
          },
          "log": {
           "_name_": "log",
           "title": "log",
           "default": [],
           "type": "array",
           "items": {}
          },
          "cache": {
           "_name_": "cache",
           "title": "cache",
           "default": [],
           "type": "array",
           "items": {}
          },
          "spare": {
           "_name_": "spare",
           "title": "spare",
           "default": [],
           "type": "array",
           "items": {}
          },
          "special": {
           "_name_": "special",
           "title": "special",
           "default": [],
           "type": "array",
           "items": {}
          },
          "dedup": {
           "_name_": "dedup",
           "title": "dedup",
           "default": [],
           "type": "array",
           "items": {}
          }
         },
         "additionalProperties": false,
         "_name_": "topology",
         "title": "topology",
         "default": {},
         "_attrs_order_": [
          "data",
          "log",
          "cache",
          "spare",
          "special",
          "dedup"
         ]
        }
       },
       "additionalProperties": false,
       "_name_": "pool_entry",
       "title": "pool_entry",
       "default": {},
       "_attrs_order_": [
        "id",
        "name",
        "guid",
        "status",
        "path",
        "scan",
        "expand",
        "is_upgraded",
        "healthy",
        "warning",
        "status_code",
        "status_detail",
        "size",
        "allocated",
        "free",
        "freeing",
        "dedup_table_size",
        "dedup_table_quota",
        "fragmentation",
        "size_str",
        "allocated_str",
        "free_str",
        "freeing_str",
        "autotrim",
        "topology"
       ]
      },
      "return_schema_of_pool_import_find": {
       "_name_": "pools_available_for_import",
       "title": "Pools Available For Import",
       "default": [],
       "type": "array",
       "items": {
        "type": "object",
        "properties": {
         "name": {
          "_name_": "name",
          "title": "name",
          "_required_": true,
          "type": "string"
         },
         "guid": {
          "_name_": "guid",
          "title": "guid",
          "_required_": true,
          "type": "string"
         },
         "status": {
          "_name_": "status",
          "title": "status",
          "_required_": true,
          "type": "string"
         },
         "hostname": {
          "_name_": "hostname",
          "title": "hostname",
          "_required_": true,
          "type": "string"
         }
        },
        "additionalProperties": false,
        "_name_": "pool_info",
        "title": "pool_info",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "name",
         "guid",
         "status",
         "hostname"
        ]
       }
      },
      "pool_import_pool": {
       "type": "object",
       "properties": {
        "guid": {
         "_name_": "guid",
         "title": "guid",
         "type": "string"
        },
        "name": {
         "_name_": "name",
         "title": "name",
         "type": "string",
         "description": "If a `name` is specified the pool will be imported using that new name."
        },
        "enable_attachments": {
         "type": "boolean",
         "_name_": "enable_attachments",
         "title": "enable_attachments",
         "description": "If `enable_attachments` is set to true, attachments that were disabled during pool export will be\nre-enabled."
        }
       },
       "additionalProperties": false,
       "_name_": "pool_import",
       "title": "pool_import",
       "default": {},
       "_attrs_order_": [
        "guid",
        "name",
        "enable_attachments"
       ]
      },
      "return_schema_of_pool_import_pool": {
       "type": "boolean",
       "_name_": "successful_import",
       "title": "successful_import"
      },
      "pool_is_upgraded": {
       "type": "object",
       "properties": {}
      },
      "return_schema_of_pool_is_upgraded": {
       "type": "boolean",
       "_name_": "pool_is_upgraded",
       "title": "pool_is_upgraded"
      },
      "pool_offline": {
       "type": "object",
       "properties": {
        "label": {
         "_name_": "label",
         "title": "label",
         "type": "string",
         "description": "`label` is the vdev guid or device name."
        }
       },
       "additionalProperties": false,
       "_name_": "options",
       "title": "options",
       "default": {},
       "_attrs_order_": [
        "label"
       ]
      },
      "return_schema_of_pool_offline": {
       "type": "boolean",
       "_name_": "offline_successful",
       "title": "offline_successful"
      },
      "pool_online": {
       "type": "object",
       "properties": {
        "label": {
         "_name_": "label",
         "title": "label",
         "type": "string",
         "description": "`label` is the vdev guid or device name."
        }
       },
       "additionalProperties": false,
       "_name_": "options",
       "title": "options",
       "default": {},
       "_attrs_order_": [
        "label"
       ]
      },
      "return_schema_of_pool_online": {
       "type": "boolean",
       "_name_": "online_successful",
       "title": "online_successful"
      },
      "pool_processes": {
       "type": "object",
       "properties": {}
      },
      "return_schema_of_pool_processes": {
       "_name_": "processes",
       "title": "processes",
       "default": [],
       "type": "array",
       "items": {
        "type": "object",
        "properties": {
         "pid": {
          "type": "integer",
          "_name_": "pid",
          "title": "pid",
          "_required_": true
         },
         "name": {
          "_name_": "name",
          "title": "name",
          "_required_": true,
          "type": "string"
         },
         "service": {
          "_name_": "service",
          "title": "service",
          "_required_": false,
          "type": "string"
         },
         "cmdline": {
          "_name_": "cmdline",
          "title": "cmdline",
          "_required_": false,
          "type": "string"
         }
        },
        "additionalProperties": false,
        "_name_": "process",
        "title": "process",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "pid",
         "name",
         "service",
         "cmdline"
        ]
       }
      },
      "pool_remove": {
       "type": "object",
       "properties": {
        "label": {
         "_name_": "label",
         "title": "label",
         "type": "string",
         "description": "`label` is the vdev guid or device name."
        }
       },
       "additionalProperties": false,
       "_name_": "options",
       "title": "options",
       "default": {},
       "_attrs_order_": [
        "label"
       ]
      },
      "pool_replace": {
       "type": "object",
       "properties": {
        "label": {
         "_name_": "label",
         "title": "label",
         "type": "string",
         "description": "`label` is the ZFS guid or a device name"
        },
        "disk": {
         "_name_": "disk",
         "title": "disk",
         "type": "string",
         "description": "`disk` is the identifier of a disk"
        },
        "force": {
         "type": "boolean",
         "_name_": "force",
         "title": "force",
         "default": false
        },
        "preserve_settings": {
         "type": "boolean",
         "_name_": "preserve_settings",
         "title": "preserve_settings",
         "default": true,
         "description": "If `preserve_settings` is true, then settings (power management, S.M.A.R.T., etc.) of a disk being replaced\nwill be applied to a new disk."
        },
        "preserve_description": {
         "type": "boolean",
         "_name_": "preserve_description",
         "title": "preserve_description",
         "default": true
        }
       },
       "additionalProperties": false,
       "_name_": "options",
       "title": "options",
       "default": {},
       "_attrs_order_": [
        "label",
        "disk",
        "force",
        "preserve_settings",
        "preserve_description"
       ]
      },
      "return_schema_of_pool_replace": {
       "type": "boolean",
       "_name_": "replaced_successfully",
       "title": "replaced_successfully"
      },
      "pool_scrub": {
       "_name_": "action",
       "title": "action",
       "type": "string",
       "enum": [
        "START",
        "STOP",
        "PAUSE"
       ],
       "description": "`action` can be either of \"START\", \"STOP\" or \"PAUSE\"."
      },
      "pool_upgrade": {
       "type": "object",
       "properties": {}
      },
      "return_schema_of_pool_upgrade": {
       "type": "boolean",
       "_name_": "upgraded",
       "title": "upgraded"
      },
      "pool_validate_name": {
       "_name_": "pool_name",
       "title": "pool_name",
       "type": "string"
      },
      "return_schema_of_pool_dataset_query": {
       "anyOf": [
        {
         "_name_": "query_result",
         "title": "query_result",
         "default": [],
         "_required_": false,
         "type": "array",
         "items": [
          {
           "type": "object",
           "properties": {
            "id": {
             "_name_": "id",
             "title": "id",
             "_required_": true,
             "type": "string"
            },
            "type": {
             "_name_": "type",
             "title": "type",
             "_required_": true,
             "type": "string"
            },
            "name": {
             "_name_": "name",
             "title": "name",
             "_required_": true,
             "type": "string"
            },
            "pool": {
             "_name_": "pool",
             "title": "pool",
             "_required_": true,
             "type": "string"
            },
            "encrypted": {
             "type": "boolean",
             "_name_": "encrypted",
             "title": "encrypted",
             "_required_": false
            },
            "encryption_root": {
             "_name_": "encryption_root",
             "title": "encryption_root",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "key_loaded": {
             "type": [
              "boolean",
              "null"
             ],
             "_name_": "key_loaded",
             "title": "key_loaded",
             "_required_": false
            },
            "children": {
             "_name_": "children",
             "title": "children",
             "default": [],
             "_required_": true,
             "type": "array",
             "items": []
            },
            "user_properties": {
             "type": "object",
             "properties": {},
             "additionalProperties": true,
             "_name_": "user_properties",
             "title": "user_properties",
             "default": {},
             "_required_": true,
             "_attrs_order_": []
            },
            "locked": {
             "type": "boolean",
             "_name_": "locked",
             "title": "locked",
             "_required_": false
            },
            "comments": {
             "type": "object",
             "properties": {
              "parsed": {
               "anyOf": [
                {
                 "type": "string"
                },
                {
                 "type": "integer"
                },
                {
                 "type": "boolean"
                },
                {
                 "type": "object"
                },
                {
                 "type": "array"
                }
               ],
               "nullable": true,
               "_name_": "parsed",
               "title": "parsed",
               "_required_": false
              },
              "rawvalue": {
               "_name_": "rawvalue",
               "title": "rawvalue",
               "_required_": false,
               "type": [
                "string",
                "null"
               ]
              },
              "value": {
               "_name_": "value",
               "title": "value",
               "_required_": false,
               "type": [
                "string",
                "null"
               ]
              },
              "source": {
               "_name_": "source",
               "title": "source",
               "_required_": false,
               "type": [
                "string",
                "null"
               ]
              },
              "source_info": {
               "anyOf": [
                {
                 "type": "string"
                },
                {
                 "type": "integer"
                },
                {
                 "type": "boolean"
                },
                {
                 "type": "object"
                },
                {
                 "type": "array"
                }
               ],
               "nullable": true,
               "_name_": "source_info",
               "title": "source_info",
               "_required_": false
              }
             },
             "additionalProperties": false,
             "_name_": "comments",
             "title": "comments",
             "default": {},
             "_required_": false,
             "_attrs_order_": [
              "parsed",
              "rawvalue",
              "value",
              "source",
              "source_info"
             ]
            },
            "quota_warning": {
             "type": "object",
             "properties": {
              "parsed": {
               "anyOf": [
                {
                 "type": "string"
                },
                {
                 "type": "integer"
                },
                {
                 "type": "boolean"
                },
                {
                 "type": "object"
                },
                {
                 "type": "array"
                }
               ],
               "nullable": true,
               "_name_": "parsed",
               "title": "parsed",
               "_required_": false
              },
              "rawvalue": {
               "_name_": "rawvalue",
               "title": "rawvalue",
               "_required_": false,
               "type": [
                "string",
                "null"
               ]
              },
              "value": {
               "_name_": "value",
               "title": "value",
               "_required_": false,
               "type": [
                "string",
                "null"
               ]
              },
              "source": {
               "_name_": "source",
               "title": "source",
               "_required_": false,
               "type": [
                "string",
                "null"
               ]
              },
              "source_info": {
               "anyOf": [
                {
                 "type": "string"
                },
                {
                 "type": "integer"
                },
                {
                 "type": "boolean"
                },
                {
                 "type": "object"
                },
                {
                 "type": "array"
                }
               ],
               "nullable": true,
               "_name_": "source_info",
               "title": "source_info",
               "_required_": false
              }
             },
             "additionalProperties": false,
             "_name_": "quota_warning",
             "title": "quota_warning",
             "default": {},
             "_required_": false,
             "_attrs_order_": [
              "parsed",
              "rawvalue",
              "value",
              "source",
              "source_info"
             ]
            },
            "quota_critical": {
             "type": "object",
             "properties": {
              "parsed": {
               "anyOf": [
                {
                 "type": "string"
                },
                {
                 "type": "integer"
                },
                {
                 "type": "boolean"
                },
                {
                 "type": "object"
                },
                {
                 "type": "array"
                }
               ],
               "nullable": true,
               "_name_": "parsed",
               "title": "parsed",
               "_required_": false
              },
              "rawvalue": {
               "_name_": "rawvalue",
               "title": "rawvalue",
               "_required_": false,
               "type": [
                "string",
                "null"
               ]
              },
              "value": {
               "_name_": "value",
               "title": "value",
               "_required_": false,
               "type": [
                "string",
                "null"
               ]
              },
              "source": {
               "_name_": "source",
               "title": "source",
               "_required_": false,
               "type": [
                "string",
                "null"
               ]
              },
              "source_info": {
               "anyOf": [
                {
                 "type": "string"
                },
                {
                 "type": "integer"
                },
                {
                 "type": "boolean"
                },
                {
                 "type": "object"
                },
                {
                 "type": "array"
                }
               ],
               "nullable": true,
               "_name_": "source_info",
               "title": "source_info",
               "_required_": false
              }
             },
             "additionalProperties": false,
             "_name_": "quota_critical",
             "title": "quota_critical",
             "default": {},
             "_required_": false,
             "_attrs_order_": [
              "parsed",
              "rawvalue",
              "value",
              "source",
              "source_info"
             ]
            },
            "refquota_warning": {
             "type": "object",
             "properties": {
              "parsed": {
               "anyOf": [
                {
                 "type": "string"
                },
                {
                 "type": "integer"
                },
                {
                 "type": "boolean"
                },
                {
                 "type": "object"
                },
                {
                 "type": "array"
                }
               ],
               "nullable": true,
               "_name_": "parsed",
               "title": "parsed",
               "_required_": false
              },
              "rawvalue": {
               "_name_": "rawvalue",
               "title": "rawvalue",
               "_required_": false,
               "type": [
                "string",
                "null"
               ]
              },
              "value": {
               "_name_": "value",
               "title": "value",
               "_required_": false,
               "type": [
                "string",
                "null"
               ]
              },
              "source": {
               "_name_": "source",
               "title": "source",
               "_required_": false,
               "type": [
                "string",
                "null"
               ]
              },
              "source_info": {
               "anyOf": [
                {
                 "type": "string"
                },
                {
                 "type": "integer"
                },
                {
                 "type": "boolean"
                },
                {
                 "type": "object"
                },
                {
                 "type": "array"
                }
               ],
               "nullable": true,
               "_name_": "source_info",
               "title": "source_info",
               "_required_": false
              }
             },
             "additionalProperties": false,
             "_name_": "refquota_warning",
             "title": "refquota_warning",
             "default": {},
             "_required_": false,
             "_attrs_order_": [
              "parsed",
              "rawvalue",
              "value",
              "source",
              "source_info"
             ]
            },
            "refquota_critical": {
             "type": "object",
             "properties": {
              "parsed": {
               "anyOf": [
                {
                 "type": "string"
                },
                {
                 "type": "integer"
                },
                {
                 "type": "boolean"
                },
                {
                 "type": "object"
                },
                {
                 "type": "array"
                }
               ],
               "nullable": true,
               "_name_": "parsed",
               "title": "parsed",
               "_required_": false
              },
              "rawvalue": {
               "_name_": "rawvalue",
               "title": "rawvalue",
               "_required_": false,
               "type": [
                "string",
                "null"
               ]
              },
              "value": {
               "_name_": "value",
               "title": "value",
               "_required_": false,
               "type": [
                "string",
                "null"
               ]
              },
              "source": {
               "_name_": "source",
               "title": "source",
               "_required_": false,
               "type": [
                "string",
                "null"
               ]
              },
              "source_info": {
               "anyOf": [
                {
                 "type": "string"
                },
                {
                 "type": "integer"
                },
                {
                 "type": "boolean"
                },
                {
                 "type": "object"
                },
                {
                 "type": "array"
                }
               ],
               "nullable": true,
               "_name_": "source_info",
               "title": "source_info",
               "_required_": false
              }
             },
             "additionalProperties": false,
             "_name_": "refquota_critical",
             "title": "refquota_critical",
             "default": {},
             "_required_": false,
             "_attrs_order_": [
              "parsed",
              "rawvalue",
              "value",
              "source",
              "source_info"
             ]
            },
            "managedby": {
             "type": "object",
             "properties": {
              "parsed": {
               "anyOf": [
                {
                 "type": "string"
                },
                {
                 "type": "integer"
                },
                {
                 "type": "boolean"
                },
                {
                 "type": "object"
                },
                {
                 "type": "array"
                }
               ],
               "nullable": true,
               "_name_": "parsed",
               "title": "parsed",
               "_required_": false
              },
              "rawvalue": {
               "_name_": "rawvalue",
               "title": "rawvalue",
               "_required_": false,
               "type": [
                "string",
                "null"
               ]
              },
              "value": {
               "_name_": "value",
               "title": "value",
               "_required_": false,
               "type": [
                "string",
                "null"
               ]
              },
              "source": {
               "_name_": "source",
               "title": "source",
               "_required_": false,
               "type": [
                "string",
                "null"
               ]
              },
              "source_info": {
               "anyOf": [
                {
                 "type": "string"
                },
                {
                 "type": "integer"
                },
                {
                 "type": "boolean"
                },
                {
                 "type": "object"
                },
                {
                 "type": "array"
                }
               ],
               "nullable": true,
               "_name_": "source_info",
               "title": "source_info",
               "_required_": false
              }
             },
             "additionalProperties": false,
             "_name_": "managedby",
             "title": "managedby",
             "default": {},
             "_required_": false,
             "_attrs_order_": [
              "parsed",
              "rawvalue",
              "value",
              "source",
              "source_info"
             ]
            },
            "deduplication": {
             "type": "object",
             "properties": {
              "parsed": {
               "anyOf": [
                {
                 "type": "string"
                },
                {
                 "type": "integer"
                },
                {
                 "type": "boolean"
                },
                {
                 "type": "object"
                },
                {
                 "type": "array"
                }
               ],
               "nullable": true,
               "_name_": "parsed",
               "title": "parsed",
               "_required_": false
              },
              "rawvalue": {
               "_name_": "rawvalue",
               "title": "rawvalue",
               "_required_": false,
               "type": [
                "string",
                "null"
               ]
              },
              "value": {
               "_name_": "value",
               "title": "value",
               "_required_": false,
               "type": [
                "string",
                "null"
               ]
              },
              "source": {
               "_name_": "source",
               "title": "source",
               "_required_": false,
               "type": [
                "string",
                "null"
               ]
              },
              "source_info": {
               "anyOf": [
                {
                 "type": "string"
                },
                {
                 "type": "integer"
                },
                {
                 "type": "boolean"
                },
                {
                 "type": "object"
                },
                {
                 "type": "array"
                }
               ],
               "nullable": true,
               "_name_": "source_info",
               "title": "source_info",
               "_required_": false
              }
             },
             "additionalProperties": false,
             "_name_": "deduplication",
             "title": "deduplication",
             "default": {},
             "_required_": false,
             "_attrs_order_": [
              "parsed",
              "rawvalue",
              "value",
              "source",
              "source_info"
             ]
            },
            "aclmode": {
             "type": "object",
             "properties": {
              "parsed": {
               "anyOf": [
                {
                 "type": "string"
                },
                {
                 "type": "integer"
                },
                {
                 "type": "boolean"
                },
                {
                 "type": "object"
                },
                {
                 "type": "array"
                }
               ],
               "nullable": true,
               "_name_": "parsed",
               "title": "parsed",
               "_required_": false
              },
              "rawvalue": {
               "_name_": "rawvalue",
               "title": "rawvalue",
               "_required_": false,
               "type": [
                "string",
                "null"
               ]
              },
              "value": {
               "_name_": "value",
               "title": "value",
               "_required_": false,
               "type": [
                "string",
                "null"
               ]
              },
              "source": {
               "_name_": "source",
               "title": "source",
               "_required_": false,
               "type": [
                "string",
                "null"
               ]
              },
              "source_info": {
               "anyOf": [
                {
                 "type": "string"
                },
                {
                 "type": "integer"
                },
                {
                 "type": "boolean"
                },
                {
                 "type": "object"
                },
                {
                 "type": "array"
                }
               ],
               "nullable": true,
               "_name_": "source_info",
               "title": "source_info",
               "_required_": false
              }
             },
             "additionalProperties": false,
             "_name_": "aclmode",
             "title": "aclmode",
             "default": {},
             "_required_": false,
             "_attrs_order_": [
              "parsed",
              "rawvalue",
              "value",
              "source",
              "source_info"
             ]
            },
            "acltype": {
             "type": "object",
             "properties": {
              "parsed": {
               "anyOf": [
                {
                 "type": "string"
                },
                {
                 "type": "integer"
                },
                {
                 "type": "boolean"
                },
                {
                 "type": "object"
                },
                {
                 "type": "array"
                }
               ],
               "nullable": true,
               "_name_": "parsed",
               "title": "parsed",
               "_required_": false
              },
              "rawvalue": {
               "_name_": "rawvalue",
               "title": "rawvalue",
               "_required_": false,
               "type": [
                "string",
                "null"
               ]
              },
              "value": {
               "_name_": "value",
               "title": "value",
               "_required_": false,
               "type": [
                "string",
                "null"
               ]
              },
              "source": {
               "_name_": "source",
               "title": "source",
               "_required_": false,
               "type": [
                "string",
                "null"
               ]
              },
              "source_info": {
               "anyOf": [
                {
                 "type": "string"
                },
                {
                 "type": "integer"
                },
                {
                 "type": "boolean"
                },
                {
                 "type": "object"
                },
                {
                 "type": "array"
                }
               ],
               "nullable": true,
               "_name_": "source_info",
               "title": "source_info",
               "_required_": false
              }
             },
             "additionalProperties": false,
             "_name_": "acltype",
             "title": "acltype",
             "default": {},
             "_required_": false,
             "_attrs_order_": [
              "parsed",
              "rawvalue",
              "value",
              "source",
              "source_info"
             ]
            },
            "xattr": {
             "type": "object",
             "properties": {
              "parsed": {
               "anyOf": [
                {
                 "type": "string"
                },
                {
                 "type": "integer"
                },
                {
                 "type": "boolean"
                },
                {
                 "type": "object"
                },
                {
                 "type": "array"
                }
               ],
               "nullable": true,
               "_name_": "parsed",
               "title": "parsed",
               "_required_": false
              },
              "rawvalue": {
               "_name_": "rawvalue",
               "title": "rawvalue",
               "_required_": false,
               "type": [
                "string",
                "null"
               ]
              },
              "value": {
               "_name_": "value",
               "title": "value",
               "_required_": false,
               "type": [
                "string",
                "null"
               ]
              },
              "source": {
               "_name_": "source",
               "title": "source",
               "_required_": false,
               "type": [
                "string",
                "null"
               ]
              },
              "source_info": {
               "anyOf": [
                {
                 "type": "string"
                },
                {
                 "type": "integer"
                },
                {
                 "type": "boolean"
                },
                {
                 "type": "object"
                },
                {
                 "type": "array"
                }
               ],
               "nullable": true,
               "_name_": "source_info",
               "title": "source_info",
               "_required_": false
              }
             },
             "additionalProperties": false,
             "_name_": "xattr",
             "title": "xattr",
             "default": {},
             "_required_": false,
             "_attrs_order_": [
              "parsed",
              "rawvalue",
              "value",
              "source",
              "source_info"
             ]
            },
            "atime": {
             "type": "object",
             "properties": {
              "parsed": {
               "anyOf": [
                {
                 "type": "string"
                },
                {
                 "type": "integer"
                },
                {
                 "type": "boolean"
                },
                {
                 "type": "object"
                },
                {
                 "type": "array"
                }
               ],
               "nullable": true,
               "_name_": "parsed",
               "title": "parsed",
               "_required_": false
              },
              "rawvalue": {
               "_name_": "rawvalue",
               "title": "rawvalue",
               "_required_": false,
               "type": [
                "string",
                "null"
               ]
              },
              "value": {
               "_name_": "value",
               "title": "value",
               "_required_": false,
               "type": [
                "string",
                "null"
               ]
              },
              "source": {
               "_name_": "source",
               "title": "source",
               "_required_": false,
               "type": [
                "string",
                "null"
               ]
              },
              "source_info": {
               "anyOf": [
                {
                 "type": "string"
                },
                {
                 "type": "integer"
                },
                {
                 "type": "boolean"
                },
                {
                 "type": "object"
                },
                {
                 "type": "array"
                }
               ],
               "nullable": true,
               "_name_": "source_info",
               "title": "source_info",
               "_required_": false
              }
             },
             "additionalProperties": false,
             "_name_": "atime",
             "title": "atime",
             "default": {},
             "_required_": false,
             "_attrs_order_": [
              "parsed",
              "rawvalue",
              "value",
              "source",
              "source_info"
             ]
            },
            "casesensitivity": {
             "type": "object",
             "properties": {
              "parsed": {
               "anyOf": [
                {
                 "type": "string"
                },
                {
                 "type": "integer"
                },
                {
                 "type": "boolean"
                },
                {
                 "type": "object"
                },
                {
                 "type": "array"
                }
               ],
               "nullable": true,
               "_name_": "parsed",
               "title": "parsed",
               "_required_": false
              },
              "rawvalue": {
               "_name_": "rawvalue",
               "title": "rawvalue",
               "_required_": false,
               "type": [
                "string",
                "null"
               ]
              },
              "value": {
               "_name_": "value",
               "title": "value",
               "_required_": false,
               "type": [
                "string",
                "null"
               ]
              },
              "source": {
               "_name_": "source",
               "title": "source",
               "_required_": false,
               "type": [
                "string",
                "null"
               ]
              },
              "source_info": {
               "anyOf": [
                {
                 "type": "string"
                },
                {
                 "type": "integer"
                },
                {
                 "type": "boolean"
                },
                {
                 "type": "object"
                },
                {
                 "type": "array"
                }
               ],
               "nullable": true,
               "_name_": "source_info",
               "title": "source_info",
               "_required_": false
              }
             },
             "additionalProperties": false,
             "_name_": "casesensitivity",
             "title": "casesensitivity",
             "default": {},
             "_required_": false,
             "_attrs_order_": [
              "parsed",
              "rawvalue",
              "value",
              "source",
              "source_info"
             ]
            },
            "checksum": {
             "type": "object",
             "properties": {
              "parsed": {
               "anyOf": [
                {
                 "type": "string"
                },
                {
                 "type": "integer"
                },
                {
                 "type": "boolean"
                },
                {
                 "type": "object"
                },
                {
                 "type": "array"
                }
               ],
               "nullable": true,
               "_name_": "parsed",
               "title": "parsed",
               "_required_": false
              },
              "rawvalue": {
               "_name_": "rawvalue",
               "title": "rawvalue",
               "_required_": false,
               "type": [
                "string",
                "null"
               ]
              },
              "value": {
               "_name_": "value",
               "title": "value",
               "_required_": false,
               "type": [
                "string",
                "null"
               ]
              },
              "source": {
               "_name_": "source",
               "title": "source",
               "_required_": false,
               "type": [
                "string",
                "null"
               ]
              },
              "source_info": {
               "anyOf": [
                {
                 "type": "string"
                },
                {
                 "type": "integer"
                },
                {
                 "type": "boolean"
                },
                {
                 "type": "object"
                },
                {
                 "type": "array"
                }
               ],
               "nullable": true,
               "_name_": "source_info",
               "title": "source_info",
               "_required_": false
              }
             },
             "additionalProperties": false,
             "_name_": "checksum",
             "title": "checksum",
             "default": {},
             "_required_": false,
             "_attrs_order_": [
              "parsed",
              "rawvalue",
              "value",
              "source",
              "source_info"
             ]
            },
            "exec": {
             "type": "object",
             "properties": {
              "parsed": {
               "anyOf": [
                {
                 "type": "string"
                },
                {
                 "type": "integer"
                },
                {
                 "type": "boolean"
                },
                {
                 "type": "object"
                },
                {
                 "type": "array"
                }
               ],
               "nullable": true,
               "_name_": "parsed",
               "title": "parsed",
               "_required_": false
              },
              "rawvalue": {
               "_name_": "rawvalue",
               "title": "rawvalue",
               "_required_": false,
               "type": [
                "string",
                "null"
               ]
              },
              "value": {
               "_name_": "value",
               "title": "value",
               "_required_": false,
               "type": [
                "string",
                "null"
               ]
              },
              "source": {
               "_name_": "source",
               "title": "source",
               "_required_": false,
               "type": [
                "string",
                "null"
               ]
              },
              "source_info": {
               "anyOf": [
                {
                 "type": "string"
                },
                {
                 "type": "integer"
                },
                {
                 "type": "boolean"
                },
                {
                 "type": "object"
                },
                {
                 "type": "array"
                }
               ],
               "nullable": true,
               "_name_": "source_info",
               "title": "source_info",
               "_required_": false
              }
             },
             "additionalProperties": false,
             "_name_": "exec",
             "title": "exec",
             "default": {},
             "_required_": false,
             "_attrs_order_": [
              "parsed",
              "rawvalue",
              "value",
              "source",
              "source_info"
             ]
            },
            "sync": {
             "type": "object",
             "properties": {
              "parsed": {
               "anyOf": [
                {
                 "type": "string"
                },
                {
                 "type": "integer"
                },
                {
                 "type": "boolean"
                },
                {
                 "type": "object"
                },
                {
                 "type": "array"
                }
               ],
               "nullable": true,
               "_name_": "parsed",
               "title": "parsed",
               "_required_": false
              },
              "rawvalue": {
               "_name_": "rawvalue",
               "title": "rawvalue",
               "_required_": false,
               "type": [
                "string",
                "null"
               ]
              },
              "value": {
               "_name_": "value",
               "title": "value",
               "_required_": false,
               "type": [
                "string",
                "null"
               ]
              },
              "source": {
               "_name_": "source",
               "title": "source",
               "_required_": false,
               "type": [
                "string",
                "null"
               ]
              },
              "source_info": {
               "anyOf": [
                {
                 "type": "string"
                },
                {
                 "type": "integer"
                },
                {
                 "type": "boolean"
                },
                {
                 "type": "object"
                },
                {
                 "type": "array"
                }
               ],
               "nullable": true,
               "_name_": "source_info",
               "title": "source_info",
               "_required_": false
              }
             },
             "additionalProperties": false,
             "_name_": "sync",
             "title": "sync",
             "default": {},
             "_required_": false,
             "_attrs_order_": [
              "parsed",
              "rawvalue",
              "value",
              "source",
              "source_info"
             ]
            },
            "compression": {
             "type": "object",
             "properties": {
              "parsed": {
               "anyOf": [
                {
                 "type": "string"
                },
                {
                 "type": "integer"
                },
                {
                 "type": "boolean"
                },
                {
                 "type": "object"
                },
                {
                 "type": "array"
                }
               ],
               "nullable": true,
               "_name_": "parsed",
               "title": "parsed",
               "_required_": false
              },
              "rawvalue": {
               "_name_": "rawvalue",
               "title": "rawvalue",
               "_required_": false,
               "type": [
                "string",
                "null"
               ]
              },
              "value": {
               "_name_": "value",
               "title": "value",
               "_required_": false,
               "type": [
                "string",
                "null"
               ]
              },
              "source": {
               "_name_": "source",
               "title": "source",
               "_required_": false,
               "type": [
                "string",
                "null"
               ]
              },
              "source_info": {
               "anyOf": [
                {
                 "type": "string"
                },
                {
                 "type": "integer"
                },
                {
                 "type": "boolean"
                },
                {
                 "type": "object"
                },
                {
                 "type": "array"
                }
               ],
               "nullable": true,
               "_name_": "source_info",
               "title": "source_info",
               "_required_": false
              }
             },
             "additionalProperties": false,
             "_name_": "compression",
             "title": "compression",
             "default": {},
             "_required_": false,
             "_attrs_order_": [
              "parsed",
              "rawvalue",
              "value",
              "source",
              "source_info"
             ]
            },
            "compressratio": {
             "type": "object",
             "properties": {
              "parsed": {
               "anyOf": [
                {
                 "type": "string"
                },
                {
                 "type": "integer"
                },
                {
                 "type": "boolean"
                },
                {
                 "type": "object"
                },
                {
                 "type": "array"
                }
               ],
               "nullable": true,
               "_name_": "parsed",
               "title": "parsed",
               "_required_": false
              },
              "rawvalue": {
               "_name_": "rawvalue",
               "title": "rawvalue",
               "_required_": false,
               "type": [
                "string",
                "null"
               ]
              },
              "value": {
               "_name_": "value",
               "title": "value",
               "_required_": false,
               "type": [
                "string",
                "null"
               ]
              },
              "source": {
               "_name_": "source",
               "title": "source",
               "_required_": false,
               "type": [
                "string",
                "null"
               ]
              },
              "source_info": {
               "anyOf": [
                {
                 "type": "string"
                },
                {
                 "type": "integer"
                },
                {
                 "type": "boolean"
                },
                {
                 "type": "object"
                },
                {
                 "type": "array"
                }
               ],
               "nullable": true,
               "_name_": "source_info",
               "title": "source_info",
               "_required_": false
              }
             },
             "additionalProperties": false,
             "_name_": "compressratio",
             "title": "compressratio",
             "default": {},
             "_required_": false,
             "_attrs_order_": [
              "parsed",
              "rawvalue",
              "value",
              "source",
              "source_info"
             ]
            },
            "origin": {
             "type": "object",
             "properties": {
              "parsed": {
               "anyOf": [
                {
                 "type": "string"
                },
                {
                 "type": "integer"
                },
                {
                 "type": "boolean"
                },
                {
                 "type": "object"
                },
                {
                 "type": "array"
                }
               ],
               "nullable": true,
               "_name_": "parsed",
               "title": "parsed",
               "_required_": false
              },
              "rawvalue": {
               "_name_": "rawvalue",
               "title": "rawvalue",
               "_required_": false,
               "type": [
                "string",
                "null"
               ]
              },
              "value": {
               "_name_": "value",
               "title": "value",
               "_required_": false,
               "type": [
                "string",
                "null"
               ]
              },
              "source": {
               "_name_": "source",
               "title": "source",
               "_required_": false,
               "type": [
                "string",
                "null"
               ]
              },
              "source_info": {
               "anyOf": [
                {
                 "type": "string"
                },
                {
                 "type": "integer"
                },
                {
                 "type": "boolean"
                },
                {
                 "type": "object"
                },
                {
                 "type": "array"
                }
               ],
               "nullable": true,
               "_name_": "source_info",
               "title": "source_info",
               "_required_": false
              }
             },
             "additionalProperties": false,
             "_name_": "origin",
             "title": "origin",
             "default": {},
             "_required_": false,
             "_attrs_order_": [
              "parsed",
              "rawvalue",
              "value",
              "source",
              "source_info"
             ]
            },
            "quota": {
             "type": "object",
             "properties": {
              "parsed": {
               "anyOf": [
                {
                 "type": "string"
                },
                {
                 "type": "integer"
                },
                {
                 "type": "boolean"
                },
                {
                 "type": "object"
                },
                {
                 "type": "array"
                }
               ],
               "nullable": true,
               "_name_": "parsed",
               "title": "parsed",
               "_required_": false
              },
              "rawvalue": {
               "_name_": "rawvalue",
               "title": "rawvalue",
               "_required_": false,
               "type": [
                "string",
                "null"
               ]
              },
              "value": {
               "_name_": "value",
               "title": "value",
               "_required_": false,
               "type": [
                "string",
                "null"
               ]
              },
              "source": {
               "_name_": "source",
               "title": "source",
               "_required_": false,
               "type": [
                "string",
                "null"
               ]
              },
              "source_info": {
               "anyOf": [
                {
                 "type": "string"
                },
                {
                 "type": "integer"
                },
                {
                 "type": "boolean"
                },
                {
                 "type": "object"
                },
                {
                 "type": "array"
                }
               ],
               "nullable": true,
               "_name_": "source_info",
               "title": "source_info",
               "_required_": false
              }
             },
             "additionalProperties": false,
             "_name_": "quota",
             "title": "quota",
             "default": {},
             "_required_": false,
             "_attrs_order_": [
              "parsed",
              "rawvalue",
              "value",
              "source",
              "source_info"
             ]
            },
            "refquota": {
             "type": "object",
             "properties": {
              "parsed": {
               "anyOf": [
                {
                 "type": "string"
                },
                {
                 "type": "integer"
                },
                {
                 "type": "boolean"
                },
                {
                 "type": "object"
                },
                {
                 "type": "array"
                }
               ],
               "nullable": true,
               "_name_": "parsed",
               "title": "parsed",
               "_required_": false
              },
              "rawvalue": {
               "_name_": "rawvalue",
               "title": "rawvalue",
               "_required_": false,
               "type": [
                "string",
                "null"
               ]
              },
              "value": {
               "_name_": "value",
               "title": "value",
               "_required_": false,
               "type": [
                "string",
                "null"
               ]
              },
              "source": {
               "_name_": "source",
               "title": "source",
               "_required_": false,
               "type": [
                "string",
                "null"
               ]
              },
              "source_info": {
               "anyOf": [
                {
                 "type": "string"
                },
                {
                 "type": "integer"
                },
                {
                 "type": "boolean"
                },
                {
                 "type": "object"
                },
                {
                 "type": "array"
                }
               ],
               "nullable": true,
               "_name_": "source_info",
               "title": "source_info",
               "_required_": false
              }
             },
             "additionalProperties": false,
             "_name_": "refquota",
             "title": "refquota",
             "default": {},
             "_required_": false,
             "_attrs_order_": [
              "parsed",
              "rawvalue",
              "value",
              "source",
              "source_info"
             ]
            },
            "reservation": {
             "type": "object",
             "properties": {
              "parsed": {
               "anyOf": [
                {
                 "type": "string"
                },
                {
                 "type": "integer"
                },
                {
                 "type": "boolean"
                },
                {
                 "type": "object"
                },
                {
                 "type": "array"
                }
               ],
               "nullable": true,
               "_name_": "parsed",
               "title": "parsed",
               "_required_": false
              },
              "rawvalue": {
               "_name_": "rawvalue",
               "title": "rawvalue",
               "_required_": false,
               "type": [
                "string",
                "null"
               ]
              },
              "value": {
               "_name_": "value",
               "title": "value",
               "_required_": false,
               "type": [
                "string",
                "null"
               ]
              },
              "source": {
               "_name_": "source",
               "title": "source",
               "_required_": false,
               "type": [
                "string",
                "null"
               ]
              },
              "source_info": {
               "anyOf": [
                {
                 "type": "string"
                },
                {
                 "type": "integer"
                },
                {
                 "type": "boolean"
                },
                {
                 "type": "object"
                },
                {
                 "type": "array"
                }
               ],
               "nullable": true,
               "_name_": "source_info",
               "title": "source_info",
               "_required_": false
              }
             },
             "additionalProperties": false,
             "_name_": "reservation",
             "title": "reservation",
             "default": {},
             "_required_": false,
             "_attrs_order_": [
              "parsed",
              "rawvalue",
              "value",
              "source",
              "source_info"
             ]
            },
            "refreservation": {
             "type": "object",
             "properties": {
              "parsed": {
               "anyOf": [
                {
                 "type": "string"
                },
                {
                 "type": "integer"
                },
                {
                 "type": "boolean"
                },
                {
                 "type": "object"
                },
                {
                 "type": "array"
                }
               ],
               "nullable": true,
               "_name_": "parsed",
               "title": "parsed",
               "_required_": false
              },
              "rawvalue": {
               "_name_": "rawvalue",
               "title": "rawvalue",
               "_required_": false,
               "type": [
                "string",
                "null"
               ]
              },
              "value": {
               "_name_": "value",
               "title": "value",
               "_required_": false,
               "type": [
                "string",
                "null"
               ]
              },
              "source": {
               "_name_": "source",
               "title": "source",
               "_required_": false,
               "type": [
                "string",
                "null"
               ]
              },
              "source_info": {
               "anyOf": [
                {
                 "type": "string"
                },
                {
                 "type": "integer"
                },
                {
                 "type": "boolean"
                },
                {
                 "type": "object"
                },
                {
                 "type": "array"
                }
               ],
               "nullable": true,
               "_name_": "source_info",
               "title": "source_info",
               "_required_": false
              }
             },
             "additionalProperties": false,
             "_name_": "refreservation",
             "title": "refreservation",
             "default": {},
             "_required_": false,
             "_attrs_order_": [
              "parsed",
              "rawvalue",
              "value",
              "source",
              "source_info"
             ]
            },
            "copies": {
             "type": "object",
             "properties": {
              "parsed": {
               "anyOf": [
                {
                 "type": "string"
                },
                {
                 "type": "integer"
                },
                {
                 "type": "boolean"
                },
                {
                 "type": "object"
                },
                {
                 "type": "array"
                }
               ],
               "nullable": true,
               "_name_": "parsed",
               "title": "parsed",
               "_required_": false
              },
              "rawvalue": {
               "_name_": "rawvalue",
               "title": "rawvalue",
               "_required_": false,
               "type": [
                "string",
                "null"
               ]
              },
              "value": {
               "_name_": "value",
               "title": "value",
               "_required_": false,
               "type": [
                "string",
                "null"
               ]
              },
              "source": {
               "_name_": "source",
               "title": "source",
               "_required_": false,
               "type": [
                "string",
                "null"
               ]
              },
              "source_info": {
               "anyOf": [
                {
                 "type": "string"
                },
                {
                 "type": "integer"
                },
                {
                 "type": "boolean"
                },
                {
                 "type": "object"
                },
                {
                 "type": "array"
                }
               ],
               "nullable": true,
               "_name_": "source_info",
               "title": "source_info",
               "_required_": false
              }
             },
             "additionalProperties": false,
             "_name_": "copies",
             "title": "copies",
             "default": {},
             "_required_": false,
             "_attrs_order_": [
              "parsed",
              "rawvalue",
              "value",
              "source",
              "source_info"
             ]
            },
            "snapdir": {
             "type": "object",
             "properties": {
              "parsed": {
               "anyOf": [
                {
                 "type": "string"
                },
                {
                 "type": "integer"
                },
                {
                 "type": "boolean"
                },
                {
                 "type": "object"
                },
                {
                 "type": "array"
                }
               ],
               "nullable": true,
               "_name_": "parsed",
               "title": "parsed",
               "_required_": false
              },
              "rawvalue": {
               "_name_": "rawvalue",
               "title": "rawvalue",
               "_required_": false,
               "type": [
                "string",
                "null"
               ]
              },
              "value": {
               "_name_": "value",
               "title": "value",
               "_required_": false,
               "type": [
                "string",
                "null"
               ]
              },
              "source": {
               "_name_": "source",
               "title": "source",
               "_required_": false,
               "type": [
                "string",
                "null"
               ]
              },
              "source_info": {
               "anyOf": [
                {
                 "type": "string"
                },
                {
                 "type": "integer"
                },
                {
                 "type": "boolean"
                },
                {
                 "type": "object"
                },
                {
                 "type": "array"
                }
               ],
               "nullable": true,
               "_name_": "source_info",
               "title": "source_info",
               "_required_": false
              }
             },
             "additionalProperties": false,
             "_name_": "snapdir",
             "title": "snapdir",
             "default": {},
             "_required_": false,
             "_attrs_order_": [
              "parsed",
              "rawvalue",
              "value",
              "source",
              "source_info"
             ]
            },
            "readonly": {
             "type": "object",
             "properties": {
              "parsed": {
               "anyOf": [
                {
                 "type": "string"
                },
                {
                 "type": "integer"
                },
                {
                 "type": "boolean"
                },
                {
                 "type": "object"
                },
                {
                 "type": "array"
                }
               ],
               "nullable": true,
               "_name_": "parsed",
               "title": "parsed",
               "_required_": false
              },
              "rawvalue": {
               "_name_": "rawvalue",
               "title": "rawvalue",
               "_required_": false,
               "type": [
                "string",
                "null"
               ]
              },
              "value": {
               "_name_": "value",
               "title": "value",
               "_required_": false,
               "type": [
                "string",
                "null"
               ]
              },
              "source": {
               "_name_": "source",
               "title": "source",
               "_required_": false,
               "type": [
                "string",
                "null"
               ]
              },
              "source_info": {
               "anyOf": [
                {
                 "type": "string"
                },
                {
                 "type": "integer"
                },
                {
                 "type": "boolean"
                },
                {
                 "type": "object"
                },
                {
                 "type": "array"
                }
               ],
               "nullable": true,
               "_name_": "source_info",
               "title": "source_info",
               "_required_": false
              }
             },
             "additionalProperties": false,
             "_name_": "readonly",
             "title": "readonly",
             "default": {},
             "_required_": false,
             "_attrs_order_": [
              "parsed",
              "rawvalue",
              "value",
              "source",
              "source_info"
             ]
            },
            "recordsize": {
             "type": "object",
             "properties": {
              "parsed": {
               "anyOf": [
                {
                 "type": "string"
                },
                {
                 "type": "integer"
                },
                {
                 "type": "boolean"
                },
                {
                 "type": "object"
                },
                {
                 "type": "array"
                }
               ],
               "nullable": true,
               "_name_": "parsed",
               "title": "parsed",
               "_required_": false
              },
              "rawvalue": {
               "_name_": "rawvalue",
               "title": "rawvalue",
               "_required_": false,
               "type": [
                "string",
                "null"
               ]
              },
              "value": {
               "_name_": "value",
               "title": "value",
               "_required_": false,
               "type": [
                "string",
                "null"
               ]
              },
              "source": {
               "_name_": "source",
               "title": "source",
               "_required_": false,
               "type": [
                "string",
                "null"
               ]
              },
              "source_info": {
               "anyOf": [
                {
                 "type": "string"
                },
                {
                 "type": "integer"
                },
                {
                 "type": "boolean"
                },
                {
                 "type": "object"
                },
                {
                 "type": "array"
                }
               ],
               "nullable": true,
               "_name_": "source_info",
               "title": "source_info",
               "_required_": false
              }
             },
             "additionalProperties": false,
             "_name_": "recordsize",
             "title": "recordsize",
             "default": {},
             "_required_": false,
             "_attrs_order_": [
              "parsed",
              "rawvalue",
              "value",
              "source",
              "source_info"
             ]
            },
            "sparse": {
             "type": "object",
             "properties": {
              "parsed": {
               "anyOf": [
                {
                 "type": "string"
                },
                {
                 "type": "integer"
                },
                {
                 "type": "boolean"
                },
                {
                 "type": "object"
                },
                {
                 "type": "array"
                }
               ],
               "nullable": true,
               "_name_": "parsed",
               "title": "parsed",
               "_required_": false
              },
              "rawvalue": {
               "_name_": "rawvalue",
               "title": "rawvalue",
               "_required_": false,
               "type": [
                "string",
                "null"
               ]
              },
              "value": {
               "_name_": "value",
               "title": "value",
               "_required_": false,
               "type": [
                "string",
                "null"
               ]
              },
              "source": {
               "_name_": "source",
               "title": "source",
               "_required_": false,
               "type": [
                "string",
                "null"
               ]
              },
              "source_info": {
               "anyOf": [
                {
                 "type": "string"
                },
                {
                 "type": "integer"
                },
                {
                 "type": "boolean"
                },
                {
                 "type": "object"
                },
                {
                 "type": "array"
                }
               ],
               "nullable": true,
               "_name_": "source_info",
               "title": "source_info",
               "_required_": false
              }
             },
             "additionalProperties": false,
             "_name_": "sparse",
             "title": "sparse",
             "default": {},
             "_required_": false,
             "_attrs_order_": [
              "parsed",
              "rawvalue",
              "value",
              "source",
              "source_info"
             ]
            },
            "volsize": {
             "type": "object",
             "properties": {
              "parsed": {
               "anyOf": [
                {
                 "type": "string"
                },
                {
                 "type": "integer"
                },
                {
                 "type": "boolean"
                },
                {
                 "type": "object"
                },
                {
                 "type": "array"
                }
               ],
               "nullable": true,
               "_name_": "parsed",
               "title": "parsed",
               "_required_": false
              },
              "rawvalue": {
               "_name_": "rawvalue",
               "title": "rawvalue",
               "_required_": false,
               "type": [
                "string",
                "null"
               ]
              },
              "value": {
               "_name_": "value",
               "title": "value",
               "_required_": false,
               "type": [
                "string",
                "null"
               ]
              },
              "source": {
               "_name_": "source",
               "title": "source",
               "_required_": false,
               "type": [
                "string",
                "null"
               ]
              },
              "source_info": {
               "anyOf": [
                {
                 "type": "string"
                },
                {
                 "type": "integer"
                },
                {
                 "type": "boolean"
                },
                {
                 "type": "object"
                },
                {
                 "type": "array"
                }
               ],
               "nullable": true,
               "_name_": "source_info",
               "title": "source_info",
               "_required_": false
              }
             },
             "additionalProperties": false,
             "_name_": "volsize",
             "title": "volsize",
             "default": {},
             "_required_": false,
             "_attrs_order_": [
              "parsed",
              "rawvalue",
              "value",
              "source",
              "source_info"
             ]
            },
            "volblocksize": {
             "type": "object",
             "properties": {
              "parsed": {
               "anyOf": [
                {
                 "type": "string"
                },
                {
                 "type": "integer"
                },
                {
                 "type": "boolean"
                },
                {
                 "type": "object"
                },
                {
                 "type": "array"
                }
               ],
               "nullable": true,
               "_name_": "parsed",
               "title": "parsed",
               "_required_": false
              },
              "rawvalue": {
               "_name_": "rawvalue",
               "title": "rawvalue",
               "_required_": false,
               "type": [
                "string",
                "null"
               ]
              },
              "value": {
               "_name_": "value",
               "title": "value",
               "_required_": false,
               "type": [
                "string",
                "null"
               ]
              },
              "source": {
               "_name_": "source",
               "title": "source",
               "_required_": false,
               "type": [
                "string",
                "null"
               ]
              },
              "source_info": {
               "anyOf": [
                {
                 "type": "string"
                },
                {
                 "type": "integer"
                },
                {
                 "type": "boolean"
                },
                {
                 "type": "object"
                },
                {
                 "type": "array"
                }
               ],
               "nullable": true,
               "_name_": "source_info",
               "title": "source_info",
               "_required_": false
              }
             },
             "additionalProperties": false,
             "_name_": "volblocksize",
             "title": "volblocksize",
             "default": {},
             "_required_": false,
             "_attrs_order_": [
              "parsed",
              "rawvalue",
              "value",
              "source",
              "source_info"
             ]
            },
            "key_format": {
             "type": "object",
             "properties": {
              "parsed": {
               "anyOf": [
                {
                 "type": "string"
                },
                {
                 "type": "integer"
                },
                {
                 "type": "boolean"
                },
                {
                 "type": "object"
                },
                {
                 "type": "array"
                }
               ],
               "nullable": true,
               "_name_": "parsed",
               "title": "parsed",
               "_required_": false
              },
              "rawvalue": {
               "_name_": "rawvalue",
               "title": "rawvalue",
               "_required_": false,
               "type": [
                "string",
                "null"
               ]
              },
              "value": {
               "_name_": "value",
               "title": "value",
               "_required_": false,
               "type": [
                "string",
                "null"
               ]
              },
              "source": {
               "_name_": "source",
               "title": "source",
               "_required_": false,
               "type": [
                "string",
                "null"
               ]
              },
              "source_info": {
               "anyOf": [
                {
                 "type": "string"
                },
                {
                 "type": "integer"
                },
                {
                 "type": "boolean"
                },
                {
                 "type": "object"
                },
                {
                 "type": "array"
                }
               ],
               "nullable": true,
               "_name_": "source_info",
               "title": "source_info",
               "_required_": false
              }
             },
             "additionalProperties": false,
             "_name_": "key_format",
             "title": "key_format",
             "default": {},
             "_required_": false,
             "_attrs_order_": [
              "parsed",
              "rawvalue",
              "value",
              "source",
              "source_info"
             ]
            },
            "encryption_algorithm": {
             "type": "object",
             "properties": {
              "parsed": {
               "anyOf": [
                {
                 "type": "string"
                },
                {
                 "type": "integer"
                },
                {
                 "type": "boolean"
                },
                {
                 "type": "object"
                },
                {
                 "type": "array"
                }
               ],
               "nullable": true,
               "_name_": "parsed",
               "title": "parsed",
               "_required_": false
              },
              "rawvalue": {
               "_name_": "rawvalue",
               "title": "rawvalue",
               "_required_": false,
               "type": [
                "string",
                "null"
               ]
              },
              "value": {
               "_name_": "value",
               "title": "value",
               "_required_": false,
               "type": [
                "string",
                "null"
               ]
              },
              "source": {
               "_name_": "source",
               "title": "source",
               "_required_": false,
               "type": [
                "string",
                "null"
               ]
              },
              "source_info": {
               "anyOf": [
                {
                 "type": "string"
                },
                {
                 "type": "integer"
                },
                {
                 "type": "boolean"
                },
                {
                 "type": "object"
                },
                {
                 "type": "array"
                }
               ],
               "nullable": true,
               "_name_": "source_info",
               "title": "source_info",
               "_required_": false
              }
             },
             "additionalProperties": false,
             "_name_": "encryption_algorithm",
             "title": "encryption_algorithm",
             "default": {},
             "_required_": false,
             "_attrs_order_": [
              "parsed",
              "rawvalue",
              "value",
              "source",
              "source_info"
             ]
            },
            "used": {
             "type": "object",
             "properties": {
              "parsed": {
               "anyOf": [
                {
                 "type": "string"
                },
                {
                 "type": "integer"
                },
                {
                 "type": "boolean"
                },
                {
                 "type": "object"
                },
                {
                 "type": "array"
                }
               ],
               "nullable": true,
               "_name_": "parsed",
               "title": "parsed",
               "_required_": false
              },
              "rawvalue": {
               "_name_": "rawvalue",
               "title": "rawvalue",
               "_required_": false,
               "type": [
                "string",
                "null"
               ]
              },
              "value": {
               "_name_": "value",
               "title": "value",
               "_required_": false,
               "type": [
                "string",
                "null"
               ]
              },
              "source": {
               "_name_": "source",
               "title": "source",
               "_required_": false,
               "type": [
                "string",
                "null"
               ]
              },
              "source_info": {
               "anyOf": [
                {
                 "type": "string"
                },
                {
                 "type": "integer"
                },
                {
                 "type": "boolean"
                },
                {
                 "type": "object"
                },
                {
                 "type": "array"
                }
               ],
               "nullable": true,
               "_name_": "source_info",
               "title": "source_info",
               "_required_": false
              }
             },
             "additionalProperties": false,
             "_name_": "used",
             "title": "used",
             "default": {},
             "_required_": false,
             "_attrs_order_": [
              "parsed",
              "rawvalue",
              "value",
              "source",
              "source_info"
             ]
            },
            "usedbychildren": {
             "type": "object",
             "properties": {
              "parsed": {
               "anyOf": [
                {
                 "type": "string"
                },
                {
                 "type": "integer"
                },
                {
                 "type": "boolean"
                },
                {
                 "type": "object"
                },
                {
                 "type": "array"
                }
               ],
               "nullable": true,
               "_name_": "parsed",
               "title": "parsed",
               "_required_": false
              },
              "rawvalue": {
               "_name_": "rawvalue",
               "title": "rawvalue",
               "_required_": false,
               "type": [
                "string",
                "null"
               ]
              },
              "value": {
               "_name_": "value",
               "title": "value",
               "_required_": false,
               "type": [
                "string",
                "null"
               ]
              },
              "source": {
               "_name_": "source",
               "title": "source",
               "_required_": false,
               "type": [
                "string",
                "null"
               ]
              },
              "source_info": {
               "anyOf": [
                {
                 "type": "string"
                },
                {
                 "type": "integer"
                },
                {
                 "type": "boolean"
                },
                {
                 "type": "object"
                },
                {
                 "type": "array"
                }
               ],
               "nullable": true,
               "_name_": "source_info",
               "title": "source_info",
               "_required_": false
              }
             },
             "additionalProperties": false,
             "_name_": "usedbychildren",
             "title": "usedbychildren",
             "default": {},
             "_required_": false,
             "_attrs_order_": [
              "parsed",
              "rawvalue",
              "value",
              "source",
              "source_info"
             ]
            },
            "usedbydataset": {
             "type": "object",
             "properties": {
              "parsed": {
               "anyOf": [
                {
                 "type": "string"
                },
                {
                 "type": "integer"
                },
                {
                 "type": "boolean"
                },
                {
                 "type": "object"
                },
                {
                 "type": "array"
                }
               ],
               "nullable": true,
               "_name_": "parsed",
               "title": "parsed",
               "_required_": false
              },
              "rawvalue": {
               "_name_": "rawvalue",
               "title": "rawvalue",
               "_required_": false,
               "type": [
                "string",
                "null"
               ]
              },
              "value": {
               "_name_": "value",
               "title": "value",
               "_required_": false,
               "type": [
                "string",
                "null"
               ]
              },
              "source": {
               "_name_": "source",
               "title": "source",
               "_required_": false,
               "type": [
                "string",
                "null"
               ]
              },
              "source_info": {
               "anyOf": [
                {
                 "type": "string"
                },
                {
                 "type": "integer"
                },
                {
                 "type": "boolean"
                },
                {
                 "type": "object"
                },
                {
                 "type": "array"
                }
               ],
               "nullable": true,
               "_name_": "source_info",
               "title": "source_info",
               "_required_": false
              }
             },
             "additionalProperties": false,
             "_name_": "usedbydataset",
             "title": "usedbydataset",
             "default": {},
             "_required_": false,
             "_attrs_order_": [
              "parsed",
              "rawvalue",
              "value",
              "source",
              "source_info"
             ]
            },
            "usedbyrefreservation": {
             "type": "object",
             "properties": {
              "parsed": {
               "anyOf": [
                {
                 "type": "string"
                },
                {
                 "type": "integer"
                },
                {
                 "type": "boolean"
                },
                {
                 "type": "object"
                },
                {
                 "type": "array"
                }
               ],
               "nullable": true,
               "_name_": "parsed",
               "title": "parsed",
               "_required_": false
              },
              "rawvalue": {
               "_name_": "rawvalue",
               "title": "rawvalue",
               "_required_": false,
               "type": [
                "string",
                "null"
               ]
              },
              "value": {
               "_name_": "value",
               "title": "value",
               "_required_": false,
               "type": [
                "string",
                "null"
               ]
              },
              "source": {
               "_name_": "source",
               "title": "source",
               "_required_": false,
               "type": [
                "string",
                "null"
               ]
              },
              "source_info": {
               "anyOf": [
                {
                 "type": "string"
                },
                {
                 "type": "integer"
                },
                {
                 "type": "boolean"
                },
                {
                 "type": "object"
                },
                {
                 "type": "array"
                }
               ],
               "nullable": true,
               "_name_": "source_info",
               "title": "source_info",
               "_required_": false
              }
             },
             "additionalProperties": false,
             "_name_": "usedbyrefreservation",
             "title": "usedbyrefreservation",
             "default": {},
             "_required_": false,
             "_attrs_order_": [
              "parsed",
              "rawvalue",
              "value",
              "source",
              "source_info"
             ]
            },
            "usedbysnapshots": {
             "type": "object",
             "properties": {
              "parsed": {
               "anyOf": [
                {
                 "type": "string"
                },
                {
                 "type": "integer"
                },
                {
                 "type": "boolean"
                },
                {
                 "type": "object"
                },
                {
                 "type": "array"
                }
               ],
               "nullable": true,
               "_name_": "parsed",
               "title": "parsed",
               "_required_": false
              },
              "rawvalue": {
               "_name_": "rawvalue",
               "title": "rawvalue",
               "_required_": false,
               "type": [
                "string",
                "null"
               ]
              },
              "value": {
               "_name_": "value",
               "title": "value",
               "_required_": false,
               "type": [
                "string",
                "null"
               ]
              },
              "source": {
               "_name_": "source",
               "title": "source",
               "_required_": false,
               "type": [
                "string",
                "null"
               ]
              },
              "source_info": {
               "anyOf": [
                {
                 "type": "string"
                },
                {
                 "type": "integer"
                },
                {
                 "type": "boolean"
                },
                {
                 "type": "object"
                },
                {
                 "type": "array"
                }
               ],
               "nullable": true,
               "_name_": "source_info",
               "title": "source_info",
               "_required_": false
              }
             },
             "additionalProperties": false,
             "_name_": "usedbysnapshots",
             "title": "usedbysnapshots",
             "default": {},
             "_required_": false,
             "_attrs_order_": [
              "parsed",
              "rawvalue",
              "value",
              "source",
              "source_info"
             ]
            },
            "available": {
             "type": "object",
             "properties": {
              "parsed": {
               "anyOf": [
                {
                 "type": "string"
                },
                {
                 "type": "integer"
                },
                {
                 "type": "boolean"
                },
                {
                 "type": "object"
                },
                {
                 "type": "array"
                }
               ],
               "nullable": true,
               "_name_": "parsed",
               "title": "parsed",
               "_required_": false
              },
              "rawvalue": {
               "_name_": "rawvalue",
               "title": "rawvalue",
               "_required_": false,
               "type": [
                "string",
                "null"
               ]
              },
              "value": {
               "_name_": "value",
               "title": "value",
               "_required_": false,
               "type": [
                "string",
                "null"
               ]
              },
              "source": {
               "_name_": "source",
               "title": "source",
               "_required_": false,
               "type": [
                "string",
                "null"
               ]
              },
              "source_info": {
               "anyOf": [
                {
                 "type": "string"
                },
                {
                 "type": "integer"
                },
                {
                 "type": "boolean"
                },
                {
                 "type": "object"
                },
                {
                 "type": "array"
                }
               ],
               "nullable": true,
               "_name_": "source_info",
               "title": "source_info",
               "_required_": false
              }
             },
             "additionalProperties": false,
             "_name_": "available",
             "title": "available",
             "default": {},
             "_required_": false,
             "_attrs_order_": [
              "parsed",
              "rawvalue",
              "value",
              "source",
              "source_info"
             ]
            },
            "special_small_block_size": {
             "type": "object",
             "properties": {
              "parsed": {
               "anyOf": [
                {
                 "type": "string"
                },
                {
                 "type": "integer"
                },
                {
                 "type": "boolean"
                },
                {
                 "type": "object"
                },
                {
                 "type": "array"
                }
               ],
               "nullable": true,
               "_name_": "parsed",
               "title": "parsed",
               "_required_": false
              },
              "rawvalue": {
               "_name_": "rawvalue",
               "title": "rawvalue",
               "_required_": false,
               "type": [
                "string",
                "null"
               ]
              },
              "value": {
               "_name_": "value",
               "title": "value",
               "_required_": false,
               "type": [
                "string",
                "null"
               ]
              },
              "source": {
               "_name_": "source",
               "title": "source",
               "_required_": false,
               "type": [
                "string",
                "null"
               ]
              },
              "source_info": {
               "anyOf": [
                {
                 "type": "string"
                },
                {
                 "type": "integer"
                },
                {
                 "type": "boolean"
                },
                {
                 "type": "object"
                },
                {
                 "type": "array"
                }
               ],
               "nullable": true,
               "_name_": "source_info",
               "title": "source_info",
               "_required_": false
              }
             },
             "additionalProperties": false,
             "_name_": "special_small_block_size",
             "title": "special_small_block_size",
             "default": {},
             "_required_": false,
             "_attrs_order_": [
              "parsed",
              "rawvalue",
              "value",
              "source",
              "source_info"
             ]
            },
            "pbkdf2iters": {
             "type": "object",
             "properties": {
              "parsed": {
               "anyOf": [
                {
                 "type": "string"
                },
                {
                 "type": "integer"
                },
                {
                 "type": "boolean"
                },
                {
                 "type": "object"
                },
                {
                 "type": "array"
                }
               ],
               "nullable": true,
               "_name_": "parsed",
               "title": "parsed",
               "_required_": false
              },
              "rawvalue": {
               "_name_": "rawvalue",
               "title": "rawvalue",
               "_required_": false,
               "type": [
                "string",
                "null"
               ]
              },
              "value": {
               "_name_": "value",
               "title": "value",
               "_required_": false,
               "type": [
                "string",
                "null"
               ]
              },
              "source": {
               "_name_": "source",
               "title": "source",
               "_required_": false,
               "type": [
                "string",
                "null"
               ]
              },
              "source_info": {
               "anyOf": [
                {
                 "type": "string"
                },
                {
                 "type": "integer"
                },
                {
                 "type": "boolean"
                },
                {
                 "type": "object"
                },
                {
                 "type": "array"
                }
               ],
               "nullable": true,
               "_name_": "source_info",
               "title": "source_info",
               "_required_": false
              }
             },
             "additionalProperties": false,
             "_name_": "pbkdf2iters",
             "title": "pbkdf2iters",
             "default": {},
             "_required_": false,
             "_attrs_order_": [
              "parsed",
              "rawvalue",
              "value",
              "source",
              "source_info"
             ]
            },
            "creation": {
             "type": "object",
             "properties": {
              "parsed": {
               "anyOf": [
                {
                 "type": "string"
                },
                {
                 "type": "integer"
                },
                {
                 "type": "boolean"
                },
                {
                 "type": "object"
                },
                {
                 "type": "array"
                }
               ],
               "nullable": true,
               "_name_": "parsed",
               "title": "parsed",
               "_required_": false
              },
              "rawvalue": {
               "_name_": "rawvalue",
               "title": "rawvalue",
               "_required_": false,
               "type": [
                "string",
                "null"
               ]
              },
              "value": {
               "_name_": "value",
               "title": "value",
               "_required_": false,
               "type": [
                "string",
                "null"
               ]
              },
              "source": {
               "_name_": "source",
               "title": "source",
               "_required_": false,
               "type": [
                "string",
                "null"
               ]
              },
              "source_info": {
               "anyOf": [
                {
                 "type": "string"
                },
                {
                 "type": "integer"
                },
                {
                 "type": "boolean"
                },
                {
                 "type": "object"
                },
                {
                 "type": "array"
                }
               ],
               "nullable": true,
               "_name_": "source_info",
               "title": "source_info",
               "_required_": false
              }
             },
             "additionalProperties": false,
             "_name_": "creation",
             "title": "creation",
             "default": {},
             "_required_": false,
             "_attrs_order_": [
              "parsed",
              "rawvalue",
              "value",
              "source",
              "source_info"
             ]
            },
            "snapdev": {
             "type": "object",
             "properties": {
              "parsed": {
               "anyOf": [
                {
                 "type": "string"
                },
                {
                 "type": "integer"
                },
                {
                 "type": "boolean"
                },
                {
                 "type": "object"
                },
                {
                 "type": "array"
                }
               ],
               "nullable": true,
               "_name_": "parsed",
               "title": "parsed",
               "_required_": false
              },
              "rawvalue": {
               "_name_": "rawvalue",
               "title": "rawvalue",
               "_required_": false,
               "type": [
                "string",
                "null"
               ]
              },
              "value": {
               "_name_": "value",
               "title": "value",
               "_required_": false,
               "type": [
                "string",
                "null"
               ]
              },
              "source": {
               "_name_": "source",
               "title": "source",
               "_required_": false,
               "type": [
                "string",
                "null"
               ]
              },
              "source_info": {
               "anyOf": [
                {
                 "type": "string"
                },
                {
                 "type": "integer"
                },
                {
                 "type": "boolean"
                },
                {
                 "type": "object"
                },
                {
                 "type": "array"
                }
               ],
               "nullable": true,
               "_name_": "source_info",
               "title": "source_info",
               "_required_": false
              }
             },
             "additionalProperties": false,
             "_name_": "snapdev",
             "title": "snapdev",
             "default": {},
             "_required_": false,
             "_attrs_order_": [
              "parsed",
              "rawvalue",
              "value",
              "source",
              "source_info"
             ]
            },
            "mountpoint": {
             "_name_": "mountpoint",
             "title": "mountpoint",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            }
           },
           "additionalProperties": false,
           "_name_": "pool_dataset_entry",
           "title": "pool_dataset_entry",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "id",
            "type",
            "name",
            "pool",
            "encrypted",
            "encryption_root",
            "key_loaded",
            "children",
            "user_properties",
            "locked",
            "comments",
            "quota_warning",
            "quota_critical",
            "refquota_warning",
            "refquota_critical",
            "managedby",
            "deduplication",
            "aclmode",
            "acltype",
            "xattr",
            "atime",
            "casesensitivity",
            "checksum",
            "exec",
            "sync",
            "compression",
            "compressratio",
            "origin",
            "quota",
            "refquota",
            "reservation",
            "refreservation",
            "copies",
            "snapdir",
            "readonly",
            "recordsize",
            "sparse",
            "volsize",
            "volblocksize",
            "key_format",
            "encryption_algorithm",
            "used",
            "usedbychildren",
            "usedbydataset",
            "usedbyrefreservation",
            "usedbysnapshots",
            "available",
            "special_small_block_size",
            "pbkdf2iters",
            "creation",
            "snapdev",
            "mountpoint"
           ]
          }
         ]
        },
        {
         "type": "object",
         "properties": {
          "id": {
           "_name_": "id",
           "title": "id",
           "_required_": true,
           "type": "string"
          },
          "type": {
           "_name_": "type",
           "title": "type",
           "_required_": true,
           "type": "string"
          },
          "name": {
           "_name_": "name",
           "title": "name",
           "_required_": true,
           "type": "string"
          },
          "pool": {
           "_name_": "pool",
           "title": "pool",
           "_required_": true,
           "type": "string"
          },
          "encrypted": {
           "type": "boolean",
           "_name_": "encrypted",
           "title": "encrypted",
           "_required_": false
          },
          "encryption_root": {
           "_name_": "encryption_root",
           "title": "encryption_root",
           "_required_": false,
           "type": [
            "string",
            "null"
           ]
          },
          "key_loaded": {
           "type": [
            "boolean",
            "null"
           ],
           "_name_": "key_loaded",
           "title": "key_loaded",
           "_required_": false
          },
          "children": {
           "_name_": "children",
           "title": "children",
           "default": [],
           "_required_": true,
           "type": "array",
           "items": []
          },
          "user_properties": {
           "type": "object",
           "properties": {},
           "additionalProperties": true,
           "_name_": "user_properties",
           "title": "user_properties",
           "default": {},
           "_required_": true,
           "_attrs_order_": []
          },
          "locked": {
           "type": "boolean",
           "_name_": "locked",
           "title": "locked",
           "_required_": false
          },
          "comments": {
           "type": "object",
           "properties": {
            "parsed": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "parsed",
             "title": "parsed",
             "_required_": false
            },
            "rawvalue": {
             "_name_": "rawvalue",
             "title": "rawvalue",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "value": {
             "_name_": "value",
             "title": "value",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source": {
             "_name_": "source",
             "title": "source",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source_info": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "source_info",
             "title": "source_info",
             "_required_": false
            }
           },
           "additionalProperties": false,
           "_name_": "comments",
           "title": "comments",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "parsed",
            "rawvalue",
            "value",
            "source",
            "source_info"
           ]
          },
          "quota_warning": {
           "type": "object",
           "properties": {
            "parsed": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "parsed",
             "title": "parsed",
             "_required_": false
            },
            "rawvalue": {
             "_name_": "rawvalue",
             "title": "rawvalue",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "value": {
             "_name_": "value",
             "title": "value",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source": {
             "_name_": "source",
             "title": "source",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source_info": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "source_info",
             "title": "source_info",
             "_required_": false
            }
           },
           "additionalProperties": false,
           "_name_": "quota_warning",
           "title": "quota_warning",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "parsed",
            "rawvalue",
            "value",
            "source",
            "source_info"
           ]
          },
          "quota_critical": {
           "type": "object",
           "properties": {
            "parsed": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "parsed",
             "title": "parsed",
             "_required_": false
            },
            "rawvalue": {
             "_name_": "rawvalue",
             "title": "rawvalue",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "value": {
             "_name_": "value",
             "title": "value",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source": {
             "_name_": "source",
             "title": "source",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source_info": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "source_info",
             "title": "source_info",
             "_required_": false
            }
           },
           "additionalProperties": false,
           "_name_": "quota_critical",
           "title": "quota_critical",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "parsed",
            "rawvalue",
            "value",
            "source",
            "source_info"
           ]
          },
          "refquota_warning": {
           "type": "object",
           "properties": {
            "parsed": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "parsed",
             "title": "parsed",
             "_required_": false
            },
            "rawvalue": {
             "_name_": "rawvalue",
             "title": "rawvalue",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "value": {
             "_name_": "value",
             "title": "value",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source": {
             "_name_": "source",
             "title": "source",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source_info": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "source_info",
             "title": "source_info",
             "_required_": false
            }
           },
           "additionalProperties": false,
           "_name_": "refquota_warning",
           "title": "refquota_warning",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "parsed",
            "rawvalue",
            "value",
            "source",
            "source_info"
           ]
          },
          "refquota_critical": {
           "type": "object",
           "properties": {
            "parsed": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "parsed",
             "title": "parsed",
             "_required_": false
            },
            "rawvalue": {
             "_name_": "rawvalue",
             "title": "rawvalue",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "value": {
             "_name_": "value",
             "title": "value",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source": {
             "_name_": "source",
             "title": "source",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source_info": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "source_info",
             "title": "source_info",
             "_required_": false
            }
           },
           "additionalProperties": false,
           "_name_": "refquota_critical",
           "title": "refquota_critical",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "parsed",
            "rawvalue",
            "value",
            "source",
            "source_info"
           ]
          },
          "managedby": {
           "type": "object",
           "properties": {
            "parsed": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "parsed",
             "title": "parsed",
             "_required_": false
            },
            "rawvalue": {
             "_name_": "rawvalue",
             "title": "rawvalue",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "value": {
             "_name_": "value",
             "title": "value",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source": {
             "_name_": "source",
             "title": "source",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source_info": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "source_info",
             "title": "source_info",
             "_required_": false
            }
           },
           "additionalProperties": false,
           "_name_": "managedby",
           "title": "managedby",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "parsed",
            "rawvalue",
            "value",
            "source",
            "source_info"
           ]
          },
          "deduplication": {
           "type": "object",
           "properties": {
            "parsed": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "parsed",
             "title": "parsed",
             "_required_": false
            },
            "rawvalue": {
             "_name_": "rawvalue",
             "title": "rawvalue",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "value": {
             "_name_": "value",
             "title": "value",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source": {
             "_name_": "source",
             "title": "source",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source_info": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "source_info",
             "title": "source_info",
             "_required_": false
            }
           },
           "additionalProperties": false,
           "_name_": "deduplication",
           "title": "deduplication",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "parsed",
            "rawvalue",
            "value",
            "source",
            "source_info"
           ]
          },
          "aclmode": {
           "type": "object",
           "properties": {
            "parsed": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "parsed",
             "title": "parsed",
             "_required_": false
            },
            "rawvalue": {
             "_name_": "rawvalue",
             "title": "rawvalue",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "value": {
             "_name_": "value",
             "title": "value",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source": {
             "_name_": "source",
             "title": "source",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source_info": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "source_info",
             "title": "source_info",
             "_required_": false
            }
           },
           "additionalProperties": false,
           "_name_": "aclmode",
           "title": "aclmode",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "parsed",
            "rawvalue",
            "value",
            "source",
            "source_info"
           ]
          },
          "acltype": {
           "type": "object",
           "properties": {
            "parsed": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "parsed",
             "title": "parsed",
             "_required_": false
            },
            "rawvalue": {
             "_name_": "rawvalue",
             "title": "rawvalue",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "value": {
             "_name_": "value",
             "title": "value",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source": {
             "_name_": "source",
             "title": "source",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source_info": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "source_info",
             "title": "source_info",
             "_required_": false
            }
           },
           "additionalProperties": false,
           "_name_": "acltype",
           "title": "acltype",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "parsed",
            "rawvalue",
            "value",
            "source",
            "source_info"
           ]
          },
          "xattr": {
           "type": "object",
           "properties": {
            "parsed": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "parsed",
             "title": "parsed",
             "_required_": false
            },
            "rawvalue": {
             "_name_": "rawvalue",
             "title": "rawvalue",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "value": {
             "_name_": "value",
             "title": "value",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source": {
             "_name_": "source",
             "title": "source",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source_info": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "source_info",
             "title": "source_info",
             "_required_": false
            }
           },
           "additionalProperties": false,
           "_name_": "xattr",
           "title": "xattr",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "parsed",
            "rawvalue",
            "value",
            "source",
            "source_info"
           ]
          },
          "atime": {
           "type": "object",
           "properties": {
            "parsed": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "parsed",
             "title": "parsed",
             "_required_": false
            },
            "rawvalue": {
             "_name_": "rawvalue",
             "title": "rawvalue",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "value": {
             "_name_": "value",
             "title": "value",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source": {
             "_name_": "source",
             "title": "source",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source_info": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "source_info",
             "title": "source_info",
             "_required_": false
            }
           },
           "additionalProperties": false,
           "_name_": "atime",
           "title": "atime",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "parsed",
            "rawvalue",
            "value",
            "source",
            "source_info"
           ]
          },
          "casesensitivity": {
           "type": "object",
           "properties": {
            "parsed": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "parsed",
             "title": "parsed",
             "_required_": false
            },
            "rawvalue": {
             "_name_": "rawvalue",
             "title": "rawvalue",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "value": {
             "_name_": "value",
             "title": "value",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source": {
             "_name_": "source",
             "title": "source",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source_info": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "source_info",
             "title": "source_info",
             "_required_": false
            }
           },
           "additionalProperties": false,
           "_name_": "casesensitivity",
           "title": "casesensitivity",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "parsed",
            "rawvalue",
            "value",
            "source",
            "source_info"
           ]
          },
          "checksum": {
           "type": "object",
           "properties": {
            "parsed": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "parsed",
             "title": "parsed",
             "_required_": false
            },
            "rawvalue": {
             "_name_": "rawvalue",
             "title": "rawvalue",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "value": {
             "_name_": "value",
             "title": "value",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source": {
             "_name_": "source",
             "title": "source",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source_info": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "source_info",
             "title": "source_info",
             "_required_": false
            }
           },
           "additionalProperties": false,
           "_name_": "checksum",
           "title": "checksum",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "parsed",
            "rawvalue",
            "value",
            "source",
            "source_info"
           ]
          },
          "exec": {
           "type": "object",
           "properties": {
            "parsed": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "parsed",
             "title": "parsed",
             "_required_": false
            },
            "rawvalue": {
             "_name_": "rawvalue",
             "title": "rawvalue",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "value": {
             "_name_": "value",
             "title": "value",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source": {
             "_name_": "source",
             "title": "source",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source_info": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "source_info",
             "title": "source_info",
             "_required_": false
            }
           },
           "additionalProperties": false,
           "_name_": "exec",
           "title": "exec",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "parsed",
            "rawvalue",
            "value",
            "source",
            "source_info"
           ]
          },
          "sync": {
           "type": "object",
           "properties": {
            "parsed": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "parsed",
             "title": "parsed",
             "_required_": false
            },
            "rawvalue": {
             "_name_": "rawvalue",
             "title": "rawvalue",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "value": {
             "_name_": "value",
             "title": "value",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source": {
             "_name_": "source",
             "title": "source",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source_info": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "source_info",
             "title": "source_info",
             "_required_": false
            }
           },
           "additionalProperties": false,
           "_name_": "sync",
           "title": "sync",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "parsed",
            "rawvalue",
            "value",
            "source",
            "source_info"
           ]
          },
          "compression": {
           "type": "object",
           "properties": {
            "parsed": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "parsed",
             "title": "parsed",
             "_required_": false
            },
            "rawvalue": {
             "_name_": "rawvalue",
             "title": "rawvalue",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "value": {
             "_name_": "value",
             "title": "value",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source": {
             "_name_": "source",
             "title": "source",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source_info": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "source_info",
             "title": "source_info",
             "_required_": false
            }
           },
           "additionalProperties": false,
           "_name_": "compression",
           "title": "compression",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "parsed",
            "rawvalue",
            "value",
            "source",
            "source_info"
           ]
          },
          "compressratio": {
           "type": "object",
           "properties": {
            "parsed": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "parsed",
             "title": "parsed",
             "_required_": false
            },
            "rawvalue": {
             "_name_": "rawvalue",
             "title": "rawvalue",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "value": {
             "_name_": "value",
             "title": "value",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source": {
             "_name_": "source",
             "title": "source",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source_info": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "source_info",
             "title": "source_info",
             "_required_": false
            }
           },
           "additionalProperties": false,
           "_name_": "compressratio",
           "title": "compressratio",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "parsed",
            "rawvalue",
            "value",
            "source",
            "source_info"
           ]
          },
          "origin": {
           "type": "object",
           "properties": {
            "parsed": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "parsed",
             "title": "parsed",
             "_required_": false
            },
            "rawvalue": {
             "_name_": "rawvalue",
             "title": "rawvalue",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "value": {
             "_name_": "value",
             "title": "value",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source": {
             "_name_": "source",
             "title": "source",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source_info": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "source_info",
             "title": "source_info",
             "_required_": false
            }
           },
           "additionalProperties": false,
           "_name_": "origin",
           "title": "origin",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "parsed",
            "rawvalue",
            "value",
            "source",
            "source_info"
           ]
          },
          "quota": {
           "type": "object",
           "properties": {
            "parsed": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "parsed",
             "title": "parsed",
             "_required_": false
            },
            "rawvalue": {
             "_name_": "rawvalue",
             "title": "rawvalue",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "value": {
             "_name_": "value",
             "title": "value",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source": {
             "_name_": "source",
             "title": "source",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source_info": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "source_info",
             "title": "source_info",
             "_required_": false
            }
           },
           "additionalProperties": false,
           "_name_": "quota",
           "title": "quota",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "parsed",
            "rawvalue",
            "value",
            "source",
            "source_info"
           ]
          },
          "refquota": {
           "type": "object",
           "properties": {
            "parsed": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "parsed",
             "title": "parsed",
             "_required_": false
            },
            "rawvalue": {
             "_name_": "rawvalue",
             "title": "rawvalue",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "value": {
             "_name_": "value",
             "title": "value",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source": {
             "_name_": "source",
             "title": "source",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source_info": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "source_info",
             "title": "source_info",
             "_required_": false
            }
           },
           "additionalProperties": false,
           "_name_": "refquota",
           "title": "refquota",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "parsed",
            "rawvalue",
            "value",
            "source",
            "source_info"
           ]
          },
          "reservation": {
           "type": "object",
           "properties": {
            "parsed": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "parsed",
             "title": "parsed",
             "_required_": false
            },
            "rawvalue": {
             "_name_": "rawvalue",
             "title": "rawvalue",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "value": {
             "_name_": "value",
             "title": "value",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source": {
             "_name_": "source",
             "title": "source",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source_info": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "source_info",
             "title": "source_info",
             "_required_": false
            }
           },
           "additionalProperties": false,
           "_name_": "reservation",
           "title": "reservation",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "parsed",
            "rawvalue",
            "value",
            "source",
            "source_info"
           ]
          },
          "refreservation": {
           "type": "object",
           "properties": {
            "parsed": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "parsed",
             "title": "parsed",
             "_required_": false
            },
            "rawvalue": {
             "_name_": "rawvalue",
             "title": "rawvalue",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "value": {
             "_name_": "value",
             "title": "value",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source": {
             "_name_": "source",
             "title": "source",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source_info": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "source_info",
             "title": "source_info",
             "_required_": false
            }
           },
           "additionalProperties": false,
           "_name_": "refreservation",
           "title": "refreservation",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "parsed",
            "rawvalue",
            "value",
            "source",
            "source_info"
           ]
          },
          "copies": {
           "type": "object",
           "properties": {
            "parsed": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "parsed",
             "title": "parsed",
             "_required_": false
            },
            "rawvalue": {
             "_name_": "rawvalue",
             "title": "rawvalue",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "value": {
             "_name_": "value",
             "title": "value",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source": {
             "_name_": "source",
             "title": "source",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source_info": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "source_info",
             "title": "source_info",
             "_required_": false
            }
           },
           "additionalProperties": false,
           "_name_": "copies",
           "title": "copies",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "parsed",
            "rawvalue",
            "value",
            "source",
            "source_info"
           ]
          },
          "snapdir": {
           "type": "object",
           "properties": {
            "parsed": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "parsed",
             "title": "parsed",
             "_required_": false
            },
            "rawvalue": {
             "_name_": "rawvalue",
             "title": "rawvalue",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "value": {
             "_name_": "value",
             "title": "value",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source": {
             "_name_": "source",
             "title": "source",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source_info": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "source_info",
             "title": "source_info",
             "_required_": false
            }
           },
           "additionalProperties": false,
           "_name_": "snapdir",
           "title": "snapdir",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "parsed",
            "rawvalue",
            "value",
            "source",
            "source_info"
           ]
          },
          "readonly": {
           "type": "object",
           "properties": {
            "parsed": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "parsed",
             "title": "parsed",
             "_required_": false
            },
            "rawvalue": {
             "_name_": "rawvalue",
             "title": "rawvalue",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "value": {
             "_name_": "value",
             "title": "value",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source": {
             "_name_": "source",
             "title": "source",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source_info": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "source_info",
             "title": "source_info",
             "_required_": false
            }
           },
           "additionalProperties": false,
           "_name_": "readonly",
           "title": "readonly",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "parsed",
            "rawvalue",
            "value",
            "source",
            "source_info"
           ]
          },
          "recordsize": {
           "type": "object",
           "properties": {
            "parsed": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "parsed",
             "title": "parsed",
             "_required_": false
            },
            "rawvalue": {
             "_name_": "rawvalue",
             "title": "rawvalue",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "value": {
             "_name_": "value",
             "title": "value",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source": {
             "_name_": "source",
             "title": "source",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source_info": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "source_info",
             "title": "source_info",
             "_required_": false
            }
           },
           "additionalProperties": false,
           "_name_": "recordsize",
           "title": "recordsize",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "parsed",
            "rawvalue",
            "value",
            "source",
            "source_info"
           ]
          },
          "sparse": {
           "type": "object",
           "properties": {
            "parsed": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "parsed",
             "title": "parsed",
             "_required_": false
            },
            "rawvalue": {
             "_name_": "rawvalue",
             "title": "rawvalue",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "value": {
             "_name_": "value",
             "title": "value",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source": {
             "_name_": "source",
             "title": "source",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source_info": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "source_info",
             "title": "source_info",
             "_required_": false
            }
           },
           "additionalProperties": false,
           "_name_": "sparse",
           "title": "sparse",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "parsed",
            "rawvalue",
            "value",
            "source",
            "source_info"
           ]
          },
          "volsize": {
           "type": "object",
           "properties": {
            "parsed": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "parsed",
             "title": "parsed",
             "_required_": false
            },
            "rawvalue": {
             "_name_": "rawvalue",
             "title": "rawvalue",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "value": {
             "_name_": "value",
             "title": "value",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source": {
             "_name_": "source",
             "title": "source",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source_info": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "source_info",
             "title": "source_info",
             "_required_": false
            }
           },
           "additionalProperties": false,
           "_name_": "volsize",
           "title": "volsize",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "parsed",
            "rawvalue",
            "value",
            "source",
            "source_info"
           ]
          },
          "volblocksize": {
           "type": "object",
           "properties": {
            "parsed": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "parsed",
             "title": "parsed",
             "_required_": false
            },
            "rawvalue": {
             "_name_": "rawvalue",
             "title": "rawvalue",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "value": {
             "_name_": "value",
             "title": "value",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source": {
             "_name_": "source",
             "title": "source",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source_info": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "source_info",
             "title": "source_info",
             "_required_": false
            }
           },
           "additionalProperties": false,
           "_name_": "volblocksize",
           "title": "volblocksize",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "parsed",
            "rawvalue",
            "value",
            "source",
            "source_info"
           ]
          },
          "key_format": {
           "type": "object",
           "properties": {
            "parsed": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "parsed",
             "title": "parsed",
             "_required_": false
            },
            "rawvalue": {
             "_name_": "rawvalue",
             "title": "rawvalue",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "value": {
             "_name_": "value",
             "title": "value",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source": {
             "_name_": "source",
             "title": "source",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source_info": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "source_info",
             "title": "source_info",
             "_required_": false
            }
           },
           "additionalProperties": false,
           "_name_": "key_format",
           "title": "key_format",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "parsed",
            "rawvalue",
            "value",
            "source",
            "source_info"
           ]
          },
          "encryption_algorithm": {
           "type": "object",
           "properties": {
            "parsed": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "parsed",
             "title": "parsed",
             "_required_": false
            },
            "rawvalue": {
             "_name_": "rawvalue",
             "title": "rawvalue",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "value": {
             "_name_": "value",
             "title": "value",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source": {
             "_name_": "source",
             "title": "source",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source_info": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "source_info",
             "title": "source_info",
             "_required_": false
            }
           },
           "additionalProperties": false,
           "_name_": "encryption_algorithm",
           "title": "encryption_algorithm",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "parsed",
            "rawvalue",
            "value",
            "source",
            "source_info"
           ]
          },
          "used": {
           "type": "object",
           "properties": {
            "parsed": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "parsed",
             "title": "parsed",
             "_required_": false
            },
            "rawvalue": {
             "_name_": "rawvalue",
             "title": "rawvalue",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "value": {
             "_name_": "value",
             "title": "value",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source": {
             "_name_": "source",
             "title": "source",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source_info": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "source_info",
             "title": "source_info",
             "_required_": false
            }
           },
           "additionalProperties": false,
           "_name_": "used",
           "title": "used",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "parsed",
            "rawvalue",
            "value",
            "source",
            "source_info"
           ]
          },
          "usedbychildren": {
           "type": "object",
           "properties": {
            "parsed": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "parsed",
             "title": "parsed",
             "_required_": false
            },
            "rawvalue": {
             "_name_": "rawvalue",
             "title": "rawvalue",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "value": {
             "_name_": "value",
             "title": "value",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source": {
             "_name_": "source",
             "title": "source",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source_info": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "source_info",
             "title": "source_info",
             "_required_": false
            }
           },
           "additionalProperties": false,
           "_name_": "usedbychildren",
           "title": "usedbychildren",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "parsed",
            "rawvalue",
            "value",
            "source",
            "source_info"
           ]
          },
          "usedbydataset": {
           "type": "object",
           "properties": {
            "parsed": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "parsed",
             "title": "parsed",
             "_required_": false
            },
            "rawvalue": {
             "_name_": "rawvalue",
             "title": "rawvalue",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "value": {
             "_name_": "value",
             "title": "value",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source": {
             "_name_": "source",
             "title": "source",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source_info": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "source_info",
             "title": "source_info",
             "_required_": false
            }
           },
           "additionalProperties": false,
           "_name_": "usedbydataset",
           "title": "usedbydataset",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "parsed",
            "rawvalue",
            "value",
            "source",
            "source_info"
           ]
          },
          "usedbyrefreservation": {
           "type": "object",
           "properties": {
            "parsed": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "parsed",
             "title": "parsed",
             "_required_": false
            },
            "rawvalue": {
             "_name_": "rawvalue",
             "title": "rawvalue",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "value": {
             "_name_": "value",
             "title": "value",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source": {
             "_name_": "source",
             "title": "source",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source_info": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "source_info",
             "title": "source_info",
             "_required_": false
            }
           },
           "additionalProperties": false,
           "_name_": "usedbyrefreservation",
           "title": "usedbyrefreservation",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "parsed",
            "rawvalue",
            "value",
            "source",
            "source_info"
           ]
          },
          "usedbysnapshots": {
           "type": "object",
           "properties": {
            "parsed": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "parsed",
             "title": "parsed",
             "_required_": false
            },
            "rawvalue": {
             "_name_": "rawvalue",
             "title": "rawvalue",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "value": {
             "_name_": "value",
             "title": "value",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source": {
             "_name_": "source",
             "title": "source",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source_info": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "source_info",
             "title": "source_info",
             "_required_": false
            }
           },
           "additionalProperties": false,
           "_name_": "usedbysnapshots",
           "title": "usedbysnapshots",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "parsed",
            "rawvalue",
            "value",
            "source",
            "source_info"
           ]
          },
          "available": {
           "type": "object",
           "properties": {
            "parsed": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "parsed",
             "title": "parsed",
             "_required_": false
            },
            "rawvalue": {
             "_name_": "rawvalue",
             "title": "rawvalue",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "value": {
             "_name_": "value",
             "title": "value",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source": {
             "_name_": "source",
             "title": "source",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source_info": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "source_info",
             "title": "source_info",
             "_required_": false
            }
           },
           "additionalProperties": false,
           "_name_": "available",
           "title": "available",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "parsed",
            "rawvalue",
            "value",
            "source",
            "source_info"
           ]
          },
          "special_small_block_size": {
           "type": "object",
           "properties": {
            "parsed": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "parsed",
             "title": "parsed",
             "_required_": false
            },
            "rawvalue": {
             "_name_": "rawvalue",
             "title": "rawvalue",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "value": {
             "_name_": "value",
             "title": "value",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source": {
             "_name_": "source",
             "title": "source",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source_info": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "source_info",
             "title": "source_info",
             "_required_": false
            }
           },
           "additionalProperties": false,
           "_name_": "special_small_block_size",
           "title": "special_small_block_size",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "parsed",
            "rawvalue",
            "value",
            "source",
            "source_info"
           ]
          },
          "pbkdf2iters": {
           "type": "object",
           "properties": {
            "parsed": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "parsed",
             "title": "parsed",
             "_required_": false
            },
            "rawvalue": {
             "_name_": "rawvalue",
             "title": "rawvalue",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "value": {
             "_name_": "value",
             "title": "value",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source": {
             "_name_": "source",
             "title": "source",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source_info": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "source_info",
             "title": "source_info",
             "_required_": false
            }
           },
           "additionalProperties": false,
           "_name_": "pbkdf2iters",
           "title": "pbkdf2iters",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "parsed",
            "rawvalue",
            "value",
            "source",
            "source_info"
           ]
          },
          "creation": {
           "type": "object",
           "properties": {
            "parsed": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "parsed",
             "title": "parsed",
             "_required_": false
            },
            "rawvalue": {
             "_name_": "rawvalue",
             "title": "rawvalue",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "value": {
             "_name_": "value",
             "title": "value",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source": {
             "_name_": "source",
             "title": "source",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source_info": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "source_info",
             "title": "source_info",
             "_required_": false
            }
           },
           "additionalProperties": false,
           "_name_": "creation",
           "title": "creation",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "parsed",
            "rawvalue",
            "value",
            "source",
            "source_info"
           ]
          },
          "snapdev": {
           "type": "object",
           "properties": {
            "parsed": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "parsed",
             "title": "parsed",
             "_required_": false
            },
            "rawvalue": {
             "_name_": "rawvalue",
             "title": "rawvalue",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "value": {
             "_name_": "value",
             "title": "value",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source": {
             "_name_": "source",
             "title": "source",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source_info": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "source_info",
             "title": "source_info",
             "_required_": false
            }
           },
           "additionalProperties": false,
           "_name_": "snapdev",
           "title": "snapdev",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "parsed",
            "rawvalue",
            "value",
            "source",
            "source_info"
           ]
          },
          "mountpoint": {
           "_name_": "mountpoint",
           "title": "mountpoint",
           "_required_": false,
           "type": [
            "string",
            "null"
           ]
          }
         },
         "additionalProperties": false,
         "_name_": "pool_dataset_entry",
         "title": "pool_dataset_entry",
         "default": {},
         "_required_": false,
         "_attrs_order_": [
          "id",
          "type",
          "name",
          "pool",
          "encrypted",
          "encryption_root",
          "key_loaded",
          "children",
          "user_properties",
          "locked",
          "comments",
          "quota_warning",
          "quota_critical",
          "refquota_warning",
          "refquota_critical",
          "managedby",
          "deduplication",
          "aclmode",
          "acltype",
          "xattr",
          "atime",
          "casesensitivity",
          "checksum",
          "exec",
          "sync",
          "compression",
          "compressratio",
          "origin",
          "quota",
          "refquota",
          "reservation",
          "refreservation",
          "copies",
          "snapdir",
          "readonly",
          "recordsize",
          "sparse",
          "volsize",
          "volblocksize",
          "key_format",
          "encryption_algorithm",
          "used",
          "usedbychildren",
          "usedbydataset",
          "usedbyrefreservation",
          "usedbysnapshots",
          "available",
          "special_small_block_size",
          "pbkdf2iters",
          "creation",
          "snapdev",
          "mountpoint"
         ]
        },
        {
         "type": "integer",
         "_name_": "count",
         "title": "count",
         "_required_": false
        },
        {
         "type": "object",
         "properties": {
          "id": {
           "_name_": "id",
           "title": "id",
           "_required_": true,
           "type": "string"
          },
          "type": {
           "_name_": "type",
           "title": "type",
           "_required_": true,
           "type": "string"
          },
          "name": {
           "_name_": "name",
           "title": "name",
           "_required_": true,
           "type": "string"
          },
          "pool": {
           "_name_": "pool",
           "title": "pool",
           "_required_": true,
           "type": "string"
          },
          "encrypted": {
           "type": "boolean",
           "_name_": "encrypted",
           "title": "encrypted",
           "_required_": false
          },
          "encryption_root": {
           "_name_": "encryption_root",
           "title": "encryption_root",
           "_required_": false,
           "type": [
            "string",
            "null"
           ]
          },
          "key_loaded": {
           "type": [
            "boolean",
            "null"
           ],
           "_name_": "key_loaded",
           "title": "key_loaded",
           "_required_": false
          },
          "children": {
           "_name_": "children",
           "title": "children",
           "default": [],
           "_required_": true,
           "type": "array",
           "items": []
          },
          "user_properties": {
           "type": "object",
           "properties": {},
           "additionalProperties": true,
           "_name_": "user_properties",
           "title": "user_properties",
           "default": {},
           "_required_": true,
           "_attrs_order_": []
          },
          "locked": {
           "type": "boolean",
           "_name_": "locked",
           "title": "locked",
           "_required_": false
          },
          "comments": {
           "type": "object",
           "properties": {
            "parsed": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "parsed",
             "title": "parsed",
             "_required_": false
            },
            "rawvalue": {
             "_name_": "rawvalue",
             "title": "rawvalue",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "value": {
             "_name_": "value",
             "title": "value",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source": {
             "_name_": "source",
             "title": "source",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source_info": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "source_info",
             "title": "source_info",
             "_required_": false
            }
           },
           "additionalProperties": false,
           "_name_": "comments",
           "title": "comments",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "parsed",
            "rawvalue",
            "value",
            "source",
            "source_info"
           ]
          },
          "quota_warning": {
           "type": "object",
           "properties": {
            "parsed": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "parsed",
             "title": "parsed",
             "_required_": false
            },
            "rawvalue": {
             "_name_": "rawvalue",
             "title": "rawvalue",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "value": {
             "_name_": "value",
             "title": "value",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source": {
             "_name_": "source",
             "title": "source",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source_info": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "source_info",
             "title": "source_info",
             "_required_": false
            }
           },
           "additionalProperties": false,
           "_name_": "quota_warning",
           "title": "quota_warning",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "parsed",
            "rawvalue",
            "value",
            "source",
            "source_info"
           ]
          },
          "quota_critical": {
           "type": "object",
           "properties": {
            "parsed": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "parsed",
             "title": "parsed",
             "_required_": false
            },
            "rawvalue": {
             "_name_": "rawvalue",
             "title": "rawvalue",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "value": {
             "_name_": "value",
             "title": "value",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source": {
             "_name_": "source",
             "title": "source",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source_info": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "source_info",
             "title": "source_info",
             "_required_": false
            }
           },
           "additionalProperties": false,
           "_name_": "quota_critical",
           "title": "quota_critical",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "parsed",
            "rawvalue",
            "value",
            "source",
            "source_info"
           ]
          },
          "refquota_warning": {
           "type": "object",
           "properties": {
            "parsed": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "parsed",
             "title": "parsed",
             "_required_": false
            },
            "rawvalue": {
             "_name_": "rawvalue",
             "title": "rawvalue",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "value": {
             "_name_": "value",
             "title": "value",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source": {
             "_name_": "source",
             "title": "source",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source_info": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "source_info",
             "title": "source_info",
             "_required_": false
            }
           },
           "additionalProperties": false,
           "_name_": "refquota_warning",
           "title": "refquota_warning",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "parsed",
            "rawvalue",
            "value",
            "source",
            "source_info"
           ]
          },
          "refquota_critical": {
           "type": "object",
           "properties": {
            "parsed": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "parsed",
             "title": "parsed",
             "_required_": false
            },
            "rawvalue": {
             "_name_": "rawvalue",
             "title": "rawvalue",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "value": {
             "_name_": "value",
             "title": "value",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source": {
             "_name_": "source",
             "title": "source",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source_info": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "source_info",
             "title": "source_info",
             "_required_": false
            }
           },
           "additionalProperties": false,
           "_name_": "refquota_critical",
           "title": "refquota_critical",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "parsed",
            "rawvalue",
            "value",
            "source",
            "source_info"
           ]
          },
          "managedby": {
           "type": "object",
           "properties": {
            "parsed": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "parsed",
             "title": "parsed",
             "_required_": false
            },
            "rawvalue": {
             "_name_": "rawvalue",
             "title": "rawvalue",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "value": {
             "_name_": "value",
             "title": "value",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source": {
             "_name_": "source",
             "title": "source",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source_info": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "source_info",
             "title": "source_info",
             "_required_": false
            }
           },
           "additionalProperties": false,
           "_name_": "managedby",
           "title": "managedby",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "parsed",
            "rawvalue",
            "value",
            "source",
            "source_info"
           ]
          },
          "deduplication": {
           "type": "object",
           "properties": {
            "parsed": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "parsed",
             "title": "parsed",
             "_required_": false
            },
            "rawvalue": {
             "_name_": "rawvalue",
             "title": "rawvalue",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "value": {
             "_name_": "value",
             "title": "value",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source": {
             "_name_": "source",
             "title": "source",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source_info": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "source_info",
             "title": "source_info",
             "_required_": false
            }
           },
           "additionalProperties": false,
           "_name_": "deduplication",
           "title": "deduplication",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "parsed",
            "rawvalue",
            "value",
            "source",
            "source_info"
           ]
          },
          "aclmode": {
           "type": "object",
           "properties": {
            "parsed": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "parsed",
             "title": "parsed",
             "_required_": false
            },
            "rawvalue": {
             "_name_": "rawvalue",
             "title": "rawvalue",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "value": {
             "_name_": "value",
             "title": "value",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source": {
             "_name_": "source",
             "title": "source",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source_info": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "source_info",
             "title": "source_info",
             "_required_": false
            }
           },
           "additionalProperties": false,
           "_name_": "aclmode",
           "title": "aclmode",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "parsed",
            "rawvalue",
            "value",
            "source",
            "source_info"
           ]
          },
          "acltype": {
           "type": "object",
           "properties": {
            "parsed": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "parsed",
             "title": "parsed",
             "_required_": false
            },
            "rawvalue": {
             "_name_": "rawvalue",
             "title": "rawvalue",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "value": {
             "_name_": "value",
             "title": "value",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source": {
             "_name_": "source",
             "title": "source",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source_info": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "source_info",
             "title": "source_info",
             "_required_": false
            }
           },
           "additionalProperties": false,
           "_name_": "acltype",
           "title": "acltype",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "parsed",
            "rawvalue",
            "value",
            "source",
            "source_info"
           ]
          },
          "xattr": {
           "type": "object",
           "properties": {
            "parsed": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "parsed",
             "title": "parsed",
             "_required_": false
            },
            "rawvalue": {
             "_name_": "rawvalue",
             "title": "rawvalue",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "value": {
             "_name_": "value",
             "title": "value",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source": {
             "_name_": "source",
             "title": "source",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source_info": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "source_info",
             "title": "source_info",
             "_required_": false
            }
           },
           "additionalProperties": false,
           "_name_": "xattr",
           "title": "xattr",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "parsed",
            "rawvalue",
            "value",
            "source",
            "source_info"
           ]
          },
          "atime": {
           "type": "object",
           "properties": {
            "parsed": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "parsed",
             "title": "parsed",
             "_required_": false
            },
            "rawvalue": {
             "_name_": "rawvalue",
             "title": "rawvalue",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "value": {
             "_name_": "value",
             "title": "value",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source": {
             "_name_": "source",
             "title": "source",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source_info": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "source_info",
             "title": "source_info",
             "_required_": false
            }
           },
           "additionalProperties": false,
           "_name_": "atime",
           "title": "atime",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "parsed",
            "rawvalue",
            "value",
            "source",
            "source_info"
           ]
          },
          "casesensitivity": {
           "type": "object",
           "properties": {
            "parsed": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "parsed",
             "title": "parsed",
             "_required_": false
            },
            "rawvalue": {
             "_name_": "rawvalue",
             "title": "rawvalue",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "value": {
             "_name_": "value",
             "title": "value",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source": {
             "_name_": "source",
             "title": "source",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source_info": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "source_info",
             "title": "source_info",
             "_required_": false
            }
           },
           "additionalProperties": false,
           "_name_": "casesensitivity",
           "title": "casesensitivity",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "parsed",
            "rawvalue",
            "value",
            "source",
            "source_info"
           ]
          },
          "checksum": {
           "type": "object",
           "properties": {
            "parsed": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "parsed",
             "title": "parsed",
             "_required_": false
            },
            "rawvalue": {
             "_name_": "rawvalue",
             "title": "rawvalue",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "value": {
             "_name_": "value",
             "title": "value",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source": {
             "_name_": "source",
             "title": "source",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source_info": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "source_info",
             "title": "source_info",
             "_required_": false
            }
           },
           "additionalProperties": false,
           "_name_": "checksum",
           "title": "checksum",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "parsed",
            "rawvalue",
            "value",
            "source",
            "source_info"
           ]
          },
          "exec": {
           "type": "object",
           "properties": {
            "parsed": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "parsed",
             "title": "parsed",
             "_required_": false
            },
            "rawvalue": {
             "_name_": "rawvalue",
             "title": "rawvalue",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "value": {
             "_name_": "value",
             "title": "value",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source": {
             "_name_": "source",
             "title": "source",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source_info": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "source_info",
             "title": "source_info",
             "_required_": false
            }
           },
           "additionalProperties": false,
           "_name_": "exec",
           "title": "exec",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "parsed",
            "rawvalue",
            "value",
            "source",
            "source_info"
           ]
          },
          "sync": {
           "type": "object",
           "properties": {
            "parsed": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "parsed",
             "title": "parsed",
             "_required_": false
            },
            "rawvalue": {
             "_name_": "rawvalue",
             "title": "rawvalue",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "value": {
             "_name_": "value",
             "title": "value",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source": {
             "_name_": "source",
             "title": "source",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source_info": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "source_info",
             "title": "source_info",
             "_required_": false
            }
           },
           "additionalProperties": false,
           "_name_": "sync",
           "title": "sync",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "parsed",
            "rawvalue",
            "value",
            "source",
            "source_info"
           ]
          },
          "compression": {
           "type": "object",
           "properties": {
            "parsed": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "parsed",
             "title": "parsed",
             "_required_": false
            },
            "rawvalue": {
             "_name_": "rawvalue",
             "title": "rawvalue",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "value": {
             "_name_": "value",
             "title": "value",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source": {
             "_name_": "source",
             "title": "source",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source_info": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "source_info",
             "title": "source_info",
             "_required_": false
            }
           },
           "additionalProperties": false,
           "_name_": "compression",
           "title": "compression",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "parsed",
            "rawvalue",
            "value",
            "source",
            "source_info"
           ]
          },
          "compressratio": {
           "type": "object",
           "properties": {
            "parsed": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "parsed",
             "title": "parsed",
             "_required_": false
            },
            "rawvalue": {
             "_name_": "rawvalue",
             "title": "rawvalue",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "value": {
             "_name_": "value",
             "title": "value",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source": {
             "_name_": "source",
             "title": "source",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source_info": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "source_info",
             "title": "source_info",
             "_required_": false
            }
           },
           "additionalProperties": false,
           "_name_": "compressratio",
           "title": "compressratio",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "parsed",
            "rawvalue",
            "value",
            "source",
            "source_info"
           ]
          },
          "origin": {
           "type": "object",
           "properties": {
            "parsed": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "parsed",
             "title": "parsed",
             "_required_": false
            },
            "rawvalue": {
             "_name_": "rawvalue",
             "title": "rawvalue",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "value": {
             "_name_": "value",
             "title": "value",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source": {
             "_name_": "source",
             "title": "source",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source_info": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "source_info",
             "title": "source_info",
             "_required_": false
            }
           },
           "additionalProperties": false,
           "_name_": "origin",
           "title": "origin",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "parsed",
            "rawvalue",
            "value",
            "source",
            "source_info"
           ]
          },
          "quota": {
           "type": "object",
           "properties": {
            "parsed": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "parsed",
             "title": "parsed",
             "_required_": false
            },
            "rawvalue": {
             "_name_": "rawvalue",
             "title": "rawvalue",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "value": {
             "_name_": "value",
             "title": "value",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source": {
             "_name_": "source",
             "title": "source",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source_info": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "source_info",
             "title": "source_info",
             "_required_": false
            }
           },
           "additionalProperties": false,
           "_name_": "quota",
           "title": "quota",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "parsed",
            "rawvalue",
            "value",
            "source",
            "source_info"
           ]
          },
          "refquota": {
           "type": "object",
           "properties": {
            "parsed": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "parsed",
             "title": "parsed",
             "_required_": false
            },
            "rawvalue": {
             "_name_": "rawvalue",
             "title": "rawvalue",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "value": {
             "_name_": "value",
             "title": "value",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source": {
             "_name_": "source",
             "title": "source",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source_info": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "source_info",
             "title": "source_info",
             "_required_": false
            }
           },
           "additionalProperties": false,
           "_name_": "refquota",
           "title": "refquota",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "parsed",
            "rawvalue",
            "value",
            "source",
            "source_info"
           ]
          },
          "reservation": {
           "type": "object",
           "properties": {
            "parsed": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "parsed",
             "title": "parsed",
             "_required_": false
            },
            "rawvalue": {
             "_name_": "rawvalue",
             "title": "rawvalue",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "value": {
             "_name_": "value",
             "title": "value",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source": {
             "_name_": "source",
             "title": "source",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source_info": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "source_info",
             "title": "source_info",
             "_required_": false
            }
           },
           "additionalProperties": false,
           "_name_": "reservation",
           "title": "reservation",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "parsed",
            "rawvalue",
            "value",
            "source",
            "source_info"
           ]
          },
          "refreservation": {
           "type": "object",
           "properties": {
            "parsed": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "parsed",
             "title": "parsed",
             "_required_": false
            },
            "rawvalue": {
             "_name_": "rawvalue",
             "title": "rawvalue",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "value": {
             "_name_": "value",
             "title": "value",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source": {
             "_name_": "source",
             "title": "source",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source_info": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "source_info",
             "title": "source_info",
             "_required_": false
            }
           },
           "additionalProperties": false,
           "_name_": "refreservation",
           "title": "refreservation",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "parsed",
            "rawvalue",
            "value",
            "source",
            "source_info"
           ]
          },
          "copies": {
           "type": "object",
           "properties": {
            "parsed": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "parsed",
             "title": "parsed",
             "_required_": false
            },
            "rawvalue": {
             "_name_": "rawvalue",
             "title": "rawvalue",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "value": {
             "_name_": "value",
             "title": "value",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source": {
             "_name_": "source",
             "title": "source",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source_info": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "source_info",
             "title": "source_info",
             "_required_": false
            }
           },
           "additionalProperties": false,
           "_name_": "copies",
           "title": "copies",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "parsed",
            "rawvalue",
            "value",
            "source",
            "source_info"
           ]
          },
          "snapdir": {
           "type": "object",
           "properties": {
            "parsed": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "parsed",
             "title": "parsed",
             "_required_": false
            },
            "rawvalue": {
             "_name_": "rawvalue",
             "title": "rawvalue",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "value": {
             "_name_": "value",
             "title": "value",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source": {
             "_name_": "source",
             "title": "source",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source_info": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "source_info",
             "title": "source_info",
             "_required_": false
            }
           },
           "additionalProperties": false,
           "_name_": "snapdir",
           "title": "snapdir",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "parsed",
            "rawvalue",
            "value",
            "source",
            "source_info"
           ]
          },
          "readonly": {
           "type": "object",
           "properties": {
            "parsed": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "parsed",
             "title": "parsed",
             "_required_": false
            },
            "rawvalue": {
             "_name_": "rawvalue",
             "title": "rawvalue",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "value": {
             "_name_": "value",
             "title": "value",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source": {
             "_name_": "source",
             "title": "source",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source_info": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "source_info",
             "title": "source_info",
             "_required_": false
            }
           },
           "additionalProperties": false,
           "_name_": "readonly",
           "title": "readonly",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "parsed",
            "rawvalue",
            "value",
            "source",
            "source_info"
           ]
          },
          "recordsize": {
           "type": "object",
           "properties": {
            "parsed": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "parsed",
             "title": "parsed",
             "_required_": false
            },
            "rawvalue": {
             "_name_": "rawvalue",
             "title": "rawvalue",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "value": {
             "_name_": "value",
             "title": "value",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source": {
             "_name_": "source",
             "title": "source",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source_info": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "source_info",
             "title": "source_info",
             "_required_": false
            }
           },
           "additionalProperties": false,
           "_name_": "recordsize",
           "title": "recordsize",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "parsed",
            "rawvalue",
            "value",
            "source",
            "source_info"
           ]
          },
          "sparse": {
           "type": "object",
           "properties": {
            "parsed": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "parsed",
             "title": "parsed",
             "_required_": false
            },
            "rawvalue": {
             "_name_": "rawvalue",
             "title": "rawvalue",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "value": {
             "_name_": "value",
             "title": "value",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source": {
             "_name_": "source",
             "title": "source",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source_info": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "source_info",
             "title": "source_info",
             "_required_": false
            }
           },
           "additionalProperties": false,
           "_name_": "sparse",
           "title": "sparse",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "parsed",
            "rawvalue",
            "value",
            "source",
            "source_info"
           ]
          },
          "volsize": {
           "type": "object",
           "properties": {
            "parsed": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "parsed",
             "title": "parsed",
             "_required_": false
            },
            "rawvalue": {
             "_name_": "rawvalue",
             "title": "rawvalue",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "value": {
             "_name_": "value",
             "title": "value",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source": {
             "_name_": "source",
             "title": "source",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source_info": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "source_info",
             "title": "source_info",
             "_required_": false
            }
           },
           "additionalProperties": false,
           "_name_": "volsize",
           "title": "volsize",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "parsed",
            "rawvalue",
            "value",
            "source",
            "source_info"
           ]
          },
          "volblocksize": {
           "type": "object",
           "properties": {
            "parsed": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "parsed",
             "title": "parsed",
             "_required_": false
            },
            "rawvalue": {
             "_name_": "rawvalue",
             "title": "rawvalue",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "value": {
             "_name_": "value",
             "title": "value",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source": {
             "_name_": "source",
             "title": "source",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source_info": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "source_info",
             "title": "source_info",
             "_required_": false
            }
           },
           "additionalProperties": false,
           "_name_": "volblocksize",
           "title": "volblocksize",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "parsed",
            "rawvalue",
            "value",
            "source",
            "source_info"
           ]
          },
          "key_format": {
           "type": "object",
           "properties": {
            "parsed": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "parsed",
             "title": "parsed",
             "_required_": false
            },
            "rawvalue": {
             "_name_": "rawvalue",
             "title": "rawvalue",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "value": {
             "_name_": "value",
             "title": "value",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source": {
             "_name_": "source",
             "title": "source",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source_info": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "source_info",
             "title": "source_info",
             "_required_": false
            }
           },
           "additionalProperties": false,
           "_name_": "key_format",
           "title": "key_format",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "parsed",
            "rawvalue",
            "value",
            "source",
            "source_info"
           ]
          },
          "encryption_algorithm": {
           "type": "object",
           "properties": {
            "parsed": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "parsed",
             "title": "parsed",
             "_required_": false
            },
            "rawvalue": {
             "_name_": "rawvalue",
             "title": "rawvalue",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "value": {
             "_name_": "value",
             "title": "value",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source": {
             "_name_": "source",
             "title": "source",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source_info": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "source_info",
             "title": "source_info",
             "_required_": false
            }
           },
           "additionalProperties": false,
           "_name_": "encryption_algorithm",
           "title": "encryption_algorithm",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "parsed",
            "rawvalue",
            "value",
            "source",
            "source_info"
           ]
          },
          "used": {
           "type": "object",
           "properties": {
            "parsed": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "parsed",
             "title": "parsed",
             "_required_": false
            },
            "rawvalue": {
             "_name_": "rawvalue",
             "title": "rawvalue",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "value": {
             "_name_": "value",
             "title": "value",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source": {
             "_name_": "source",
             "title": "source",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source_info": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "source_info",
             "title": "source_info",
             "_required_": false
            }
           },
           "additionalProperties": false,
           "_name_": "used",
           "title": "used",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "parsed",
            "rawvalue",
            "value",
            "source",
            "source_info"
           ]
          },
          "usedbychildren": {
           "type": "object",
           "properties": {
            "parsed": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "parsed",
             "title": "parsed",
             "_required_": false
            },
            "rawvalue": {
             "_name_": "rawvalue",
             "title": "rawvalue",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "value": {
             "_name_": "value",
             "title": "value",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source": {
             "_name_": "source",
             "title": "source",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source_info": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "source_info",
             "title": "source_info",
             "_required_": false
            }
           },
           "additionalProperties": false,
           "_name_": "usedbychildren",
           "title": "usedbychildren",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "parsed",
            "rawvalue",
            "value",
            "source",
            "source_info"
           ]
          },
          "usedbydataset": {
           "type": "object",
           "properties": {
            "parsed": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "parsed",
             "title": "parsed",
             "_required_": false
            },
            "rawvalue": {
             "_name_": "rawvalue",
             "title": "rawvalue",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "value": {
             "_name_": "value",
             "title": "value",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source": {
             "_name_": "source",
             "title": "source",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source_info": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "source_info",
             "title": "source_info",
             "_required_": false
            }
           },
           "additionalProperties": false,
           "_name_": "usedbydataset",
           "title": "usedbydataset",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "parsed",
            "rawvalue",
            "value",
            "source",
            "source_info"
           ]
          },
          "usedbyrefreservation": {
           "type": "object",
           "properties": {
            "parsed": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "parsed",
             "title": "parsed",
             "_required_": false
            },
            "rawvalue": {
             "_name_": "rawvalue",
             "title": "rawvalue",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "value": {
             "_name_": "value",
             "title": "value",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source": {
             "_name_": "source",
             "title": "source",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source_info": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "source_info",
             "title": "source_info",
             "_required_": false
            }
           },
           "additionalProperties": false,
           "_name_": "usedbyrefreservation",
           "title": "usedbyrefreservation",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "parsed",
            "rawvalue",
            "value",
            "source",
            "source_info"
           ]
          },
          "usedbysnapshots": {
           "type": "object",
           "properties": {
            "parsed": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "parsed",
             "title": "parsed",
             "_required_": false
            },
            "rawvalue": {
             "_name_": "rawvalue",
             "title": "rawvalue",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "value": {
             "_name_": "value",
             "title": "value",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source": {
             "_name_": "source",
             "title": "source",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source_info": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "source_info",
             "title": "source_info",
             "_required_": false
            }
           },
           "additionalProperties": false,
           "_name_": "usedbysnapshots",
           "title": "usedbysnapshots",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "parsed",
            "rawvalue",
            "value",
            "source",
            "source_info"
           ]
          },
          "available": {
           "type": "object",
           "properties": {
            "parsed": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "parsed",
             "title": "parsed",
             "_required_": false
            },
            "rawvalue": {
             "_name_": "rawvalue",
             "title": "rawvalue",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "value": {
             "_name_": "value",
             "title": "value",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source": {
             "_name_": "source",
             "title": "source",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source_info": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "source_info",
             "title": "source_info",
             "_required_": false
            }
           },
           "additionalProperties": false,
           "_name_": "available",
           "title": "available",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "parsed",
            "rawvalue",
            "value",
            "source",
            "source_info"
           ]
          },
          "special_small_block_size": {
           "type": "object",
           "properties": {
            "parsed": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "parsed",
             "title": "parsed",
             "_required_": false
            },
            "rawvalue": {
             "_name_": "rawvalue",
             "title": "rawvalue",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "value": {
             "_name_": "value",
             "title": "value",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source": {
             "_name_": "source",
             "title": "source",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source_info": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "source_info",
             "title": "source_info",
             "_required_": false
            }
           },
           "additionalProperties": false,
           "_name_": "special_small_block_size",
           "title": "special_small_block_size",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "parsed",
            "rawvalue",
            "value",
            "source",
            "source_info"
           ]
          },
          "pbkdf2iters": {
           "type": "object",
           "properties": {
            "parsed": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "parsed",
             "title": "parsed",
             "_required_": false
            },
            "rawvalue": {
             "_name_": "rawvalue",
             "title": "rawvalue",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "value": {
             "_name_": "value",
             "title": "value",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source": {
             "_name_": "source",
             "title": "source",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source_info": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "source_info",
             "title": "source_info",
             "_required_": false
            }
           },
           "additionalProperties": false,
           "_name_": "pbkdf2iters",
           "title": "pbkdf2iters",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "parsed",
            "rawvalue",
            "value",
            "source",
            "source_info"
           ]
          },
          "creation": {
           "type": "object",
           "properties": {
            "parsed": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "parsed",
             "title": "parsed",
             "_required_": false
            },
            "rawvalue": {
             "_name_": "rawvalue",
             "title": "rawvalue",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "value": {
             "_name_": "value",
             "title": "value",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source": {
             "_name_": "source",
             "title": "source",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source_info": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "source_info",
             "title": "source_info",
             "_required_": false
            }
           },
           "additionalProperties": false,
           "_name_": "creation",
           "title": "creation",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "parsed",
            "rawvalue",
            "value",
            "source",
            "source_info"
           ]
          },
          "snapdev": {
           "type": "object",
           "properties": {
            "parsed": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "parsed",
             "title": "parsed",
             "_required_": false
            },
            "rawvalue": {
             "_name_": "rawvalue",
             "title": "rawvalue",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "value": {
             "_name_": "value",
             "title": "value",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source": {
             "_name_": "source",
             "title": "source",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "source_info": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "integer"
              },
              {
               "type": "boolean"
              },
              {
               "type": "object"
              },
              {
               "type": "array"
              }
             ],
             "nullable": true,
             "_name_": "source_info",
             "title": "source_info",
             "_required_": false
            }
           },
           "additionalProperties": false,
           "_name_": "snapdev",
           "title": "snapdev",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "parsed",
            "rawvalue",
            "value",
            "source",
            "source_info"
           ]
          },
          "mountpoint": {
           "_name_": "mountpoint",
           "title": "mountpoint",
           "_required_": false,
           "type": [
            "string",
            "null"
           ]
          }
         },
         "additionalProperties": false,
         "_name_": "pool_dataset_entry",
         "title": "pool_dataset_entry",
         "default": {},
         "_required_": false,
         "_attrs_order_": [
          "id",
          "type",
          "name",
          "pool",
          "encrypted",
          "encryption_root",
          "key_loaded",
          "children",
          "user_properties",
          "locked",
          "comments",
          "quota_warning",
          "quota_critical",
          "refquota_warning",
          "refquota_critical",
          "managedby",
          "deduplication",
          "aclmode",
          "acltype",
          "xattr",
          "atime",
          "casesensitivity",
          "checksum",
          "exec",
          "sync",
          "compression",
          "compressratio",
          "origin",
          "quota",
          "refquota",
          "reservation",
          "refreservation",
          "copies",
          "snapdir",
          "readonly",
          "recordsize",
          "sparse",
          "volsize",
          "volblocksize",
          "key_format",
          "encryption_algorithm",
          "used",
          "usedbychildren",
          "usedbydataset",
          "usedbyrefreservation",
          "usedbysnapshots",
          "available",
          "special_small_block_size",
          "pbkdf2iters",
          "creation",
          "snapdev",
          "mountpoint"
         ]
        }
       ],
       "nullable": false,
       "_name_": "query_result",
       "description": null
      },
      "pool_dataset_create": {
       "type": "object",
       "properties": {
        "name": {
         "_name_": "name",
         "title": "name",
         "type": "string",
         "description": "`encryption` when enabled will create an ZFS encrypted root dataset for `name` pool.\nThere is 1 case where ZFS encryption is not allowed for a dataset:\n1) If the parent dataset is encrypted with a passphrase and `name` is being created\n   with a key for encrypting the dataset.\n`encryption_options` specifies configuration for encryption of dataset for `name` pool.\n`encryption_options.passphrase` must be specified if encryption for dataset is desired with a passphrase\nas a key.\nOtherwise a hex encoded key can be specified by providing `encryption_options.key`.\n`encryption_options.generate_key` when enabled automatically generates the key to be used\nfor dataset encryption."
        },
        "type": {
         "_name_": "type",
         "title": "type",
         "default": "FILESYSTEM",
         "type": "string",
         "enum": [
          "FILESYSTEM",
          "VOLUME"
         ]
        },
        "volsize": {
         "type": "integer",
         "_name_": "volsize",
         "title": "volsize",
         "description": "`volsize` is required for type=VOLUME and is supposed to be a multiple of the block size."
        },
        "volblocksize": {
         "_name_": "volblocksize",
         "title": "volblocksize",
         "type": "string",
         "enum": [
          "512",
          "512B",
          "1K",
          "2K",
          "4K",
          "8K",
          "16K",
          "32K",
          "64K",
          "128K"
         ],
         "description": "`sparse` and `volblocksize` are only used for type=VOLUME."
        },
        "sparse": {
         "type": "boolean",
         "_name_": "sparse",
         "title": "sparse",
         "description": "`sparse` and `volblocksize` are only used for type=VOLUME."
        },
        "force_size": {
         "type": "boolean",
         "_name_": "force_size",
         "title": "force_size"
        },
        "comments": {
         "_name_": "comments",
         "title": "comments",
         "nullable": false,
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "string",
           "enum": [
            "INHERIT"
           ]
          }
         ]
        },
        "sync": {
         "_name_": "sync",
         "title": "sync",
         "enum": [
          "STANDARD",
          "ALWAYS",
          "DISABLED"
         ],
         "nullable": false,
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "string",
           "enum": [
            "INHERIT"
           ]
          }
         ]
        },
        "snapdev": {
         "_name_": "snapdev",
         "title": "snapdev",
         "enum": [
          "HIDDEN",
          "VISIBLE"
         ],
         "nullable": false,
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "string",
           "enum": [
            "INHERIT"
           ]
          }
         ]
        },
        "compression": {
         "_name_": "compression",
         "title": "compression",
         "enum": [
          "ON",
          "OFF",
          "LZ4",
          "GZIP",
          "GZIP-1",
          "GZIP-9",
          "ZSTD",
          "ZSTD-FAST",
          "ZLE",
          "LZJB",
          "ZSTD-1",
          "ZSTD-2",
          "ZSTD-3",
          "ZSTD-4",
          "ZSTD-5",
          "ZSTD-6",
          "ZSTD-7",
          "ZSTD-8",
          "ZSTD-9",
          "ZSTD-10",
          "ZSTD-11",
          "ZSTD-12",
          "ZSTD-13",
          "ZSTD-14",
          "ZSTD-15",
          "ZSTD-16",
          "ZSTD-17",
          "ZSTD-18",
          "ZSTD-19",
          "ZSTD-FAST-1",
          "ZSTD-FAST-2",
          "ZSTD-FAST-3",
          "ZSTD-FAST-4",
          "ZSTD-FAST-5",
          "ZSTD-FAST-6",
          "ZSTD-FAST-7",
          "ZSTD-FAST-8",
          "ZSTD-FAST-9",
          "ZSTD-FAST-10",
          "ZSTD-FAST-20",
          "ZSTD-FAST-30",
          "ZSTD-FAST-40",
          "ZSTD-FAST-50",
          "ZSTD-FAST-60",
          "ZSTD-FAST-70",
          "ZSTD-FAST-80",
          "ZSTD-FAST-90",
          "ZSTD-FAST-100",
          "ZSTD-FAST-500",
          "ZSTD-FAST-1000"
         ],
         "nullable": false,
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "string",
           "enum": [
            "INHERIT"
           ]
          }
         ]
        },
        "atime": {
         "_name_": "atime",
         "title": "atime",
         "enum": [
          "ON",
          "OFF"
         ],
         "nullable": false,
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "string",
           "enum": [
            "INHERIT"
           ]
          }
         ]
        },
        "exec": {
         "_name_": "exec",
         "title": "exec",
         "enum": [
          "ON",
          "OFF"
         ],
         "nullable": false,
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "string",
           "enum": [
            "INHERIT"
           ]
          }
         ]
        },
        "managedby": {
         "_name_": "managedby",
         "title": "managedby",
         "nullable": false,
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "string",
           "enum": [
            "INHERIT"
           ]
          }
         ]
        },
        "quota": {
         "type": "integer",
         "_name_": "quota",
         "title": "quota",
         "nullable": true
        },
        "quota_warning": {
         "_name_": "quota_warning",
         "title": "quota_warning",
         "nullable": false,
         "anyOf": [
          {
           "type": "integer"
          },
          {
           "type": "string",
           "enum": [
            "INHERIT"
           ]
          }
         ]
        },
        "quota_critical": {
         "_name_": "quota_critical",
         "title": "quota_critical",
         "nullable": false,
         "anyOf": [
          {
           "type": "integer"
          },
          {
           "type": "string",
           "enum": [
            "INHERIT"
           ]
          }
         ]
        },
        "refquota": {
         "type": "integer",
         "_name_": "refquota",
         "title": "refquota",
         "nullable": true
        },
        "refquota_warning": {
         "_name_": "refquota_warning",
         "title": "refquota_warning",
         "nullable": false,
         "anyOf": [
          {
           "type": "integer"
          },
          {
           "type": "string",
           "enum": [
            "INHERIT"
           ]
          }
         ]
        },
        "refquota_critical": {
         "_name_": "refquota_critical",
         "title": "refquota_critical",
         "nullable": false,
         "anyOf": [
          {
           "type": "integer"
          },
          {
           "type": "string",
           "enum": [
            "INHERIT"
           ]
          }
         ]
        },
        "reservation": {
         "type": "integer",
         "_name_": "reservation",
         "title": "reservation"
        },
        "refreservation": {
         "type": "integer",
         "_name_": "refreservation",
         "title": "refreservation"
        },
        "special_small_block_size": {
         "_name_": "special_small_block_size",
         "title": "special_small_block_size",
         "nullable": false,
         "anyOf": [
          {
           "type": "integer"
          },
          {
           "type": "string",
           "enum": [
            "INHERIT"
           ]
          }
         ]
        },
        "copies": {
         "_name_": "copies",
         "title": "copies",
         "nullable": false,
         "anyOf": [
          {
           "type": "integer"
          },
          {
           "type": "string",
           "enum": [
            "INHERIT"
           ]
          }
         ]
        },
        "snapdir": {
         "_name_": "snapdir",
         "title": "snapdir",
         "enum": [
          "DISABLED",
          "VISIBLE",
          "HIDDEN"
         ],
         "nullable": false,
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "string",
           "enum": [
            "INHERIT"
           ]
          }
         ]
        },
        "deduplication": {
         "_name_": "deduplication",
         "title": "deduplication",
         "enum": [
          "ON",
          "VERIFY",
          "OFF"
         ],
         "nullable": false,
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "string",
           "enum": [
            "INHERIT"
           ]
          }
         ]
        },
        "checksum": {
         "_name_": "checksum",
         "title": "checksum",
         "enum": [
          "ON",
          "OFF",
          "FLETCHER2",
          "FLETCHER4",
          "SHA256",
          "SHA512",
          "SKEIN",
          "EDONR",
          "BLAKE3"
         ],
         "nullable": false,
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "string",
           "enum": [
            "INHERIT"
           ]
          }
         ]
        },
        "readonly": {
         "_name_": "readonly",
         "title": "readonly",
         "enum": [
          "ON",
          "OFF"
         ],
         "nullable": false,
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "string",
           "enum": [
            "INHERIT"
           ]
          }
         ]
        },
        "recordsize": {
         "_name_": "recordsize",
         "title": "recordsize",
         "nullable": false,
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "string",
           "enum": [
            "INHERIT"
           ]
          }
         ]
        },
        "casesensitivity": {
         "_name_": "casesensitivity",
         "title": "casesensitivity",
         "enum": [
          "SENSITIVE",
          "INSENSITIVE"
         ],
         "nullable": false,
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "string",
           "enum": [
            "INHERIT"
           ]
          }
         ]
        },
        "aclmode": {
         "_name_": "aclmode",
         "title": "aclmode",
         "enum": [
          "PASSTHROUGH",
          "RESTRICTED",
          "DISCARD"
         ],
         "nullable": false,
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "string",
           "enum": [
            "INHERIT"
           ]
          }
         ]
        },
        "acltype": {
         "_name_": "acltype",
         "title": "acltype",
         "enum": [
          "OFF",
          "NFSV4",
          "POSIX"
         ],
         "nullable": false,
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "string",
           "enum": [
            "INHERIT"
           ]
          }
         ]
        },
        "share_type": {
         "_name_": "share_type",
         "title": "share_type",
         "default": "GENERIC",
         "type": "string",
         "enum": [
          "GENERIC",
          "MULTIPROTOCOL",
          "NFS",
          "SMB",
          "APPS"
         ]
        },
        "encryption_options": {
         "type": "object",
         "properties": {
          "generate_key": {
           "type": "boolean",
           "_name_": "generate_key",
           "title": "generate_key",
           "default": false
          },
          "pbkdf2iters": {
           "type": "integer",
           "_name_": "pbkdf2iters",
           "title": "pbkdf2iters",
           "default": 350000
          },
          "algorithm": {
           "_name_": "algorithm",
           "title": "algorithm",
           "default": "AES-256-GCM",
           "type": "string",
           "enum": [
            "AES-128-CCM",
            "AES-192-CCM",
            "AES-256-CCM",
            "AES-128-GCM",
            "AES-192-GCM",
            "AES-256-GCM"
           ]
          },
          "passphrase": {
           "_name_": "passphrase",
           "title": "passphrase",
           "default": null,
           "type": "string",
           "nullable": true
          },
          "key": {
           "_name_": "key",
           "title": "key",
           "default": null,
           "type": "string",
           "nullable": true
          }
         },
         "additionalProperties": false,
         "_name_": "encryption_options",
         "title": "encryption_options",
         "default": {},
         "_attrs_order_": [
          "generate_key",
          "pbkdf2iters",
          "algorithm",
          "passphrase",
          "key"
         ],
         "description": "`encryption_options` specifies configuration for encryption of dataset for `name` pool.\n`encryption_options.passphrase` must be specified if encryption for dataset is desired with a passphrase\nas a key.\nOtherwise a hex encoded key can be specified by providing `encryption_options.key`.\n`encryption_options.generate_key` when enabled automatically generates the key to be used\nfor dataset encryption."
        },
        "encryption": {
         "type": "boolean",
         "_name_": "encryption",
         "title": "encryption",
         "default": false,
         "description": "`encryption` when enabled will create an ZFS encrypted root dataset for `name` pool.\nThere is 1 case where ZFS encryption is not allowed for a dataset:\n1) If the parent dataset is encrypted with a passphrase and `name` is being created\n   with a key for encrypting the dataset."
        },
        "inherit_encryption": {
         "type": "boolean",
         "_name_": "inherit_encryption",
         "title": "inherit_encryption",
         "default": true
        },
        "user_properties": {
         "_name_": "user_properties",
         "title": "user_properties",
         "default": [],
         "type": "array",
         "items": {
          "type": "object",
          "properties": {
           "key": {
            "_name_": "key",
            "title": "key",
            "_required_": true,
            "type": "string"
           },
           "value": {
            "_name_": "value",
            "title": "value",
            "_required_": true,
            "type": "string"
           }
          },
          "additionalProperties": false,
          "_name_": "user_property",
          "title": "user_property",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "key",
           "value"
          ]
         }
        },
        "create_ancestors": {
         "type": "boolean",
         "_name_": "create_ancestors",
         "title": "create_ancestors",
         "default": false
        }
       },
       "additionalProperties": false,
       "_name_": "pool_dataset_create",
       "title": "pool_dataset_create",
       "default": {},
       "_attrs_order_": [
        "name",
        "type",
        "volsize",
        "volblocksize",
        "sparse",
        "force_size",
        "comments",
        "sync",
        "snapdev",
        "compression",
        "atime",
        "exec",
        "managedby",
        "quota",
        "quota_warning",
        "quota_critical",
        "refquota",
        "refquota_warning",
        "refquota_critical",
        "reservation",
        "refreservation",
        "special_small_block_size",
        "copies",
        "snapdir",
        "deduplication",
        "checksum",
        "readonly",
        "recordsize",
        "casesensitivity",
        "aclmode",
        "acltype",
        "share_type",
        "encryption_options",
        "encryption",
        "inherit_encryption",
        "user_properties",
        "create_ancestors"
       ]
      },
      "return_schema_of_pool_dataset_create": {
       "type": "object",
       "properties": {
        "id": {
         "_name_": "id",
         "title": "id",
         "type": "string"
        },
        "type": {
         "_name_": "type",
         "title": "type",
         "type": "string"
        },
        "name": {
         "_name_": "name",
         "title": "name",
         "type": "string",
         "description": "`encryption` when enabled will create an ZFS encrypted root dataset for `name` pool.\nThere is 1 case where ZFS encryption is not allowed for a dataset:\n1) If the parent dataset is encrypted with a passphrase and `name` is being created\n   with a key for encrypting the dataset.\n`encryption_options` specifies configuration for encryption of dataset for `name` pool.\n`encryption_options.passphrase` must be specified if encryption for dataset is desired with a passphrase\nas a key.\nOtherwise a hex encoded key can be specified by providing `encryption_options.key`.\n`encryption_options.generate_key` when enabled automatically generates the key to be used\nfor dataset encryption."
        },
        "pool": {
         "_name_": "pool",
         "title": "pool",
         "type": "string"
        },
        "encrypted": {
         "type": "boolean",
         "_name_": "encrypted",
         "title": "encrypted"
        },
        "encryption_root": {
         "_name_": "encryption_root",
         "title": "encryption_root",
         "type": "string",
         "nullable": true
        },
        "key_loaded": {
         "type": "boolean",
         "_name_": "key_loaded",
         "title": "key_loaded",
         "nullable": true
        },
        "children": {
         "_name_": "children",
         "title": "children",
         "default": [],
         "type": "array",
         "items": {}
        },
        "user_properties": {
         "type": "object",
         "properties": {},
         "additionalProperties": true,
         "_name_": "user_properties",
         "title": "user_properties",
         "default": {},
         "_attrs_order_": []
        },
        "locked": {
         "type": "boolean",
         "_name_": "locked",
         "title": "locked"
        },
        "comments": {
         "type": "object",
         "properties": {
          "parsed": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "parsed",
           "title": "parsed"
          },
          "rawvalue": {
           "_name_": "rawvalue",
           "title": "rawvalue",
           "type": "string",
           "nullable": true
          },
          "value": {
           "_name_": "value",
           "title": "value",
           "type": "string",
           "nullable": true
          },
          "source": {
           "_name_": "source",
           "title": "source",
           "type": "string",
           "nullable": true
          },
          "source_info": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "source_info",
           "title": "source_info"
          }
         },
         "additionalProperties": false,
         "_name_": "comments",
         "title": "comments",
         "default": {},
         "_attrs_order_": [
          "parsed",
          "rawvalue",
          "value",
          "source",
          "source_info"
         ]
        },
        "quota_warning": {
         "type": "object",
         "properties": {
          "parsed": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "parsed",
           "title": "parsed"
          },
          "rawvalue": {
           "_name_": "rawvalue",
           "title": "rawvalue",
           "type": "string",
           "nullable": true
          },
          "value": {
           "_name_": "value",
           "title": "value",
           "type": "string",
           "nullable": true
          },
          "source": {
           "_name_": "source",
           "title": "source",
           "type": "string",
           "nullable": true
          },
          "source_info": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "source_info",
           "title": "source_info"
          }
         },
         "additionalProperties": false,
         "_name_": "quota_warning",
         "title": "quota_warning",
         "default": {},
         "_attrs_order_": [
          "parsed",
          "rawvalue",
          "value",
          "source",
          "source_info"
         ]
        },
        "quota_critical": {
         "type": "object",
         "properties": {
          "parsed": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "parsed",
           "title": "parsed"
          },
          "rawvalue": {
           "_name_": "rawvalue",
           "title": "rawvalue",
           "type": "string",
           "nullable": true
          },
          "value": {
           "_name_": "value",
           "title": "value",
           "type": "string",
           "nullable": true
          },
          "source": {
           "_name_": "source",
           "title": "source",
           "type": "string",
           "nullable": true
          },
          "source_info": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "source_info",
           "title": "source_info"
          }
         },
         "additionalProperties": false,
         "_name_": "quota_critical",
         "title": "quota_critical",
         "default": {},
         "_attrs_order_": [
          "parsed",
          "rawvalue",
          "value",
          "source",
          "source_info"
         ]
        },
        "refquota_warning": {
         "type": "object",
         "properties": {
          "parsed": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "parsed",
           "title": "parsed"
          },
          "rawvalue": {
           "_name_": "rawvalue",
           "title": "rawvalue",
           "type": "string",
           "nullable": true
          },
          "value": {
           "_name_": "value",
           "title": "value",
           "type": "string",
           "nullable": true
          },
          "source": {
           "_name_": "source",
           "title": "source",
           "type": "string",
           "nullable": true
          },
          "source_info": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "source_info",
           "title": "source_info"
          }
         },
         "additionalProperties": false,
         "_name_": "refquota_warning",
         "title": "refquota_warning",
         "default": {},
         "_attrs_order_": [
          "parsed",
          "rawvalue",
          "value",
          "source",
          "source_info"
         ]
        },
        "refquota_critical": {
         "type": "object",
         "properties": {
          "parsed": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "parsed",
           "title": "parsed"
          },
          "rawvalue": {
           "_name_": "rawvalue",
           "title": "rawvalue",
           "type": "string",
           "nullable": true
          },
          "value": {
           "_name_": "value",
           "title": "value",
           "type": "string",
           "nullable": true
          },
          "source": {
           "_name_": "source",
           "title": "source",
           "type": "string",
           "nullable": true
          },
          "source_info": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "source_info",
           "title": "source_info"
          }
         },
         "additionalProperties": false,
         "_name_": "refquota_critical",
         "title": "refquota_critical",
         "default": {},
         "_attrs_order_": [
          "parsed",
          "rawvalue",
          "value",
          "source",
          "source_info"
         ]
        },
        "managedby": {
         "type": "object",
         "properties": {
          "parsed": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "parsed",
           "title": "parsed"
          },
          "rawvalue": {
           "_name_": "rawvalue",
           "title": "rawvalue",
           "type": "string",
           "nullable": true
          },
          "value": {
           "_name_": "value",
           "title": "value",
           "type": "string",
           "nullable": true
          },
          "source": {
           "_name_": "source",
           "title": "source",
           "type": "string",
           "nullable": true
          },
          "source_info": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "source_info",
           "title": "source_info"
          }
         },
         "additionalProperties": false,
         "_name_": "managedby",
         "title": "managedby",
         "default": {},
         "_attrs_order_": [
          "parsed",
          "rawvalue",
          "value",
          "source",
          "source_info"
         ]
        },
        "deduplication": {
         "type": "object",
         "properties": {
          "parsed": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "parsed",
           "title": "parsed"
          },
          "rawvalue": {
           "_name_": "rawvalue",
           "title": "rawvalue",
           "type": "string",
           "nullable": true
          },
          "value": {
           "_name_": "value",
           "title": "value",
           "type": "string",
           "nullable": true
          },
          "source": {
           "_name_": "source",
           "title": "source",
           "type": "string",
           "nullable": true
          },
          "source_info": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "source_info",
           "title": "source_info"
          }
         },
         "additionalProperties": false,
         "_name_": "deduplication",
         "title": "deduplication",
         "default": {},
         "_attrs_order_": [
          "parsed",
          "rawvalue",
          "value",
          "source",
          "source_info"
         ]
        },
        "aclmode": {
         "type": "object",
         "properties": {
          "parsed": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "parsed",
           "title": "parsed"
          },
          "rawvalue": {
           "_name_": "rawvalue",
           "title": "rawvalue",
           "type": "string",
           "nullable": true
          },
          "value": {
           "_name_": "value",
           "title": "value",
           "type": "string",
           "nullable": true
          },
          "source": {
           "_name_": "source",
           "title": "source",
           "type": "string",
           "nullable": true
          },
          "source_info": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "source_info",
           "title": "source_info"
          }
         },
         "additionalProperties": false,
         "_name_": "aclmode",
         "title": "aclmode",
         "default": {},
         "_attrs_order_": [
          "parsed",
          "rawvalue",
          "value",
          "source",
          "source_info"
         ]
        },
        "acltype": {
         "type": "object",
         "properties": {
          "parsed": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "parsed",
           "title": "parsed"
          },
          "rawvalue": {
           "_name_": "rawvalue",
           "title": "rawvalue",
           "type": "string",
           "nullable": true
          },
          "value": {
           "_name_": "value",
           "title": "value",
           "type": "string",
           "nullable": true
          },
          "source": {
           "_name_": "source",
           "title": "source",
           "type": "string",
           "nullable": true
          },
          "source_info": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "source_info",
           "title": "source_info"
          }
         },
         "additionalProperties": false,
         "_name_": "acltype",
         "title": "acltype",
         "default": {},
         "_attrs_order_": [
          "parsed",
          "rawvalue",
          "value",
          "source",
          "source_info"
         ]
        },
        "xattr": {
         "type": "object",
         "properties": {
          "parsed": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "parsed",
           "title": "parsed"
          },
          "rawvalue": {
           "_name_": "rawvalue",
           "title": "rawvalue",
           "type": "string",
           "nullable": true
          },
          "value": {
           "_name_": "value",
           "title": "value",
           "type": "string",
           "nullable": true
          },
          "source": {
           "_name_": "source",
           "title": "source",
           "type": "string",
           "nullable": true
          },
          "source_info": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "source_info",
           "title": "source_info"
          }
         },
         "additionalProperties": false,
         "_name_": "xattr",
         "title": "xattr",
         "default": {},
         "_attrs_order_": [
          "parsed",
          "rawvalue",
          "value",
          "source",
          "source_info"
         ]
        },
        "atime": {
         "type": "object",
         "properties": {
          "parsed": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "parsed",
           "title": "parsed"
          },
          "rawvalue": {
           "_name_": "rawvalue",
           "title": "rawvalue",
           "type": "string",
           "nullable": true
          },
          "value": {
           "_name_": "value",
           "title": "value",
           "type": "string",
           "nullable": true
          },
          "source": {
           "_name_": "source",
           "title": "source",
           "type": "string",
           "nullable": true
          },
          "source_info": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "source_info",
           "title": "source_info"
          }
         },
         "additionalProperties": false,
         "_name_": "atime",
         "title": "atime",
         "default": {},
         "_attrs_order_": [
          "parsed",
          "rawvalue",
          "value",
          "source",
          "source_info"
         ]
        },
        "casesensitivity": {
         "type": "object",
         "properties": {
          "parsed": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "parsed",
           "title": "parsed"
          },
          "rawvalue": {
           "_name_": "rawvalue",
           "title": "rawvalue",
           "type": "string",
           "nullable": true
          },
          "value": {
           "_name_": "value",
           "title": "value",
           "type": "string",
           "nullable": true
          },
          "source": {
           "_name_": "source",
           "title": "source",
           "type": "string",
           "nullable": true
          },
          "source_info": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "source_info",
           "title": "source_info"
          }
         },
         "additionalProperties": false,
         "_name_": "casesensitivity",
         "title": "casesensitivity",
         "default": {},
         "_attrs_order_": [
          "parsed",
          "rawvalue",
          "value",
          "source",
          "source_info"
         ]
        },
        "checksum": {
         "type": "object",
         "properties": {
          "parsed": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "parsed",
           "title": "parsed"
          },
          "rawvalue": {
           "_name_": "rawvalue",
           "title": "rawvalue",
           "type": "string",
           "nullable": true
          },
          "value": {
           "_name_": "value",
           "title": "value",
           "type": "string",
           "nullable": true
          },
          "source": {
           "_name_": "source",
           "title": "source",
           "type": "string",
           "nullable": true
          },
          "source_info": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "source_info",
           "title": "source_info"
          }
         },
         "additionalProperties": false,
         "_name_": "checksum",
         "title": "checksum",
         "default": {},
         "_attrs_order_": [
          "parsed",
          "rawvalue",
          "value",
          "source",
          "source_info"
         ]
        },
        "exec": {
         "type": "object",
         "properties": {
          "parsed": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "parsed",
           "title": "parsed"
          },
          "rawvalue": {
           "_name_": "rawvalue",
           "title": "rawvalue",
           "type": "string",
           "nullable": true
          },
          "value": {
           "_name_": "value",
           "title": "value",
           "type": "string",
           "nullable": true
          },
          "source": {
           "_name_": "source",
           "title": "source",
           "type": "string",
           "nullable": true
          },
          "source_info": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "source_info",
           "title": "source_info"
          }
         },
         "additionalProperties": false,
         "_name_": "exec",
         "title": "exec",
         "default": {},
         "_attrs_order_": [
          "parsed",
          "rawvalue",
          "value",
          "source",
          "source_info"
         ]
        },
        "sync": {
         "type": "object",
         "properties": {
          "parsed": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "parsed",
           "title": "parsed"
          },
          "rawvalue": {
           "_name_": "rawvalue",
           "title": "rawvalue",
           "type": "string",
           "nullable": true
          },
          "value": {
           "_name_": "value",
           "title": "value",
           "type": "string",
           "nullable": true
          },
          "source": {
           "_name_": "source",
           "title": "source",
           "type": "string",
           "nullable": true
          },
          "source_info": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "source_info",
           "title": "source_info"
          }
         },
         "additionalProperties": false,
         "_name_": "sync",
         "title": "sync",
         "default": {},
         "_attrs_order_": [
          "parsed",
          "rawvalue",
          "value",
          "source",
          "source_info"
         ]
        },
        "compression": {
         "type": "object",
         "properties": {
          "parsed": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "parsed",
           "title": "parsed"
          },
          "rawvalue": {
           "_name_": "rawvalue",
           "title": "rawvalue",
           "type": "string",
           "nullable": true
          },
          "value": {
           "_name_": "value",
           "title": "value",
           "type": "string",
           "nullable": true
          },
          "source": {
           "_name_": "source",
           "title": "source",
           "type": "string",
           "nullable": true
          },
          "source_info": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "source_info",
           "title": "source_info"
          }
         },
         "additionalProperties": false,
         "_name_": "compression",
         "title": "compression",
         "default": {},
         "_attrs_order_": [
          "parsed",
          "rawvalue",
          "value",
          "source",
          "source_info"
         ]
        },
        "compressratio": {
         "type": "object",
         "properties": {
          "parsed": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "parsed",
           "title": "parsed"
          },
          "rawvalue": {
           "_name_": "rawvalue",
           "title": "rawvalue",
           "type": "string",
           "nullable": true
          },
          "value": {
           "_name_": "value",
           "title": "value",
           "type": "string",
           "nullable": true
          },
          "source": {
           "_name_": "source",
           "title": "source",
           "type": "string",
           "nullable": true
          },
          "source_info": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "source_info",
           "title": "source_info"
          }
         },
         "additionalProperties": false,
         "_name_": "compressratio",
         "title": "compressratio",
         "default": {},
         "_attrs_order_": [
          "parsed",
          "rawvalue",
          "value",
          "source",
          "source_info"
         ]
        },
        "origin": {
         "type": "object",
         "properties": {
          "parsed": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "parsed",
           "title": "parsed"
          },
          "rawvalue": {
           "_name_": "rawvalue",
           "title": "rawvalue",
           "type": "string",
           "nullable": true
          },
          "value": {
           "_name_": "value",
           "title": "value",
           "type": "string",
           "nullable": true
          },
          "source": {
           "_name_": "source",
           "title": "source",
           "type": "string",
           "nullable": true
          },
          "source_info": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "source_info",
           "title": "source_info"
          }
         },
         "additionalProperties": false,
         "_name_": "origin",
         "title": "origin",
         "default": {},
         "_attrs_order_": [
          "parsed",
          "rawvalue",
          "value",
          "source",
          "source_info"
         ]
        },
        "quota": {
         "type": "object",
         "properties": {
          "parsed": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "parsed",
           "title": "parsed"
          },
          "rawvalue": {
           "_name_": "rawvalue",
           "title": "rawvalue",
           "type": "string",
           "nullable": true
          },
          "value": {
           "_name_": "value",
           "title": "value",
           "type": "string",
           "nullable": true
          },
          "source": {
           "_name_": "source",
           "title": "source",
           "type": "string",
           "nullable": true
          },
          "source_info": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "source_info",
           "title": "source_info"
          }
         },
         "additionalProperties": false,
         "_name_": "quota",
         "title": "quota",
         "default": {},
         "_attrs_order_": [
          "parsed",
          "rawvalue",
          "value",
          "source",
          "source_info"
         ]
        },
        "refquota": {
         "type": "object",
         "properties": {
          "parsed": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "parsed",
           "title": "parsed"
          },
          "rawvalue": {
           "_name_": "rawvalue",
           "title": "rawvalue",
           "type": "string",
           "nullable": true
          },
          "value": {
           "_name_": "value",
           "title": "value",
           "type": "string",
           "nullable": true
          },
          "source": {
           "_name_": "source",
           "title": "source",
           "type": "string",
           "nullable": true
          },
          "source_info": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "source_info",
           "title": "source_info"
          }
         },
         "additionalProperties": false,
         "_name_": "refquota",
         "title": "refquota",
         "default": {},
         "_attrs_order_": [
          "parsed",
          "rawvalue",
          "value",
          "source",
          "source_info"
         ]
        },
        "reservation": {
         "type": "object",
         "properties": {
          "parsed": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "parsed",
           "title": "parsed"
          },
          "rawvalue": {
           "_name_": "rawvalue",
           "title": "rawvalue",
           "type": "string",
           "nullable": true
          },
          "value": {
           "_name_": "value",
           "title": "value",
           "type": "string",
           "nullable": true
          },
          "source": {
           "_name_": "source",
           "title": "source",
           "type": "string",
           "nullable": true
          },
          "source_info": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "source_info",
           "title": "source_info"
          }
         },
         "additionalProperties": false,
         "_name_": "reservation",
         "title": "reservation",
         "default": {},
         "_attrs_order_": [
          "parsed",
          "rawvalue",
          "value",
          "source",
          "source_info"
         ]
        },
        "refreservation": {
         "type": "object",
         "properties": {
          "parsed": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "parsed",
           "title": "parsed"
          },
          "rawvalue": {
           "_name_": "rawvalue",
           "title": "rawvalue",
           "type": "string",
           "nullable": true
          },
          "value": {
           "_name_": "value",
           "title": "value",
           "type": "string",
           "nullable": true
          },
          "source": {
           "_name_": "source",
           "title": "source",
           "type": "string",
           "nullable": true
          },
          "source_info": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "source_info",
           "title": "source_info"
          }
         },
         "additionalProperties": false,
         "_name_": "refreservation",
         "title": "refreservation",
         "default": {},
         "_attrs_order_": [
          "parsed",
          "rawvalue",
          "value",
          "source",
          "source_info"
         ]
        },
        "copies": {
         "type": "object",
         "properties": {
          "parsed": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "parsed",
           "title": "parsed"
          },
          "rawvalue": {
           "_name_": "rawvalue",
           "title": "rawvalue",
           "type": "string",
           "nullable": true
          },
          "value": {
           "_name_": "value",
           "title": "value",
           "type": "string",
           "nullable": true
          },
          "source": {
           "_name_": "source",
           "title": "source",
           "type": "string",
           "nullable": true
          },
          "source_info": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "source_info",
           "title": "source_info"
          }
         },
         "additionalProperties": false,
         "_name_": "copies",
         "title": "copies",
         "default": {},
         "_attrs_order_": [
          "parsed",
          "rawvalue",
          "value",
          "source",
          "source_info"
         ]
        },
        "snapdir": {
         "type": "object",
         "properties": {
          "parsed": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "parsed",
           "title": "parsed"
          },
          "rawvalue": {
           "_name_": "rawvalue",
           "title": "rawvalue",
           "type": "string",
           "nullable": true
          },
          "value": {
           "_name_": "value",
           "title": "value",
           "type": "string",
           "nullable": true
          },
          "source": {
           "_name_": "source",
           "title": "source",
           "type": "string",
           "nullable": true
          },
          "source_info": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "source_info",
           "title": "source_info"
          }
         },
         "additionalProperties": false,
         "_name_": "snapdir",
         "title": "snapdir",
         "default": {},
         "_attrs_order_": [
          "parsed",
          "rawvalue",
          "value",
          "source",
          "source_info"
         ]
        },
        "readonly": {
         "type": "object",
         "properties": {
          "parsed": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "parsed",
           "title": "parsed"
          },
          "rawvalue": {
           "_name_": "rawvalue",
           "title": "rawvalue",
           "type": "string",
           "nullable": true
          },
          "value": {
           "_name_": "value",
           "title": "value",
           "type": "string",
           "nullable": true
          },
          "source": {
           "_name_": "source",
           "title": "source",
           "type": "string",
           "nullable": true
          },
          "source_info": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "source_info",
           "title": "source_info"
          }
         },
         "additionalProperties": false,
         "_name_": "readonly",
         "title": "readonly",
         "default": {},
         "_attrs_order_": [
          "parsed",
          "rawvalue",
          "value",
          "source",
          "source_info"
         ]
        },
        "recordsize": {
         "type": "object",
         "properties": {
          "parsed": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "parsed",
           "title": "parsed"
          },
          "rawvalue": {
           "_name_": "rawvalue",
           "title": "rawvalue",
           "type": "string",
           "nullable": true
          },
          "value": {
           "_name_": "value",
           "title": "value",
           "type": "string",
           "nullable": true
          },
          "source": {
           "_name_": "source",
           "title": "source",
           "type": "string",
           "nullable": true
          },
          "source_info": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "source_info",
           "title": "source_info"
          }
         },
         "additionalProperties": false,
         "_name_": "recordsize",
         "title": "recordsize",
         "default": {},
         "_attrs_order_": [
          "parsed",
          "rawvalue",
          "value",
          "source",
          "source_info"
         ]
        },
        "sparse": {
         "type": "object",
         "properties": {
          "parsed": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "parsed",
           "title": "parsed"
          },
          "rawvalue": {
           "_name_": "rawvalue",
           "title": "rawvalue",
           "type": "string",
           "nullable": true
          },
          "value": {
           "_name_": "value",
           "title": "value",
           "type": "string",
           "nullable": true
          },
          "source": {
           "_name_": "source",
           "title": "source",
           "type": "string",
           "nullable": true
          },
          "source_info": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "source_info",
           "title": "source_info"
          }
         },
         "additionalProperties": false,
         "_name_": "sparse",
         "title": "sparse",
         "default": {},
         "_attrs_order_": [
          "parsed",
          "rawvalue",
          "value",
          "source",
          "source_info"
         ],
         "description": "`sparse` and `volblocksize` are only used for type=VOLUME."
        },
        "volsize": {
         "type": "object",
         "properties": {
          "parsed": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "parsed",
           "title": "parsed"
          },
          "rawvalue": {
           "_name_": "rawvalue",
           "title": "rawvalue",
           "type": "string",
           "nullable": true
          },
          "value": {
           "_name_": "value",
           "title": "value",
           "type": "string",
           "nullable": true
          },
          "source": {
           "_name_": "source",
           "title": "source",
           "type": "string",
           "nullable": true
          },
          "source_info": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "source_info",
           "title": "source_info"
          }
         },
         "additionalProperties": false,
         "_name_": "volsize",
         "title": "volsize",
         "default": {},
         "_attrs_order_": [
          "parsed",
          "rawvalue",
          "value",
          "source",
          "source_info"
         ],
         "description": "`volsize` is required for type=VOLUME and is supposed to be a multiple of the block size."
        },
        "volblocksize": {
         "type": "object",
         "properties": {
          "parsed": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "parsed",
           "title": "parsed"
          },
          "rawvalue": {
           "_name_": "rawvalue",
           "title": "rawvalue",
           "type": "string",
           "nullable": true
          },
          "value": {
           "_name_": "value",
           "title": "value",
           "type": "string",
           "nullable": true
          },
          "source": {
           "_name_": "source",
           "title": "source",
           "type": "string",
           "nullable": true
          },
          "source_info": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "source_info",
           "title": "source_info"
          }
         },
         "additionalProperties": false,
         "_name_": "volblocksize",
         "title": "volblocksize",
         "default": {},
         "_attrs_order_": [
          "parsed",
          "rawvalue",
          "value",
          "source",
          "source_info"
         ],
         "description": "`sparse` and `volblocksize` are only used for type=VOLUME."
        },
        "key_format": {
         "type": "object",
         "properties": {
          "parsed": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "parsed",
           "title": "parsed"
          },
          "rawvalue": {
           "_name_": "rawvalue",
           "title": "rawvalue",
           "type": "string",
           "nullable": true
          },
          "value": {
           "_name_": "value",
           "title": "value",
           "type": "string",
           "nullable": true
          },
          "source": {
           "_name_": "source",
           "title": "source",
           "type": "string",
           "nullable": true
          },
          "source_info": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "source_info",
           "title": "source_info"
          }
         },
         "additionalProperties": false,
         "_name_": "key_format",
         "title": "key_format",
         "default": {},
         "_attrs_order_": [
          "parsed",
          "rawvalue",
          "value",
          "source",
          "source_info"
         ]
        },
        "encryption_algorithm": {
         "type": "object",
         "properties": {
          "parsed": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "parsed",
           "title": "parsed"
          },
          "rawvalue": {
           "_name_": "rawvalue",
           "title": "rawvalue",
           "type": "string",
           "nullable": true
          },
          "value": {
           "_name_": "value",
           "title": "value",
           "type": "string",
           "nullable": true
          },
          "source": {
           "_name_": "source",
           "title": "source",
           "type": "string",
           "nullable": true
          },
          "source_info": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "source_info",
           "title": "source_info"
          }
         },
         "additionalProperties": false,
         "_name_": "encryption_algorithm",
         "title": "encryption_algorithm",
         "default": {},
         "_attrs_order_": [
          "parsed",
          "rawvalue",
          "value",
          "source",
          "source_info"
         ]
        },
        "used": {
         "type": "object",
         "properties": {
          "parsed": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "parsed",
           "title": "parsed"
          },
          "rawvalue": {
           "_name_": "rawvalue",
           "title": "rawvalue",
           "type": "string",
           "nullable": true
          },
          "value": {
           "_name_": "value",
           "title": "value",
           "type": "string",
           "nullable": true
          },
          "source": {
           "_name_": "source",
           "title": "source",
           "type": "string",
           "nullable": true
          },
          "source_info": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "source_info",
           "title": "source_info"
          }
         },
         "additionalProperties": false,
         "_name_": "used",
         "title": "used",
         "default": {},
         "_attrs_order_": [
          "parsed",
          "rawvalue",
          "value",
          "source",
          "source_info"
         ]
        },
        "usedbychildren": {
         "type": "object",
         "properties": {
          "parsed": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "parsed",
           "title": "parsed"
          },
          "rawvalue": {
           "_name_": "rawvalue",
           "title": "rawvalue",
           "type": "string",
           "nullable": true
          },
          "value": {
           "_name_": "value",
           "title": "value",
           "type": "string",
           "nullable": true
          },
          "source": {
           "_name_": "source",
           "title": "source",
           "type": "string",
           "nullable": true
          },
          "source_info": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "source_info",
           "title": "source_info"
          }
         },
         "additionalProperties": false,
         "_name_": "usedbychildren",
         "title": "usedbychildren",
         "default": {},
         "_attrs_order_": [
          "parsed",
          "rawvalue",
          "value",
          "source",
          "source_info"
         ]
        },
        "usedbydataset": {
         "type": "object",
         "properties": {
          "parsed": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "parsed",
           "title": "parsed"
          },
          "rawvalue": {
           "_name_": "rawvalue",
           "title": "rawvalue",
           "type": "string",
           "nullable": true
          },
          "value": {
           "_name_": "value",
           "title": "value",
           "type": "string",
           "nullable": true
          },
          "source": {
           "_name_": "source",
           "title": "source",
           "type": "string",
           "nullable": true
          },
          "source_info": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "source_info",
           "title": "source_info"
          }
         },
         "additionalProperties": false,
         "_name_": "usedbydataset",
         "title": "usedbydataset",
         "default": {},
         "_attrs_order_": [
          "parsed",
          "rawvalue",
          "value",
          "source",
          "source_info"
         ]
        },
        "usedbyrefreservation": {
         "type": "object",
         "properties": {
          "parsed": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "parsed",
           "title": "parsed"
          },
          "rawvalue": {
           "_name_": "rawvalue",
           "title": "rawvalue",
           "type": "string",
           "nullable": true
          },
          "value": {
           "_name_": "value",
           "title": "value",
           "type": "string",
           "nullable": true
          },
          "source": {
           "_name_": "source",
           "title": "source",
           "type": "string",
           "nullable": true
          },
          "source_info": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "source_info",
           "title": "source_info"
          }
         },
         "additionalProperties": false,
         "_name_": "usedbyrefreservation",
         "title": "usedbyrefreservation",
         "default": {},
         "_attrs_order_": [
          "parsed",
          "rawvalue",
          "value",
          "source",
          "source_info"
         ]
        },
        "usedbysnapshots": {
         "type": "object",
         "properties": {
          "parsed": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "parsed",
           "title": "parsed"
          },
          "rawvalue": {
           "_name_": "rawvalue",
           "title": "rawvalue",
           "type": "string",
           "nullable": true
          },
          "value": {
           "_name_": "value",
           "title": "value",
           "type": "string",
           "nullable": true
          },
          "source": {
           "_name_": "source",
           "title": "source",
           "type": "string",
           "nullable": true
          },
          "source_info": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "source_info",
           "title": "source_info"
          }
         },
         "additionalProperties": false,
         "_name_": "usedbysnapshots",
         "title": "usedbysnapshots",
         "default": {},
         "_attrs_order_": [
          "parsed",
          "rawvalue",
          "value",
          "source",
          "source_info"
         ]
        },
        "available": {
         "type": "object",
         "properties": {
          "parsed": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "parsed",
           "title": "parsed"
          },
          "rawvalue": {
           "_name_": "rawvalue",
           "title": "rawvalue",
           "type": "string",
           "nullable": true
          },
          "value": {
           "_name_": "value",
           "title": "value",
           "type": "string",
           "nullable": true
          },
          "source": {
           "_name_": "source",
           "title": "source",
           "type": "string",
           "nullable": true
          },
          "source_info": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "source_info",
           "title": "source_info"
          }
         },
         "additionalProperties": false,
         "_name_": "available",
         "title": "available",
         "default": {},
         "_attrs_order_": [
          "parsed",
          "rawvalue",
          "value",
          "source",
          "source_info"
         ]
        },
        "special_small_block_size": {
         "type": "object",
         "properties": {
          "parsed": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "parsed",
           "title": "parsed"
          },
          "rawvalue": {
           "_name_": "rawvalue",
           "title": "rawvalue",
           "type": "string",
           "nullable": true
          },
          "value": {
           "_name_": "value",
           "title": "value",
           "type": "string",
           "nullable": true
          },
          "source": {
           "_name_": "source",
           "title": "source",
           "type": "string",
           "nullable": true
          },
          "source_info": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "source_info",
           "title": "source_info"
          }
         },
         "additionalProperties": false,
         "_name_": "special_small_block_size",
         "title": "special_small_block_size",
         "default": {},
         "_attrs_order_": [
          "parsed",
          "rawvalue",
          "value",
          "source",
          "source_info"
         ]
        },
        "pbkdf2iters": {
         "type": "object",
         "properties": {
          "parsed": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "parsed",
           "title": "parsed"
          },
          "rawvalue": {
           "_name_": "rawvalue",
           "title": "rawvalue",
           "type": "string",
           "nullable": true
          },
          "value": {
           "_name_": "value",
           "title": "value",
           "type": "string",
           "nullable": true
          },
          "source": {
           "_name_": "source",
           "title": "source",
           "type": "string",
           "nullable": true
          },
          "source_info": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "source_info",
           "title": "source_info"
          }
         },
         "additionalProperties": false,
         "_name_": "pbkdf2iters",
         "title": "pbkdf2iters",
         "default": {},
         "_attrs_order_": [
          "parsed",
          "rawvalue",
          "value",
          "source",
          "source_info"
         ]
        },
        "creation": {
         "type": "object",
         "properties": {
          "parsed": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "parsed",
           "title": "parsed"
          },
          "rawvalue": {
           "_name_": "rawvalue",
           "title": "rawvalue",
           "type": "string",
           "nullable": true
          },
          "value": {
           "_name_": "value",
           "title": "value",
           "type": "string",
           "nullable": true
          },
          "source": {
           "_name_": "source",
           "title": "source",
           "type": "string",
           "nullable": true
          },
          "source_info": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "source_info",
           "title": "source_info"
          }
         },
         "additionalProperties": false,
         "_name_": "creation",
         "title": "creation",
         "default": {},
         "_attrs_order_": [
          "parsed",
          "rawvalue",
          "value",
          "source",
          "source_info"
         ]
        },
        "snapdev": {
         "type": "object",
         "properties": {
          "parsed": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "parsed",
           "title": "parsed"
          },
          "rawvalue": {
           "_name_": "rawvalue",
           "title": "rawvalue",
           "type": "string",
           "nullable": true
          },
          "value": {
           "_name_": "value",
           "title": "value",
           "type": "string",
           "nullable": true
          },
          "source": {
           "_name_": "source",
           "title": "source",
           "type": "string",
           "nullable": true
          },
          "source_info": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "source_info",
           "title": "source_info"
          }
         },
         "additionalProperties": false,
         "_name_": "snapdev",
         "title": "snapdev",
         "default": {},
         "_attrs_order_": [
          "parsed",
          "rawvalue",
          "value",
          "source",
          "source_info"
         ]
        },
        "mountpoint": {
         "_name_": "mountpoint",
         "title": "mountpoint",
         "type": "string",
         "nullable": true
        }
       },
       "additionalProperties": false,
       "_name_": "pool_dataset_create_returns",
       "title": "pool_dataset_create_returns",
       "default": {},
       "_attrs_order_": [
        "id",
        "type",
        "name",
        "pool",
        "encrypted",
        "encryption_root",
        "key_loaded",
        "children",
        "user_properties",
        "locked",
        "comments",
        "quota_warning",
        "quota_critical",
        "refquota_warning",
        "refquota_critical",
        "managedby",
        "deduplication",
        "aclmode",
        "acltype",
        "xattr",
        "atime",
        "casesensitivity",
        "checksum",
        "exec",
        "sync",
        "compression",
        "compressratio",
        "origin",
        "quota",
        "refquota",
        "reservation",
        "refreservation",
        "copies",
        "snapdir",
        "readonly",
        "recordsize",
        "sparse",
        "volsize",
        "volblocksize",
        "key_format",
        "encryption_algorithm",
        "used",
        "usedbychildren",
        "usedbydataset",
        "usedbyrefreservation",
        "usedbysnapshots",
        "available",
        "special_small_block_size",
        "pbkdf2iters",
        "creation",
        "snapdev",
        "mountpoint"
       ]
      },
      "pool_dataset_delete": {
       "type": "object",
       "properties": {
        "recursive": {
         "type": "boolean",
         "_name_": "recursive",
         "title": "recursive",
         "default": false,
         "description": "`recursive` will also delete/destroy all children datasets.\nWhen root dataset is specified as `id` with `recursive`, it will destroy all the children of the\nroot dataset present leaving root dataset intact."
        },
        "force": {
         "type": "boolean",
         "_name_": "force",
         "title": "force",
         "default": false,
         "description": "`force` will force delete busy datasets."
        }
       },
       "additionalProperties": false,
       "_name_": "dataset_delete",
       "title": "dataset_delete",
       "default": {},
       "_attrs_order_": [
        "recursive",
        "force"
       ]
      },
      "return_schema_of_pool_dataset_delete": {
       "type": "boolean",
       "_name_": "deleted",
       "title": "deleted",
       "description": "Will return `true` if `id` is deleted successfully"
      },
      "pool_dataset_update": {
       "type": "object",
       "properties": {
        "volsize": {
         "type": "integer",
         "_name_": "volsize",
         "title": "volsize",
         "description": "`volsize` is required for type=VOLUME and is supposed to be a multiple of the block size.\n`sparse` and `volblocksize` are only used for type=VOLUME."
        },
        "force_size": {
         "type": "boolean",
         "_name_": "force_size",
         "title": "force_size"
        },
        "comments": {
         "_name_": "comments",
         "title": "comments",
         "nullable": false,
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "string",
           "enum": [
            "INHERIT"
           ]
          }
         ]
        },
        "sync": {
         "_name_": "sync",
         "title": "sync",
         "enum": [
          "STANDARD",
          "ALWAYS",
          "DISABLED"
         ],
         "nullable": false,
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "string",
           "enum": [
            "INHERIT"
           ]
          }
         ]
        },
        "snapdev": {
         "_name_": "snapdev",
         "title": "snapdev",
         "enum": [
          "HIDDEN",
          "VISIBLE"
         ],
         "nullable": false,
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "string",
           "enum": [
            "INHERIT"
           ]
          }
         ]
        },
        "compression": {
         "_name_": "compression",
         "title": "compression",
         "enum": [
          "ON",
          "OFF",
          "LZ4",
          "GZIP",
          "GZIP-1",
          "GZIP-9",
          "ZSTD",
          "ZSTD-FAST",
          "ZLE",
          "LZJB",
          "ZSTD-1",
          "ZSTD-2",
          "ZSTD-3",
          "ZSTD-4",
          "ZSTD-5",
          "ZSTD-6",
          "ZSTD-7",
          "ZSTD-8",
          "ZSTD-9",
          "ZSTD-10",
          "ZSTD-11",
          "ZSTD-12",
          "ZSTD-13",
          "ZSTD-14",
          "ZSTD-15",
          "ZSTD-16",
          "ZSTD-17",
          "ZSTD-18",
          "ZSTD-19",
          "ZSTD-FAST-1",
          "ZSTD-FAST-2",
          "ZSTD-FAST-3",
          "ZSTD-FAST-4",
          "ZSTD-FAST-5",
          "ZSTD-FAST-6",
          "ZSTD-FAST-7",
          "ZSTD-FAST-8",
          "ZSTD-FAST-9",
          "ZSTD-FAST-10",
          "ZSTD-FAST-20",
          "ZSTD-FAST-30",
          "ZSTD-FAST-40",
          "ZSTD-FAST-50",
          "ZSTD-FAST-60",
          "ZSTD-FAST-70",
          "ZSTD-FAST-80",
          "ZSTD-FAST-90",
          "ZSTD-FAST-100",
          "ZSTD-FAST-500",
          "ZSTD-FAST-1000"
         ],
         "nullable": false,
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "string",
           "enum": [
            "INHERIT"
           ]
          }
         ]
        },
        "atime": {
         "_name_": "atime",
         "title": "atime",
         "enum": [
          "ON",
          "OFF"
         ],
         "nullable": false,
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "string",
           "enum": [
            "INHERIT"
           ]
          }
         ]
        },
        "exec": {
         "_name_": "exec",
         "title": "exec",
         "enum": [
          "ON",
          "OFF"
         ],
         "nullable": false,
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "string",
           "enum": [
            "INHERIT"
           ]
          }
         ]
        },
        "managedby": {
         "_name_": "managedby",
         "title": "managedby",
         "nullable": false,
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "string",
           "enum": [
            "INHERIT"
           ]
          }
         ]
        },
        "quota": {
         "type": "integer",
         "_name_": "quota",
         "title": "quota",
         "nullable": true
        },
        "quota_warning": {
         "_name_": "quota_warning",
         "title": "quota_warning",
         "nullable": false,
         "anyOf": [
          {
           "type": "integer"
          },
          {
           "type": "string",
           "enum": [
            "INHERIT"
           ]
          }
         ]
        },
        "quota_critical": {
         "_name_": "quota_critical",
         "title": "quota_critical",
         "nullable": false,
         "anyOf": [
          {
           "type": "integer"
          },
          {
           "type": "string",
           "enum": [
            "INHERIT"
           ]
          }
         ]
        },
        "refquota": {
         "type": "integer",
         "_name_": "refquota",
         "title": "refquota",
         "nullable": true
        },
        "refquota_warning": {
         "_name_": "refquota_warning",
         "title": "refquota_warning",
         "nullable": false,
         "anyOf": [
          {
           "type": "integer"
          },
          {
           "type": "string",
           "enum": [
            "INHERIT"
           ]
          }
         ]
        },
        "refquota_critical": {
         "_name_": "refquota_critical",
         "title": "refquota_critical",
         "nullable": false,
         "anyOf": [
          {
           "type": "integer"
          },
          {
           "type": "string",
           "enum": [
            "INHERIT"
           ]
          }
         ]
        },
        "reservation": {
         "type": "integer",
         "_name_": "reservation",
         "title": "reservation"
        },
        "refreservation": {
         "type": "integer",
         "_name_": "refreservation",
         "title": "refreservation"
        },
        "special_small_block_size": {
         "_name_": "special_small_block_size",
         "title": "special_small_block_size",
         "nullable": false,
         "anyOf": [
          {
           "type": "integer"
          },
          {
           "type": "string",
           "enum": [
            "INHERIT"
           ]
          }
         ]
        },
        "copies": {
         "_name_": "copies",
         "title": "copies",
         "nullable": false,
         "anyOf": [
          {
           "type": "integer"
          },
          {
           "type": "string",
           "enum": [
            "INHERIT"
           ]
          }
         ]
        },
        "snapdir": {
         "_name_": "snapdir",
         "title": "snapdir",
         "enum": [
          "DISABLED",
          "VISIBLE",
          "HIDDEN"
         ],
         "nullable": false,
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "string",
           "enum": [
            "INHERIT"
           ]
          }
         ]
        },
        "deduplication": {
         "_name_": "deduplication",
         "title": "deduplication",
         "enum": [
          "ON",
          "VERIFY",
          "OFF"
         ],
         "nullable": false,
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "string",
           "enum": [
            "INHERIT"
           ]
          }
         ]
        },
        "checksum": {
         "_name_": "checksum",
         "title": "checksum",
         "enum": [
          "ON",
          "OFF",
          "FLETCHER2",
          "FLETCHER4",
          "SHA256",
          "SHA512",
          "SKEIN",
          "EDONR",
          "BLAKE3"
         ],
         "nullable": false,
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "string",
           "enum": [
            "INHERIT"
           ]
          }
         ]
        },
        "readonly": {
         "_name_": "readonly",
         "title": "readonly",
         "enum": [
          "ON",
          "OFF"
         ],
         "nullable": false,
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "string",
           "enum": [
            "INHERIT"
           ]
          }
         ]
        },
        "recordsize": {
         "_name_": "recordsize",
         "title": "recordsize",
         "nullable": false,
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "string",
           "enum": [
            "INHERIT"
           ]
          }
         ]
        },
        "aclmode": {
         "_name_": "aclmode",
         "title": "aclmode",
         "enum": [
          "PASSTHROUGH",
          "RESTRICTED",
          "DISCARD"
         ],
         "nullable": false,
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "string",
           "enum": [
            "INHERIT"
           ]
          }
         ]
        },
        "acltype": {
         "_name_": "acltype",
         "title": "acltype",
         "enum": [
          "OFF",
          "NFSV4",
          "POSIX"
         ],
         "nullable": false,
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "string",
           "enum": [
            "INHERIT"
           ]
          }
         ]
        },
        "user_properties": {
         "_name_": "user_properties",
         "title": "user_properties",
         "default": [],
         "type": "array",
         "items": {
          "type": "object",
          "properties": {
           "key": {
            "_name_": "key",
            "title": "key",
            "_required_": true,
            "type": "string"
           },
           "value": {
            "_name_": "value",
            "title": "value",
            "_required_": true,
            "type": "string"
           }
          },
          "additionalProperties": false,
          "_name_": "user_property",
          "title": "user_property",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "key",
           "value"
          ]
         }
        },
        "create_ancestors": {
         "type": "boolean",
         "_name_": "create_ancestors",
         "title": "create_ancestors",
         "default": false
        },
        "user_properties_update": {
         "_name_": "user_properties_update",
         "title": "user_properties_update",
         "default": [],
         "type": "array",
         "items": {
          "type": "object",
          "properties": {
           "key": {
            "_name_": "key",
            "title": "key",
            "_required_": true,
            "type": "string"
           },
           "value": {
            "_name_": "value",
            "title": "value",
            "_required_": false,
            "type": "string"
           },
           "remove": {
            "type": "boolean",
            "_name_": "remove",
            "title": "remove",
            "_required_": false
           }
          },
          "additionalProperties": false,
          "_name_": "user_property",
          "title": "user_property",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "key",
           "value",
           "remove"
          ]
         }
        }
       },
       "additionalProperties": false,
       "_name_": "pool_dataset_update",
       "title": "pool_dataset_update",
       "default": {},
       "_attrs_order_": [
        "volsize",
        "force_size",
        "comments",
        "sync",
        "snapdev",
        "compression",
        "atime",
        "exec",
        "managedby",
        "quota",
        "quota_warning",
        "quota_critical",
        "refquota",
        "refquota_warning",
        "refquota_critical",
        "reservation",
        "refreservation",
        "special_small_block_size",
        "copies",
        "snapdir",
        "deduplication",
        "checksum",
        "readonly",
        "recordsize",
        "aclmode",
        "acltype",
        "user_properties",
        "create_ancestors",
        "user_properties_update"
       ]
      },
      "return_schema_of_pool_dataset_update": {
       "type": "object",
       "properties": {
        "id": {
         "_name_": "id",
         "title": "id",
         "type": "string",
         "description": "Updates a dataset/zvol `id`."
        },
        "type": {
         "_name_": "type",
         "title": "type",
         "type": "string"
        },
        "name": {
         "_name_": "name",
         "title": "name",
         "type": "string",
         "description": "`encryption` when enabled will create an ZFS encrypted root dataset for `name` pool.\nThere is 1 case where ZFS encryption is not allowed for a dataset:\n1) If the parent dataset is encrypted with a passphrase and `name` is being created\n   with a key for encrypting the dataset.\n`encryption_options` specifies configuration for encryption of dataset for `name` pool.\n`encryption_options.passphrase` must be specified if encryption for dataset is desired with a passphrase\nas a key.\nOtherwise a hex encoded key can be specified by providing `encryption_options.key`.\n`encryption_options.generate_key` when enabled automatically generates the key to be used\nfor dataset encryption."
        },
        "pool": {
         "_name_": "pool",
         "title": "pool",
         "type": "string"
        },
        "encrypted": {
         "type": "boolean",
         "_name_": "encrypted",
         "title": "encrypted"
        },
        "encryption_root": {
         "_name_": "encryption_root",
         "title": "encryption_root",
         "type": "string",
         "nullable": true
        },
        "key_loaded": {
         "type": "boolean",
         "_name_": "key_loaded",
         "title": "key_loaded",
         "nullable": true
        },
        "children": {
         "_name_": "children",
         "title": "children",
         "default": [],
         "type": "array",
         "items": {}
        },
        "user_properties": {
         "type": "object",
         "properties": {},
         "additionalProperties": true,
         "_name_": "user_properties",
         "title": "user_properties",
         "default": {},
         "_attrs_order_": []
        },
        "locked": {
         "type": "boolean",
         "_name_": "locked",
         "title": "locked"
        },
        "comments": {
         "type": "object",
         "properties": {
          "parsed": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "parsed",
           "title": "parsed"
          },
          "rawvalue": {
           "_name_": "rawvalue",
           "title": "rawvalue",
           "type": "string",
           "nullable": true
          },
          "value": {
           "_name_": "value",
           "title": "value",
           "type": "string",
           "nullable": true
          },
          "source": {
           "_name_": "source",
           "title": "source",
           "type": "string",
           "nullable": true
          },
          "source_info": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "source_info",
           "title": "source_info"
          }
         },
         "additionalProperties": false,
         "_name_": "comments",
         "title": "comments",
         "default": {},
         "_attrs_order_": [
          "parsed",
          "rawvalue",
          "value",
          "source",
          "source_info"
         ]
        },
        "quota_warning": {
         "type": "object",
         "properties": {
          "parsed": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "parsed",
           "title": "parsed"
          },
          "rawvalue": {
           "_name_": "rawvalue",
           "title": "rawvalue",
           "type": "string",
           "nullable": true
          },
          "value": {
           "_name_": "value",
           "title": "value",
           "type": "string",
           "nullable": true
          },
          "source": {
           "_name_": "source",
           "title": "source",
           "type": "string",
           "nullable": true
          },
          "source_info": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "source_info",
           "title": "source_info"
          }
         },
         "additionalProperties": false,
         "_name_": "quota_warning",
         "title": "quota_warning",
         "default": {},
         "_attrs_order_": [
          "parsed",
          "rawvalue",
          "value",
          "source",
          "source_info"
         ]
        },
        "quota_critical": {
         "type": "object",
         "properties": {
          "parsed": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "parsed",
           "title": "parsed"
          },
          "rawvalue": {
           "_name_": "rawvalue",
           "title": "rawvalue",
           "type": "string",
           "nullable": true
          },
          "value": {
           "_name_": "value",
           "title": "value",
           "type": "string",
           "nullable": true
          },
          "source": {
           "_name_": "source",
           "title": "source",
           "type": "string",
           "nullable": true
          },
          "source_info": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "source_info",
           "title": "source_info"
          }
         },
         "additionalProperties": false,
         "_name_": "quota_critical",
         "title": "quota_critical",
         "default": {},
         "_attrs_order_": [
          "parsed",
          "rawvalue",
          "value",
          "source",
          "source_info"
         ]
        },
        "refquota_warning": {
         "type": "object",
         "properties": {
          "parsed": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "parsed",
           "title": "parsed"
          },
          "rawvalue": {
           "_name_": "rawvalue",
           "title": "rawvalue",
           "type": "string",
           "nullable": true
          },
          "value": {
           "_name_": "value",
           "title": "value",
           "type": "string",
           "nullable": true
          },
          "source": {
           "_name_": "source",
           "title": "source",
           "type": "string",
           "nullable": true
          },
          "source_info": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "source_info",
           "title": "source_info"
          }
         },
         "additionalProperties": false,
         "_name_": "refquota_warning",
         "title": "refquota_warning",
         "default": {},
         "_attrs_order_": [
          "parsed",
          "rawvalue",
          "value",
          "source",
          "source_info"
         ]
        },
        "refquota_critical": {
         "type": "object",
         "properties": {
          "parsed": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "parsed",
           "title": "parsed"
          },
          "rawvalue": {
           "_name_": "rawvalue",
           "title": "rawvalue",
           "type": "string",
           "nullable": true
          },
          "value": {
           "_name_": "value",
           "title": "value",
           "type": "string",
           "nullable": true
          },
          "source": {
           "_name_": "source",
           "title": "source",
           "type": "string",
           "nullable": true
          },
          "source_info": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "source_info",
           "title": "source_info"
          }
         },
         "additionalProperties": false,
         "_name_": "refquota_critical",
         "title": "refquota_critical",
         "default": {},
         "_attrs_order_": [
          "parsed",
          "rawvalue",
          "value",
          "source",
          "source_info"
         ]
        },
        "managedby": {
         "type": "object",
         "properties": {
          "parsed": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "parsed",
           "title": "parsed"
          },
          "rawvalue": {
           "_name_": "rawvalue",
           "title": "rawvalue",
           "type": "string",
           "nullable": true
          },
          "value": {
           "_name_": "value",
           "title": "value",
           "type": "string",
           "nullable": true
          },
          "source": {
           "_name_": "source",
           "title": "source",
           "type": "string",
           "nullable": true
          },
          "source_info": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "source_info",
           "title": "source_info"
          }
         },
         "additionalProperties": false,
         "_name_": "managedby",
         "title": "managedby",
         "default": {},
         "_attrs_order_": [
          "parsed",
          "rawvalue",
          "value",
          "source",
          "source_info"
         ]
        },
        "deduplication": {
         "type": "object",
         "properties": {
          "parsed": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "parsed",
           "title": "parsed"
          },
          "rawvalue": {
           "_name_": "rawvalue",
           "title": "rawvalue",
           "type": "string",
           "nullable": true
          },
          "value": {
           "_name_": "value",
           "title": "value",
           "type": "string",
           "nullable": true
          },
          "source": {
           "_name_": "source",
           "title": "source",
           "type": "string",
           "nullable": true
          },
          "source_info": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "source_info",
           "title": "source_info"
          }
         },
         "additionalProperties": false,
         "_name_": "deduplication",
         "title": "deduplication",
         "default": {},
         "_attrs_order_": [
          "parsed",
          "rawvalue",
          "value",
          "source",
          "source_info"
         ]
        },
        "aclmode": {
         "type": "object",
         "properties": {
          "parsed": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "parsed",
           "title": "parsed"
          },
          "rawvalue": {
           "_name_": "rawvalue",
           "title": "rawvalue",
           "type": "string",
           "nullable": true
          },
          "value": {
           "_name_": "value",
           "title": "value",
           "type": "string",
           "nullable": true
          },
          "source": {
           "_name_": "source",
           "title": "source",
           "type": "string",
           "nullable": true
          },
          "source_info": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "source_info",
           "title": "source_info"
          }
         },
         "additionalProperties": false,
         "_name_": "aclmode",
         "title": "aclmode",
         "default": {},
         "_attrs_order_": [
          "parsed",
          "rawvalue",
          "value",
          "source",
          "source_info"
         ]
        },
        "acltype": {
         "type": "object",
         "properties": {
          "parsed": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "parsed",
           "title": "parsed"
          },
          "rawvalue": {
           "_name_": "rawvalue",
           "title": "rawvalue",
           "type": "string",
           "nullable": true
          },
          "value": {
           "_name_": "value",
           "title": "value",
           "type": "string",
           "nullable": true
          },
          "source": {
           "_name_": "source",
           "title": "source",
           "type": "string",
           "nullable": true
          },
          "source_info": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "source_info",
           "title": "source_info"
          }
         },
         "additionalProperties": false,
         "_name_": "acltype",
         "title": "acltype",
         "default": {},
         "_attrs_order_": [
          "parsed",
          "rawvalue",
          "value",
          "source",
          "source_info"
         ]
        },
        "xattr": {
         "type": "object",
         "properties": {
          "parsed": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "parsed",
           "title": "parsed"
          },
          "rawvalue": {
           "_name_": "rawvalue",
           "title": "rawvalue",
           "type": "string",
           "nullable": true
          },
          "value": {
           "_name_": "value",
           "title": "value",
           "type": "string",
           "nullable": true
          },
          "source": {
           "_name_": "source",
           "title": "source",
           "type": "string",
           "nullable": true
          },
          "source_info": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "source_info",
           "title": "source_info"
          }
         },
         "additionalProperties": false,
         "_name_": "xattr",
         "title": "xattr",
         "default": {},
         "_attrs_order_": [
          "parsed",
          "rawvalue",
          "value",
          "source",
          "source_info"
         ]
        },
        "atime": {
         "type": "object",
         "properties": {
          "parsed": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "parsed",
           "title": "parsed"
          },
          "rawvalue": {
           "_name_": "rawvalue",
           "title": "rawvalue",
           "type": "string",
           "nullable": true
          },
          "value": {
           "_name_": "value",
           "title": "value",
           "type": "string",
           "nullable": true
          },
          "source": {
           "_name_": "source",
           "title": "source",
           "type": "string",
           "nullable": true
          },
          "source_info": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "source_info",
           "title": "source_info"
          }
         },
         "additionalProperties": false,
         "_name_": "atime",
         "title": "atime",
         "default": {},
         "_attrs_order_": [
          "parsed",
          "rawvalue",
          "value",
          "source",
          "source_info"
         ]
        },
        "casesensitivity": {
         "type": "object",
         "properties": {
          "parsed": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "parsed",
           "title": "parsed"
          },
          "rawvalue": {
           "_name_": "rawvalue",
           "title": "rawvalue",
           "type": "string",
           "nullable": true
          },
          "value": {
           "_name_": "value",
           "title": "value",
           "type": "string",
           "nullable": true
          },
          "source": {
           "_name_": "source",
           "title": "source",
           "type": "string",
           "nullable": true
          },
          "source_info": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "source_info",
           "title": "source_info"
          }
         },
         "additionalProperties": false,
         "_name_": "casesensitivity",
         "title": "casesensitivity",
         "default": {},
         "_attrs_order_": [
          "parsed",
          "rawvalue",
          "value",
          "source",
          "source_info"
         ]
        },
        "checksum": {
         "type": "object",
         "properties": {
          "parsed": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "parsed",
           "title": "parsed"
          },
          "rawvalue": {
           "_name_": "rawvalue",
           "title": "rawvalue",
           "type": "string",
           "nullable": true
          },
          "value": {
           "_name_": "value",
           "title": "value",
           "type": "string",
           "nullable": true
          },
          "source": {
           "_name_": "source",
           "title": "source",
           "type": "string",
           "nullable": true
          },
          "source_info": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "source_info",
           "title": "source_info"
          }
         },
         "additionalProperties": false,
         "_name_": "checksum",
         "title": "checksum",
         "default": {},
         "_attrs_order_": [
          "parsed",
          "rawvalue",
          "value",
          "source",
          "source_info"
         ]
        },
        "exec": {
         "type": "object",
         "properties": {
          "parsed": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "parsed",
           "title": "parsed"
          },
          "rawvalue": {
           "_name_": "rawvalue",
           "title": "rawvalue",
           "type": "string",
           "nullable": true
          },
          "value": {
           "_name_": "value",
           "title": "value",
           "type": "string",
           "nullable": true
          },
          "source": {
           "_name_": "source",
           "title": "source",
           "type": "string",
           "nullable": true
          },
          "source_info": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "source_info",
           "title": "source_info"
          }
         },
         "additionalProperties": false,
         "_name_": "exec",
         "title": "exec",
         "default": {},
         "_attrs_order_": [
          "parsed",
          "rawvalue",
          "value",
          "source",
          "source_info"
         ]
        },
        "sync": {
         "type": "object",
         "properties": {
          "parsed": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "parsed",
           "title": "parsed"
          },
          "rawvalue": {
           "_name_": "rawvalue",
           "title": "rawvalue",
           "type": "string",
           "nullable": true
          },
          "value": {
           "_name_": "value",
           "title": "value",
           "type": "string",
           "nullable": true
          },
          "source": {
           "_name_": "source",
           "title": "source",
           "type": "string",
           "nullable": true
          },
          "source_info": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "source_info",
           "title": "source_info"
          }
         },
         "additionalProperties": false,
         "_name_": "sync",
         "title": "sync",
         "default": {},
         "_attrs_order_": [
          "parsed",
          "rawvalue",
          "value",
          "source",
          "source_info"
         ]
        },
        "compression": {
         "type": "object",
         "properties": {
          "parsed": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "parsed",
           "title": "parsed"
          },
          "rawvalue": {
           "_name_": "rawvalue",
           "title": "rawvalue",
           "type": "string",
           "nullable": true
          },
          "value": {
           "_name_": "value",
           "title": "value",
           "type": "string",
           "nullable": true
          },
          "source": {
           "_name_": "source",
           "title": "source",
           "type": "string",
           "nullable": true
          },
          "source_info": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "source_info",
           "title": "source_info"
          }
         },
         "additionalProperties": false,
         "_name_": "compression",
         "title": "compression",
         "default": {},
         "_attrs_order_": [
          "parsed",
          "rawvalue",
          "value",
          "source",
          "source_info"
         ]
        },
        "compressratio": {
         "type": "object",
         "properties": {
          "parsed": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "parsed",
           "title": "parsed"
          },
          "rawvalue": {
           "_name_": "rawvalue",
           "title": "rawvalue",
           "type": "string",
           "nullable": true
          },
          "value": {
           "_name_": "value",
           "title": "value",
           "type": "string",
           "nullable": true
          },
          "source": {
           "_name_": "source",
           "title": "source",
           "type": "string",
           "nullable": true
          },
          "source_info": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "source_info",
           "title": "source_info"
          }
         },
         "additionalProperties": false,
         "_name_": "compressratio",
         "title": "compressratio",
         "default": {},
         "_attrs_order_": [
          "parsed",
          "rawvalue",
          "value",
          "source",
          "source_info"
         ]
        },
        "origin": {
         "type": "object",
         "properties": {
          "parsed": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "parsed",
           "title": "parsed"
          },
          "rawvalue": {
           "_name_": "rawvalue",
           "title": "rawvalue",
           "type": "string",
           "nullable": true
          },
          "value": {
           "_name_": "value",
           "title": "value",
           "type": "string",
           "nullable": true
          },
          "source": {
           "_name_": "source",
           "title": "source",
           "type": "string",
           "nullable": true
          },
          "source_info": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "source_info",
           "title": "source_info"
          }
         },
         "additionalProperties": false,
         "_name_": "origin",
         "title": "origin",
         "default": {},
         "_attrs_order_": [
          "parsed",
          "rawvalue",
          "value",
          "source",
          "source_info"
         ]
        },
        "quota": {
         "type": "object",
         "properties": {
          "parsed": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "parsed",
           "title": "parsed"
          },
          "rawvalue": {
           "_name_": "rawvalue",
           "title": "rawvalue",
           "type": "string",
           "nullable": true
          },
          "value": {
           "_name_": "value",
           "title": "value",
           "type": "string",
           "nullable": true
          },
          "source": {
           "_name_": "source",
           "title": "source",
           "type": "string",
           "nullable": true
          },
          "source_info": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "source_info",
           "title": "source_info"
          }
         },
         "additionalProperties": false,
         "_name_": "quota",
         "title": "quota",
         "default": {},
         "_attrs_order_": [
          "parsed",
          "rawvalue",
          "value",
          "source",
          "source_info"
         ]
        },
        "refquota": {
         "type": "object",
         "properties": {
          "parsed": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "parsed",
           "title": "parsed"
          },
          "rawvalue": {
           "_name_": "rawvalue",
           "title": "rawvalue",
           "type": "string",
           "nullable": true
          },
          "value": {
           "_name_": "value",
           "title": "value",
           "type": "string",
           "nullable": true
          },
          "source": {
           "_name_": "source",
           "title": "source",
           "type": "string",
           "nullable": true
          },
          "source_info": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "source_info",
           "title": "source_info"
          }
         },
         "additionalProperties": false,
         "_name_": "refquota",
         "title": "refquota",
         "default": {},
         "_attrs_order_": [
          "parsed",
          "rawvalue",
          "value",
          "source",
          "source_info"
         ]
        },
        "reservation": {
         "type": "object",
         "properties": {
          "parsed": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "parsed",
           "title": "parsed"
          },
          "rawvalue": {
           "_name_": "rawvalue",
           "title": "rawvalue",
           "type": "string",
           "nullable": true
          },
          "value": {
           "_name_": "value",
           "title": "value",
           "type": "string",
           "nullable": true
          },
          "source": {
           "_name_": "source",
           "title": "source",
           "type": "string",
           "nullable": true
          },
          "source_info": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "source_info",
           "title": "source_info"
          }
         },
         "additionalProperties": false,
         "_name_": "reservation",
         "title": "reservation",
         "default": {},
         "_attrs_order_": [
          "parsed",
          "rawvalue",
          "value",
          "source",
          "source_info"
         ]
        },
        "refreservation": {
         "type": "object",
         "properties": {
          "parsed": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "parsed",
           "title": "parsed"
          },
          "rawvalue": {
           "_name_": "rawvalue",
           "title": "rawvalue",
           "type": "string",
           "nullable": true
          },
          "value": {
           "_name_": "value",
           "title": "value",
           "type": "string",
           "nullable": true
          },
          "source": {
           "_name_": "source",
           "title": "source",
           "type": "string",
           "nullable": true
          },
          "source_info": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "source_info",
           "title": "source_info"
          }
         },
         "additionalProperties": false,
         "_name_": "refreservation",
         "title": "refreservation",
         "default": {},
         "_attrs_order_": [
          "parsed",
          "rawvalue",
          "value",
          "source",
          "source_info"
         ]
        },
        "copies": {
         "type": "object",
         "properties": {
          "parsed": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "parsed",
           "title": "parsed"
          },
          "rawvalue": {
           "_name_": "rawvalue",
           "title": "rawvalue",
           "type": "string",
           "nullable": true
          },
          "value": {
           "_name_": "value",
           "title": "value",
           "type": "string",
           "nullable": true
          },
          "source": {
           "_name_": "source",
           "title": "source",
           "type": "string",
           "nullable": true
          },
          "source_info": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "source_info",
           "title": "source_info"
          }
         },
         "additionalProperties": false,
         "_name_": "copies",
         "title": "copies",
         "default": {},
         "_attrs_order_": [
          "parsed",
          "rawvalue",
          "value",
          "source",
          "source_info"
         ]
        },
        "snapdir": {
         "type": "object",
         "properties": {
          "parsed": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "parsed",
           "title": "parsed"
          },
          "rawvalue": {
           "_name_": "rawvalue",
           "title": "rawvalue",
           "type": "string",
           "nullable": true
          },
          "value": {
           "_name_": "value",
           "title": "value",
           "type": "string",
           "nullable": true
          },
          "source": {
           "_name_": "source",
           "title": "source",
           "type": "string",
           "nullable": true
          },
          "source_info": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "source_info",
           "title": "source_info"
          }
         },
         "additionalProperties": false,
         "_name_": "snapdir",
         "title": "snapdir",
         "default": {},
         "_attrs_order_": [
          "parsed",
          "rawvalue",
          "value",
          "source",
          "source_info"
         ]
        },
        "readonly": {
         "type": "object",
         "properties": {
          "parsed": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "parsed",
           "title": "parsed"
          },
          "rawvalue": {
           "_name_": "rawvalue",
           "title": "rawvalue",
           "type": "string",
           "nullable": true
          },
          "value": {
           "_name_": "value",
           "title": "value",
           "type": "string",
           "nullable": true
          },
          "source": {
           "_name_": "source",
           "title": "source",
           "type": "string",
           "nullable": true
          },
          "source_info": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "source_info",
           "title": "source_info"
          }
         },
         "additionalProperties": false,
         "_name_": "readonly",
         "title": "readonly",
         "default": {},
         "_attrs_order_": [
          "parsed",
          "rawvalue",
          "value",
          "source",
          "source_info"
         ]
        },
        "recordsize": {
         "type": "object",
         "properties": {
          "parsed": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "parsed",
           "title": "parsed"
          },
          "rawvalue": {
           "_name_": "rawvalue",
           "title": "rawvalue",
           "type": "string",
           "nullable": true
          },
          "value": {
           "_name_": "value",
           "title": "value",
           "type": "string",
           "nullable": true
          },
          "source": {
           "_name_": "source",
           "title": "source",
           "type": "string",
           "nullable": true
          },
          "source_info": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "source_info",
           "title": "source_info"
          }
         },
         "additionalProperties": false,
         "_name_": "recordsize",
         "title": "recordsize",
         "default": {},
         "_attrs_order_": [
          "parsed",
          "rawvalue",
          "value",
          "source",
          "source_info"
         ]
        },
        "sparse": {
         "type": "object",
         "properties": {
          "parsed": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "parsed",
           "title": "parsed"
          },
          "rawvalue": {
           "_name_": "rawvalue",
           "title": "rawvalue",
           "type": "string",
           "nullable": true
          },
          "value": {
           "_name_": "value",
           "title": "value",
           "type": "string",
           "nullable": true
          },
          "source": {
           "_name_": "source",
           "title": "source",
           "type": "string",
           "nullable": true
          },
          "source_info": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "source_info",
           "title": "source_info"
          }
         },
         "additionalProperties": false,
         "_name_": "sparse",
         "title": "sparse",
         "default": {},
         "_attrs_order_": [
          "parsed",
          "rawvalue",
          "value",
          "source",
          "source_info"
         ],
         "description": "`sparse` and `volblocksize` are only used for type=VOLUME."
        },
        "volsize": {
         "type": "object",
         "properties": {
          "parsed": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "parsed",
           "title": "parsed"
          },
          "rawvalue": {
           "_name_": "rawvalue",
           "title": "rawvalue",
           "type": "string",
           "nullable": true
          },
          "value": {
           "_name_": "value",
           "title": "value",
           "type": "string",
           "nullable": true
          },
          "source": {
           "_name_": "source",
           "title": "source",
           "type": "string",
           "nullable": true
          },
          "source_info": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "source_info",
           "title": "source_info"
          }
         },
         "additionalProperties": false,
         "_name_": "volsize",
         "title": "volsize",
         "default": {},
         "_attrs_order_": [
          "parsed",
          "rawvalue",
          "value",
          "source",
          "source_info"
         ],
         "description": "`volsize` is required for type=VOLUME and is supposed to be a multiple of the block size."
        },
        "volblocksize": {
         "type": "object",
         "properties": {
          "parsed": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "parsed",
           "title": "parsed"
          },
          "rawvalue": {
           "_name_": "rawvalue",
           "title": "rawvalue",
           "type": "string",
           "nullable": true
          },
          "value": {
           "_name_": "value",
           "title": "value",
           "type": "string",
           "nullable": true
          },
          "source": {
           "_name_": "source",
           "title": "source",
           "type": "string",
           "nullable": true
          },
          "source_info": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "source_info",
           "title": "source_info"
          }
         },
         "additionalProperties": false,
         "_name_": "volblocksize",
         "title": "volblocksize",
         "default": {},
         "_attrs_order_": [
          "parsed",
          "rawvalue",
          "value",
          "source",
          "source_info"
         ],
         "description": "`sparse` and `volblocksize` are only used for type=VOLUME."
        },
        "key_format": {
         "type": "object",
         "properties": {
          "parsed": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "parsed",
           "title": "parsed"
          },
          "rawvalue": {
           "_name_": "rawvalue",
           "title": "rawvalue",
           "type": "string",
           "nullable": true
          },
          "value": {
           "_name_": "value",
           "title": "value",
           "type": "string",
           "nullable": true
          },
          "source": {
           "_name_": "source",
           "title": "source",
           "type": "string",
           "nullable": true
          },
          "source_info": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "source_info",
           "title": "source_info"
          }
         },
         "additionalProperties": false,
         "_name_": "key_format",
         "title": "key_format",
         "default": {},
         "_attrs_order_": [
          "parsed",
          "rawvalue",
          "value",
          "source",
          "source_info"
         ]
        },
        "encryption_algorithm": {
         "type": "object",
         "properties": {
          "parsed": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "parsed",
           "title": "parsed"
          },
          "rawvalue": {
           "_name_": "rawvalue",
           "title": "rawvalue",
           "type": "string",
           "nullable": true
          },
          "value": {
           "_name_": "value",
           "title": "value",
           "type": "string",
           "nullable": true
          },
          "source": {
           "_name_": "source",
           "title": "source",
           "type": "string",
           "nullable": true
          },
          "source_info": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "source_info",
           "title": "source_info"
          }
         },
         "additionalProperties": false,
         "_name_": "encryption_algorithm",
         "title": "encryption_algorithm",
         "default": {},
         "_attrs_order_": [
          "parsed",
          "rawvalue",
          "value",
          "source",
          "source_info"
         ]
        },
        "used": {
         "type": "object",
         "properties": {
          "parsed": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "parsed",
           "title": "parsed"
          },
          "rawvalue": {
           "_name_": "rawvalue",
           "title": "rawvalue",
           "type": "string",
           "nullable": true
          },
          "value": {
           "_name_": "value",
           "title": "value",
           "type": "string",
           "nullable": true
          },
          "source": {
           "_name_": "source",
           "title": "source",
           "type": "string",
           "nullable": true
          },
          "source_info": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "source_info",
           "title": "source_info"
          }
         },
         "additionalProperties": false,
         "_name_": "used",
         "title": "used",
         "default": {},
         "_attrs_order_": [
          "parsed",
          "rawvalue",
          "value",
          "source",
          "source_info"
         ]
        },
        "usedbychildren": {
         "type": "object",
         "properties": {
          "parsed": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "parsed",
           "title": "parsed"
          },
          "rawvalue": {
           "_name_": "rawvalue",
           "title": "rawvalue",
           "type": "string",
           "nullable": true
          },
          "value": {
           "_name_": "value",
           "title": "value",
           "type": "string",
           "nullable": true
          },
          "source": {
           "_name_": "source",
           "title": "source",
           "type": "string",
           "nullable": true
          },
          "source_info": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "source_info",
           "title": "source_info"
          }
         },
         "additionalProperties": false,
         "_name_": "usedbychildren",
         "title": "usedbychildren",
         "default": {},
         "_attrs_order_": [
          "parsed",
          "rawvalue",
          "value",
          "source",
          "source_info"
         ]
        },
        "usedbydataset": {
         "type": "object",
         "properties": {
          "parsed": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "parsed",
           "title": "parsed"
          },
          "rawvalue": {
           "_name_": "rawvalue",
           "title": "rawvalue",
           "type": "string",
           "nullable": true
          },
          "value": {
           "_name_": "value",
           "title": "value",
           "type": "string",
           "nullable": true
          },
          "source": {
           "_name_": "source",
           "title": "source",
           "type": "string",
           "nullable": true
          },
          "source_info": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "source_info",
           "title": "source_info"
          }
         },
         "additionalProperties": false,
         "_name_": "usedbydataset",
         "title": "usedbydataset",
         "default": {},
         "_attrs_order_": [
          "parsed",
          "rawvalue",
          "value",
          "source",
          "source_info"
         ]
        },
        "usedbyrefreservation": {
         "type": "object",
         "properties": {
          "parsed": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "parsed",
           "title": "parsed"
          },
          "rawvalue": {
           "_name_": "rawvalue",
           "title": "rawvalue",
           "type": "string",
           "nullable": true
          },
          "value": {
           "_name_": "value",
           "title": "value",
           "type": "string",
           "nullable": true
          },
          "source": {
           "_name_": "source",
           "title": "source",
           "type": "string",
           "nullable": true
          },
          "source_info": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "source_info",
           "title": "source_info"
          }
         },
         "additionalProperties": false,
         "_name_": "usedbyrefreservation",
         "title": "usedbyrefreservation",
         "default": {},
         "_attrs_order_": [
          "parsed",
          "rawvalue",
          "value",
          "source",
          "source_info"
         ]
        },
        "usedbysnapshots": {
         "type": "object",
         "properties": {
          "parsed": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "parsed",
           "title": "parsed"
          },
          "rawvalue": {
           "_name_": "rawvalue",
           "title": "rawvalue",
           "type": "string",
           "nullable": true
          },
          "value": {
           "_name_": "value",
           "title": "value",
           "type": "string",
           "nullable": true
          },
          "source": {
           "_name_": "source",
           "title": "source",
           "type": "string",
           "nullable": true
          },
          "source_info": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "source_info",
           "title": "source_info"
          }
         },
         "additionalProperties": false,
         "_name_": "usedbysnapshots",
         "title": "usedbysnapshots",
         "default": {},
         "_attrs_order_": [
          "parsed",
          "rawvalue",
          "value",
          "source",
          "source_info"
         ]
        },
        "available": {
         "type": "object",
         "properties": {
          "parsed": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "parsed",
           "title": "parsed"
          },
          "rawvalue": {
           "_name_": "rawvalue",
           "title": "rawvalue",
           "type": "string",
           "nullable": true
          },
          "value": {
           "_name_": "value",
           "title": "value",
           "type": "string",
           "nullable": true
          },
          "source": {
           "_name_": "source",
           "title": "source",
           "type": "string",
           "nullable": true
          },
          "source_info": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "source_info",
           "title": "source_info"
          }
         },
         "additionalProperties": false,
         "_name_": "available",
         "title": "available",
         "default": {},
         "_attrs_order_": [
          "parsed",
          "rawvalue",
          "value",
          "source",
          "source_info"
         ]
        },
        "special_small_block_size": {
         "type": "object",
         "properties": {
          "parsed": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "parsed",
           "title": "parsed"
          },
          "rawvalue": {
           "_name_": "rawvalue",
           "title": "rawvalue",
           "type": "string",
           "nullable": true
          },
          "value": {
           "_name_": "value",
           "title": "value",
           "type": "string",
           "nullable": true
          },
          "source": {
           "_name_": "source",
           "title": "source",
           "type": "string",
           "nullable": true
          },
          "source_info": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "source_info",
           "title": "source_info"
          }
         },
         "additionalProperties": false,
         "_name_": "special_small_block_size",
         "title": "special_small_block_size",
         "default": {},
         "_attrs_order_": [
          "parsed",
          "rawvalue",
          "value",
          "source",
          "source_info"
         ]
        },
        "pbkdf2iters": {
         "type": "object",
         "properties": {
          "parsed": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "parsed",
           "title": "parsed"
          },
          "rawvalue": {
           "_name_": "rawvalue",
           "title": "rawvalue",
           "type": "string",
           "nullable": true
          },
          "value": {
           "_name_": "value",
           "title": "value",
           "type": "string",
           "nullable": true
          },
          "source": {
           "_name_": "source",
           "title": "source",
           "type": "string",
           "nullable": true
          },
          "source_info": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "source_info",
           "title": "source_info"
          }
         },
         "additionalProperties": false,
         "_name_": "pbkdf2iters",
         "title": "pbkdf2iters",
         "default": {},
         "_attrs_order_": [
          "parsed",
          "rawvalue",
          "value",
          "source",
          "source_info"
         ]
        },
        "creation": {
         "type": "object",
         "properties": {
          "parsed": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "parsed",
           "title": "parsed"
          },
          "rawvalue": {
           "_name_": "rawvalue",
           "title": "rawvalue",
           "type": "string",
           "nullable": true
          },
          "value": {
           "_name_": "value",
           "title": "value",
           "type": "string",
           "nullable": true
          },
          "source": {
           "_name_": "source",
           "title": "source",
           "type": "string",
           "nullable": true
          },
          "source_info": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "source_info",
           "title": "source_info"
          }
         },
         "additionalProperties": false,
         "_name_": "creation",
         "title": "creation",
         "default": {},
         "_attrs_order_": [
          "parsed",
          "rawvalue",
          "value",
          "source",
          "source_info"
         ]
        },
        "snapdev": {
         "type": "object",
         "properties": {
          "parsed": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "parsed",
           "title": "parsed"
          },
          "rawvalue": {
           "_name_": "rawvalue",
           "title": "rawvalue",
           "type": "string",
           "nullable": true
          },
          "value": {
           "_name_": "value",
           "title": "value",
           "type": "string",
           "nullable": true
          },
          "source": {
           "_name_": "source",
           "title": "source",
           "type": "string",
           "nullable": true
          },
          "source_info": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "source_info",
           "title": "source_info"
          }
         },
         "additionalProperties": false,
         "_name_": "snapdev",
         "title": "snapdev",
         "default": {},
         "_attrs_order_": [
          "parsed",
          "rawvalue",
          "value",
          "source",
          "source_info"
         ]
        },
        "mountpoint": {
         "_name_": "mountpoint",
         "title": "mountpoint",
         "type": "string",
         "nullable": true
        }
       },
       "additionalProperties": false,
       "_name_": "pool_dataset_update_returns",
       "title": "pool_dataset_update_returns",
       "default": {},
       "_attrs_order_": [
        "id",
        "type",
        "name",
        "pool",
        "encrypted",
        "encryption_root",
        "key_loaded",
        "children",
        "user_properties",
        "locked",
        "comments",
        "quota_warning",
        "quota_critical",
        "refquota_warning",
        "refquota_critical",
        "managedby",
        "deduplication",
        "aclmode",
        "acltype",
        "xattr",
        "atime",
        "casesensitivity",
        "checksum",
        "exec",
        "sync",
        "compression",
        "compressratio",
        "origin",
        "quota",
        "refquota",
        "reservation",
        "refreservation",
        "copies",
        "snapdir",
        "readonly",
        "recordsize",
        "sparse",
        "volsize",
        "volblocksize",
        "key_format",
        "encryption_algorithm",
        "used",
        "usedbychildren",
        "usedbydataset",
        "usedbyrefreservation",
        "usedbysnapshots",
        "available",
        "special_small_block_size",
        "pbkdf2iters",
        "creation",
        "snapdev",
        "mountpoint"
       ]
      },
      "pool_dataset_attachments": {
       "type": "object",
       "properties": {}
      },
      "return_schema_of_pool_dataset_attachments": {
       "_name_": "attachments",
       "title": "attachments",
       "default": [],
       "type": "array",
       "items": {
        "type": "object",
        "properties": {
         "type": {
          "_name_": "type",
          "title": "type",
          "_required_": true,
          "type": "string"
         },
         "service": {
          "_name_": "service",
          "title": "service",
          "_required_": true,
          "type": [
           "string",
           "null"
          ]
         },
         "attachments": {
          "_name_": "attachments",
          "title": "attachments",
          "default": [],
          "_required_": false,
          "type": "array",
          "items": [
           {
            "_name_": "attachment_name",
            "title": "attachment_name",
            "_required_": false,
            "type": "string"
           }
          ]
         }
        },
        "additionalProperties": false,
        "_name_": "attachment",
        "title": "attachment",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "type",
         "service",
         "attachments"
        ]
       }
      },
      "pool_dataset_change_key_0": {
       "_name_": "id",
       "title": "id",
       "type": "string",
       "description": "Change encryption properties for `id` encrypted dataset."
      },
      "pool_dataset_change_key_1": {
       "type": "object",
       "properties": {
        "generate_key": {
         "type": "boolean",
         "_name_": "generate_key",
         "title": "generate_key",
         "default": false
        },
        "key_file": {
         "type": "boolean",
         "_name_": "key_file",
         "title": "key_file",
         "default": false
        },
        "pbkdf2iters": {
         "type": "integer",
         "_name_": "pbkdf2iters",
         "title": "pbkdf2iters",
         "default": 350000
        },
        "passphrase": {
         "_name_": "passphrase",
         "title": "passphrase",
         "default": null,
         "type": "string",
         "nullable": true
        },
        "key": {
         "_name_": "key",
         "title": "key",
         "default": null,
         "type": "string",
         "nullable": true
        }
       },
       "additionalProperties": false,
       "_name_": "change_key_options",
       "title": "change_key_options",
       "default": {},
       "_attrs_order_": [
        "generate_key",
        "key_file",
        "pbkdf2iters",
        "passphrase",
        "key"
       ]
      },
      "pool_dataset_change_key": {
       "type": "object",
       "properties": {
        "id": {
         "$ref": "#/components/schemas/pool_dataset_change_key_0"
        },
        "change_key_options": {
         "$ref": "#/components/schemas/pool_dataset_change_key_1"
        }
       }
      },
      "return_schema_of_pool_dataset_checksum_choices": {
       "type": "object",
       "properties": {
        "ON": {
         "_name_": "ON",
         "title": "ON",
         "type": "string",
         "enum": [
          "ON"
         ]
        },
        "FLETCHER2": {
         "_name_": "FLETCHER2",
         "title": "FLETCHER2",
         "type": "string",
         "enum": [
          "FLETCHER2"
         ]
        },
        "FLETCHER4": {
         "_name_": "FLETCHER4",
         "title": "FLETCHER4",
         "type": "string",
         "enum": [
          "FLETCHER4"
         ]
        },
        "SHA256": {
         "_name_": "SHA256",
         "title": "SHA256",
         "type": "string",
         "enum": [
          "SHA256"
         ]
        },
        "SHA512": {
         "_name_": "SHA512",
         "title": "SHA512",
         "type": "string",
         "enum": [
          "SHA512"
         ]
        },
        "SKEIN": {
         "_name_": "SKEIN",
         "title": "SKEIN",
         "type": "string",
         "enum": [
          "SKEIN"
         ]
        },
        "EDONR": {
         "_name_": "EDONR",
         "title": "EDONR",
         "type": "string",
         "enum": [
          "EDONR"
         ]
        },
        "BLAKE3": {
         "_name_": "BLAKE3",
         "title": "BLAKE3",
         "type": "string",
         "enum": [
          "BLAKE3"
         ]
        }
       },
       "additionalProperties": false,
       "_name_": "checksum_choices",
       "title": "checksum_choices",
       "default": {},
       "_attrs_order_": [
        "ON",
        "FLETCHER2",
        "FLETCHER4",
        "SHA256",
        "SHA512",
        "SKEIN",
        "EDONR",
        "BLAKE3"
       ]
      },
      "return_schema_of_pool_dataset_compression_choices": {
       "type": "object",
       "properties": {
        "ON": {
         "_name_": "ON",
         "title": "ON",
         "type": "string",
         "enum": [
          "ON"
         ]
        },
        "OFF": {
         "_name_": "OFF",
         "title": "OFF",
         "type": "string",
         "enum": [
          "OFF"
         ]
        },
        "LZ4": {
         "_name_": "LZ4",
         "title": "LZ4",
         "type": "string",
         "enum": [
          "LZ4"
         ]
        },
        "GZIP": {
         "_name_": "GZIP",
         "title": "GZIP",
         "type": "string",
         "enum": [
          "GZIP"
         ]
        },
        "GZIP-1": {
         "_name_": "GZIP-1",
         "title": "GZIP-1",
         "type": "string",
         "enum": [
          "GZIP-1"
         ]
        },
        "GZIP-9": {
         "_name_": "GZIP-9",
         "title": "GZIP-9",
         "type": "string",
         "enum": [
          "GZIP-9"
         ]
        },
        "ZSTD": {
         "_name_": "ZSTD",
         "title": "ZSTD",
         "type": "string",
         "enum": [
          "ZSTD"
         ]
        },
        "ZSTD-FAST": {
         "_name_": "ZSTD-FAST",
         "title": "ZSTD-FAST",
         "type": "string",
         "enum": [
          "ZSTD-FAST"
         ]
        },
        "ZLE": {
         "_name_": "ZLE",
         "title": "ZLE",
         "type": "string",
         "enum": [
          "ZLE"
         ]
        },
        "LZJB": {
         "_name_": "LZJB",
         "title": "LZJB",
         "type": "string",
         "enum": [
          "LZJB"
         ]
        },
        "ZSTD-1": {
         "_name_": "ZSTD-1",
         "title": "ZSTD-1",
         "type": "string",
         "enum": [
          "ZSTD-1"
         ]
        },
        "ZSTD-2": {
         "_name_": "ZSTD-2",
         "title": "ZSTD-2",
         "type": "string",
         "enum": [
          "ZSTD-2"
         ]
        },
        "ZSTD-3": {
         "_name_": "ZSTD-3",
         "title": "ZSTD-3",
         "type": "string",
         "enum": [
          "ZSTD-3"
         ]
        },
        "ZSTD-4": {
         "_name_": "ZSTD-4",
         "title": "ZSTD-4",
         "type": "string",
         "enum": [
          "ZSTD-4"
         ]
        },
        "ZSTD-5": {
         "_name_": "ZSTD-5",
         "title": "ZSTD-5",
         "type": "string",
         "enum": [
          "ZSTD-5"
         ]
        },
        "ZSTD-6": {
         "_name_": "ZSTD-6",
         "title": "ZSTD-6",
         "type": "string",
         "enum": [
          "ZSTD-6"
         ]
        },
        "ZSTD-7": {
         "_name_": "ZSTD-7",
         "title": "ZSTD-7",
         "type": "string",
         "enum": [
          "ZSTD-7"
         ]
        },
        "ZSTD-8": {
         "_name_": "ZSTD-8",
         "title": "ZSTD-8",
         "type": "string",
         "enum": [
          "ZSTD-8"
         ]
        },
        "ZSTD-9": {
         "_name_": "ZSTD-9",
         "title": "ZSTD-9",
         "type": "string",
         "enum": [
          "ZSTD-9"
         ]
        },
        "ZSTD-10": {
         "_name_": "ZSTD-10",
         "title": "ZSTD-10",
         "type": "string",
         "enum": [
          "ZSTD-10"
         ]
        },
        "ZSTD-11": {
         "_name_": "ZSTD-11",
         "title": "ZSTD-11",
         "type": "string",
         "enum": [
          "ZSTD-11"
         ]
        },
        "ZSTD-12": {
         "_name_": "ZSTD-12",
         "title": "ZSTD-12",
         "type": "string",
         "enum": [
          "ZSTD-12"
         ]
        },
        "ZSTD-13": {
         "_name_": "ZSTD-13",
         "title": "ZSTD-13",
         "type": "string",
         "enum": [
          "ZSTD-13"
         ]
        },
        "ZSTD-14": {
         "_name_": "ZSTD-14",
         "title": "ZSTD-14",
         "type": "string",
         "enum": [
          "ZSTD-14"
         ]
        },
        "ZSTD-15": {
         "_name_": "ZSTD-15",
         "title": "ZSTD-15",
         "type": "string",
         "enum": [
          "ZSTD-15"
         ]
        },
        "ZSTD-16": {
         "_name_": "ZSTD-16",
         "title": "ZSTD-16",
         "type": "string",
         "enum": [
          "ZSTD-16"
         ]
        },
        "ZSTD-17": {
         "_name_": "ZSTD-17",
         "title": "ZSTD-17",
         "type": "string",
         "enum": [
          "ZSTD-17"
         ]
        },
        "ZSTD-18": {
         "_name_": "ZSTD-18",
         "title": "ZSTD-18",
         "type": "string",
         "enum": [
          "ZSTD-18"
         ]
        },
        "ZSTD-19": {
         "_name_": "ZSTD-19",
         "title": "ZSTD-19",
         "type": "string",
         "enum": [
          "ZSTD-19"
         ]
        },
        "ZSTD-FAST-1": {
         "_name_": "ZSTD-FAST-1",
         "title": "ZSTD-FAST-1",
         "type": "string",
         "enum": [
          "ZSTD-FAST-1"
         ]
        },
        "ZSTD-FAST-2": {
         "_name_": "ZSTD-FAST-2",
         "title": "ZSTD-FAST-2",
         "type": "string",
         "enum": [
          "ZSTD-FAST-2"
         ]
        },
        "ZSTD-FAST-3": {
         "_name_": "ZSTD-FAST-3",
         "title": "ZSTD-FAST-3",
         "type": "string",
         "enum": [
          "ZSTD-FAST-3"
         ]
        },
        "ZSTD-FAST-4": {
         "_name_": "ZSTD-FAST-4",
         "title": "ZSTD-FAST-4",
         "type": "string",
         "enum": [
          "ZSTD-FAST-4"
         ]
        },
        "ZSTD-FAST-5": {
         "_name_": "ZSTD-FAST-5",
         "title": "ZSTD-FAST-5",
         "type": "string",
         "enum": [
          "ZSTD-FAST-5"
         ]
        },
        "ZSTD-FAST-6": {
         "_name_": "ZSTD-FAST-6",
         "title": "ZSTD-FAST-6",
         "type": "string",
         "enum": [
          "ZSTD-FAST-6"
         ]
        },
        "ZSTD-FAST-7": {
         "_name_": "ZSTD-FAST-7",
         "title": "ZSTD-FAST-7",
         "type": "string",
         "enum": [
          "ZSTD-FAST-7"
         ]
        },
        "ZSTD-FAST-8": {
         "_name_": "ZSTD-FAST-8",
         "title": "ZSTD-FAST-8",
         "type": "string",
         "enum": [
          "ZSTD-FAST-8"
         ]
        },
        "ZSTD-FAST-9": {
         "_name_": "ZSTD-FAST-9",
         "title": "ZSTD-FAST-9",
         "type": "string",
         "enum": [
          "ZSTD-FAST-9"
         ]
        },
        "ZSTD-FAST-10": {
         "_name_": "ZSTD-FAST-10",
         "title": "ZSTD-FAST-10",
         "type": "string",
         "enum": [
          "ZSTD-FAST-10"
         ]
        },
        "ZSTD-FAST-20": {
         "_name_": "ZSTD-FAST-20",
         "title": "ZSTD-FAST-20",
         "type": "string",
         "enum": [
          "ZSTD-FAST-20"
         ]
        },
        "ZSTD-FAST-30": {
         "_name_": "ZSTD-FAST-30",
         "title": "ZSTD-FAST-30",
         "type": "string",
         "enum": [
          "ZSTD-FAST-30"
         ]
        },
        "ZSTD-FAST-40": {
         "_name_": "ZSTD-FAST-40",
         "title": "ZSTD-FAST-40",
         "type": "string",
         "enum": [
          "ZSTD-FAST-40"
         ]
        },
        "ZSTD-FAST-50": {
         "_name_": "ZSTD-FAST-50",
         "title": "ZSTD-FAST-50",
         "type": "string",
         "enum": [
          "ZSTD-FAST-50"
         ]
        },
        "ZSTD-FAST-60": {
         "_name_": "ZSTD-FAST-60",
         "title": "ZSTD-FAST-60",
         "type": "string",
         "enum": [
          "ZSTD-FAST-60"
         ]
        },
        "ZSTD-FAST-70": {
         "_name_": "ZSTD-FAST-70",
         "title": "ZSTD-FAST-70",
         "type": "string",
         "enum": [
          "ZSTD-FAST-70"
         ]
        },
        "ZSTD-FAST-80": {
         "_name_": "ZSTD-FAST-80",
         "title": "ZSTD-FAST-80",
         "type": "string",
         "enum": [
          "ZSTD-FAST-80"
         ]
        },
        "ZSTD-FAST-90": {
         "_name_": "ZSTD-FAST-90",
         "title": "ZSTD-FAST-90",
         "type": "string",
         "enum": [
          "ZSTD-FAST-90"
         ]
        },
        "ZSTD-FAST-100": {
         "_name_": "ZSTD-FAST-100",
         "title": "ZSTD-FAST-100",
         "type": "string",
         "enum": [
          "ZSTD-FAST-100"
         ]
        },
        "ZSTD-FAST-500": {
         "_name_": "ZSTD-FAST-500",
         "title": "ZSTD-FAST-500",
         "type": "string",
         "enum": [
          "ZSTD-FAST-500"
         ]
        },
        "ZSTD-FAST-1000": {
         "_name_": "ZSTD-FAST-1000",
         "title": "ZSTD-FAST-1000",
         "type": "string",
         "enum": [
          "ZSTD-FAST-1000"
         ]
        }
       },
       "additionalProperties": false,
       "_name_": "compression_choices",
       "title": "compression_choices",
       "default": {},
       "_attrs_order_": [
        "ON",
        "OFF",
        "LZ4",
        "GZIP",
        "GZIP-1",
        "GZIP-9",
        "ZSTD",
        "ZSTD-FAST",
        "ZLE",
        "LZJB",
        "ZSTD-1",
        "ZSTD-2",
        "ZSTD-3",
        "ZSTD-4",
        "ZSTD-5",
        "ZSTD-6",
        "ZSTD-7",
        "ZSTD-8",
        "ZSTD-9",
        "ZSTD-10",
        "ZSTD-11",
        "ZSTD-12",
        "ZSTD-13",
        "ZSTD-14",
        "ZSTD-15",
        "ZSTD-16",
        "ZSTD-17",
        "ZSTD-18",
        "ZSTD-19",
        "ZSTD-FAST-1",
        "ZSTD-FAST-2",
        "ZSTD-FAST-3",
        "ZSTD-FAST-4",
        "ZSTD-FAST-5",
        "ZSTD-FAST-6",
        "ZSTD-FAST-7",
        "ZSTD-FAST-8",
        "ZSTD-FAST-9",
        "ZSTD-FAST-10",
        "ZSTD-FAST-20",
        "ZSTD-FAST-30",
        "ZSTD-FAST-40",
        "ZSTD-FAST-50",
        "ZSTD-FAST-60",
        "ZSTD-FAST-70",
        "ZSTD-FAST-80",
        "ZSTD-FAST-90",
        "ZSTD-FAST-100",
        "ZSTD-FAST-500",
        "ZSTD-FAST-1000"
       ]
      },
      "return_schema_of_pool_dataset_details": {
       "items": {
        "type": "object"
       },
       "title": "result",
       "type": "array",
       "_name_": "result"
      },
      "return_schema_of_pool_dataset_encryption_algorithm_choices": {
       "type": "object",
       "properties": {
        "AES-128-CCM": {
         "_name_": "AES-128-CCM",
         "title": "AES-128-CCM",
         "type": "string",
         "enum": [
          "AES-128-CCM"
         ]
        },
        "AES-192-CCM": {
         "_name_": "AES-192-CCM",
         "title": "AES-192-CCM",
         "type": "string",
         "enum": [
          "AES-192-CCM"
         ]
        },
        "AES-256-CCM": {
         "_name_": "AES-256-CCM",
         "title": "AES-256-CCM",
         "type": "string",
         "enum": [
          "AES-256-CCM"
         ]
        },
        "AES-128-GCM": {
         "_name_": "AES-128-GCM",
         "title": "AES-128-GCM",
         "type": "string",
         "enum": [
          "AES-128-GCM"
         ]
        },
        "AES-192-GCM": {
         "_name_": "AES-192-GCM",
         "title": "AES-192-GCM",
         "type": "string",
         "enum": [
          "AES-192-GCM"
         ]
        },
        "AES-256-GCM": {
         "_name_": "AES-256-GCM",
         "title": "AES-256-GCM",
         "type": "string",
         "enum": [
          "AES-256-GCM"
         ]
        }
       },
       "additionalProperties": false,
       "_name_": "encryption_algorithm_choices",
       "title": "encryption_algorithm_choices",
       "default": {},
       "_attrs_order_": [
        "AES-128-CCM",
        "AES-192-CCM",
        "AES-256-CCM",
        "AES-128-GCM",
        "AES-192-GCM",
        "AES-256-GCM"
       ]
      },
      "pool_dataset_encryption_summary_0": {
       "_name_": "id",
       "title": "id",
       "type": "string",
       "description": "Retrieve summary of all encrypted roots under `id`.\nIt should be noted that there are 2 keys which show if a recursive unlock operation is\ndone for `id`, which dataset will be unlocked and if not why it won't be unlocked. The keys\nnamely are \"unlock_successful\" and \"unlock_error\". The former is a boolean value showing if unlock\nwould succeed/fail. The latter is description why it failed if it failed."
      },
      "pool_dataset_encryption_summary_1": {
       "type": "object",
       "properties": {
        "key_file": {
         "type": "boolean",
         "_name_": "key_file",
         "title": "key_file",
         "default": false
        },
        "force": {
         "type": "boolean",
         "_name_": "force",
         "title": "force",
         "default": false
        },
        "datasets": {
         "_name_": "datasets",
         "title": "datasets",
         "default": [],
         "type": "array",
         "items": {
          "type": "object",
          "properties": {
           "force": {
            "type": "boolean",
            "_name_": "force",
            "title": "force",
            "default": false,
            "_required_": true
           },
           "name": {
            "_name_": "name",
            "title": "name",
            "_required_": true,
            "type": "string"
           },
           "key": {
            "_name_": "key",
            "title": "key",
            "_required_": false,
            "type": "string"
           },
           "passphrase": {
            "_name_": "passphrase",
            "title": "passphrase",
            "_required_": false,
            "type": "string"
           }
          },
          "additionalProperties": false,
          "_name_": "dataset",
          "title": "dataset",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "force",
           "name",
           "key",
           "passphrase"
          ]
         }
        }
       },
       "additionalProperties": false,
       "_name_": "encryption_root_summary_options",
       "title": "encryption_root_summary_options",
       "default": {},
       "_attrs_order_": [
        "key_file",
        "force",
        "datasets"
       ]
      },
      "pool_dataset_encryption_summary": {
       "type": "object",
       "properties": {
        "id": {
         "$ref": "#/components/schemas/pool_dataset_encryption_summary_0"
        },
        "encryption_root_summary_options": {
         "$ref": "#/components/schemas/pool_dataset_encryption_summary_1"
        }
       }
      },
      "return_schema_of_pool_dataset_encryption_summary": {
       "_name_": "encryption_summary",
       "title": "encryption_summary",
       "default": [],
       "type": "array",
       "items": {
        "type": "object",
        "properties": {
         "name": {
          "_name_": "name",
          "title": "name",
          "_required_": true,
          "type": "string"
         },
         "key_format": {
          "_name_": "key_format",
          "title": "key_format",
          "_required_": true,
          "type": "string"
         },
         "key_present_in_database": {
          "type": "boolean",
          "_name_": "key_present_in_database",
          "title": "key_present_in_database",
          "_required_": true
         },
         "valid_key": {
          "type": "boolean",
          "_name_": "valid_key",
          "title": "valid_key",
          "_required_": true
         },
         "locked": {
          "type": "boolean",
          "_name_": "locked",
          "title": "locked",
          "_required_": true
         },
         "unlock_error": {
          "_name_": "unlock_error",
          "title": "unlock_error",
          "_required_": true,
          "type": [
           "string",
           "null"
          ]
         },
         "unlock_successful": {
          "type": "boolean",
          "_name_": "unlock_successful",
          "title": "unlock_successful",
          "_required_": true
         }
        },
        "additionalProperties": false,
        "_name_": "dataset_encryption_summary",
        "title": "dataset_encryption_summary",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "name",
         "key_format",
         "key_present_in_database",
         "valid_key",
         "locked",
         "unlock_error",
         "unlock_successful"
        ]
       }
      },
      "pool_dataset_export_key_0": {
       "_name_": "id",
       "title": "id",
       "type": "string",
       "description": "Export own encryption key for dataset `id`. If `download` is `true`, key will be downloaded in a json file\nwhere the same file can be used to unlock the dataset, otherwise it will be returned as string."
      },
      "pool_dataset_export_key_1": {
       "type": "boolean",
       "_name_": "download",
       "title": "download",
       "default": false,
       "description": "Export own encryption key for dataset `id`. If `download` is `true`, key will be downloaded in a json file\nwhere the same file can be used to unlock the dataset, otherwise it will be returned as string."
      },
      "pool_dataset_export_key": {
       "type": "object",
       "properties": {
        "id": {
         "$ref": "#/components/schemas/pool_dataset_export_key_0"
        },
        "download": {
         "$ref": "#/components/schemas/pool_dataset_export_key_1"
        }
       }
      },
      "return_schema_of_pool_dataset_export_key": {
       "_name_": "key",
       "title": "key",
       "type": "string",
       "nullable": true
      },
      "pool_dataset_export_keys": {
       "_name_": "id",
       "title": "id",
       "type": "string",
       "description": "Export keys for `id` and its children which are stored in the system. The exported file is a JSON file\nwhich has a dictionary containing dataset names as keys and their keys as the value."
      },
      "pool_dataset_export_keys_for_replication": {
       "type": "integer",
       "_name_": "id",
       "title": "id",
       "description": "Export keys for replication task `id` for source dataset(s) which are stored in the system. The exported file\nis a JSON file which has a dictionary containing dataset names as keys and their keys as the value."
      },
      "pool_dataset_get_instance_0": {
       "anyOf": [
        {
         "type": "string"
        },
        {
         "type": "integer"
        },
        {
         "type": "boolean"
        },
        {
         "type": "object"
        },
        {
         "type": "array"
        }
       ],
       "nullable": false,
       "_name_": "id",
       "title": "id",
       "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised."
      },
      "pool_dataset_get_instance_1": {
       "type": "object",
       "properties": {
        "relationships": {
         "type": "boolean",
         "_name_": "relationships",
         "title": "relationships",
         "default": true
        },
        "extend": {
         "_name_": "extend",
         "title": "extend",
         "default": null,
         "type": "string",
         "nullable": true
        },
        "extend_context": {
         "_name_": "extend_context",
         "title": "extend_context",
         "default": null,
         "type": "string",
         "nullable": true
        },
        "prefix": {
         "_name_": "prefix",
         "title": "prefix",
         "default": null,
         "type": "string",
         "nullable": true
        },
        "extra": {
         "type": "object",
         "properties": {},
         "additionalProperties": true,
         "_name_": "extra",
         "title": "extra",
         "default": {},
         "_attrs_order_": []
        },
        "order_by": {
         "_name_": "order_by",
         "title": "order_by",
         "default": [],
         "type": "array",
         "items": {}
        },
        "select": {
         "_name_": "select",
         "title": "select",
         "default": [],
         "type": "array",
         "items": {}
        },
        "count": {
         "type": "boolean",
         "_name_": "count",
         "title": "count",
         "default": false
        },
        "get": {
         "type": "boolean",
         "_name_": "get",
         "title": "get",
         "default": false
        },
        "offset": {
         "type": "integer",
         "_name_": "offset",
         "title": "offset",
         "default": 0
        },
        "limit": {
         "type": "integer",
         "_name_": "limit",
         "title": "limit",
         "default": 0
        },
        "force_sql_filters": {
         "type": "boolean",
         "_name_": "force_sql_filters",
         "title": "force_sql_filters",
         "default": true
        }
       },
       "additionalProperties": false,
       "_name_": "query-options-get_instance",
       "title": "query-options-get_instance",
       "default": {},
       "_attrs_order_": [
        "relationships",
        "extend",
        "extend_context",
        "prefix",
        "extra",
        "order_by",
        "select",
        "count",
        "get",
        "offset",
        "limit",
        "force_sql_filters"
       ]
      },
      "pool_dataset_get_instance": {
       "type": "object",
       "properties": {
        "id": {
         "$ref": "#/components/schemas/pool_dataset_get_instance_0"
        },
        "query-options-get_instance": {
         "$ref": "#/components/schemas/pool_dataset_get_instance_1"
        }
       }
      },
      "return_schema_of_pool_dataset_get_instance": {
       "type": "object",
       "properties": {
        "id": {
         "_name_": "id",
         "title": "id",
         "type": "string",
         "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised."
        },
        "type": {
         "_name_": "type",
         "title": "type",
         "type": "string"
        },
        "name": {
         "_name_": "name",
         "title": "name",
         "type": "string"
        },
        "pool": {
         "_name_": "pool",
         "title": "pool",
         "type": "string"
        },
        "encrypted": {
         "type": "boolean",
         "_name_": "encrypted",
         "title": "encrypted"
        },
        "encryption_root": {
         "_name_": "encryption_root",
         "title": "encryption_root",
         "type": "string",
         "nullable": true
        },
        "key_loaded": {
         "type": "boolean",
         "_name_": "key_loaded",
         "title": "key_loaded",
         "nullable": true
        },
        "children": {
         "_name_": "children",
         "title": "children",
         "default": [],
         "type": "array",
         "items": {}
        },
        "user_properties": {
         "type": "object",
         "properties": {},
         "additionalProperties": true,
         "_name_": "user_properties",
         "title": "user_properties",
         "default": {},
         "_attrs_order_": []
        },
        "locked": {
         "type": "boolean",
         "_name_": "locked",
         "title": "locked"
        },
        "comments": {
         "type": "object",
         "properties": {
          "parsed": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "parsed",
           "title": "parsed"
          },
          "rawvalue": {
           "_name_": "rawvalue",
           "title": "rawvalue",
           "type": "string",
           "nullable": true
          },
          "value": {
           "_name_": "value",
           "title": "value",
           "type": "string",
           "nullable": true
          },
          "source": {
           "_name_": "source",
           "title": "source",
           "type": "string",
           "nullable": true
          },
          "source_info": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "source_info",
           "title": "source_info"
          }
         },
         "additionalProperties": false,
         "_name_": "comments",
         "title": "comments",
         "default": {},
         "_attrs_order_": [
          "parsed",
          "rawvalue",
          "value",
          "source",
          "source_info"
         ]
        },
        "quota_warning": {
         "type": "object",
         "properties": {
          "parsed": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "parsed",
           "title": "parsed"
          },
          "rawvalue": {
           "_name_": "rawvalue",
           "title": "rawvalue",
           "type": "string",
           "nullable": true
          },
          "value": {
           "_name_": "value",
           "title": "value",
           "type": "string",
           "nullable": true
          },
          "source": {
           "_name_": "source",
           "title": "source",
           "type": "string",
           "nullable": true
          },
          "source_info": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "source_info",
           "title": "source_info"
          }
         },
         "additionalProperties": false,
         "_name_": "quota_warning",
         "title": "quota_warning",
         "default": {},
         "_attrs_order_": [
          "parsed",
          "rawvalue",
          "value",
          "source",
          "source_info"
         ]
        },
        "quota_critical": {
         "type": "object",
         "properties": {
          "parsed": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "parsed",
           "title": "parsed"
          },
          "rawvalue": {
           "_name_": "rawvalue",
           "title": "rawvalue",
           "type": "string",
           "nullable": true
          },
          "value": {
           "_name_": "value",
           "title": "value",
           "type": "string",
           "nullable": true
          },
          "source": {
           "_name_": "source",
           "title": "source",
           "type": "string",
           "nullable": true
          },
          "source_info": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "source_info",
           "title": "source_info"
          }
         },
         "additionalProperties": false,
         "_name_": "quota_critical",
         "title": "quota_critical",
         "default": {},
         "_attrs_order_": [
          "parsed",
          "rawvalue",
          "value",
          "source",
          "source_info"
         ]
        },
        "refquota_warning": {
         "type": "object",
         "properties": {
          "parsed": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "parsed",
           "title": "parsed"
          },
          "rawvalue": {
           "_name_": "rawvalue",
           "title": "rawvalue",
           "type": "string",
           "nullable": true
          },
          "value": {
           "_name_": "value",
           "title": "value",
           "type": "string",
           "nullable": true
          },
          "source": {
           "_name_": "source",
           "title": "source",
           "type": "string",
           "nullable": true
          },
          "source_info": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "source_info",
           "title": "source_info"
          }
         },
         "additionalProperties": false,
         "_name_": "refquota_warning",
         "title": "refquota_warning",
         "default": {},
         "_attrs_order_": [
          "parsed",
          "rawvalue",
          "value",
          "source",
          "source_info"
         ]
        },
        "refquota_critical": {
         "type": "object",
         "properties": {
          "parsed": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "parsed",
           "title": "parsed"
          },
          "rawvalue": {
           "_name_": "rawvalue",
           "title": "rawvalue",
           "type": "string",
           "nullable": true
          },
          "value": {
           "_name_": "value",
           "title": "value",
           "type": "string",
           "nullable": true
          },
          "source": {
           "_name_": "source",
           "title": "source",
           "type": "string",
           "nullable": true
          },
          "source_info": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "source_info",
           "title": "source_info"
          }
         },
         "additionalProperties": false,
         "_name_": "refquota_critical",
         "title": "refquota_critical",
         "default": {},
         "_attrs_order_": [
          "parsed",
          "rawvalue",
          "value",
          "source",
          "source_info"
         ]
        },
        "managedby": {
         "type": "object",
         "properties": {
          "parsed": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "parsed",
           "title": "parsed"
          },
          "rawvalue": {
           "_name_": "rawvalue",
           "title": "rawvalue",
           "type": "string",
           "nullable": true
          },
          "value": {
           "_name_": "value",
           "title": "value",
           "type": "string",
           "nullable": true
          },
          "source": {
           "_name_": "source",
           "title": "source",
           "type": "string",
           "nullable": true
          },
          "source_info": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "source_info",
           "title": "source_info"
          }
         },
         "additionalProperties": false,
         "_name_": "managedby",
         "title": "managedby",
         "default": {},
         "_attrs_order_": [
          "parsed",
          "rawvalue",
          "value",
          "source",
          "source_info"
         ]
        },
        "deduplication": {
         "type": "object",
         "properties": {
          "parsed": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "parsed",
           "title": "parsed"
          },
          "rawvalue": {
           "_name_": "rawvalue",
           "title": "rawvalue",
           "type": "string",
           "nullable": true
          },
          "value": {
           "_name_": "value",
           "title": "value",
           "type": "string",
           "nullable": true
          },
          "source": {
           "_name_": "source",
           "title": "source",
           "type": "string",
           "nullable": true
          },
          "source_info": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "source_info",
           "title": "source_info"
          }
         },
         "additionalProperties": false,
         "_name_": "deduplication",
         "title": "deduplication",
         "default": {},
         "_attrs_order_": [
          "parsed",
          "rawvalue",
          "value",
          "source",
          "source_info"
         ]
        },
        "aclmode": {
         "type": "object",
         "properties": {
          "parsed": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "parsed",
           "title": "parsed"
          },
          "rawvalue": {
           "_name_": "rawvalue",
           "title": "rawvalue",
           "type": "string",
           "nullable": true
          },
          "value": {
           "_name_": "value",
           "title": "value",
           "type": "string",
           "nullable": true
          },
          "source": {
           "_name_": "source",
           "title": "source",
           "type": "string",
           "nullable": true
          },
          "source_info": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "source_info",
           "title": "source_info"
          }
         },
         "additionalProperties": false,
         "_name_": "aclmode",
         "title": "aclmode",
         "default": {},
         "_attrs_order_": [
          "parsed",
          "rawvalue",
          "value",
          "source",
          "source_info"
         ]
        },
        "acltype": {
         "type": "object",
         "properties": {
          "parsed": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "parsed",
           "title": "parsed"
          },
          "rawvalue": {
           "_name_": "rawvalue",
           "title": "rawvalue",
           "type": "string",
           "nullable": true
          },
          "value": {
           "_name_": "value",
           "title": "value",
           "type": "string",
           "nullable": true
          },
          "source": {
           "_name_": "source",
           "title": "source",
           "type": "string",
           "nullable": true
          },
          "source_info": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "source_info",
           "title": "source_info"
          }
         },
         "additionalProperties": false,
         "_name_": "acltype",
         "title": "acltype",
         "default": {},
         "_attrs_order_": [
          "parsed",
          "rawvalue",
          "value",
          "source",
          "source_info"
         ]
        },
        "xattr": {
         "type": "object",
         "properties": {
          "parsed": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "parsed",
           "title": "parsed"
          },
          "rawvalue": {
           "_name_": "rawvalue",
           "title": "rawvalue",
           "type": "string",
           "nullable": true
          },
          "value": {
           "_name_": "value",
           "title": "value",
           "type": "string",
           "nullable": true
          },
          "source": {
           "_name_": "source",
           "title": "source",
           "type": "string",
           "nullable": true
          },
          "source_info": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "source_info",
           "title": "source_info"
          }
         },
         "additionalProperties": false,
         "_name_": "xattr",
         "title": "xattr",
         "default": {},
         "_attrs_order_": [
          "parsed",
          "rawvalue",
          "value",
          "source",
          "source_info"
         ]
        },
        "atime": {
         "type": "object",
         "properties": {
          "parsed": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "parsed",
           "title": "parsed"
          },
          "rawvalue": {
           "_name_": "rawvalue",
           "title": "rawvalue",
           "type": "string",
           "nullable": true
          },
          "value": {
           "_name_": "value",
           "title": "value",
           "type": "string",
           "nullable": true
          },
          "source": {
           "_name_": "source",
           "title": "source",
           "type": "string",
           "nullable": true
          },
          "source_info": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "source_info",
           "title": "source_info"
          }
         },
         "additionalProperties": false,
         "_name_": "atime",
         "title": "atime",
         "default": {},
         "_attrs_order_": [
          "parsed",
          "rawvalue",
          "value",
          "source",
          "source_info"
         ]
        },
        "casesensitivity": {
         "type": "object",
         "properties": {
          "parsed": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "parsed",
           "title": "parsed"
          },
          "rawvalue": {
           "_name_": "rawvalue",
           "title": "rawvalue",
           "type": "string",
           "nullable": true
          },
          "value": {
           "_name_": "value",
           "title": "value",
           "type": "string",
           "nullable": true
          },
          "source": {
           "_name_": "source",
           "title": "source",
           "type": "string",
           "nullable": true
          },
          "source_info": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "source_info",
           "title": "source_info"
          }
         },
         "additionalProperties": false,
         "_name_": "casesensitivity",
         "title": "casesensitivity",
         "default": {},
         "_attrs_order_": [
          "parsed",
          "rawvalue",
          "value",
          "source",
          "source_info"
         ]
        },
        "checksum": {
         "type": "object",
         "properties": {
          "parsed": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "parsed",
           "title": "parsed"
          },
          "rawvalue": {
           "_name_": "rawvalue",
           "title": "rawvalue",
           "type": "string",
           "nullable": true
          },
          "value": {
           "_name_": "value",
           "title": "value",
           "type": "string",
           "nullable": true
          },
          "source": {
           "_name_": "source",
           "title": "source",
           "type": "string",
           "nullable": true
          },
          "source_info": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "source_info",
           "title": "source_info"
          }
         },
         "additionalProperties": false,
         "_name_": "checksum",
         "title": "checksum",
         "default": {},
         "_attrs_order_": [
          "parsed",
          "rawvalue",
          "value",
          "source",
          "source_info"
         ]
        },
        "exec": {
         "type": "object",
         "properties": {
          "parsed": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "parsed",
           "title": "parsed"
          },
          "rawvalue": {
           "_name_": "rawvalue",
           "title": "rawvalue",
           "type": "string",
           "nullable": true
          },
          "value": {
           "_name_": "value",
           "title": "value",
           "type": "string",
           "nullable": true
          },
          "source": {
           "_name_": "source",
           "title": "source",
           "type": "string",
           "nullable": true
          },
          "source_info": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "source_info",
           "title": "source_info"
          }
         },
         "additionalProperties": false,
         "_name_": "exec",
         "title": "exec",
         "default": {},
         "_attrs_order_": [
          "parsed",
          "rawvalue",
          "value",
          "source",
          "source_info"
         ]
        },
        "sync": {
         "type": "object",
         "properties": {
          "parsed": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "parsed",
           "title": "parsed"
          },
          "rawvalue": {
           "_name_": "rawvalue",
           "title": "rawvalue",
           "type": "string",
           "nullable": true
          },
          "value": {
           "_name_": "value",
           "title": "value",
           "type": "string",
           "nullable": true
          },
          "source": {
           "_name_": "source",
           "title": "source",
           "type": "string",
           "nullable": true
          },
          "source_info": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "source_info",
           "title": "source_info"
          }
         },
         "additionalProperties": false,
         "_name_": "sync",
         "title": "sync",
         "default": {},
         "_attrs_order_": [
          "parsed",
          "rawvalue",
          "value",
          "source",
          "source_info"
         ]
        },
        "compression": {
         "type": "object",
         "properties": {
          "parsed": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "parsed",
           "title": "parsed"
          },
          "rawvalue": {
           "_name_": "rawvalue",
           "title": "rawvalue",
           "type": "string",
           "nullable": true
          },
          "value": {
           "_name_": "value",
           "title": "value",
           "type": "string",
           "nullable": true
          },
          "source": {
           "_name_": "source",
           "title": "source",
           "type": "string",
           "nullable": true
          },
          "source_info": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "source_info",
           "title": "source_info"
          }
         },
         "additionalProperties": false,
         "_name_": "compression",
         "title": "compression",
         "default": {},
         "_attrs_order_": [
          "parsed",
          "rawvalue",
          "value",
          "source",
          "source_info"
         ]
        },
        "compressratio": {
         "type": "object",
         "properties": {
          "parsed": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "parsed",
           "title": "parsed"
          },
          "rawvalue": {
           "_name_": "rawvalue",
           "title": "rawvalue",
           "type": "string",
           "nullable": true
          },
          "value": {
           "_name_": "value",
           "title": "value",
           "type": "string",
           "nullable": true
          },
          "source": {
           "_name_": "source",
           "title": "source",
           "type": "string",
           "nullable": true
          },
          "source_info": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "source_info",
           "title": "source_info"
          }
         },
         "additionalProperties": false,
         "_name_": "compressratio",
         "title": "compressratio",
         "default": {},
         "_attrs_order_": [
          "parsed",
          "rawvalue",
          "value",
          "source",
          "source_info"
         ]
        },
        "origin": {
         "type": "object",
         "properties": {
          "parsed": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "parsed",
           "title": "parsed"
          },
          "rawvalue": {
           "_name_": "rawvalue",
           "title": "rawvalue",
           "type": "string",
           "nullable": true
          },
          "value": {
           "_name_": "value",
           "title": "value",
           "type": "string",
           "nullable": true
          },
          "source": {
           "_name_": "source",
           "title": "source",
           "type": "string",
           "nullable": true
          },
          "source_info": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "source_info",
           "title": "source_info"
          }
         },
         "additionalProperties": false,
         "_name_": "origin",
         "title": "origin",
         "default": {},
         "_attrs_order_": [
          "parsed",
          "rawvalue",
          "value",
          "source",
          "source_info"
         ]
        },
        "quota": {
         "type": "object",
         "properties": {
          "parsed": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "parsed",
           "title": "parsed"
          },
          "rawvalue": {
           "_name_": "rawvalue",
           "title": "rawvalue",
           "type": "string",
           "nullable": true
          },
          "value": {
           "_name_": "value",
           "title": "value",
           "type": "string",
           "nullable": true
          },
          "source": {
           "_name_": "source",
           "title": "source",
           "type": "string",
           "nullable": true
          },
          "source_info": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "source_info",
           "title": "source_info"
          }
         },
         "additionalProperties": false,
         "_name_": "quota",
         "title": "quota",
         "default": {},
         "_attrs_order_": [
          "parsed",
          "rawvalue",
          "value",
          "source",
          "source_info"
         ]
        },
        "refquota": {
         "type": "object",
         "properties": {
          "parsed": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "parsed",
           "title": "parsed"
          },
          "rawvalue": {
           "_name_": "rawvalue",
           "title": "rawvalue",
           "type": "string",
           "nullable": true
          },
          "value": {
           "_name_": "value",
           "title": "value",
           "type": "string",
           "nullable": true
          },
          "source": {
           "_name_": "source",
           "title": "source",
           "type": "string",
           "nullable": true
          },
          "source_info": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "source_info",
           "title": "source_info"
          }
         },
         "additionalProperties": false,
         "_name_": "refquota",
         "title": "refquota",
         "default": {},
         "_attrs_order_": [
          "parsed",
          "rawvalue",
          "value",
          "source",
          "source_info"
         ]
        },
        "reservation": {
         "type": "object",
         "properties": {
          "parsed": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "parsed",
           "title": "parsed"
          },
          "rawvalue": {
           "_name_": "rawvalue",
           "title": "rawvalue",
           "type": "string",
           "nullable": true
          },
          "value": {
           "_name_": "value",
           "title": "value",
           "type": "string",
           "nullable": true
          },
          "source": {
           "_name_": "source",
           "title": "source",
           "type": "string",
           "nullable": true
          },
          "source_info": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "source_info",
           "title": "source_info"
          }
         },
         "additionalProperties": false,
         "_name_": "reservation",
         "title": "reservation",
         "default": {},
         "_attrs_order_": [
          "parsed",
          "rawvalue",
          "value",
          "source",
          "source_info"
         ]
        },
        "refreservation": {
         "type": "object",
         "properties": {
          "parsed": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "parsed",
           "title": "parsed"
          },
          "rawvalue": {
           "_name_": "rawvalue",
           "title": "rawvalue",
           "type": "string",
           "nullable": true
          },
          "value": {
           "_name_": "value",
           "title": "value",
           "type": "string",
           "nullable": true
          },
          "source": {
           "_name_": "source",
           "title": "source",
           "type": "string",
           "nullable": true
          },
          "source_info": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "source_info",
           "title": "source_info"
          }
         },
         "additionalProperties": false,
         "_name_": "refreservation",
         "title": "refreservation",
         "default": {},
         "_attrs_order_": [
          "parsed",
          "rawvalue",
          "value",
          "source",
          "source_info"
         ]
        },
        "copies": {
         "type": "object",
         "properties": {
          "parsed": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "parsed",
           "title": "parsed"
          },
          "rawvalue": {
           "_name_": "rawvalue",
           "title": "rawvalue",
           "type": "string",
           "nullable": true
          },
          "value": {
           "_name_": "value",
           "title": "value",
           "type": "string",
           "nullable": true
          },
          "source": {
           "_name_": "source",
           "title": "source",
           "type": "string",
           "nullable": true
          },
          "source_info": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "source_info",
           "title": "source_info"
          }
         },
         "additionalProperties": false,
         "_name_": "copies",
         "title": "copies",
         "default": {},
         "_attrs_order_": [
          "parsed",
          "rawvalue",
          "value",
          "source",
          "source_info"
         ]
        },
        "snapdir": {
         "type": "object",
         "properties": {
          "parsed": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "parsed",
           "title": "parsed"
          },
          "rawvalue": {
           "_name_": "rawvalue",
           "title": "rawvalue",
           "type": "string",
           "nullable": true
          },
          "value": {
           "_name_": "value",
           "title": "value",
           "type": "string",
           "nullable": true
          },
          "source": {
           "_name_": "source",
           "title": "source",
           "type": "string",
           "nullable": true
          },
          "source_info": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "source_info",
           "title": "source_info"
          }
         },
         "additionalProperties": false,
         "_name_": "snapdir",
         "title": "snapdir",
         "default": {},
         "_attrs_order_": [
          "parsed",
          "rawvalue",
          "value",
          "source",
          "source_info"
         ]
        },
        "readonly": {
         "type": "object",
         "properties": {
          "parsed": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "parsed",
           "title": "parsed"
          },
          "rawvalue": {
           "_name_": "rawvalue",
           "title": "rawvalue",
           "type": "string",
           "nullable": true
          },
          "value": {
           "_name_": "value",
           "title": "value",
           "type": "string",
           "nullable": true
          },
          "source": {
           "_name_": "source",
           "title": "source",
           "type": "string",
           "nullable": true
          },
          "source_info": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "source_info",
           "title": "source_info"
          }
         },
         "additionalProperties": false,
         "_name_": "readonly",
         "title": "readonly",
         "default": {},
         "_attrs_order_": [
          "parsed",
          "rawvalue",
          "value",
          "source",
          "source_info"
         ]
        },
        "recordsize": {
         "type": "object",
         "properties": {
          "parsed": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "parsed",
           "title": "parsed"
          },
          "rawvalue": {
           "_name_": "rawvalue",
           "title": "rawvalue",
           "type": "string",
           "nullable": true
          },
          "value": {
           "_name_": "value",
           "title": "value",
           "type": "string",
           "nullable": true
          },
          "source": {
           "_name_": "source",
           "title": "source",
           "type": "string",
           "nullable": true
          },
          "source_info": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "source_info",
           "title": "source_info"
          }
         },
         "additionalProperties": false,
         "_name_": "recordsize",
         "title": "recordsize",
         "default": {},
         "_attrs_order_": [
          "parsed",
          "rawvalue",
          "value",
          "source",
          "source_info"
         ]
        },
        "sparse": {
         "type": "object",
         "properties": {
          "parsed": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "parsed",
           "title": "parsed"
          },
          "rawvalue": {
           "_name_": "rawvalue",
           "title": "rawvalue",
           "type": "string",
           "nullable": true
          },
          "value": {
           "_name_": "value",
           "title": "value",
           "type": "string",
           "nullable": true
          },
          "source": {
           "_name_": "source",
           "title": "source",
           "type": "string",
           "nullable": true
          },
          "source_info": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "source_info",
           "title": "source_info"
          }
         },
         "additionalProperties": false,
         "_name_": "sparse",
         "title": "sparse",
         "default": {},
         "_attrs_order_": [
          "parsed",
          "rawvalue",
          "value",
          "source",
          "source_info"
         ]
        },
        "volsize": {
         "type": "object",
         "properties": {
          "parsed": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "parsed",
           "title": "parsed"
          },
          "rawvalue": {
           "_name_": "rawvalue",
           "title": "rawvalue",
           "type": "string",
           "nullable": true
          },
          "value": {
           "_name_": "value",
           "title": "value",
           "type": "string",
           "nullable": true
          },
          "source": {
           "_name_": "source",
           "title": "source",
           "type": "string",
           "nullable": true
          },
          "source_info": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "source_info",
           "title": "source_info"
          }
         },
         "additionalProperties": false,
         "_name_": "volsize",
         "title": "volsize",
         "default": {},
         "_attrs_order_": [
          "parsed",
          "rawvalue",
          "value",
          "source",
          "source_info"
         ]
        },
        "volblocksize": {
         "type": "object",
         "properties": {
          "parsed": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "parsed",
           "title": "parsed"
          },
          "rawvalue": {
           "_name_": "rawvalue",
           "title": "rawvalue",
           "type": "string",
           "nullable": true
          },
          "value": {
           "_name_": "value",
           "title": "value",
           "type": "string",
           "nullable": true
          },
          "source": {
           "_name_": "source",
           "title": "source",
           "type": "string",
           "nullable": true
          },
          "source_info": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "source_info",
           "title": "source_info"
          }
         },
         "additionalProperties": false,
         "_name_": "volblocksize",
         "title": "volblocksize",
         "default": {},
         "_attrs_order_": [
          "parsed",
          "rawvalue",
          "value",
          "source",
          "source_info"
         ]
        },
        "key_format": {
         "type": "object",
         "properties": {
          "parsed": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "parsed",
           "title": "parsed"
          },
          "rawvalue": {
           "_name_": "rawvalue",
           "title": "rawvalue",
           "type": "string",
           "nullable": true
          },
          "value": {
           "_name_": "value",
           "title": "value",
           "type": "string",
           "nullable": true
          },
          "source": {
           "_name_": "source",
           "title": "source",
           "type": "string",
           "nullable": true
          },
          "source_info": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "source_info",
           "title": "source_info"
          }
         },
         "additionalProperties": false,
         "_name_": "key_format",
         "title": "key_format",
         "default": {},
         "_attrs_order_": [
          "parsed",
          "rawvalue",
          "value",
          "source",
          "source_info"
         ]
        },
        "encryption_algorithm": {
         "type": "object",
         "properties": {
          "parsed": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "parsed",
           "title": "parsed"
          },
          "rawvalue": {
           "_name_": "rawvalue",
           "title": "rawvalue",
           "type": "string",
           "nullable": true
          },
          "value": {
           "_name_": "value",
           "title": "value",
           "type": "string",
           "nullable": true
          },
          "source": {
           "_name_": "source",
           "title": "source",
           "type": "string",
           "nullable": true
          },
          "source_info": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "source_info",
           "title": "source_info"
          }
         },
         "additionalProperties": false,
         "_name_": "encryption_algorithm",
         "title": "encryption_algorithm",
         "default": {},
         "_attrs_order_": [
          "parsed",
          "rawvalue",
          "value",
          "source",
          "source_info"
         ]
        },
        "used": {
         "type": "object",
         "properties": {
          "parsed": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "parsed",
           "title": "parsed"
          },
          "rawvalue": {
           "_name_": "rawvalue",
           "title": "rawvalue",
           "type": "string",
           "nullable": true
          },
          "value": {
           "_name_": "value",
           "title": "value",
           "type": "string",
           "nullable": true
          },
          "source": {
           "_name_": "source",
           "title": "source",
           "type": "string",
           "nullable": true
          },
          "source_info": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "source_info",
           "title": "source_info"
          }
         },
         "additionalProperties": false,
         "_name_": "used",
         "title": "used",
         "default": {},
         "_attrs_order_": [
          "parsed",
          "rawvalue",
          "value",
          "source",
          "source_info"
         ]
        },
        "usedbychildren": {
         "type": "object",
         "properties": {
          "parsed": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "parsed",
           "title": "parsed"
          },
          "rawvalue": {
           "_name_": "rawvalue",
           "title": "rawvalue",
           "type": "string",
           "nullable": true
          },
          "value": {
           "_name_": "value",
           "title": "value",
           "type": "string",
           "nullable": true
          },
          "source": {
           "_name_": "source",
           "title": "source",
           "type": "string",
           "nullable": true
          },
          "source_info": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "source_info",
           "title": "source_info"
          }
         },
         "additionalProperties": false,
         "_name_": "usedbychildren",
         "title": "usedbychildren",
         "default": {},
         "_attrs_order_": [
          "parsed",
          "rawvalue",
          "value",
          "source",
          "source_info"
         ]
        },
        "usedbydataset": {
         "type": "object",
         "properties": {
          "parsed": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "parsed",
           "title": "parsed"
          },
          "rawvalue": {
           "_name_": "rawvalue",
           "title": "rawvalue",
           "type": "string",
           "nullable": true
          },
          "value": {
           "_name_": "value",
           "title": "value",
           "type": "string",
           "nullable": true
          },
          "source": {
           "_name_": "source",
           "title": "source",
           "type": "string",
           "nullable": true
          },
          "source_info": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "source_info",
           "title": "source_info"
          }
         },
         "additionalProperties": false,
         "_name_": "usedbydataset",
         "title": "usedbydataset",
         "default": {},
         "_attrs_order_": [
          "parsed",
          "rawvalue",
          "value",
          "source",
          "source_info"
         ]
        },
        "usedbyrefreservation": {
         "type": "object",
         "properties": {
          "parsed": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "parsed",
           "title": "parsed"
          },
          "rawvalue": {
           "_name_": "rawvalue",
           "title": "rawvalue",
           "type": "string",
           "nullable": true
          },
          "value": {
           "_name_": "value",
           "title": "value",
           "type": "string",
           "nullable": true
          },
          "source": {
           "_name_": "source",
           "title": "source",
           "type": "string",
           "nullable": true
          },
          "source_info": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "source_info",
           "title": "source_info"
          }
         },
         "additionalProperties": false,
         "_name_": "usedbyrefreservation",
         "title": "usedbyrefreservation",
         "default": {},
         "_attrs_order_": [
          "parsed",
          "rawvalue",
          "value",
          "source",
          "source_info"
         ]
        },
        "usedbysnapshots": {
         "type": "object",
         "properties": {
          "parsed": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "parsed",
           "title": "parsed"
          },
          "rawvalue": {
           "_name_": "rawvalue",
           "title": "rawvalue",
           "type": "string",
           "nullable": true
          },
          "value": {
           "_name_": "value",
           "title": "value",
           "type": "string",
           "nullable": true
          },
          "source": {
           "_name_": "source",
           "title": "source",
           "type": "string",
           "nullable": true
          },
          "source_info": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "source_info",
           "title": "source_info"
          }
         },
         "additionalProperties": false,
         "_name_": "usedbysnapshots",
         "title": "usedbysnapshots",
         "default": {},
         "_attrs_order_": [
          "parsed",
          "rawvalue",
          "value",
          "source",
          "source_info"
         ]
        },
        "available": {
         "type": "object",
         "properties": {
          "parsed": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "parsed",
           "title": "parsed"
          },
          "rawvalue": {
           "_name_": "rawvalue",
           "title": "rawvalue",
           "type": "string",
           "nullable": true
          },
          "value": {
           "_name_": "value",
           "title": "value",
           "type": "string",
           "nullable": true
          },
          "source": {
           "_name_": "source",
           "title": "source",
           "type": "string",
           "nullable": true
          },
          "source_info": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "source_info",
           "title": "source_info"
          }
         },
         "additionalProperties": false,
         "_name_": "available",
         "title": "available",
         "default": {},
         "_attrs_order_": [
          "parsed",
          "rawvalue",
          "value",
          "source",
          "source_info"
         ]
        },
        "special_small_block_size": {
         "type": "object",
         "properties": {
          "parsed": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "parsed",
           "title": "parsed"
          },
          "rawvalue": {
           "_name_": "rawvalue",
           "title": "rawvalue",
           "type": "string",
           "nullable": true
          },
          "value": {
           "_name_": "value",
           "title": "value",
           "type": "string",
           "nullable": true
          },
          "source": {
           "_name_": "source",
           "title": "source",
           "type": "string",
           "nullable": true
          },
          "source_info": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "source_info",
           "title": "source_info"
          }
         },
         "additionalProperties": false,
         "_name_": "special_small_block_size",
         "title": "special_small_block_size",
         "default": {},
         "_attrs_order_": [
          "parsed",
          "rawvalue",
          "value",
          "source",
          "source_info"
         ]
        },
        "pbkdf2iters": {
         "type": "object",
         "properties": {
          "parsed": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "parsed",
           "title": "parsed"
          },
          "rawvalue": {
           "_name_": "rawvalue",
           "title": "rawvalue",
           "type": "string",
           "nullable": true
          },
          "value": {
           "_name_": "value",
           "title": "value",
           "type": "string",
           "nullable": true
          },
          "source": {
           "_name_": "source",
           "title": "source",
           "type": "string",
           "nullable": true
          },
          "source_info": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "source_info",
           "title": "source_info"
          }
         },
         "additionalProperties": false,
         "_name_": "pbkdf2iters",
         "title": "pbkdf2iters",
         "default": {},
         "_attrs_order_": [
          "parsed",
          "rawvalue",
          "value",
          "source",
          "source_info"
         ]
        },
        "creation": {
         "type": "object",
         "properties": {
          "parsed": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "parsed",
           "title": "parsed"
          },
          "rawvalue": {
           "_name_": "rawvalue",
           "title": "rawvalue",
           "type": "string",
           "nullable": true
          },
          "value": {
           "_name_": "value",
           "title": "value",
           "type": "string",
           "nullable": true
          },
          "source": {
           "_name_": "source",
           "title": "source",
           "type": "string",
           "nullable": true
          },
          "source_info": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "source_info",
           "title": "source_info"
          }
         },
         "additionalProperties": false,
         "_name_": "creation",
         "title": "creation",
         "default": {},
         "_attrs_order_": [
          "parsed",
          "rawvalue",
          "value",
          "source",
          "source_info"
         ]
        },
        "snapdev": {
         "type": "object",
         "properties": {
          "parsed": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "parsed",
           "title": "parsed"
          },
          "rawvalue": {
           "_name_": "rawvalue",
           "title": "rawvalue",
           "type": "string",
           "nullable": true
          },
          "value": {
           "_name_": "value",
           "title": "value",
           "type": "string",
           "nullable": true
          },
          "source": {
           "_name_": "source",
           "title": "source",
           "type": "string",
           "nullable": true
          },
          "source_info": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "integer"
            },
            {
             "type": "boolean"
            },
            {
             "type": "object"
            },
            {
             "type": "array"
            }
           ],
           "nullable": true,
           "_name_": "source_info",
           "title": "source_info"
          }
         },
         "additionalProperties": false,
         "_name_": "snapdev",
         "title": "snapdev",
         "default": {},
         "_attrs_order_": [
          "parsed",
          "rawvalue",
          "value",
          "source",
          "source_info"
         ]
        },
        "mountpoint": {
         "_name_": "mountpoint",
         "title": "mountpoint",
         "type": "string",
         "nullable": true
        }
       },
       "additionalProperties": false,
       "_name_": "pool_dataset_entry",
       "title": "pool_dataset_entry",
       "default": {},
       "_attrs_order_": [
        "id",
        "type",
        "name",
        "pool",
        "encrypted",
        "encryption_root",
        "key_loaded",
        "children",
        "user_properties",
        "locked",
        "comments",
        "quota_warning",
        "quota_critical",
        "refquota_warning",
        "refquota_critical",
        "managedby",
        "deduplication",
        "aclmode",
        "acltype",
        "xattr",
        "atime",
        "casesensitivity",
        "checksum",
        "exec",
        "sync",
        "compression",
        "compressratio",
        "origin",
        "quota",
        "refquota",
        "reservation",
        "refreservation",
        "copies",
        "snapdir",
        "readonly",
        "recordsize",
        "sparse",
        "volsize",
        "volblocksize",
        "key_format",
        "encryption_algorithm",
        "used",
        "usedbychildren",
        "usedbydataset",
        "usedbyrefreservation",
        "usedbysnapshots",
        "available",
        "special_small_block_size",
        "pbkdf2iters",
        "creation",
        "snapdev",
        "mountpoint"
       ]
      },
      "pool_dataset_get_quota_1": {
       "_name_": "quota_type",
       "title": "quota_type",
       "type": "string",
       "enum": [
        "USER",
        "GROUP",
        "DATASET",
        "PROJECT"
       ],
       "description": "Return a list of the specified `quota_type` of quotas on the ZFS dataset `ds`.\nSupport `query-filters` and `query-options`. used_bytes may not instantly\nupdate as space is used."
      },
      "pool_dataset_get_quota_2": {
       "_name_": "query-filters",
       "title": "query-filters",
       "default": [],
       "type": "array",
       "items": {
        "_name_": "query-filter",
        "title": "query-filter",
        "default": [],
        "_required_": false,
        "type": "array",
        "items": []
       }
      },
      "pool_dataset_get_quota_3": {
       "type": "object",
       "properties": {
        "relationships": {
         "type": "boolean",
         "_name_": "relationships",
         "title": "relationships",
         "default": true
        },
        "extend": {
         "_name_": "extend",
         "title": "extend",
         "default": null,
         "type": "string",
         "nullable": true
        },
        "extend_context": {
         "_name_": "extend_context",
         "title": "extend_context",
         "default": null,
         "type": "string",
         "nullable": true
        },
        "prefix": {
         "_name_": "prefix",
         "title": "prefix",
         "default": null,
         "type": "string",
         "nullable": true
        },
        "extra": {
         "type": "object",
         "properties": {},
         "additionalProperties": true,
         "_name_": "extra",
         "title": "extra",
         "default": {},
         "_attrs_order_": []
        },
        "order_by": {
         "_name_": "order_by",
         "title": "order_by",
         "default": [],
         "type": "array",
         "items": {}
        },
        "select": {
         "_name_": "select",
         "title": "select",
         "default": [],
         "type": "array",
         "items": {}
        },
        "count": {
         "type": "boolean",
         "_name_": "count",
         "title": "count",
         "default": false
        },
        "get": {
         "type": "boolean",
         "_name_": "get",
         "title": "get",
         "default": false
        },
        "offset": {
         "type": "integer",
         "_name_": "offset",
         "title": "offset",
         "default": 0
        },
        "limit": {
         "type": "integer",
         "_name_": "limit",
         "title": "limit",
         "default": 0
        },
        "force_sql_filters": {
         "type": "boolean",
         "_name_": "force_sql_filters",
         "title": "force_sql_filters",
         "default": false
        }
       },
       "additionalProperties": false,
       "_name_": "query-options",
       "title": "query-options",
       "default": {},
       "_attrs_order_": [
        "relationships",
        "extend",
        "extend_context",
        "prefix",
        "extra",
        "order_by",
        "select",
        "count",
        "get",
        "offset",
        "limit",
        "force_sql_filters"
       ]
      },
      "pool_dataset_get_quota": {
       "type": "object",
       "properties": {
        "quota_type": {
         "$ref": "#/components/schemas/pool_dataset_get_quota_1"
        },
        "query-filters": {
         "$ref": "#/components/schemas/pool_dataset_get_quota_2"
        },
        "query-options": {
         "$ref": "#/components/schemas/pool_dataset_get_quota_3"
        }
       }
      },
      "pool_dataset_inherit_parent_encryption_properties": {
       "_name_": "id",
       "title": "id",
       "type": "string"
      },
      "pool_dataset_lock_0": {
       "_name_": "id",
       "title": "id",
       "type": "string",
       "description": "Locks `id` dataset. It will unmount the dataset and its children before locking."
      },
      "pool_dataset_lock_1": {
       "type": "object",
       "properties": {
        "force_umount": {
         "type": "boolean",
         "_name_": "force_umount",
         "title": "force_umount",
         "default": false
        }
       },
       "additionalProperties": false,
       "_name_": "lock_options",
       "title": "lock_options",
       "default": {},
       "_attrs_order_": [
        "force_umount"
       ]
      },
      "pool_dataset_lock": {
       "type": "object",
       "properties": {
        "id": {
         "$ref": "#/components/schemas/pool_dataset_lock_0"
        },
        "lock_options": {
         "$ref": "#/components/schemas/pool_dataset_lock_1"
        }
       }
      },
      "return_schema_of_pool_dataset_lock": {
       "type": "boolean",
       "_name_": "locked",
       "title": "locked"
      },
      "pool_dataset_processes": {
       "type": "object",
       "properties": {}
      },
      "return_schema_of_pool_dataset_processes": {
       "_name_": "processes",
       "title": "processes",
       "default": [],
       "type": "array",
       "items": {
        "type": "object",
        "properties": {
         "pid": {
          "type": "integer",
          "_name_": "pid",
          "title": "pid",
          "_required_": true
         },
         "name": {
          "_name_": "name",
          "title": "name",
          "_required_": true,
          "type": "string"
         },
         "service": {
          "_name_": "service",
          "title": "service",
          "_required_": false,
          "type": "string"
         },
         "cmdline": {
          "_name_": "cmdline",
          "title": "cmdline",
          "_required_": false,
          "type": "string"
         }
        },
        "additionalProperties": false,
        "_name_": "process",
        "title": "process",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "pid",
         "name",
         "service",
         "cmdline"
        ]
       }
      },
      "pool_dataset_promote": {
       "type": "object",
       "properties": {}
      },
      "pool_dataset_recommended_zvol_blocksize": {
       "_name_": "pool",
       "title": "pool",
       "type": "string"
      },
      "return_schema_of_pool_dataset_recommended_zvol_blocksize": {
       "_name_": "recommended_zvol_blocksize",
       "title": "recommended_zvol_blocksize",
       "type": "string"
      },
      "pool_dataset_recordsize_choices": {
       "_name_": "pool_name",
       "title": "pool_name",
       "default": null,
       "type": "string",
       "nullable": true
      },
      "return_schema_of_pool_dataset_recordsize_choices": {
       "_name_": "recordsize_choices",
       "title": "recordsize_choices",
       "default": [],
       "type": "array",
       "items": {
        "_name_": "recordsize_value",
        "title": "recordsize_value",
        "_required_": false,
        "type": "string"
       }
      },
      "pool_dataset_set_quota": {
       "_name_": "quotas",
       "title": "quotas",
       "default": [
        {
         "quota_type": "USER",
         "id": "0",
         "quota_value": 0
        }
       ],
       "type": "array",
       "items": {
        "type": "object",
        "properties": {
         "quota_type": {
          "_name_": "quota_type",
          "title": "quota_type",
          "_required_": true,
          "type": "string",
          "enum": [
           "DATASET",
           "USER",
           "USEROBJ",
           "GROUP",
           "GROUPOBJ"
          ]
         },
         "id": {
          "_name_": "id",
          "title": "id",
          "_required_": true,
          "type": "string"
         },
         "quota_value": {
          "type": [
           "integer",
           "null"
          ],
          "_name_": "quota_value",
          "title": "quota_value",
          "_required_": true
         }
        },
        "additionalProperties": false,
        "_name_": "quota_entry",
        "title": "quota_entry",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "quota_type",
         "id",
         "quota_value"
        ]
       },
       "description": "`quotas` specifies a list of `quota_entry` entries to apply to dataset."
      },
      "pool_dataset_snapshot_count": {
       "title": "dataset",
       "type": "string",
       "_name_": "dataset"
      },
      "return_schema_of_pool_dataset_snapshot_count": {
       "title": "result",
       "type": "integer",
       "_name_": "result"
      },
      "pool_dataset_unlock_0": {
       "_name_": "id",
       "title": "id",
       "type": "string",
       "description": "Unlock dataset `id` (and its children if `unlock_options.recursive` is `true`).\nIf `id` dataset is not encrypted an exception will be raised. There is one exception:\nwhen `id` is a root dataset and `unlock_options.recursive` is specified, encryption\nvalidation will not be performed for `id`. This allow unlocking encrypted children for the entire pool `id`."
      },
      "pool_dataset_unlock_1": {
       "type": "object",
       "properties": {
        "force": {
         "type": "boolean",
         "_name_": "force",
         "title": "force",
         "default": false
        },
        "key_file": {
         "type": "boolean",
         "_name_": "key_file",
         "title": "key_file",
         "default": false
        },
        "recursive": {
         "type": "boolean",
         "_name_": "recursive",
         "title": "recursive",
         "default": false
        },
        "toggle_attachments": {
         "type": "boolean",
         "_name_": "toggle_attachments",
         "title": "toggle_attachments",
         "default": true
        },
        "datasets": {
         "_name_": "datasets",
         "title": "datasets",
         "default": [],
         "type": "array",
         "items": {
          "type": "object",
          "properties": {
           "force": {
            "type": "boolean",
            "_name_": "force",
            "title": "force",
            "default": false,
            "_required_": true
           },
           "name": {
            "_name_": "name",
            "title": "name",
            "_required_": true,
            "type": "string"
           },
           "key": {
            "_name_": "key",
            "title": "key",
            "_required_": false,
            "type": "string"
           },
           "passphrase": {
            "_name_": "passphrase",
            "title": "passphrase",
            "_required_": false,
            "type": "string"
           },
           "recursive": {
            "type": "boolean",
            "_name_": "recursive",
            "title": "recursive",
            "default": false,
            "_required_": false
           }
          },
          "additionalProperties": false,
          "_name_": "dataset",
          "title": "dataset",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "force",
           "name",
           "key",
           "passphrase",
           "recursive"
          ]
         }
        }
       },
       "additionalProperties": false,
       "_name_": "unlock_options",
       "title": "unlock_options",
       "default": {},
       "_attrs_order_": [
        "force",
        "key_file",
        "recursive",
        "toggle_attachments",
        "datasets"
       ]
      },
      "pool_dataset_unlock": {
       "type": "object",
       "properties": {
        "id": {
         "$ref": "#/components/schemas/pool_dataset_unlock_0"
        },
        "unlock_options": {
         "$ref": "#/components/schemas/pool_dataset_unlock_1"
        }
       }
      },
      "return_schema_of_pool_dataset_unlock": {
       "type": "object",
       "properties": {
        "unlocked": {
         "_name_": "unlocked",
         "title": "unlocked",
         "default": [],
         "type": "array",
         "items": {
          "_name_": "dataset",
          "title": "dataset",
          "_required_": false,
          "type": "string"
         }
        },
        "failed": {
         "type": "object",
         "properties": {},
         "additionalProperties": true,
         "_name_": "failed",
         "title": "failed",
         "description": "\n\nExample(s):\n```\n{\n    \"vol1/enc\": {\n        \"error\": \"Invalid Key\",\n        \"skipped\": []\n    }\n}\n```\n",
         "default": {},
         "_attrs_order_": []
        }
       },
       "additionalProperties": false,
       "_name_": "unlock",
       "title": "unlock",
       "default": {},
       "_attrs_order_": [
        "unlocked",
        "failed"
       ]
      },
      "return_schema_of_pool_resilver_config": {
       "additionalProperties": false,
       "properties": {
        "id": {
         "title": "id",
         "type": "integer",
         "_name_": "id"
        },
        "begin": {
         "default": "18:00",
         "title": "begin",
         "type": "string",
         "_name_": "begin"
        },
        "end": {
         "default": "9:00",
         "title": "end",
         "type": "string",
         "_name_": "end"
        },
        "enabled": {
         "default": true,
         "title": "enabled",
         "type": "boolean",
         "_name_": "enabled"
        },
        "weekday": {
         "default": [
          1,
          2,
          3,
          4,
          5,
          6,
          7
         ],
         "items": {
          "maximum": 7,
          "minimum": 1,
          "type": "integer"
         },
         "title": "weekday",
         "type": "array",
         "_name_": "weekday"
        }
       },
       "required": [
        "id"
       ],
       "title": "result",
       "type": "object",
       "_name_": "result",
       "_attrs_order_": [
        "id",
        "begin",
        "end",
        "enabled",
        "weekday"
       ]
      },
      "pool_resilver_update": {
       "additionalProperties": false,
       "properties": {
        "begin": {
         "title": "begin",
         "type": "string",
         "_name_": "begin"
        },
        "end": {
         "title": "end",
         "type": "string",
         "_name_": "end"
        },
        "enabled": {
         "title": "enabled",
         "type": "boolean",
         "_name_": "enabled"
        },
        "weekday": {
         "items": {
          "maximum": 7,
          "minimum": 1,
          "type": "integer"
         },
         "title": "weekday",
         "type": "array",
         "_name_": "weekday"
        }
       },
       "title": "data",
       "type": "object",
       "_name_": "data",
       "_attrs_order_": [
        "begin",
        "end",
        "enabled",
        "weekday"
       ]
      },
      "return_schema_of_pool_resilver_update": {
       "additionalProperties": false,
       "properties": {
        "id": {
         "title": "id",
         "type": "integer",
         "_name_": "id"
        },
        "begin": {
         "default": "18:00",
         "title": "begin",
         "type": "string",
         "_name_": "begin"
        },
        "end": {
         "default": "9:00",
         "title": "end",
         "type": "string",
         "_name_": "end"
        },
        "enabled": {
         "default": true,
         "title": "enabled",
         "type": "boolean",
         "_name_": "enabled"
        },
        "weekday": {
         "default": [
          1,
          2,
          3,
          4,
          5,
          6,
          7
         ],
         "items": {
          "maximum": 7,
          "minimum": 1,
          "type": "integer"
         },
         "title": "weekday",
         "type": "array",
         "_name_": "weekday"
        }
       },
       "required": [
        "id"
       ],
       "title": "result",
       "type": "object",
       "_name_": "result",
       "_attrs_order_": [
        "id",
        "begin",
        "end",
        "enabled",
        "weekday"
       ]
      },
      "return_schema_of_pool_scrub_query": {
       "anyOf": [
        {
         "items": [
          {
           "additionalProperties": false,
           "properties": {
            "pool": {
             "exclusiveMinimum": 0,
             "title": "pool",
             "type": "integer",
             "_name_": "pool",
             "_required_": false
            },
            "threshold": {
             "minimum": 0,
             "title": "threshold",
             "type": "integer",
             "_name_": "threshold",
             "_required_": false
            },
            "description": {
             "title": "description",
             "type": "string",
             "_name_": "description",
             "_required_": false
            },
            "schedule": {
             "title": "schedule",
             "_name_": "schedule",
             "_required_": false
            },
            "enabled": {
             "title": "enabled",
             "type": "boolean",
             "_name_": "enabled",
             "_required_": false
            },
            "id": {
             "title": "id",
             "type": "integer",
             "_name_": "id",
             "_required_": false
            },
            "pool_name": {
             "title": "pool_name",
             "type": "string",
             "_name_": "pool_name",
             "_required_": false
            }
           },
           "title": "PoolScrubQueryResultItem",
           "type": "object",
           "_attrs_order_": [
            "pool",
            "threshold",
            "description",
            "schedule",
            "enabled",
            "id",
            "pool_name"
           ]
          }
         ],
         "type": "array"
        },
        {
         "additionalProperties": false,
         "properties": {
          "pool": {
           "exclusiveMinimum": 0,
           "title": "pool",
           "type": "integer",
           "_name_": "pool",
           "_required_": false
          },
          "threshold": {
           "minimum": 0,
           "title": "threshold",
           "type": "integer",
           "_name_": "threshold",
           "_required_": false
          },
          "description": {
           "title": "description",
           "type": "string",
           "_name_": "description",
           "_required_": false
          },
          "schedule": {
           "title": "schedule",
           "_name_": "schedule",
           "_required_": false
          },
          "enabled": {
           "title": "enabled",
           "type": "boolean",
           "_name_": "enabled",
           "_required_": false
          },
          "id": {
           "title": "id",
           "type": "integer",
           "_name_": "id",
           "_required_": false
          },
          "pool_name": {
           "title": "pool_name",
           "type": "string",
           "_name_": "pool_name",
           "_required_": false
          }
         },
         "title": "PoolScrubQueryResultItem",
         "type": "object",
         "_attrs_order_": [
          "pool",
          "threshold",
          "description",
          "schedule",
          "enabled",
          "id",
          "pool_name"
         ]
        },
        {
         "type": "integer"
        }
       ],
       "title": "result",
       "_name_": "result"
      },
      "pool_scrub_create": {
       "additionalProperties": false,
       "properties": {
        "pool": {
         "exclusiveMinimum": 0,
         "title": "pool",
         "type": "integer",
         "_name_": "pool"
        },
        "threshold": {
         "default": 35,
         "minimum": 0,
         "title": "threshold",
         "type": "integer",
         "_name_": "threshold"
        },
        "description": {
         "default": "",
         "title": "description",
         "type": "string",
         "_name_": "description"
        },
        "schedule": {
         "title": "schedule",
         "_name_": "schedule"
        },
        "enabled": {
         "default": true,
         "title": "enabled",
         "type": "boolean",
         "_name_": "enabled"
        }
       },
       "required": [
        "pool"
       ],
       "title": "data",
       "type": "object",
       "_name_": "data",
       "_attrs_order_": [
        "pool",
        "threshold",
        "description",
        "schedule",
        "enabled"
       ]
      },
      "return_schema_of_pool_scrub_create": {
       "additionalProperties": false,
       "properties": {
        "pool": {
         "exclusiveMinimum": 0,
         "title": "pool",
         "type": "integer",
         "_name_": "pool"
        },
        "threshold": {
         "default": 35,
         "minimum": 0,
         "title": "threshold",
         "type": "integer",
         "_name_": "threshold"
        },
        "description": {
         "default": "",
         "title": "description",
         "type": "string",
         "_name_": "description"
        },
        "schedule": {
         "title": "schedule",
         "_name_": "schedule"
        },
        "enabled": {
         "default": true,
         "title": "enabled",
         "type": "boolean",
         "_name_": "enabled"
        },
        "id": {
         "title": "id",
         "type": "integer",
         "_name_": "id"
        },
        "pool_name": {
         "title": "pool_name",
         "type": "string",
         "_name_": "pool_name"
        }
       },
       "required": [
        "pool",
        "id",
        "pool_name"
       ],
       "title": "result",
       "type": "object",
       "_name_": "result",
       "_attrs_order_": [
        "pool",
        "threshold",
        "description",
        "schedule",
        "enabled",
        "id",
        "pool_name"
       ]
      },
      "return_schema_of_pool_scrub_delete": {
       "const": true,
       "enum": [
        true
       ],
       "title": "result",
       "type": "boolean",
       "_name_": "result"
      },
      "pool_scrub_update": {
       "additionalProperties": false,
       "properties": {
        "pool": {
         "exclusiveMinimum": 0,
         "title": "pool",
         "type": "integer",
         "_name_": "pool"
        },
        "threshold": {
         "minimum": 0,
         "title": "threshold",
         "type": "integer",
         "_name_": "threshold"
        },
        "description": {
         "title": "description",
         "type": "string",
         "_name_": "description"
        },
        "schedule": {
         "title": "schedule",
         "_name_": "schedule"
        },
        "enabled": {
         "title": "enabled",
         "type": "boolean",
         "_name_": "enabled"
        }
       },
       "title": "data",
       "type": "object",
       "_name_": "data",
       "_attrs_order_": [
        "pool",
        "threshold",
        "description",
        "schedule",
        "enabled"
       ]
      },
      "return_schema_of_pool_scrub_update": {
       "additionalProperties": false,
       "properties": {
        "pool": {
         "exclusiveMinimum": 0,
         "title": "pool",
         "type": "integer",
         "_name_": "pool"
        },
        "threshold": {
         "default": 35,
         "minimum": 0,
         "title": "threshold",
         "type": "integer",
         "_name_": "threshold"
        },
        "description": {
         "default": "",
         "title": "description",
         "type": "string",
         "_name_": "description"
        },
        "schedule": {
         "title": "schedule",
         "_name_": "schedule"
        },
        "enabled": {
         "default": true,
         "title": "enabled",
         "type": "boolean",
         "_name_": "enabled"
        },
        "id": {
         "title": "id",
         "type": "integer",
         "_name_": "id"
        },
        "pool_name": {
         "title": "pool_name",
         "type": "string",
         "_name_": "pool_name"
        }
       },
       "required": [
        "pool",
        "id",
        "pool_name"
       ],
       "title": "result",
       "type": "object",
       "_name_": "result",
       "_attrs_order_": [
        "pool",
        "threshold",
        "description",
        "schedule",
        "enabled",
        "id",
        "pool_name"
       ]
      },
      "pool_scrub_get_instance_0": {
       "title": "id",
       "type": "integer",
       "_name_": "id"
      },
      "pool_scrub_get_instance_1": {
       "additionalProperties": false,
       "properties": {
        "relationships": {
         "default": true,
         "title": "relationships",
         "type": "boolean",
         "_name_": "relationships"
        },
        "extend": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "extend",
         "_name_": "extend"
        },
        "extend_context": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "extend_context",
         "_name_": "extend_context"
        },
        "prefix": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "prefix",
         "_name_": "prefix"
        },
        "extra": {
         "default": {},
         "title": "extra",
         "type": "object",
         "_name_": "extra"
        },
        "order_by": {
         "default": [],
         "items": {
          "type": "string"
         },
         "title": "order_by",
         "type": "array",
         "_name_": "order_by"
        },
        "select": {
         "default": [],
         "items": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "items": [
             {}
            ],
            "type": "array"
           }
          ]
         },
         "title": "select",
         "type": "array",
         "_name_": "select"
        },
        "count": {
         "default": false,
         "title": "count",
         "type": "boolean",
         "_name_": "count"
        },
        "get": {
         "default": false,
         "title": "get",
         "type": "boolean",
         "_name_": "get"
        },
        "offset": {
         "default": 0,
         "title": "offset",
         "type": "integer",
         "_name_": "offset"
        },
        "limit": {
         "default": 0,
         "title": "limit",
         "type": "integer",
         "_name_": "limit"
        },
        "force_sql_filters": {
         "default": false,
         "title": "force_sql_filters",
         "type": "boolean",
         "_name_": "force_sql_filters"
        }
       },
       "title": "options",
       "type": "object",
       "default": {},
       "_name_": "options",
       "_attrs_order_": [
        "relationships",
        "extend",
        "extend_context",
        "prefix",
        "extra",
        "order_by",
        "select",
        "count",
        "get",
        "offset",
        "limit",
        "force_sql_filters"
       ]
      },
      "pool_scrub_get_instance": {
       "type": "object",
       "properties": {
        "id": {
         "$ref": "#/components/schemas/pool_scrub_get_instance_0"
        },
        "options": {
         "$ref": "#/components/schemas/pool_scrub_get_instance_1"
        }
       }
      },
      "return_schema_of_pool_scrub_get_instance": {
       "additionalProperties": false,
       "properties": {
        "pool": {
         "exclusiveMinimum": 0,
         "title": "pool",
         "type": "integer",
         "_name_": "pool"
        },
        "threshold": {
         "default": 35,
         "minimum": 0,
         "title": "threshold",
         "type": "integer",
         "_name_": "threshold"
        },
        "description": {
         "default": "",
         "title": "description",
         "type": "string",
         "_name_": "description"
        },
        "schedule": {
         "title": "schedule",
         "_name_": "schedule"
        },
        "enabled": {
         "default": true,
         "title": "enabled",
         "type": "boolean",
         "_name_": "enabled"
        },
        "id": {
         "title": "id",
         "type": "integer",
         "_name_": "id"
        },
        "pool_name": {
         "title": "pool_name",
         "type": "string",
         "_name_": "pool_name"
        }
       },
       "required": [
        "pool",
        "id",
        "pool_name"
       ],
       "title": "result",
       "type": "object",
       "_name_": "result",
       "_attrs_order_": [
        "pool",
        "threshold",
        "description",
        "schedule",
        "enabled",
        "id",
        "pool_name"
       ]
      },
      "pool_scrub_run_0": {
       "title": "name",
       "type": "string",
       "_name_": "name"
      },
      "pool_scrub_run_1": {
       "default": 35,
       "title": "threshold",
       "type": "integer",
       "_name_": "threshold"
      },
      "pool_scrub_run": {
       "type": "object",
       "properties": {
        "name": {
         "$ref": "#/components/schemas/pool_scrub_run_0"
        },
        "threshold": {
         "$ref": "#/components/schemas/pool_scrub_run_1"
        }
       }
      },
      "return_schema_of_pool_scrub_run": {
       "title": "result",
       "type": "null",
       "_name_": "result"
      },
      "pool_scrub_scrub_0": {
       "title": "name",
       "type": "string",
       "_name_": "name"
      },
      "pool_scrub_scrub_1": {
       "default": "START",
       "enum": [
        "START",
        "STOP",
        "PAUSE"
       ],
       "title": "action",
       "type": "string",
       "_name_": "action"
      },
      "pool_scrub_scrub": {
       "type": "object",
       "properties": {
        "name": {
         "$ref": "#/components/schemas/pool_scrub_scrub_0"
        },
        "action": {
         "$ref": "#/components/schemas/pool_scrub_scrub_1"
        }
       }
      },
      "return_schema_of_pool_scrub_scrub": {
       "title": "result",
       "type": "null",
       "_name_": "result"
      },
      "return_schema_of_pool_snapshottask_query": {
       "anyOf": [
        {
         "items": [
          {
           "additionalProperties": false,
           "properties": {
            "dataset": {
             "title": "dataset",
             "type": "string",
             "_name_": "dataset",
             "_required_": false
            },
            "recursive": {
             "title": "recursive",
             "type": "boolean",
             "_name_": "recursive",
             "_required_": false
            },
            "lifetime_value": {
             "title": "lifetime_value",
             "type": "integer",
             "_name_": "lifetime_value",
             "_required_": false
            },
            "lifetime_unit": {
             "enum": [
              "HOUR",
              "DAY",
              "WEEK",
              "MONTH",
              "YEAR"
             ],
             "title": "lifetime_unit",
             "type": "string",
             "_name_": "lifetime_unit",
             "_required_": false
            },
            "enabled": {
             "title": "enabled",
             "type": "boolean",
             "_name_": "enabled",
             "_required_": false
            },
            "exclude": {
             "items": [
              {
               "type": "string"
              }
             ],
             "title": "exclude",
             "type": "array",
             "_name_": "exclude",
             "_required_": false
            },
            "naming_schema": {
             "title": "naming_schema",
             "type": "string",
             "_name_": "naming_schema",
             "_required_": false
            },
            "allow_empty": {
             "title": "allow_empty",
             "type": "boolean",
             "_name_": "allow_empty",
             "_required_": false
            },
            "schedule": {
             "title": "schedule",
             "_name_": "schedule",
             "_required_": false
            },
            "id": {
             "title": "id",
             "type": "integer",
             "_name_": "id",
             "_required_": false
            },
            "vmware_sync": {
             "title": "vmware_sync",
             "type": "boolean",
             "_name_": "vmware_sync",
             "_required_": false
            },
            "state": {
             "title": "state",
             "_name_": "state",
             "_required_": false
            }
           },
           "title": "PoolSnapshotTaskQueryResultItem",
           "type": "object",
           "_attrs_order_": [
            "dataset",
            "recursive",
            "lifetime_value",
            "lifetime_unit",
            "enabled",
            "exclude",
            "naming_schema",
            "allow_empty",
            "schedule",
            "id",
            "vmware_sync",
            "state"
           ]
          }
         ],
         "type": "array"
        },
        {
         "additionalProperties": false,
         "properties": {
          "dataset": {
           "title": "dataset",
           "type": "string",
           "_name_": "dataset",
           "_required_": false
          },
          "recursive": {
           "title": "recursive",
           "type": "boolean",
           "_name_": "recursive",
           "_required_": false
          },
          "lifetime_value": {
           "title": "lifetime_value",
           "type": "integer",
           "_name_": "lifetime_value",
           "_required_": false
          },
          "lifetime_unit": {
           "enum": [
            "HOUR",
            "DAY",
            "WEEK",
            "MONTH",
            "YEAR"
           ],
           "title": "lifetime_unit",
           "type": "string",
           "_name_": "lifetime_unit",
           "_required_": false
          },
          "enabled": {
           "title": "enabled",
           "type": "boolean",
           "_name_": "enabled",
           "_required_": false
          },
          "exclude": {
           "items": [
            {
             "type": "string"
            }
           ],
           "title": "exclude",
           "type": "array",
           "_name_": "exclude",
           "_required_": false
          },
          "naming_schema": {
           "title": "naming_schema",
           "type": "string",
           "_name_": "naming_schema",
           "_required_": false
          },
          "allow_empty": {
           "title": "allow_empty",
           "type": "boolean",
           "_name_": "allow_empty",
           "_required_": false
          },
          "schedule": {
           "title": "schedule",
           "_name_": "schedule",
           "_required_": false
          },
          "id": {
           "title": "id",
           "type": "integer",
           "_name_": "id",
           "_required_": false
          },
          "vmware_sync": {
           "title": "vmware_sync",
           "type": "boolean",
           "_name_": "vmware_sync",
           "_required_": false
          },
          "state": {
           "title": "state",
           "_name_": "state",
           "_required_": false
          }
         },
         "title": "PoolSnapshotTaskQueryResultItem",
         "type": "object",
         "_attrs_order_": [
          "dataset",
          "recursive",
          "lifetime_value",
          "lifetime_unit",
          "enabled",
          "exclude",
          "naming_schema",
          "allow_empty",
          "schedule",
          "id",
          "vmware_sync",
          "state"
         ]
        },
        {
         "type": "integer"
        }
       ],
       "title": "result",
       "_name_": "result"
      },
      "pool_snapshottask_create": {
       "additionalProperties": false,
       "properties": {
        "dataset": {
         "title": "dataset",
         "type": "string",
         "_name_": "dataset"
        },
        "recursive": {
         "default": false,
         "title": "recursive",
         "type": "boolean",
         "_name_": "recursive"
        },
        "lifetime_value": {
         "default": 2,
         "title": "lifetime_value",
         "type": "integer",
         "_name_": "lifetime_value"
        },
        "lifetime_unit": {
         "default": "WEEK",
         "enum": [
          "HOUR",
          "DAY",
          "WEEK",
          "MONTH",
          "YEAR"
         ],
         "title": "lifetime_unit",
         "type": "string",
         "_name_": "lifetime_unit"
        },
        "enabled": {
         "default": true,
         "title": "enabled",
         "type": "boolean",
         "_name_": "enabled"
        },
        "exclude": {
         "default": [],
         "items": {
          "type": "string"
         },
         "title": "exclude",
         "type": "array",
         "_name_": "exclude"
        },
        "naming_schema": {
         "default": "auto-%Y-%m-%d_%H-%M",
         "title": "naming_schema",
         "type": "string",
         "_name_": "naming_schema"
        },
        "allow_empty": {
         "default": true,
         "title": "allow_empty",
         "type": "boolean",
         "_name_": "allow_empty"
        },
        "schedule": {
         "title": "schedule",
         "_name_": "schedule"
        }
       },
       "required": [
        "dataset"
       ],
       "title": "data",
       "type": "object",
       "_name_": "data",
       "_attrs_order_": [
        "dataset",
        "recursive",
        "lifetime_value",
        "lifetime_unit",
        "enabled",
        "exclude",
        "naming_schema",
        "allow_empty",
        "schedule"
       ]
      },
      "return_schema_of_pool_snapshottask_create": {
       "additionalProperties": false,
       "properties": {
        "dataset": {
         "title": "dataset",
         "type": "string",
         "_name_": "dataset"
        },
        "recursive": {
         "default": false,
         "title": "recursive",
         "type": "boolean",
         "_name_": "recursive"
        },
        "lifetime_value": {
         "default": 2,
         "title": "lifetime_value",
         "type": "integer",
         "_name_": "lifetime_value"
        },
        "lifetime_unit": {
         "default": "WEEK",
         "enum": [
          "HOUR",
          "DAY",
          "WEEK",
          "MONTH",
          "YEAR"
         ],
         "title": "lifetime_unit",
         "type": "string",
         "_name_": "lifetime_unit"
        },
        "enabled": {
         "default": true,
         "title": "enabled",
         "type": "boolean",
         "_name_": "enabled"
        },
        "exclude": {
         "default": [],
         "items": {
          "type": "string"
         },
         "title": "exclude",
         "type": "array",
         "_name_": "exclude"
        },
        "naming_schema": {
         "default": "auto-%Y-%m-%d_%H-%M",
         "title": "naming_schema",
         "type": "string",
         "_name_": "naming_schema"
        },
        "allow_empty": {
         "default": true,
         "title": "allow_empty",
         "type": "boolean",
         "_name_": "allow_empty"
        },
        "schedule": {
         "title": "schedule",
         "_name_": "schedule"
        },
        "id": {
         "title": "id",
         "type": "integer",
         "_name_": "id"
        },
        "vmware_sync": {
         "title": "vmware_sync",
         "type": "boolean",
         "_name_": "vmware_sync"
        },
        "state": {
         "title": "state",
         "_name_": "state"
        }
       },
       "required": [
        "dataset",
        "id",
        "vmware_sync",
        "state"
       ],
       "title": "result",
       "type": "object",
       "_name_": "result",
       "_attrs_order_": [
        "dataset",
        "recursive",
        "lifetime_value",
        "lifetime_unit",
        "enabled",
        "exclude",
        "naming_schema",
        "allow_empty",
        "schedule",
        "id",
        "vmware_sync",
        "state"
       ]
      },
      "pool_snapshottask_delete": {
       "additionalProperties": false,
       "properties": {
        "fixate_removal_date": {
         "default": false,
         "title": "fixate_removal_date",
         "type": "boolean",
         "_name_": "fixate_removal_date"
        }
       },
       "title": "options",
       "type": "object",
       "_name_": "options",
       "_attrs_order_": [
        "fixate_removal_date"
       ]
      },
      "return_schema_of_pool_snapshottask_delete": {
       "const": true,
       "enum": [
        true
       ],
       "title": "result",
       "type": "boolean",
       "_name_": "result"
      },
      "pool_snapshottask_update": {
       "additionalProperties": false,
       "properties": {
        "dataset": {
         "title": "dataset",
         "type": "string",
         "_name_": "dataset"
        },
        "recursive": {
         "title": "recursive",
         "type": "boolean",
         "_name_": "recursive"
        },
        "lifetime_value": {
         "title": "lifetime_value",
         "type": "integer",
         "_name_": "lifetime_value"
        },
        "lifetime_unit": {
         "enum": [
          "HOUR",
          "DAY",
          "WEEK",
          "MONTH",
          "YEAR"
         ],
         "title": "lifetime_unit",
         "type": "string",
         "_name_": "lifetime_unit"
        },
        "enabled": {
         "title": "enabled",
         "type": "boolean",
         "_name_": "enabled"
        },
        "exclude": {
         "items": {
          "type": "string"
         },
         "title": "exclude",
         "type": "array",
         "_name_": "exclude"
        },
        "naming_schema": {
         "title": "naming_schema",
         "type": "string",
         "_name_": "naming_schema"
        },
        "allow_empty": {
         "title": "allow_empty",
         "type": "boolean",
         "_name_": "allow_empty"
        },
        "schedule": {
         "title": "schedule",
         "_name_": "schedule"
        },
        "fixate_removal_date": {
         "title": "fixate_removal_date",
         "type": "boolean",
         "_name_": "fixate_removal_date"
        }
       },
       "title": "data",
       "type": "object",
       "_name_": "data",
       "_attrs_order_": [
        "dataset",
        "recursive",
        "lifetime_value",
        "lifetime_unit",
        "enabled",
        "exclude",
        "naming_schema",
        "allow_empty",
        "schedule",
        "fixate_removal_date"
       ]
      },
      "return_schema_of_pool_snapshottask_update": {
       "additionalProperties": false,
       "properties": {
        "dataset": {
         "title": "dataset",
         "type": "string",
         "_name_": "dataset"
        },
        "recursive": {
         "default": false,
         "title": "recursive",
         "type": "boolean",
         "_name_": "recursive"
        },
        "lifetime_value": {
         "default": 2,
         "title": "lifetime_value",
         "type": "integer",
         "_name_": "lifetime_value"
        },
        "lifetime_unit": {
         "default": "WEEK",
         "enum": [
          "HOUR",
          "DAY",
          "WEEK",
          "MONTH",
          "YEAR"
         ],
         "title": "lifetime_unit",
         "type": "string",
         "_name_": "lifetime_unit"
        },
        "enabled": {
         "default": true,
         "title": "enabled",
         "type": "boolean",
         "_name_": "enabled"
        },
        "exclude": {
         "default": [],
         "items": {
          "type": "string"
         },
         "title": "exclude",
         "type": "array",
         "_name_": "exclude"
        },
        "naming_schema": {
         "default": "auto-%Y-%m-%d_%H-%M",
         "title": "naming_schema",
         "type": "string",
         "_name_": "naming_schema"
        },
        "allow_empty": {
         "default": true,
         "title": "allow_empty",
         "type": "boolean",
         "_name_": "allow_empty"
        },
        "schedule": {
         "title": "schedule",
         "_name_": "schedule"
        },
        "id": {
         "title": "id",
         "type": "integer",
         "_name_": "id"
        },
        "vmware_sync": {
         "title": "vmware_sync",
         "type": "boolean",
         "_name_": "vmware_sync"
        },
        "state": {
         "title": "state",
         "_name_": "state"
        }
       },
       "required": [
        "dataset",
        "id",
        "vmware_sync",
        "state"
       ],
       "title": "result",
       "type": "object",
       "_name_": "result",
       "_attrs_order_": [
        "dataset",
        "recursive",
        "lifetime_value",
        "lifetime_unit",
        "enabled",
        "exclude",
        "naming_schema",
        "allow_empty",
        "schedule",
        "id",
        "vmware_sync",
        "state"
       ]
      },
      "pool_snapshottask_delete_will_change_retention_for": {
       "type": "object",
       "properties": {}
      },
      "return_schema_of_pool_snapshottask_delete_will_change_retention_for": {
       "additionalProperties": {
        "items": [
         {
          "type": "string"
         }
        ],
        "type": "array"
       },
       "title": "result",
       "type": "object",
       "_name_": "result"
      },
      "pool_snapshottask_get_instance_0": {
       "title": "id",
       "type": "integer",
       "_name_": "id"
      },
      "pool_snapshottask_get_instance_1": {
       "additionalProperties": false,
       "properties": {
        "relationships": {
         "default": true,
         "title": "relationships",
         "type": "boolean",
         "_name_": "relationships"
        },
        "extend": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "extend",
         "_name_": "extend"
        },
        "extend_context": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "extend_context",
         "_name_": "extend_context"
        },
        "prefix": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "prefix",
         "_name_": "prefix"
        },
        "extra": {
         "default": {},
         "title": "extra",
         "type": "object",
         "_name_": "extra"
        },
        "order_by": {
         "default": [],
         "items": {
          "type": "string"
         },
         "title": "order_by",
         "type": "array",
         "_name_": "order_by"
        },
        "select": {
         "default": [],
         "items": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "items": [
             {}
            ],
            "type": "array"
           }
          ]
         },
         "title": "select",
         "type": "array",
         "_name_": "select"
        },
        "count": {
         "default": false,
         "title": "count",
         "type": "boolean",
         "_name_": "count"
        },
        "get": {
         "default": false,
         "title": "get",
         "type": "boolean",
         "_name_": "get"
        },
        "offset": {
         "default": 0,
         "title": "offset",
         "type": "integer",
         "_name_": "offset"
        },
        "limit": {
         "default": 0,
         "title": "limit",
         "type": "integer",
         "_name_": "limit"
        },
        "force_sql_filters": {
         "default": false,
         "title": "force_sql_filters",
         "type": "boolean",
         "_name_": "force_sql_filters"
        }
       },
       "title": "options",
       "type": "object",
       "default": {},
       "_name_": "options",
       "_attrs_order_": [
        "relationships",
        "extend",
        "extend_context",
        "prefix",
        "extra",
        "order_by",
        "select",
        "count",
        "get",
        "offset",
        "limit",
        "force_sql_filters"
       ]
      },
      "pool_snapshottask_get_instance": {
       "type": "object",
       "properties": {
        "id": {
         "$ref": "#/components/schemas/pool_snapshottask_get_instance_0"
        },
        "options": {
         "$ref": "#/components/schemas/pool_snapshottask_get_instance_1"
        }
       }
      },
      "return_schema_of_pool_snapshottask_get_instance": {
       "additionalProperties": false,
       "properties": {
        "dataset": {
         "title": "dataset",
         "type": "string",
         "_name_": "dataset"
        },
        "recursive": {
         "default": false,
         "title": "recursive",
         "type": "boolean",
         "_name_": "recursive"
        },
        "lifetime_value": {
         "default": 2,
         "title": "lifetime_value",
         "type": "integer",
         "_name_": "lifetime_value"
        },
        "lifetime_unit": {
         "default": "WEEK",
         "enum": [
          "HOUR",
          "DAY",
          "WEEK",
          "MONTH",
          "YEAR"
         ],
         "title": "lifetime_unit",
         "type": "string",
         "_name_": "lifetime_unit"
        },
        "enabled": {
         "default": true,
         "title": "enabled",
         "type": "boolean",
         "_name_": "enabled"
        },
        "exclude": {
         "default": [],
         "items": {
          "type": "string"
         },
         "title": "exclude",
         "type": "array",
         "_name_": "exclude"
        },
        "naming_schema": {
         "default": "auto-%Y-%m-%d_%H-%M",
         "title": "naming_schema",
         "type": "string",
         "_name_": "naming_schema"
        },
        "allow_empty": {
         "default": true,
         "title": "allow_empty",
         "type": "boolean",
         "_name_": "allow_empty"
        },
        "schedule": {
         "title": "schedule",
         "_name_": "schedule"
        },
        "id": {
         "title": "id",
         "type": "integer",
         "_name_": "id"
        },
        "vmware_sync": {
         "title": "vmware_sync",
         "type": "boolean",
         "_name_": "vmware_sync"
        },
        "state": {
         "title": "state",
         "_name_": "state"
        }
       },
       "required": [
        "dataset",
        "id",
        "vmware_sync",
        "state"
       ],
       "title": "result",
       "type": "object",
       "_name_": "result",
       "_attrs_order_": [
        "dataset",
        "recursive",
        "lifetime_value",
        "lifetime_unit",
        "enabled",
        "exclude",
        "naming_schema",
        "allow_empty",
        "schedule",
        "id",
        "vmware_sync",
        "state"
       ]
      },
      "return_schema_of_pool_snapshottask_max_count": {
       "title": "result",
       "type": "integer",
       "_name_": "result"
      },
      "return_schema_of_pool_snapshottask_max_total_count": {
       "title": "result",
       "type": "integer",
       "_name_": "result"
      },
      "pool_snapshottask_run": {
       "type": "object",
       "properties": {}
      },
      "return_schema_of_pool_snapshottask_run": {
       "title": "result",
       "type": "null",
       "_name_": "result"
      },
      "pool_snapshottask_update_will_change_retention_for": {
       "additionalProperties": false,
       "properties": {
        "dataset": {
         "title": "dataset",
         "type": "string",
         "_name_": "dataset"
        },
        "recursive": {
         "title": "recursive",
         "type": "boolean",
         "_name_": "recursive"
        },
        "lifetime_value": {
         "title": "lifetime_value",
         "type": "integer",
         "_name_": "lifetime_value"
        },
        "lifetime_unit": {
         "enum": [
          "HOUR",
          "DAY",
          "WEEK",
          "MONTH",
          "YEAR"
         ],
         "title": "lifetime_unit",
         "type": "string",
         "_name_": "lifetime_unit"
        },
        "enabled": {
         "title": "enabled",
         "type": "boolean",
         "_name_": "enabled"
        },
        "exclude": {
         "items": {
          "type": "string"
         },
         "title": "exclude",
         "type": "array",
         "_name_": "exclude"
        },
        "naming_schema": {
         "title": "naming_schema",
         "type": "string",
         "_name_": "naming_schema"
        },
        "allow_empty": {
         "title": "allow_empty",
         "type": "boolean",
         "_name_": "allow_empty"
        },
        "schedule": {
         "title": "schedule",
         "_name_": "schedule"
        }
       },
       "title": "data",
       "type": "object",
       "_name_": "data",
       "_attrs_order_": [
        "dataset",
        "recursive",
        "lifetime_value",
        "lifetime_unit",
        "enabled",
        "exclude",
        "naming_schema",
        "allow_empty",
        "schedule"
       ]
      },
      "return_schema_of_pool_snapshottask_update_will_change_retention_for": {
       "additionalProperties": {
        "items": [
         {
          "type": "string"
         }
        ],
        "type": "array"
       },
       "title": "result",
       "type": "object",
       "_name_": "result"
      },
      "return_schema_of_privilege_query": {
       "anyOf": [
        {
         "items": [
          {
           "additionalProperties": false,
           "properties": {
            "id": {
             "title": "id",
             "type": "integer",
             "_name_": "id",
             "_required_": false
            },
            "builtin_name": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "null"
              }
             ],
             "title": "builtin_name",
             "_name_": "builtin_name",
             "_required_": false
            },
            "name": {
             "minLength": 1,
             "title": "name",
             "type": "string",
             "_name_": "name",
             "_required_": false
            },
            "local_groups": {
             "items": [
              {
               "anyOf": [
                {},
                {}
               ]
              }
             ],
             "title": "local_groups",
             "type": "array",
             "_name_": "local_groups",
             "_required_": false
            },
            "ds_groups": {
             "items": [
              {
               "anyOf": [
                {},
                {}
               ]
              }
             ],
             "title": "ds_groups",
             "type": "array",
             "_name_": "ds_groups",
             "_required_": false
            },
            "roles": {
             "items": [
              {
               "type": "string"
              }
             ],
             "title": "roles",
             "type": "array",
             "_name_": "roles",
             "_required_": false
            },
            "web_shell": {
             "title": "web_shell",
             "type": "boolean",
             "_name_": "web_shell",
             "_required_": false
            }
           },
           "title": "PrivilegeQueryResultItem",
           "type": "object",
           "_attrs_order_": [
            "id",
            "builtin_name",
            "name",
            "local_groups",
            "ds_groups",
            "roles",
            "web_shell"
           ]
          }
         ],
         "type": "array"
        },
        {
         "additionalProperties": false,
         "properties": {
          "id": {
           "title": "id",
           "type": "integer",
           "_name_": "id",
           "_required_": false
          },
          "builtin_name": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "null"
            }
           ],
           "title": "builtin_name",
           "_name_": "builtin_name",
           "_required_": false
          },
          "name": {
           "minLength": 1,
           "title": "name",
           "type": "string",
           "_name_": "name",
           "_required_": false
          },
          "local_groups": {
           "items": [
            {
             "anyOf": [
              {},
              {}
             ]
            }
           ],
           "title": "local_groups",
           "type": "array",
           "_name_": "local_groups",
           "_required_": false
          },
          "ds_groups": {
           "items": [
            {
             "anyOf": [
              {},
              {}
             ]
            }
           ],
           "title": "ds_groups",
           "type": "array",
           "_name_": "ds_groups",
           "_required_": false
          },
          "roles": {
           "items": [
            {
             "type": "string"
            }
           ],
           "title": "roles",
           "type": "array",
           "_name_": "roles",
           "_required_": false
          },
          "web_shell": {
           "title": "web_shell",
           "type": "boolean",
           "_name_": "web_shell",
           "_required_": false
          }
         },
         "title": "PrivilegeQueryResultItem",
         "type": "object",
         "_attrs_order_": [
          "id",
          "builtin_name",
          "name",
          "local_groups",
          "ds_groups",
          "roles",
          "web_shell"
         ]
        },
        {
         "type": "integer"
        }
       ],
       "title": "result",
       "_name_": "result"
      },
      "privilege_create": {
       "additionalProperties": false,
       "properties": {
        "name": {
         "minLength": 1,
         "title": "name",
         "type": "string",
         "_name_": "name"
        },
        "local_groups": {
         "default": [],
         "items": {
          "type": "integer"
         },
         "title": "local_groups",
         "type": "array",
         "_name_": "local_groups"
        },
        "ds_groups": {
         "default": [],
         "items": {
          "anyOf": [
           {
            "type": "integer"
           },
           {
            "type": "string"
           }
          ]
         },
         "title": "ds_groups",
         "type": "array",
         "_name_": "ds_groups"
        },
        "roles": {
         "default": [],
         "items": {
          "type": "string"
         },
         "title": "roles",
         "type": "array",
         "_name_": "roles"
        },
        "web_shell": {
         "title": "web_shell",
         "type": "boolean",
         "_name_": "web_shell"
        }
       },
       "required": [
        "name",
        "web_shell"
       ],
       "title": "privilege_create",
       "type": "object",
       "_name_": "privilege_create",
       "_attrs_order_": [
        "name",
        "local_groups",
        "ds_groups",
        "roles",
        "web_shell"
       ]
      },
      "return_schema_of_privilege_create": {
       "additionalProperties": false,
       "properties": {
        "id": {
         "title": "id",
         "type": "integer",
         "_name_": "id"
        },
        "builtin_name": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "title": "builtin_name",
         "_name_": "builtin_name"
        },
        "name": {
         "minLength": 1,
         "title": "name",
         "type": "string",
         "_name_": "name"
        },
        "local_groups": {
         "items": {
          "anyOf": [
           {},
           {}
          ]
         },
         "title": "local_groups",
         "type": "array",
         "_name_": "local_groups"
        },
        "ds_groups": {
         "items": {
          "anyOf": [
           {},
           {}
          ]
         },
         "title": "ds_groups",
         "type": "array",
         "_name_": "ds_groups"
        },
        "roles": {
         "default": [],
         "items": {
          "type": "string"
         },
         "title": "roles",
         "type": "array",
         "_name_": "roles"
        },
        "web_shell": {
         "title": "web_shell",
         "type": "boolean",
         "_name_": "web_shell"
        }
       },
       "required": [
        "id",
        "builtin_name",
        "name",
        "local_groups",
        "ds_groups",
        "web_shell"
       ],
       "title": "result",
       "type": "object",
       "_name_": "result",
       "_attrs_order_": [
        "id",
        "builtin_name",
        "name",
        "local_groups",
        "ds_groups",
        "roles",
        "web_shell"
       ]
      },
      "return_schema_of_privilege_delete": {
       "title": "result",
       "type": "boolean",
       "_name_": "result"
      },
      "privilege_update": {
       "additionalProperties": false,
       "properties": {
        "name": {
         "minLength": 1,
         "title": "name",
         "type": "string",
         "_name_": "name"
        },
        "local_groups": {
         "items": {
          "type": "integer"
         },
         "title": "local_groups",
         "type": "array",
         "_name_": "local_groups"
        },
        "ds_groups": {
         "items": {
          "anyOf": [
           {
            "type": "integer"
           },
           {
            "type": "string"
           }
          ]
         },
         "title": "ds_groups",
         "type": "array",
         "_name_": "ds_groups"
        },
        "roles": {
         "items": {
          "type": "string"
         },
         "title": "roles",
         "type": "array",
         "_name_": "roles"
        },
        "web_shell": {
         "title": "web_shell",
         "type": "boolean",
         "_name_": "web_shell"
        }
       },
       "title": "privilege_update",
       "type": "object",
       "_name_": "privilege_update",
       "_attrs_order_": [
        "name",
        "local_groups",
        "ds_groups",
        "roles",
        "web_shell"
       ]
      },
      "return_schema_of_privilege_update": {
       "additionalProperties": false,
       "properties": {
        "id": {
         "title": "id",
         "type": "integer",
         "_name_": "id"
        },
        "builtin_name": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "title": "builtin_name",
         "_name_": "builtin_name"
        },
        "name": {
         "minLength": 1,
         "title": "name",
         "type": "string",
         "_name_": "name"
        },
        "local_groups": {
         "items": {
          "anyOf": [
           {},
           {}
          ]
         },
         "title": "local_groups",
         "type": "array",
         "_name_": "local_groups"
        },
        "ds_groups": {
         "items": {
          "anyOf": [
           {},
           {}
          ]
         },
         "title": "ds_groups",
         "type": "array",
         "_name_": "ds_groups"
        },
        "roles": {
         "default": [],
         "items": {
          "type": "string"
         },
         "title": "roles",
         "type": "array",
         "_name_": "roles"
        },
        "web_shell": {
         "title": "web_shell",
         "type": "boolean",
         "_name_": "web_shell"
        }
       },
       "required": [
        "id",
        "builtin_name",
        "name",
        "local_groups",
        "ds_groups",
        "web_shell"
       ],
       "title": "result",
       "type": "object",
       "_name_": "result",
       "_attrs_order_": [
        "id",
        "builtin_name",
        "name",
        "local_groups",
        "ds_groups",
        "roles",
        "web_shell"
       ]
      },
      "privilege_get_instance_0": {
       "title": "id",
       "type": "integer",
       "_name_": "id"
      },
      "privilege_get_instance_1": {
       "additionalProperties": false,
       "properties": {
        "relationships": {
         "default": true,
         "title": "relationships",
         "type": "boolean",
         "_name_": "relationships"
        },
        "extend": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "extend",
         "_name_": "extend"
        },
        "extend_context": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "extend_context",
         "_name_": "extend_context"
        },
        "prefix": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "prefix",
         "_name_": "prefix"
        },
        "extra": {
         "default": {},
         "title": "extra",
         "type": "object",
         "_name_": "extra"
        },
        "order_by": {
         "default": [],
         "items": {
          "type": "string"
         },
         "title": "order_by",
         "type": "array",
         "_name_": "order_by"
        },
        "select": {
         "default": [],
         "items": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "items": [
             {}
            ],
            "type": "array"
           }
          ]
         },
         "title": "select",
         "type": "array",
         "_name_": "select"
        },
        "count": {
         "default": false,
         "title": "count",
         "type": "boolean",
         "_name_": "count"
        },
        "get": {
         "default": false,
         "title": "get",
         "type": "boolean",
         "_name_": "get"
        },
        "offset": {
         "default": 0,
         "title": "offset",
         "type": "integer",
         "_name_": "offset"
        },
        "limit": {
         "default": 0,
         "title": "limit",
         "type": "integer",
         "_name_": "limit"
        },
        "force_sql_filters": {
         "default": false,
         "title": "force_sql_filters",
         "type": "boolean",
         "_name_": "force_sql_filters"
        }
       },
       "title": "options",
       "type": "object",
       "default": {},
       "_name_": "options",
       "_attrs_order_": [
        "relationships",
        "extend",
        "extend_context",
        "prefix",
        "extra",
        "order_by",
        "select",
        "count",
        "get",
        "offset",
        "limit",
        "force_sql_filters"
       ]
      },
      "privilege_get_instance": {
       "type": "object",
       "properties": {
        "id": {
         "$ref": "#/components/schemas/privilege_get_instance_0"
        },
        "options": {
         "$ref": "#/components/schemas/privilege_get_instance_1"
        }
       }
      },
      "return_schema_of_privilege_get_instance": {
       "additionalProperties": false,
       "properties": {
        "id": {
         "title": "id",
         "type": "integer",
         "_name_": "id"
        },
        "builtin_name": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "title": "builtin_name",
         "_name_": "builtin_name"
        },
        "name": {
         "minLength": 1,
         "title": "name",
         "type": "string",
         "_name_": "name"
        },
        "local_groups": {
         "items": {
          "anyOf": [
           {},
           {}
          ]
         },
         "title": "local_groups",
         "type": "array",
         "_name_": "local_groups"
        },
        "ds_groups": {
         "items": {
          "anyOf": [
           {},
           {}
          ]
         },
         "title": "ds_groups",
         "type": "array",
         "_name_": "ds_groups"
        },
        "roles": {
         "default": [],
         "items": {
          "type": "string"
         },
         "title": "roles",
         "type": "array",
         "_name_": "roles"
        },
        "web_shell": {
         "title": "web_shell",
         "type": "boolean",
         "_name_": "web_shell"
        }
       },
       "required": [
        "id",
        "builtin_name",
        "name",
        "local_groups",
        "ds_groups",
        "web_shell"
       ],
       "title": "result",
       "type": "object",
       "_name_": "result",
       "_attrs_order_": [
        "id",
        "builtin_name",
        "name",
        "local_groups",
        "ds_groups",
        "roles",
        "web_shell"
       ]
      },
      "return_schema_of_privilege_roles": {
       "anyOf": [
        {
         "items": [
          {
           "additionalProperties": false,
           "properties": {
            "name": {
             "minLength": 1,
             "title": "name",
             "type": "string",
             "_name_": "name",
             "_required_": false
            },
            "title": {
             "minLength": 1,
             "title": "title",
             "type": "string",
             "_name_": "title",
             "_required_": false
            },
            "includes": {
             "items": [
              {
               "minLength": 1,
               "type": "string"
              }
             ],
             "title": "includes",
             "type": "array",
             "_name_": "includes",
             "_required_": false
            },
            "builtin": {
             "title": "builtin",
             "type": "boolean",
             "_name_": "builtin",
             "_required_": false
            },
            "stig": {
             "anyOf": [
              {},
              {
               "type": "null"
              }
             ],
             "title": "stig",
             "_name_": "stig",
             "_required_": false
            }
           },
           "title": "PrivilegeRoleQueryResultItem",
           "type": "object",
           "_attrs_order_": [
            "name",
            "title",
            "includes",
            "builtin",
            "stig"
           ]
          }
         ],
         "type": "array"
        },
        {
         "additionalProperties": false,
         "properties": {
          "name": {
           "minLength": 1,
           "title": "name",
           "type": "string",
           "_name_": "name",
           "_required_": false
          },
          "title": {
           "minLength": 1,
           "title": "title",
           "type": "string",
           "_name_": "title",
           "_required_": false
          },
          "includes": {
           "items": [
            {
             "minLength": 1,
             "type": "string"
            }
           ],
           "title": "includes",
           "type": "array",
           "_name_": "includes",
           "_required_": false
          },
          "builtin": {
           "title": "builtin",
           "type": "boolean",
           "_name_": "builtin",
           "_required_": false
          },
          "stig": {
           "anyOf": [
            {},
            {
             "type": "null"
            }
           ],
           "title": "stig",
           "_name_": "stig",
           "_required_": false
          }
         },
         "title": "PrivilegeRoleQueryResultItem",
         "type": "object",
         "_attrs_order_": [
          "name",
          "title",
          "includes",
          "builtin",
          "stig"
         ]
        },
        {
         "type": "integer"
        }
       ],
       "title": "result",
       "_name_": "result"
      },
      "return_schema_of_replication_query": {
       "anyOf": [
        {
         "_name_": "query_result",
         "title": "query_result",
         "default": [],
         "_required_": false,
         "type": "array",
         "items": [
          {
           "type": "object",
           "properties": {},
           "additionalProperties": true,
           "_name_": "replication_entry",
           "title": "replication_entry",
           "default": {},
           "_required_": false,
           "_attrs_order_": []
          }
         ]
        },
        {
         "type": "object",
         "properties": {},
         "additionalProperties": true,
         "_name_": "replication_entry",
         "title": "replication_entry",
         "default": {},
         "_required_": false,
         "_attrs_order_": []
        },
        {
         "type": "integer",
         "_name_": "count",
         "title": "count",
         "_required_": false
        },
        {
         "type": "object",
         "properties": {},
         "additionalProperties": true,
         "_name_": "replication_entry",
         "title": "replication_entry",
         "default": {},
         "_required_": false,
         "_attrs_order_": []
        }
       ],
       "nullable": false,
       "_name_": "query_result",
       "description": null
      },
      "replication_create": {
       "type": "object",
       "properties": {
        "name": {
         "_name_": "name",
         "title": "name",
         "type": "string",
         "description": "* `name` specifies a name for replication task"
        },
        "direction": {
         "_name_": "direction",
         "title": "direction",
         "type": "string",
         "enum": [
          "PUSH",
          "PULL"
         ],
         "description": "* `direction` specifies whether task will `PUSH` or `PULL` snapshots"
        },
        "transport": {
         "_name_": "transport",
         "title": "transport",
         "type": "string",
         "enum": [
          "SSH",
          "SSH+NETCAT",
          "LOCAL"
         ],
         "description": "* `transport` is a method of snapshots transfer:\n  * `SSH` transfers snapshots via SSH connection. This method is supported everywhere but does not achieve\n    great performance\n    `ssh_credentials` is a required field for this transport (Keychain Credential ID of type `SSH_CREDENTIALS`)\n  * `SSH+NETCAT` uses unencrypted connection for data transfer. This can only be used in trusted networks\n    and requires a port (specified by range from `netcat_active_side_port_min` to `netcat_active_side_port_max`)\n    to be open on `netcat_active_side`\n    `ssh_credentials` is also required for control connection\n  * `LOCAL` replicates to or from localhost\n  `sudo` flag controls whether `SSH` and `SSH+NETCAT` transports should use sudo (which is expected to be\n  passwordless) to run `zfs` command on the remote machine."
        },
        "ssh_credentials": {
         "type": "integer",
         "_name_": "ssh_credentials",
         "title": "ssh_credentials",
         "default": null,
         "description": "* `transport` is a method of snapshots transfer:\n  * `SSH` transfers snapshots via SSH connection. This method is supported everywhere but does not achieve\n    great performance\n    `ssh_credentials` is a required field for this transport (Keychain Credential ID of type `SSH_CREDENTIALS`)\n  * `SSH+NETCAT` uses unencrypted connection for data transfer. This can only be used in trusted networks\n    and requires a port (specified by range from `netcat_active_side_port_min` to `netcat_active_side_port_max`)\n    to be open on `netcat_active_side`\n    `ssh_credentials` is also required for control connection\n  * `LOCAL` replicates to or from localhost\n  `sudo` flag controls whether `SSH` and `SSH+NETCAT` transports should use sudo (which is expected to be\n  passwordless) to run `zfs` command on the remote machine.",
         "nullable": true
        },
        "netcat_active_side": {
         "_name_": "netcat_active_side",
         "title": "netcat_active_side",
         "default": null,
         "type": "string",
         "enum": [
          "LOCAL",
          "REMOTE"
         ],
         "description": "* `transport` is a method of snapshots transfer:\n  * `SSH` transfers snapshots via SSH connection. This method is supported everywhere but does not achieve\n    great performance\n    `ssh_credentials` is a required field for this transport (Keychain Credential ID of type `SSH_CREDENTIALS`)\n  * `SSH+NETCAT` uses unencrypted connection for data transfer. This can only be used in trusted networks\n    and requires a port (specified by range from `netcat_active_side_port_min` to `netcat_active_side_port_max`)\n    to be open on `netcat_active_side`\n    `ssh_credentials` is also required for control connection\n  * `LOCAL` replicates to or from localhost\n  `sudo` flag controls whether `SSH` and `SSH+NETCAT` transports should use sudo (which is expected to be\n  passwordless) to run `zfs` command on the remote machine.",
         "nullable": true
        },
        "netcat_active_side_listen_address": {
         "_name_": "netcat_active_side_listen_address",
         "title": "netcat_active_side_listen_address",
         "default": null,
         "type": "string",
         "nullable": true
        },
        "netcat_active_side_port_min": {
         "type": "integer",
         "_name_": "netcat_active_side_port_min",
         "title": "netcat_active_side_port_min",
         "default": null,
         "description": "* `transport` is a method of snapshots transfer:\n  * `SSH` transfers snapshots via SSH connection. This method is supported everywhere but does not achieve\n    great performance\n    `ssh_credentials` is a required field for this transport (Keychain Credential ID of type `SSH_CREDENTIALS`)\n  * `SSH+NETCAT` uses unencrypted connection for data transfer. This can only be used in trusted networks\n    and requires a port (specified by range from `netcat_active_side_port_min` to `netcat_active_side_port_max`)\n    to be open on `netcat_active_side`\n    `ssh_credentials` is also required for control connection\n  * `LOCAL` replicates to or from localhost\n  `sudo` flag controls whether `SSH` and `SSH+NETCAT` transports should use sudo (which is expected to be\n  passwordless) to run `zfs` command on the remote machine.",
         "nullable": true
        },
        "netcat_active_side_port_max": {
         "type": "integer",
         "_name_": "netcat_active_side_port_max",
         "title": "netcat_active_side_port_max",
         "default": null,
         "description": "* `transport` is a method of snapshots transfer:\n  * `SSH` transfers snapshots via SSH connection. This method is supported everywhere but does not achieve\n    great performance\n    `ssh_credentials` is a required field for this transport (Keychain Credential ID of type `SSH_CREDENTIALS`)\n  * `SSH+NETCAT` uses unencrypted connection for data transfer. This can only be used in trusted networks\n    and requires a port (specified by range from `netcat_active_side_port_min` to `netcat_active_side_port_max`)\n    to be open on `netcat_active_side`\n    `ssh_credentials` is also required for control connection\n  * `LOCAL` replicates to or from localhost\n  `sudo` flag controls whether `SSH` and `SSH+NETCAT` transports should use sudo (which is expected to be\n  passwordless) to run `zfs` command on the remote machine.",
         "nullable": true
        },
        "netcat_passive_side_connect_address": {
         "_name_": "netcat_passive_side_connect_address",
         "title": "netcat_passive_side_connect_address",
         "default": null,
         "type": "string",
         "nullable": true
        },
        "sudo": {
         "type": "boolean",
         "_name_": "sudo",
         "title": "sudo",
         "default": false,
         "description": "* `transport` is a method of snapshots transfer:\n  * `SSH` transfers snapshots via SSH connection. This method is supported everywhere but does not achieve\n    great performance\n    `ssh_credentials` is a required field for this transport (Keychain Credential ID of type `SSH_CREDENTIALS`)\n  * `SSH+NETCAT` uses unencrypted connection for data transfer. This can only be used in trusted networks\n    and requires a port (specified by range from `netcat_active_side_port_min` to `netcat_active_side_port_max`)\n    to be open on `netcat_active_side`\n    `ssh_credentials` is also required for control connection\n  * `LOCAL` replicates to or from localhost\n  `sudo` flag controls whether `SSH` and `SSH+NETCAT` transports should use sudo (which is expected to be\n  passwordless) to run `zfs` command on the remote machine."
        },
        "source_datasets": {
         "_name_": "source_datasets",
         "title": "source_datasets",
         "default": [],
         "type": "array",
         "items": {
          "_name_": "dataset",
          "title": "dataset",
          "_required_": false,
          "type": "string"
         },
         "description": "* `source_datasets` is a non-empty list of datasets to replicate snapshots from"
        },
        "target_dataset": {
         "_name_": "target_dataset",
         "title": "target_dataset",
         "type": "string",
         "description": "* `target_dataset` is a dataset to put snapshots into. It must exist on target side"
        },
        "recursive": {
         "type": "boolean",
         "_name_": "recursive",
         "title": "recursive",
         "description": "* `recursive` and `exclude` have the same meaning as for Periodic Snapshot Task"
        },
        "exclude": {
         "_name_": "exclude",
         "title": "exclude",
         "default": [],
         "type": "array",
         "items": {
          "_name_": "dataset",
          "title": "dataset",
          "_required_": false,
          "type": "string"
         },
         "description": "* `recursive` and `exclude` have the same meaning as for Periodic Snapshot Task"
        },
        "properties": {
         "type": "boolean",
         "_name_": "properties",
         "title": "properties",
         "default": true,
         "description": "* `properties` control whether we should send dataset properties along with snapshots"
        },
        "properties_exclude": {
         "_name_": "properties_exclude",
         "title": "properties_exclude",
         "default": [],
         "type": "array",
         "items": {
          "_name_": "property",
          "title": "property",
          "_required_": false,
          "type": "string"
         }
        },
        "properties_override": {
         "type": "object",
         "properties": {},
         "additionalProperties": true,
         "_name_": "properties_override",
         "title": "properties_override",
         "default": {},
         "_attrs_order_": []
        },
        "replicate": {
         "type": "boolean",
         "_name_": "replicate",
         "title": "replicate",
         "default": false
        },
        "encryption": {
         "type": "boolean",
         "_name_": "encryption",
         "title": "encryption",
         "default": false
        },
        "encryption_inherit": {
         "type": "boolean",
         "_name_": "encryption_inherit",
         "title": "encryption_inherit",
         "default": null,
         "nullable": true
        },
        "encryption_key": {
         "_name_": "encryption_key",
         "title": "encryption_key",
         "default": null,
         "type": "string",
         "nullable": true
        },
        "encryption_key_format": {
         "_name_": "encryption_key_format",
         "title": "encryption_key_format",
         "default": null,
         "type": "string",
         "enum": [
          "HEX",
          "PASSPHRASE"
         ],
         "nullable": true
        },
        "encryption_key_location": {
         "_name_": "encryption_key_location",
         "title": "encryption_key_location",
         "default": null,
         "type": "string",
         "nullable": true
        },
        "periodic_snapshot_tasks": {
         "_name_": "periodic_snapshot_tasks",
         "title": "periodic_snapshot_tasks",
         "default": [],
         "type": "array",
         "items": {
          "type": "integer",
          "_name_": "periodic_snapshot_task",
          "title": "periodic_snapshot_task",
          "_required_": false
         },
         "description": "* `periodic_snapshot_tasks` is a list of periodic snapshot task IDs that are sources of snapshots for this\n  replication task. Only push replication tasks can be bound to periodic snapshot tasks."
        },
        "naming_schema": {
         "_name_": "naming_schema",
         "title": "naming_schema",
         "default": [],
         "type": "array",
         "items": {
          "_name_": "naming_schema",
          "title": "naming_schema",
          "_required_": false,
          "type": "string"
         },
         "description": "* `naming_schema` is a list of naming schemas for pull replication"
        },
        "also_include_naming_schema": {
         "_name_": "also_include_naming_schema",
         "title": "also_include_naming_schema",
         "default": [],
         "type": "array",
         "items": {
          "_name_": "naming_schema",
          "title": "naming_schema",
          "_required_": false,
          "type": "string"
         },
         "description": "* `also_include_naming_schema` is a list of naming schemas for push replication"
        },
        "name_regex": {
         "_name_": "name_regex",
         "title": "name_regex",
         "default": null,
         "type": "string",
         "description": "* `name_regex` will replicate all snapshots which names match specified regular expression",
         "nullable": true
        },
        "auto": {
         "type": "boolean",
         "_name_": "auto",
         "title": "auto",
         "description": "* `auto` allows replication to run automatically on schedule or after bound periodic snapshot task\n* `schedule` is a schedule to run replication task. Only `auto` replication tasks without bound periodic\n  snapshot tasks can have a schedule"
        },
        "schedule": {
         "type": "object",
         "properties": {
          "minute": {
           "_name_": "minute",
           "title": "minute",
           "default": "00",
           "type": "string"
          },
          "hour": {
           "_name_": "hour",
           "title": "hour",
           "default": "*",
           "type": "string"
          },
          "dom": {
           "_name_": "dom",
           "title": "dom",
           "default": "*",
           "type": "string"
          },
          "month": {
           "_name_": "month",
           "title": "month",
           "default": "*",
           "type": "string"
          },
          "dow": {
           "_name_": "dow",
           "title": "dow",
           "default": "*",
           "type": "string"
          },
          "begin": {
           "_name_": "begin",
           "title": "begin",
           "default": "00:00",
           "type": "string"
          },
          "end": {
           "_name_": "end",
           "title": "end",
           "default": "23:59",
           "type": "string"
          }
         },
         "additionalProperties": false,
         "_name_": "schedule",
         "title": "schedule",
         "default": null,
         "_attrs_order_": [
          "minute",
          "hour",
          "dom",
          "month",
          "dow",
          "begin",
          "end"
         ],
         "description": "* `auto` allows replication to run automatically on schedule or after bound periodic snapshot task\n* `schedule` is a schedule to run replication task. Only `auto` replication tasks without bound periodic\n  snapshot tasks can have a schedule\n* Enabling `only_matching_schedule` will only replicate snapshots that match `schedule` or\n  `restrict_schedule`"
        },
        "restrict_schedule": {
         "type": "object",
         "properties": {
          "minute": {
           "_name_": "minute",
           "title": "minute",
           "default": "00",
           "type": "string"
          },
          "hour": {
           "_name_": "hour",
           "title": "hour",
           "default": "*",
           "type": "string"
          },
          "dom": {
           "_name_": "dom",
           "title": "dom",
           "default": "*",
           "type": "string"
          },
          "month": {
           "_name_": "month",
           "title": "month",
           "default": "*",
           "type": "string"
          },
          "dow": {
           "_name_": "dow",
           "title": "dow",
           "default": "*",
           "type": "string"
          },
          "begin": {
           "_name_": "begin",
           "title": "begin",
           "default": "00:00",
           "type": "string"
          },
          "end": {
           "_name_": "end",
           "title": "end",
           "default": "23:59",
           "type": "string"
          }
         },
         "additionalProperties": false,
         "_name_": "restrict_schedule",
         "title": "restrict_schedule",
         "default": null,
         "_attrs_order_": [
          "minute",
          "hour",
          "dom",
          "month",
          "dow",
          "begin",
          "end"
         ],
         "description": "* `restrict_schedule` restricts when replication task with bound periodic snapshot tasks runs. For example,\n  you can have periodic snapshot tasks that run every 15 minutes, but only run replication task every hour.\n* Enabling `only_matching_schedule` will only replicate snapshots that match `schedule` or\n  `restrict_schedule`"
        },
        "only_matching_schedule": {
         "type": "boolean",
         "_name_": "only_matching_schedule",
         "title": "only_matching_schedule",
         "default": false,
         "description": "* Enabling `only_matching_schedule` will only replicate snapshots that match `schedule` or\n  `restrict_schedule`"
        },
        "allow_from_scratch": {
         "type": "boolean",
         "_name_": "allow_from_scratch",
         "title": "allow_from_scratch",
         "default": false,
         "description": "* `allow_from_scratch` will destroy all snapshots on target side and replicate everything from scratch if none\n  of the snapshots on target side matches source snapshots"
        },
        "readonly": {
         "_name_": "readonly",
         "title": "readonly",
         "default": "SET",
         "type": "string",
         "enum": [
          "SET",
          "REQUIRE",
          "IGNORE"
         ],
         "description": "* `readonly` controls destination datasets readonly property:\n  * `SET` will set all destination datasets to readonly=on after finishing the replication\n  * `REQUIRE` will require all existing destination datasets to have readonly=on property\n  * `IGNORE` will avoid this kind of behavior"
        },
        "hold_pending_snapshots": {
         "type": "boolean",
         "_name_": "hold_pending_snapshots",
         "title": "hold_pending_snapshots",
         "default": false,
         "description": "* `hold_pending_snapshots` will prevent source snapshots from being deleted by retention of replication fails\n  for some reason"
        },
        "retention_policy": {
         "_name_": "retention_policy",
         "title": "retention_policy",
         "type": "string",
         "enum": [
          "SOURCE",
          "CUSTOM",
          "NONE"
         ],
         "description": "* `retention_policy` specifies how to delete old snapshots on target side:\n  * `SOURCE` deletes snapshots that are absent on source side\n  * `CUSTOM` deletes snapshots that are older than `lifetime_value` and `lifetime_unit`\n  * `NONE` does not delete any snapshots"
        },
        "lifetime_value": {
         "type": "integer",
         "_name_": "lifetime_value",
         "title": "lifetime_value",
         "default": null,
         "description": "* `retention_policy` specifies how to delete old snapshots on target side:\n  * `SOURCE` deletes snapshots that are absent on source side\n  * `CUSTOM` deletes snapshots that are older than `lifetime_value` and `lifetime_unit`\n  * `NONE` does not delete any snapshots",
         "nullable": true
        },
        "lifetime_unit": {
         "_name_": "lifetime_unit",
         "title": "lifetime_unit",
         "default": null,
         "type": "string",
         "enum": [
          "HOUR",
          "DAY",
          "WEEK",
          "MONTH",
          "YEAR"
         ],
         "description": "* `retention_policy` specifies how to delete old snapshots on target side:\n  * `SOURCE` deletes snapshots that are absent on source side\n  * `CUSTOM` deletes snapshots that are older than `lifetime_value` and `lifetime_unit`\n  * `NONE` does not delete any snapshots",
         "nullable": true
        },
        "lifetimes": {
         "_name_": "lifetimes",
         "title": "lifetimes",
         "default": [],
         "type": "array",
         "items": {
          "type": "object",
          "properties": {
           "schedule": {
            "type": "object",
            "properties": {
             "minute": {
              "_name_": "minute",
              "title": "minute",
              "default": "*",
              "_required_": false,
              "type": "string"
             },
             "hour": {
              "_name_": "hour",
              "title": "hour",
              "default": "*",
              "_required_": false,
              "type": "string"
             },
             "dom": {
              "_name_": "dom",
              "title": "dom",
              "default": "*",
              "_required_": false,
              "type": "string"
             },
             "month": {
              "_name_": "month",
              "title": "month",
              "default": "*",
              "_required_": false,
              "type": "string"
             },
             "dow": {
              "_name_": "dow",
              "title": "dow",
              "default": "*",
              "_required_": false,
              "type": "string"
             }
            },
            "additionalProperties": false,
            "_name_": "schedule",
            "title": "schedule",
            "default": {},
            "_required_": false,
            "_attrs_order_": [
             "minute",
             "hour",
             "dom",
             "month",
             "dow"
            ]
           },
           "lifetime_value": {
            "type": "integer",
            "_name_": "lifetime_value",
            "title": "lifetime_value",
            "_required_": true
           },
           "lifetime_unit": {
            "_name_": "lifetime_unit",
            "title": "lifetime_unit",
            "_required_": true,
            "type": "string",
            "enum": [
             "HOUR",
             "DAY",
             "WEEK",
             "MONTH",
             "YEAR"
            ]
           }
          },
          "additionalProperties": false,
          "_name_": "lifetime",
          "title": "lifetime",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "schedule",
           "lifetime_value",
           "lifetime_unit"
          ]
         }
        },
        "compression": {
         "_name_": "compression",
         "title": "compression",
         "default": null,
         "type": "string",
         "enum": [
          "LZ4",
          "PIGZ",
          "PLZIP"
         ],
         "description": "* `compression` compresses SSH stream. Available only for SSH transport",
         "nullable": true
        },
        "speed_limit": {
         "type": "integer",
         "_name_": "speed_limit",
         "title": "speed_limit",
         "default": null,
         "description": "* `speed_limit` limits speed of SSH stream. Available only for SSH transport",
         "nullable": true
        },
        "large_block": {
         "type": "boolean",
         "_name_": "large_block",
         "title": "large_block",
         "default": true,
         "description": "* `large_block`, `embed` and `compressed` are various ZFS stream flag documented in `man zfs send`"
        },
        "embed": {
         "type": "boolean",
         "_name_": "embed",
         "title": "embed",
         "default": false,
         "description": "* `large_block`, `embed` and `compressed` are various ZFS stream flag documented in `man zfs send`"
        },
        "compressed": {
         "type": "boolean",
         "_name_": "compressed",
         "title": "compressed",
         "default": true,
         "description": "* `large_block`, `embed` and `compressed` are various ZFS stream flag documented in `man zfs send`"
        },
        "retries": {
         "type": "integer",
         "_name_": "retries",
         "title": "retries",
         "default": 5,
         "description": "* `retries` specifies number of retries before considering replication failed"
        },
        "logging_level": {
         "_name_": "logging_level",
         "title": "logging_level",
         "default": null,
         "type": "string",
         "enum": [
          "DEBUG",
          "INFO",
          "WARNING",
          "ERROR"
         ],
         "nullable": true
        },
        "enabled": {
         "type": "boolean",
         "_name_": "enabled",
         "title": "enabled",
         "default": true
        }
       },
       "additionalProperties": false,
       "_name_": "replication_create",
       "title": "replication_create",
       "default": {},
       "_attrs_order_": [
        "name",
        "direction",
        "transport",
        "ssh_credentials",
        "netcat_active_side",
        "netcat_active_side_listen_address",
        "netcat_active_side_port_min",
        "netcat_active_side_port_max",
        "netcat_passive_side_connect_address",
        "sudo",
        "source_datasets",
        "target_dataset",
        "recursive",
        "exclude",
        "properties",
        "properties_exclude",
        "properties_override",
        "replicate",
        "encryption",
        "encryption_inherit",
        "encryption_key",
        "encryption_key_format",
        "encryption_key_location",
        "periodic_snapshot_tasks",
        "naming_schema",
        "also_include_naming_schema",
        "name_regex",
        "auto",
        "schedule",
        "restrict_schedule",
        "only_matching_schedule",
        "allow_from_scratch",
        "readonly",
        "hold_pending_snapshots",
        "retention_policy",
        "lifetime_value",
        "lifetime_unit",
        "lifetimes",
        "compression",
        "speed_limit",
        "large_block",
        "embed",
        "compressed",
        "retries",
        "logging_level",
        "enabled"
       ]
      },
      "return_schema_of_replication_create": {
       "type": "object",
       "properties": {},
       "additionalProperties": true,
       "_name_": "replication_create_returns",
       "title": "replication_create_returns",
       "default": {},
       "_attrs_order_": []
      },
      "return_schema_of_replication_delete": {
       "type": "boolean",
       "_name_": "deleted",
       "title": "deleted",
       "description": "Will return `true` if `id` is deleted successfully"
      },
      "replication_update": {
       "type": "object",
       "properties": {
        "name": {
         "_name_": "name",
         "title": "name",
         "type": "string",
         "description": "* `name` specifies a name for replication task"
        },
        "direction": {
         "_name_": "direction",
         "title": "direction",
         "type": "string",
         "enum": [
          "PUSH",
          "PULL"
         ],
         "description": "* `direction` specifies whether task will `PUSH` or `PULL` snapshots"
        },
        "transport": {
         "_name_": "transport",
         "title": "transport",
         "type": "string",
         "enum": [
          "SSH",
          "SSH+NETCAT",
          "LOCAL"
         ],
         "description": "* `transport` is a method of snapshots transfer:\n  * `SSH` transfers snapshots via SSH connection. This method is supported everywhere but does not achieve\n    great performance\n    `ssh_credentials` is a required field for this transport (Keychain Credential ID of type `SSH_CREDENTIALS`)\n  * `SSH+NETCAT` uses unencrypted connection for data transfer. This can only be used in trusted networks\n    and requires a port (specified by range from `netcat_active_side_port_min` to `netcat_active_side_port_max`)\n    to be open on `netcat_active_side`\n    `ssh_credentials` is also required for control connection\n  * `LOCAL` replicates to or from localhost\n  `sudo` flag controls whether `SSH` and `SSH+NETCAT` transports should use sudo (which is expected to be\n  passwordless) to run `zfs` command on the remote machine."
        },
        "ssh_credentials": {
         "type": "integer",
         "_name_": "ssh_credentials",
         "title": "ssh_credentials",
         "default": null,
         "description": "* `transport` is a method of snapshots transfer:\n  * `SSH` transfers snapshots via SSH connection. This method is supported everywhere but does not achieve\n    great performance\n    `ssh_credentials` is a required field for this transport (Keychain Credential ID of type `SSH_CREDENTIALS`)\n  * `SSH+NETCAT` uses unencrypted connection for data transfer. This can only be used in trusted networks\n    and requires a port (specified by range from `netcat_active_side_port_min` to `netcat_active_side_port_max`)\n    to be open on `netcat_active_side`\n    `ssh_credentials` is also required for control connection\n  * `LOCAL` replicates to or from localhost\n  `sudo` flag controls whether `SSH` and `SSH+NETCAT` transports should use sudo (which is expected to be\n  passwordless) to run `zfs` command on the remote machine.",
         "nullable": true
        },
        "netcat_active_side": {
         "_name_": "netcat_active_side",
         "title": "netcat_active_side",
         "default": null,
         "type": "string",
         "enum": [
          "LOCAL",
          "REMOTE"
         ],
         "description": "* `transport` is a method of snapshots transfer:\n  * `SSH` transfers snapshots via SSH connection. This method is supported everywhere but does not achieve\n    great performance\n    `ssh_credentials` is a required field for this transport (Keychain Credential ID of type `SSH_CREDENTIALS`)\n  * `SSH+NETCAT` uses unencrypted connection for data transfer. This can only be used in trusted networks\n    and requires a port (specified by range from `netcat_active_side_port_min` to `netcat_active_side_port_max`)\n    to be open on `netcat_active_side`\n    `ssh_credentials` is also required for control connection\n  * `LOCAL` replicates to or from localhost\n  `sudo` flag controls whether `SSH` and `SSH+NETCAT` transports should use sudo (which is expected to be\n  passwordless) to run `zfs` command on the remote machine.",
         "nullable": true
        },
        "netcat_active_side_listen_address": {
         "_name_": "netcat_active_side_listen_address",
         "title": "netcat_active_side_listen_address",
         "default": null,
         "type": "string",
         "nullable": true
        },
        "netcat_active_side_port_min": {
         "type": "integer",
         "_name_": "netcat_active_side_port_min",
         "title": "netcat_active_side_port_min",
         "default": null,
         "description": "* `transport` is a method of snapshots transfer:\n  * `SSH` transfers snapshots via SSH connection. This method is supported everywhere but does not achieve\n    great performance\n    `ssh_credentials` is a required field for this transport (Keychain Credential ID of type `SSH_CREDENTIALS`)\n  * `SSH+NETCAT` uses unencrypted connection for data transfer. This can only be used in trusted networks\n    and requires a port (specified by range from `netcat_active_side_port_min` to `netcat_active_side_port_max`)\n    to be open on `netcat_active_side`\n    `ssh_credentials` is also required for control connection\n  * `LOCAL` replicates to or from localhost\n  `sudo` flag controls whether `SSH` and `SSH+NETCAT` transports should use sudo (which is expected to be\n  passwordless) to run `zfs` command on the remote machine.",
         "nullable": true
        },
        "netcat_active_side_port_max": {
         "type": "integer",
         "_name_": "netcat_active_side_port_max",
         "title": "netcat_active_side_port_max",
         "default": null,
         "description": "* `transport` is a method of snapshots transfer:\n  * `SSH` transfers snapshots via SSH connection. This method is supported everywhere but does not achieve\n    great performance\n    `ssh_credentials` is a required field for this transport (Keychain Credential ID of type `SSH_CREDENTIALS`)\n  * `SSH+NETCAT` uses unencrypted connection for data transfer. This can only be used in trusted networks\n    and requires a port (specified by range from `netcat_active_side_port_min` to `netcat_active_side_port_max`)\n    to be open on `netcat_active_side`\n    `ssh_credentials` is also required for control connection\n  * `LOCAL` replicates to or from localhost\n  `sudo` flag controls whether `SSH` and `SSH+NETCAT` transports should use sudo (which is expected to be\n  passwordless) to run `zfs` command on the remote machine.",
         "nullable": true
        },
        "netcat_passive_side_connect_address": {
         "_name_": "netcat_passive_side_connect_address",
         "title": "netcat_passive_side_connect_address",
         "default": null,
         "type": "string",
         "nullable": true
        },
        "sudo": {
         "type": "boolean",
         "_name_": "sudo",
         "title": "sudo",
         "default": false,
         "description": "* `transport` is a method of snapshots transfer:\n  * `SSH` transfers snapshots via SSH connection. This method is supported everywhere but does not achieve\n    great performance\n    `ssh_credentials` is a required field for this transport (Keychain Credential ID of type `SSH_CREDENTIALS`)\n  * `SSH+NETCAT` uses unencrypted connection for data transfer. This can only be used in trusted networks\n    and requires a port (specified by range from `netcat_active_side_port_min` to `netcat_active_side_port_max`)\n    to be open on `netcat_active_side`\n    `ssh_credentials` is also required for control connection\n  * `LOCAL` replicates to or from localhost\n  `sudo` flag controls whether `SSH` and `SSH+NETCAT` transports should use sudo (which is expected to be\n  passwordless) to run `zfs` command on the remote machine."
        },
        "source_datasets": {
         "_name_": "source_datasets",
         "title": "source_datasets",
         "default": [],
         "type": "array",
         "items": {
          "_name_": "dataset",
          "title": "dataset",
          "_required_": false,
          "type": "string"
         },
         "description": "* `source_datasets` is a non-empty list of datasets to replicate snapshots from"
        },
        "target_dataset": {
         "_name_": "target_dataset",
         "title": "target_dataset",
         "type": "string",
         "description": "* `target_dataset` is a dataset to put snapshots into. It must exist on target side"
        },
        "recursive": {
         "type": "boolean",
         "_name_": "recursive",
         "title": "recursive",
         "description": "* `recursive` and `exclude` have the same meaning as for Periodic Snapshot Task"
        },
        "exclude": {
         "_name_": "exclude",
         "title": "exclude",
         "default": [],
         "type": "array",
         "items": {
          "_name_": "dataset",
          "title": "dataset",
          "_required_": false,
          "type": "string"
         },
         "description": "* `recursive` and `exclude` have the same meaning as for Periodic Snapshot Task"
        },
        "properties": {
         "type": "boolean",
         "_name_": "properties",
         "title": "properties",
         "default": true,
         "description": "* `properties` control whether we should send dataset properties along with snapshots"
        },
        "properties_exclude": {
         "_name_": "properties_exclude",
         "title": "properties_exclude",
         "default": [],
         "type": "array",
         "items": {
          "_name_": "property",
          "title": "property",
          "_required_": false,
          "type": "string"
         }
        },
        "properties_override": {
         "type": "object",
         "properties": {},
         "additionalProperties": true,
         "_name_": "properties_override",
         "title": "properties_override",
         "default": {},
         "_attrs_order_": []
        },
        "replicate": {
         "type": "boolean",
         "_name_": "replicate",
         "title": "replicate",
         "default": false
        },
        "encryption": {
         "type": "boolean",
         "_name_": "encryption",
         "title": "encryption",
         "default": false
        },
        "encryption_inherit": {
         "type": "boolean",
         "_name_": "encryption_inherit",
         "title": "encryption_inherit",
         "default": null,
         "nullable": true
        },
        "encryption_key": {
         "_name_": "encryption_key",
         "title": "encryption_key",
         "default": null,
         "type": "string",
         "nullable": true
        },
        "encryption_key_format": {
         "_name_": "encryption_key_format",
         "title": "encryption_key_format",
         "default": null,
         "type": "string",
         "enum": [
          "HEX",
          "PASSPHRASE"
         ],
         "nullable": true
        },
        "encryption_key_location": {
         "_name_": "encryption_key_location",
         "title": "encryption_key_location",
         "default": null,
         "type": "string",
         "nullable": true
        },
        "periodic_snapshot_tasks": {
         "_name_": "periodic_snapshot_tasks",
         "title": "periodic_snapshot_tasks",
         "default": [],
         "type": "array",
         "items": {
          "type": "integer",
          "_name_": "periodic_snapshot_task",
          "title": "periodic_snapshot_task",
          "_required_": false
         },
         "description": "* `periodic_snapshot_tasks` is a list of periodic snapshot task IDs that are sources of snapshots for this\n  replication task. Only push replication tasks can be bound to periodic snapshot tasks."
        },
        "naming_schema": {
         "_name_": "naming_schema",
         "title": "naming_schema",
         "default": [],
         "type": "array",
         "items": {
          "_name_": "naming_schema",
          "title": "naming_schema",
          "_required_": false,
          "type": "string"
         },
         "description": "* `naming_schema` is a list of naming schemas for pull replication"
        },
        "also_include_naming_schema": {
         "_name_": "also_include_naming_schema",
         "title": "also_include_naming_schema",
         "default": [],
         "type": "array",
         "items": {
          "_name_": "naming_schema",
          "title": "naming_schema",
          "_required_": false,
          "type": "string"
         },
         "description": "* `also_include_naming_schema` is a list of naming schemas for push replication"
        },
        "name_regex": {
         "_name_": "name_regex",
         "title": "name_regex",
         "default": null,
         "type": "string",
         "description": "* `name_regex` will replicate all snapshots which names match specified regular expression",
         "nullable": true
        },
        "auto": {
         "type": "boolean",
         "_name_": "auto",
         "title": "auto",
         "description": "* `auto` allows replication to run automatically on schedule or after bound periodic snapshot task\n* `schedule` is a schedule to run replication task. Only `auto` replication tasks without bound periodic\n  snapshot tasks can have a schedule"
        },
        "schedule": {
         "type": "object",
         "properties": {
          "minute": {
           "_name_": "minute",
           "title": "minute",
           "default": "00",
           "type": "string"
          },
          "hour": {
           "_name_": "hour",
           "title": "hour",
           "default": "*",
           "type": "string"
          },
          "dom": {
           "_name_": "dom",
           "title": "dom",
           "default": "*",
           "type": "string"
          },
          "month": {
           "_name_": "month",
           "title": "month",
           "default": "*",
           "type": "string"
          },
          "dow": {
           "_name_": "dow",
           "title": "dow",
           "default": "*",
           "type": "string"
          },
          "begin": {
           "_name_": "begin",
           "title": "begin",
           "default": "00:00",
           "type": "string"
          },
          "end": {
           "_name_": "end",
           "title": "end",
           "default": "23:59",
           "type": "string"
          }
         },
         "additionalProperties": false,
         "_name_": "schedule",
         "title": "schedule",
         "default": null,
         "_attrs_order_": [
          "minute",
          "hour",
          "dom",
          "month",
          "dow",
          "begin",
          "end"
         ],
         "description": "* `auto` allows replication to run automatically on schedule or after bound periodic snapshot task\n* `schedule` is a schedule to run replication task. Only `auto` replication tasks without bound periodic\n  snapshot tasks can have a schedule\n* Enabling `only_matching_schedule` will only replicate snapshots that match `schedule` or\n  `restrict_schedule`"
        },
        "restrict_schedule": {
         "type": "object",
         "properties": {
          "minute": {
           "_name_": "minute",
           "title": "minute",
           "default": "00",
           "type": "string"
          },
          "hour": {
           "_name_": "hour",
           "title": "hour",
           "default": "*",
           "type": "string"
          },
          "dom": {
           "_name_": "dom",
           "title": "dom",
           "default": "*",
           "type": "string"
          },
          "month": {
           "_name_": "month",
           "title": "month",
           "default": "*",
           "type": "string"
          },
          "dow": {
           "_name_": "dow",
           "title": "dow",
           "default": "*",
           "type": "string"
          },
          "begin": {
           "_name_": "begin",
           "title": "begin",
           "default": "00:00",
           "type": "string"
          },
          "end": {
           "_name_": "end",
           "title": "end",
           "default": "23:59",
           "type": "string"
          }
         },
         "additionalProperties": false,
         "_name_": "restrict_schedule",
         "title": "restrict_schedule",
         "default": null,
         "_attrs_order_": [
          "minute",
          "hour",
          "dom",
          "month",
          "dow",
          "begin",
          "end"
         ],
         "description": "* `restrict_schedule` restricts when replication task with bound periodic snapshot tasks runs. For example,\n  you can have periodic snapshot tasks that run every 15 minutes, but only run replication task every hour.\n* Enabling `only_matching_schedule` will only replicate snapshots that match `schedule` or\n  `restrict_schedule`"
        },
        "only_matching_schedule": {
         "type": "boolean",
         "_name_": "only_matching_schedule",
         "title": "only_matching_schedule",
         "default": false,
         "description": "* Enabling `only_matching_schedule` will only replicate snapshots that match `schedule` or\n  `restrict_schedule`"
        },
        "allow_from_scratch": {
         "type": "boolean",
         "_name_": "allow_from_scratch",
         "title": "allow_from_scratch",
         "default": false,
         "description": "* `allow_from_scratch` will destroy all snapshots on target side and replicate everything from scratch if none\n  of the snapshots on target side matches source snapshots"
        },
        "readonly": {
         "_name_": "readonly",
         "title": "readonly",
         "default": "SET",
         "type": "string",
         "enum": [
          "SET",
          "REQUIRE",
          "IGNORE"
         ],
         "description": "* `readonly` controls destination datasets readonly property:\n  * `SET` will set all destination datasets to readonly=on after finishing the replication\n  * `REQUIRE` will require all existing destination datasets to have readonly=on property\n  * `IGNORE` will avoid this kind of behavior"
        },
        "hold_pending_snapshots": {
         "type": "boolean",
         "_name_": "hold_pending_snapshots",
         "title": "hold_pending_snapshots",
         "default": false,
         "description": "* `hold_pending_snapshots` will prevent source snapshots from being deleted by retention of replication fails\n  for some reason"
        },
        "retention_policy": {
         "_name_": "retention_policy",
         "title": "retention_policy",
         "type": "string",
         "enum": [
          "SOURCE",
          "CUSTOM",
          "NONE"
         ],
         "description": "* `retention_policy` specifies how to delete old snapshots on target side:\n  * `SOURCE` deletes snapshots that are absent on source side\n  * `CUSTOM` deletes snapshots that are older than `lifetime_value` and `lifetime_unit`\n  * `NONE` does not delete any snapshots"
        },
        "lifetime_value": {
         "type": "integer",
         "_name_": "lifetime_value",
         "title": "lifetime_value",
         "default": null,
         "description": "* `retention_policy` specifies how to delete old snapshots on target side:\n  * `SOURCE` deletes snapshots that are absent on source side\n  * `CUSTOM` deletes snapshots that are older than `lifetime_value` and `lifetime_unit`\n  * `NONE` does not delete any snapshots",
         "nullable": true
        },
        "lifetime_unit": {
         "_name_": "lifetime_unit",
         "title": "lifetime_unit",
         "default": null,
         "type": "string",
         "enum": [
          "HOUR",
          "DAY",
          "WEEK",
          "MONTH",
          "YEAR"
         ],
         "description": "* `retention_policy` specifies how to delete old snapshots on target side:\n  * `SOURCE` deletes snapshots that are absent on source side\n  * `CUSTOM` deletes snapshots that are older than `lifetime_value` and `lifetime_unit`\n  * `NONE` does not delete any snapshots",
         "nullable": true
        },
        "lifetimes": {
         "_name_": "lifetimes",
         "title": "lifetimes",
         "default": [],
         "type": "array",
         "items": {
          "type": "object",
          "properties": {
           "schedule": {
            "type": "object",
            "properties": {
             "minute": {
              "_name_": "minute",
              "title": "minute",
              "default": "*",
              "_required_": false,
              "type": "string"
             },
             "hour": {
              "_name_": "hour",
              "title": "hour",
              "default": "*",
              "_required_": false,
              "type": "string"
             },
             "dom": {
              "_name_": "dom",
              "title": "dom",
              "default": "*",
              "_required_": false,
              "type": "string"
             },
             "month": {
              "_name_": "month",
              "title": "month",
              "default": "*",
              "_required_": false,
              "type": "string"
             },
             "dow": {
              "_name_": "dow",
              "title": "dow",
              "default": "*",
              "_required_": false,
              "type": "string"
             }
            },
            "additionalProperties": false,
            "_name_": "schedule",
            "title": "schedule",
            "default": {},
            "_required_": false,
            "_attrs_order_": [
             "minute",
             "hour",
             "dom",
             "month",
             "dow"
            ]
           },
           "lifetime_value": {
            "type": "integer",
            "_name_": "lifetime_value",
            "title": "lifetime_value",
            "_required_": true
           },
           "lifetime_unit": {
            "_name_": "lifetime_unit",
            "title": "lifetime_unit",
            "_required_": true,
            "type": "string",
            "enum": [
             "HOUR",
             "DAY",
             "WEEK",
             "MONTH",
             "YEAR"
            ]
           }
          },
          "additionalProperties": false,
          "_name_": "lifetime",
          "title": "lifetime",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "schedule",
           "lifetime_value",
           "lifetime_unit"
          ]
         }
        },
        "compression": {
         "_name_": "compression",
         "title": "compression",
         "default": null,
         "type": "string",
         "enum": [
          "LZ4",
          "PIGZ",
          "PLZIP"
         ],
         "description": "* `compression` compresses SSH stream. Available only for SSH transport",
         "nullable": true
        },
        "speed_limit": {
         "type": "integer",
         "_name_": "speed_limit",
         "title": "speed_limit",
         "default": null,
         "description": "* `speed_limit` limits speed of SSH stream. Available only for SSH transport",
         "nullable": true
        },
        "large_block": {
         "type": "boolean",
         "_name_": "large_block",
         "title": "large_block",
         "default": true,
         "description": "* `large_block`, `embed` and `compressed` are various ZFS stream flag documented in `man zfs send`"
        },
        "embed": {
         "type": "boolean",
         "_name_": "embed",
         "title": "embed",
         "default": false,
         "description": "* `large_block`, `embed` and `compressed` are various ZFS stream flag documented in `man zfs send`"
        },
        "compressed": {
         "type": "boolean",
         "_name_": "compressed",
         "title": "compressed",
         "default": true,
         "description": "* `large_block`, `embed` and `compressed` are various ZFS stream flag documented in `man zfs send`"
        },
        "retries": {
         "type": "integer",
         "_name_": "retries",
         "title": "retries",
         "default": 5,
         "description": "* `retries` specifies number of retries before considering replication failed"
        },
        "logging_level": {
         "_name_": "logging_level",
         "title": "logging_level",
         "default": null,
         "type": "string",
         "enum": [
          "DEBUG",
          "INFO",
          "WARNING",
          "ERROR"
         ],
         "nullable": true
        },
        "enabled": {
         "type": "boolean",
         "_name_": "enabled",
         "title": "enabled",
         "default": true
        }
       },
       "additionalProperties": false,
       "_name_": "replication_update",
       "title": "replication_update",
       "default": {},
       "_attrs_order_": [
        "name",
        "direction",
        "transport",
        "ssh_credentials",
        "netcat_active_side",
        "netcat_active_side_listen_address",
        "netcat_active_side_port_min",
        "netcat_active_side_port_max",
        "netcat_passive_side_connect_address",
        "sudo",
        "source_datasets",
        "target_dataset",
        "recursive",
        "exclude",
        "properties",
        "properties_exclude",
        "properties_override",
        "replicate",
        "encryption",
        "encryption_inherit",
        "encryption_key",
        "encryption_key_format",
        "encryption_key_location",
        "periodic_snapshot_tasks",
        "naming_schema",
        "also_include_naming_schema",
        "name_regex",
        "auto",
        "schedule",
        "restrict_schedule",
        "only_matching_schedule",
        "allow_from_scratch",
        "readonly",
        "hold_pending_snapshots",
        "retention_policy",
        "lifetime_value",
        "lifetime_unit",
        "lifetimes",
        "compression",
        "speed_limit",
        "large_block",
        "embed",
        "compressed",
        "retries",
        "logging_level",
        "enabled"
       ]
      },
      "return_schema_of_replication_update": {
       "type": "object",
       "properties": {},
       "additionalProperties": true,
       "_name_": "replication_update_returns",
       "title": "replication_update_returns",
       "default": {},
       "_attrs_order_": []
      },
      "replication_count_eligible_manual_snapshots": {
       "type": "object",
       "properties": {
        "datasets": {
         "_name_": "datasets",
         "title": "datasets",
         "default": [],
         "type": "array",
         "items": {
          "_name_": "dataset",
          "title": "dataset",
          "_required_": false,
          "type": "string"
         }
        },
        "naming_schema": {
         "_name_": "naming_schema",
         "title": "naming_schema",
         "default": [],
         "type": "array",
         "items": {
          "_name_": "naming_schema",
          "title": "naming_schema",
          "_required_": false,
          "type": "string"
         },
         "description": "Count how many existing snapshots of `dataset` match `naming_schema`."
        },
        "name_regex": {
         "_name_": "name_regex",
         "title": "name_regex",
         "default": null,
         "type": "string",
         "nullable": true
        },
        "transport": {
         "_name_": "transport",
         "title": "transport",
         "type": "string",
         "enum": [
          "SSH",
          "SSH+NETCAT",
          "LOCAL"
         ]
        },
        "ssh_credentials": {
         "type": "integer",
         "_name_": "ssh_credentials",
         "title": "ssh_credentials",
         "default": null,
         "nullable": true
        }
       },
       "additionalProperties": false,
       "_name_": "count_eligible_manual_snapshots",
       "title": "count_eligible_manual_snapshots",
       "default": {},
       "_attrs_order_": [
        "datasets",
        "naming_schema",
        "name_regex",
        "transport",
        "ssh_credentials"
       ]
      },
      "return_schema_of_replication_count_eligible_manual_snapshots": {
       "type": "object",
       "properties": {
        "total": {
         "type": "integer",
         "_name_": "total",
         "title": "total"
        },
        "eligible": {
         "type": "integer",
         "_name_": "eligible",
         "title": "eligible"
        }
       },
       "additionalProperties": false,
       "_name_": "count_eligible_manual_snapshots",
       "title": "count_eligible_manual_snapshots",
       "default": {},
       "_attrs_order_": [
        "total",
        "eligible"
       ]
      },
      "replication_create_dataset_0": {
       "_name_": "dataset",
       "title": "dataset",
       "type": "string",
       "description": "Accepts `dataset` name, `transport` and SSH credentials ID (for non-local transport)"
      },
      "replication_create_dataset_1": {
       "_name_": "transport",
       "title": "transport",
       "type": "string",
       "enum": [
        "SSH",
        "SSH+NETCAT",
        "LOCAL"
       ],
       "description": "Accepts `dataset` name, `transport` and SSH credentials ID (for non-local transport)"
      },
      "replication_create_dataset_2": {
       "type": "integer",
       "_name_": "ssh_credentials",
       "title": "ssh_credentials",
       "default": null,
       "nullable": true
      },
      "replication_create_dataset": {
       "type": "object",
       "properties": {
        "dataset": {
         "$ref": "#/components/schemas/replication_create_dataset_0"
        },
        "transport": {
         "$ref": "#/components/schemas/replication_create_dataset_1"
        },
        "ssh_credentials": {
         "$ref": "#/components/schemas/replication_create_dataset_2"
        }
       }
      },
      "replication_get_instance_0": {
       "anyOf": [
        {
         "type": "string"
        },
        {
         "type": "integer"
        },
        {
         "type": "boolean"
        },
        {
         "type": "object"
        },
        {
         "type": "array"
        }
       ],
       "nullable": false,
       "_name_": "id",
       "title": "id",
       "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised."
      },
      "replication_get_instance_1": {
       "type": "object",
       "properties": {
        "relationships": {
         "type": "boolean",
         "_name_": "relationships",
         "title": "relationships",
         "default": true
        },
        "extend": {
         "_name_": "extend",
         "title": "extend",
         "default": null,
         "type": "string",
         "nullable": true
        },
        "extend_context": {
         "_name_": "extend_context",
         "title": "extend_context",
         "default": null,
         "type": "string",
         "nullable": true
        },
        "prefix": {
         "_name_": "prefix",
         "title": "prefix",
         "default": null,
         "type": "string",
         "nullable": true
        },
        "extra": {
         "type": "object",
         "properties": {},
         "additionalProperties": true,
         "_name_": "extra",
         "title": "extra",
         "default": {},
         "_attrs_order_": []
        },
        "order_by": {
         "_name_": "order_by",
         "title": "order_by",
         "default": [],
         "type": "array",
         "items": {}
        },
        "select": {
         "_name_": "select",
         "title": "select",
         "default": [],
         "type": "array",
         "items": {}
        },
        "count": {
         "type": "boolean",
         "_name_": "count",
         "title": "count",
         "default": false
        },
        "get": {
         "type": "boolean",
         "_name_": "get",
         "title": "get",
         "default": false
        },
        "offset": {
         "type": "integer",
         "_name_": "offset",
         "title": "offset",
         "default": 0
        },
        "limit": {
         "type": "integer",
         "_name_": "limit",
         "title": "limit",
         "default": 0
        },
        "force_sql_filters": {
         "type": "boolean",
         "_name_": "force_sql_filters",
         "title": "force_sql_filters",
         "default": true
        }
       },
       "additionalProperties": false,
       "_name_": "query-options-get_instance",
       "title": "query-options-get_instance",
       "default": {},
       "_attrs_order_": [
        "relationships",
        "extend",
        "extend_context",
        "prefix",
        "extra",
        "order_by",
        "select",
        "count",
        "get",
        "offset",
        "limit",
        "force_sql_filters"
       ]
      },
      "replication_get_instance": {
       "type": "object",
       "properties": {
        "id": {
         "$ref": "#/components/schemas/replication_get_instance_0"
        },
        "query-options-get_instance": {
         "$ref": "#/components/schemas/replication_get_instance_1"
        }
       }
      },
      "return_schema_of_replication_get_instance": {
       "type": "object",
       "properties": {},
       "additionalProperties": true,
       "_name_": "replication_entry",
       "title": "replication_entry",
       "default": {},
       "_attrs_order_": []
      },
      "replication_list_datasets_0": {
       "_name_": "transport",
       "title": "transport",
       "type": "string",
       "enum": [
        "SSH",
        "SSH+NETCAT",
        "LOCAL"
       ],
       "description": "Accepts `transport` and SSH credentials ID (for non-local transport)"
      },
      "replication_list_datasets_1": {
       "type": "integer",
       "_name_": "ssh_credentials",
       "title": "ssh_credentials",
       "default": null,
       "nullable": true
      },
      "replication_list_datasets": {
       "type": "object",
       "properties": {
        "transport": {
         "$ref": "#/components/schemas/replication_list_datasets_0"
        },
        "ssh_credentials": {
         "$ref": "#/components/schemas/replication_list_datasets_1"
        }
       }
      },
      "return_schema_of_replication_list_datasets": {
       "_name_": "datasets",
       "title": "datasets",
       "default": [],
       "type": "array",
       "items": {
        "_name_": "dataset",
        "title": "dataset",
        "_required_": false,
        "type": "string"
       }
      },
      "return_schema_of_replication_list_naming_schemas": {
       "_name_": "naming_schemas",
       "title": "naming_schemas",
       "default": [],
       "type": "array",
       "items": {
        "_name_": "naming_schema",
        "title": "naming_schema",
        "_required_": false,
        "type": "string"
       }
      },
      "replication_restore": {
       "type": "object",
       "properties": {
        "name": {
         "_name_": "name",
         "title": "name",
         "type": "string"
        },
        "target_dataset": {
         "_name_": "target_dataset",
         "title": "target_dataset",
         "type": "string"
        }
       },
       "additionalProperties": false,
       "_name_": "replication_restore",
       "title": "replication_restore",
       "default": {},
       "_attrs_order_": [
        "name",
        "target_dataset"
       ]
      },
      "replication_run": {
       "type": "object",
       "properties": {}
      },
      "replication_run_onetime": {
       "type": "object",
       "properties": {
        "direction": {
         "_name_": "direction",
         "title": "direction",
         "type": "string",
         "enum": [
          "PUSH",
          "PULL"
         ]
        },
        "transport": {
         "_name_": "transport",
         "title": "transport",
         "type": "string",
         "enum": [
          "SSH",
          "SSH+NETCAT",
          "LOCAL"
         ]
        },
        "ssh_credentials": {
         "type": "integer",
         "_name_": "ssh_credentials",
         "title": "ssh_credentials",
         "default": null,
         "nullable": true
        },
        "netcat_active_side": {
         "_name_": "netcat_active_side",
         "title": "netcat_active_side",
         "default": null,
         "type": "string",
         "enum": [
          "LOCAL",
          "REMOTE"
         ],
         "nullable": true
        },
        "netcat_active_side_listen_address": {
         "_name_": "netcat_active_side_listen_address",
         "title": "netcat_active_side_listen_address",
         "default": null,
         "type": "string",
         "nullable": true
        },
        "netcat_active_side_port_min": {
         "type": "integer",
         "_name_": "netcat_active_side_port_min",
         "title": "netcat_active_side_port_min",
         "default": null,
         "nullable": true
        },
        "netcat_active_side_port_max": {
         "type": "integer",
         "_name_": "netcat_active_side_port_max",
         "title": "netcat_active_side_port_max",
         "default": null,
         "nullable": true
        },
        "netcat_passive_side_connect_address": {
         "_name_": "netcat_passive_side_connect_address",
         "title": "netcat_passive_side_connect_address",
         "default": null,
         "type": "string",
         "nullable": true
        },
        "sudo": {
         "type": "boolean",
         "_name_": "sudo",
         "title": "sudo",
         "default": false
        },
        "source_datasets": {
         "_name_": "source_datasets",
         "title": "source_datasets",
         "default": [],
         "type": "array",
         "items": {
          "_name_": "dataset",
          "title": "dataset",
          "_required_": false,
          "type": "string"
         }
        },
        "target_dataset": {
         "_name_": "target_dataset",
         "title": "target_dataset",
         "type": "string"
        },
        "recursive": {
         "type": "boolean",
         "_name_": "recursive",
         "title": "recursive"
        },
        "exclude": {
         "_name_": "exclude",
         "title": "exclude",
         "default": [],
         "type": "array",
         "items": {
          "_name_": "dataset",
          "title": "dataset",
          "_required_": false,
          "type": "string"
         }
        },
        "properties": {
         "type": "boolean",
         "_name_": "properties",
         "title": "properties",
         "default": true
        },
        "properties_exclude": {
         "_name_": "properties_exclude",
         "title": "properties_exclude",
         "default": [],
         "type": "array",
         "items": {
          "_name_": "property",
          "title": "property",
          "_required_": false,
          "type": "string"
         }
        },
        "properties_override": {
         "type": "object",
         "properties": {},
         "additionalProperties": true,
         "_name_": "properties_override",
         "title": "properties_override",
         "default": {},
         "_attrs_order_": []
        },
        "replicate": {
         "type": "boolean",
         "_name_": "replicate",
         "title": "replicate",
         "default": false
        },
        "encryption": {
         "type": "boolean",
         "_name_": "encryption",
         "title": "encryption",
         "default": false
        },
        "encryption_inherit": {
         "type": "boolean",
         "_name_": "encryption_inherit",
         "title": "encryption_inherit",
         "default": null,
         "nullable": true
        },
        "encryption_key": {
         "_name_": "encryption_key",
         "title": "encryption_key",
         "default": null,
         "type": "string",
         "nullable": true
        },
        "encryption_key_format": {
         "_name_": "encryption_key_format",
         "title": "encryption_key_format",
         "default": null,
         "type": "string",
         "enum": [
          "HEX",
          "PASSPHRASE"
         ],
         "nullable": true
        },
        "encryption_key_location": {
         "_name_": "encryption_key_location",
         "title": "encryption_key_location",
         "default": null,
         "type": "string",
         "nullable": true
        },
        "periodic_snapshot_tasks": {
         "_name_": "periodic_snapshot_tasks",
         "title": "periodic_snapshot_tasks",
         "default": [],
         "type": "array",
         "items": {
          "type": "integer",
          "_name_": "periodic_snapshot_task",
          "title": "periodic_snapshot_task",
          "_required_": false
         }
        },
        "naming_schema": {
         "_name_": "naming_schema",
         "title": "naming_schema",
         "default": [],
         "type": "array",
         "items": {
          "_name_": "naming_schema",
          "title": "naming_schema",
          "_required_": false,
          "type": "string"
         }
        },
        "also_include_naming_schema": {
         "_name_": "also_include_naming_schema",
         "title": "also_include_naming_schema",
         "default": [],
         "type": "array",
         "items": {
          "_name_": "naming_schema",
          "title": "naming_schema",
          "_required_": false,
          "type": "string"
         }
        },
        "name_regex": {
         "_name_": "name_regex",
         "title": "name_regex",
         "default": null,
         "type": "string",
         "nullable": true
        },
        "restrict_schedule": {
         "type": "object",
         "properties": {
          "minute": {
           "_name_": "minute",
           "title": "minute",
           "default": "00",
           "type": "string"
          },
          "hour": {
           "_name_": "hour",
           "title": "hour",
           "default": "*",
           "type": "string"
          },
          "dom": {
           "_name_": "dom",
           "title": "dom",
           "default": "*",
           "type": "string"
          },
          "month": {
           "_name_": "month",
           "title": "month",
           "default": "*",
           "type": "string"
          },
          "dow": {
           "_name_": "dow",
           "title": "dow",
           "default": "*",
           "type": "string"
          },
          "begin": {
           "_name_": "begin",
           "title": "begin",
           "default": "00:00",
           "type": "string"
          },
          "end": {
           "_name_": "end",
           "title": "end",
           "default": "23:59",
           "type": "string"
          }
         },
         "additionalProperties": false,
         "_name_": "restrict_schedule",
         "title": "restrict_schedule",
         "default": null,
         "_attrs_order_": [
          "minute",
          "hour",
          "dom",
          "month",
          "dow",
          "begin",
          "end"
         ]
        },
        "allow_from_scratch": {
         "type": "boolean",
         "_name_": "allow_from_scratch",
         "title": "allow_from_scratch",
         "default": false
        },
        "readonly": {
         "_name_": "readonly",
         "title": "readonly",
         "default": "SET",
         "type": "string",
         "enum": [
          "SET",
          "REQUIRE",
          "IGNORE"
         ]
        },
        "hold_pending_snapshots": {
         "type": "boolean",
         "_name_": "hold_pending_snapshots",
         "title": "hold_pending_snapshots",
         "default": false
        },
        "retention_policy": {
         "_name_": "retention_policy",
         "title": "retention_policy",
         "type": "string",
         "enum": [
          "SOURCE",
          "CUSTOM",
          "NONE"
         ]
        },
        "lifetime_value": {
         "type": "integer",
         "_name_": "lifetime_value",
         "title": "lifetime_value",
         "default": null,
         "nullable": true
        },
        "lifetime_unit": {
         "_name_": "lifetime_unit",
         "title": "lifetime_unit",
         "default": null,
         "type": "string",
         "enum": [
          "HOUR",
          "DAY",
          "WEEK",
          "MONTH",
          "YEAR"
         ],
         "nullable": true
        },
        "lifetimes": {
         "_name_": "lifetimes",
         "title": "lifetimes",
         "default": [],
         "type": "array",
         "items": {
          "type": "object",
          "properties": {
           "schedule": {
            "type": "object",
            "properties": {
             "minute": {
              "_name_": "minute",
              "title": "minute",
              "default": "*",
              "_required_": false,
              "type": "string"
             },
             "hour": {
              "_name_": "hour",
              "title": "hour",
              "default": "*",
              "_required_": false,
              "type": "string"
             },
             "dom": {
              "_name_": "dom",
              "title": "dom",
              "default": "*",
              "_required_": false,
              "type": "string"
             },
             "month": {
              "_name_": "month",
              "title": "month",
              "default": "*",
              "_required_": false,
              "type": "string"
             },
             "dow": {
              "_name_": "dow",
              "title": "dow",
              "default": "*",
              "_required_": false,
              "type": "string"
             }
            },
            "additionalProperties": false,
            "_name_": "schedule",
            "title": "schedule",
            "default": {},
            "_required_": false,
            "_attrs_order_": [
             "minute",
             "hour",
             "dom",
             "month",
             "dow"
            ]
           },
           "lifetime_value": {
            "type": "integer",
            "_name_": "lifetime_value",
            "title": "lifetime_value",
            "_required_": true
           },
           "lifetime_unit": {
            "_name_": "lifetime_unit",
            "title": "lifetime_unit",
            "_required_": true,
            "type": "string",
            "enum": [
             "HOUR",
             "DAY",
             "WEEK",
             "MONTH",
             "YEAR"
            ]
           }
          },
          "additionalProperties": false,
          "_name_": "lifetime",
          "title": "lifetime",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "schedule",
           "lifetime_value",
           "lifetime_unit"
          ]
         }
        },
        "compression": {
         "_name_": "compression",
         "title": "compression",
         "default": null,
         "type": "string",
         "enum": [
          "LZ4",
          "PIGZ",
          "PLZIP"
         ],
         "nullable": true
        },
        "speed_limit": {
         "type": "integer",
         "_name_": "speed_limit",
         "title": "speed_limit",
         "default": null,
         "nullable": true
        },
        "large_block": {
         "type": "boolean",
         "_name_": "large_block",
         "title": "large_block",
         "default": true
        },
        "embed": {
         "type": "boolean",
         "_name_": "embed",
         "title": "embed",
         "default": false
        },
        "compressed": {
         "type": "boolean",
         "_name_": "compressed",
         "title": "compressed",
         "default": true
        },
        "retries": {
         "type": "integer",
         "_name_": "retries",
         "title": "retries",
         "default": 5
        },
        "logging_level": {
         "_name_": "logging_level",
         "title": "logging_level",
         "default": null,
         "type": "string",
         "enum": [
          "DEBUG",
          "INFO",
          "WARNING",
          "ERROR"
         ],
         "nullable": true
        },
        "exclude_mountpoint_property": {
         "type": "boolean",
         "_name_": "exclude_mountpoint_property",
         "title": "exclude_mountpoint_property",
         "default": true
        },
        "only_from_scratch": {
         "type": "boolean",
         "_name_": "only_from_scratch",
         "title": "only_from_scratch",
         "default": false
        }
       },
       "additionalProperties": false,
       "_name_": "replication_run_onetime",
       "title": "replication_run_onetime",
       "default": {},
       "_attrs_order_": [
        "direction",
        "transport",
        "ssh_credentials",
        "netcat_active_side",
        "netcat_active_side_listen_address",
        "netcat_active_side_port_min",
        "netcat_active_side_port_max",
        "netcat_passive_side_connect_address",
        "sudo",
        "source_datasets",
        "target_dataset",
        "recursive",
        "exclude",
        "properties",
        "properties_exclude",
        "properties_override",
        "replicate",
        "encryption",
        "encryption_inherit",
        "encryption_key",
        "encryption_key_format",
        "encryption_key_location",
        "periodic_snapshot_tasks",
        "naming_schema",
        "also_include_naming_schema",
        "name_regex",
        "restrict_schedule",
        "allow_from_scratch",
        "readonly",
        "hold_pending_snapshots",
        "retention_policy",
        "lifetime_value",
        "lifetime_unit",
        "lifetimes",
        "compression",
        "speed_limit",
        "large_block",
        "embed",
        "compressed",
        "retries",
        "logging_level",
        "exclude_mountpoint_property",
        "only_from_scratch"
       ]
      },
      "replication_target_unmatched_snapshots_0": {
       "_name_": "direction",
       "title": "direction",
       "type": "string",
       "enum": [
        "PUSH",
        "PULL"
       ]
      },
      "replication_target_unmatched_snapshots_1": {
       "_name_": "source_datasets",
       "title": "source_datasets",
       "default": [],
       "type": "array",
       "items": {
        "_name_": "dataset",
        "title": "dataset",
        "_required_": false,
        "type": "string"
       }
      },
      "replication_target_unmatched_snapshots_2": {
       "_name_": "target_dataset",
       "title": "target_dataset",
       "type": "string"
      },
      "replication_target_unmatched_snapshots_3": {
       "_name_": "transport",
       "title": "transport",
       "type": "string",
       "enum": [
        "SSH",
        "SSH+NETCAT",
        "LOCAL",
        "LEGACY"
       ]
      },
      "replication_target_unmatched_snapshots_4": {
       "type": "integer",
       "_name_": "ssh_credentials",
       "title": "ssh_credentials",
       "default": null,
       "nullable": true
      },
      "replication_target_unmatched_snapshots": {
       "type": "object",
       "properties": {
        "direction": {
         "$ref": "#/components/schemas/replication_target_unmatched_snapshots_0"
        },
        "source_datasets": {
         "$ref": "#/components/schemas/replication_target_unmatched_snapshots_1"
        },
        "target_dataset": {
         "$ref": "#/components/schemas/replication_target_unmatched_snapshots_2"
        },
        "transport": {
         "$ref": "#/components/schemas/replication_target_unmatched_snapshots_3"
        },
        "ssh_credentials": {
         "$ref": "#/components/schemas/replication_target_unmatched_snapshots_4"
        }
       }
      },
      "return_schema_of_replication_target_unmatched_snapshots": {
       "type": "object",
       "properties": {},
       "additionalProperties": true,
       "_name_": "target_unmatched_snapshots",
       "title": "target_unmatched_snapshots",
       "description": "\n\nExample(s):\n```\n{\n    \"backup/work\": [\n        \"auto-2019-10-15_13-00\",\n        \"auto-2019-10-15_09-00\"\n    ],\n    \"backup/games\": [\n        \"auto-2019-10-15_13-00\"\n    ]\n}\n```\n",
       "default": {},
       "_attrs_order_": []
      },
      "return_schema_of_replication_config_config": {
       "type": "object",
       "properties": {},
       "additionalProperties": true,
       "_name_": "replication_config_entry",
       "title": "replication_config_entry",
       "default": {},
       "_attrs_order_": []
      },
      "replication_config_update": {
       "type": "object",
       "properties": {
        "max_parallel_replication_tasks": {
         "type": "integer",
         "_name_": "max_parallel_replication_tasks",
         "title": "max_parallel_replication_tasks",
         "nullable": true
        }
       },
       "additionalProperties": false,
       "_name_": "replication_config_update",
       "title": "replication_config_update",
       "default": {},
       "_attrs_order_": [
        "max_parallel_replication_tasks"
       ]
      },
      "return_schema_of_replication_config_update": {
       "type": "object",
       "properties": {},
       "additionalProperties": true,
       "_name_": "replication_config_update_returns",
       "title": "replication_config_update_returns",
       "default": {},
       "_attrs_order_": []
      },
      "return_schema_of_reporting_config": {
       "additionalProperties": false,
       "properties": {
        "id": {
         "title": "id",
         "type": "integer",
         "_name_": "id"
        },
        "tier0_days": {
         "minimum": 1,
         "title": "tier0_days",
         "type": "integer",
         "_name_": "tier0_days"
        },
        "tier1_days": {
         "minimum": 1,
         "title": "tier1_days",
         "type": "integer",
         "_name_": "tier1_days"
        },
        "tier1_update_interval": {
         "minimum": 1,
         "title": "tier1_update_interval",
         "type": "integer",
         "_name_": "tier1_update_interval"
        }
       },
       "required": [
        "id",
        "tier0_days",
        "tier1_days",
        "tier1_update_interval"
       ],
       "title": "result",
       "type": "object",
       "_name_": "result",
       "_attrs_order_": [
        "id",
        "tier0_days",
        "tier1_days",
        "tier1_update_interval"
       ]
      },
      "reporting_update": {
       "additionalProperties": false,
       "properties": {
        "tier0_days": {
         "minimum": 1,
         "title": "tier0_days",
         "type": "integer",
         "_name_": "tier0_days"
        },
        "tier1_days": {
         "minimum": 1,
         "title": "tier1_days",
         "type": "integer",
         "_name_": "tier1_days"
        },
        "tier1_update_interval": {
         "minimum": 1,
         "title": "tier1_update_interval",
         "type": "integer",
         "_name_": "tier1_update_interval"
        }
       },
       "title": "reporting_update",
       "type": "object",
       "_name_": "reporting_update",
       "_attrs_order_": [
        "tier0_days",
        "tier1_days",
        "tier1_update_interval"
       ]
      },
      "return_schema_of_reporting_update": {
       "additionalProperties": false,
       "properties": {
        "id": {
         "title": "id",
         "type": "integer",
         "_name_": "id"
        },
        "tier0_days": {
         "minimum": 1,
         "title": "tier0_days",
         "type": "integer",
         "_name_": "tier0_days"
        },
        "tier1_days": {
         "minimum": 1,
         "title": "tier1_days",
         "type": "integer",
         "_name_": "tier1_days"
        },
        "tier1_update_interval": {
         "minimum": 1,
         "title": "tier1_update_interval",
         "type": "integer",
         "_name_": "tier1_update_interval"
        }
       },
       "required": [
        "id",
        "tier0_days",
        "tier1_days",
        "tier1_update_interval"
       ],
       "title": "result",
       "type": "object",
       "_name_": "result",
       "_attrs_order_": [
        "id",
        "tier0_days",
        "tier1_days",
        "tier1_update_interval"
       ]
      },
      "reporting_get_data_0": {
       "items": {
        "additionalProperties": false,
        "properties": {
         "name": {
          "enum": [
           "cpu",
           "cputemp",
           "disk",
           "interface",
           "load",
           "processes",
           "memory",
           "uptime",
           "arcactualrate",
           "arcrate",
           "arcsize",
           "arcresult",
           "disktemp",
           "upscharge",
           "upsruntime",
           "upsvoltage",
           "upscurrent",
           "upsfrequency",
           "upsload",
           "upstemperature"
          ],
          "title": "name",
          "type": "string",
          "_name_": "name",
          "_required_": true
         },
         "identifier": {
          "anyOf": [
           {
            "minLength": 1,
            "type": "string"
           },
           {
            "type": "null"
           }
          ],
          "default": null,
          "title": "identifier",
          "_name_": "identifier",
          "_required_": false
         }
        },
        "required": [
         "name"
        ],
        "title": "GraphIdentifier",
        "type": "object",
        "_attrs_order_": [
         "name",
         "identifier"
        ]
       },
       "minItems": 1,
       "title": "graphs",
       "type": "array",
       "_name_": "graphs"
      },
      "reporting_get_data_1": {
       "additionalProperties": false,
       "properties": {
        "unit": {
         "anyOf": [
          {
           "enum": [
            "HOUR",
            "DAY",
            "WEEK",
            "MONTH",
            "YEAR"
           ],
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "unit",
         "_name_": "unit"
        },
        "page": {
         "default": 1,
         "minimum": 1,
         "title": "page",
         "type": "integer",
         "_name_": "page"
        },
        "aggregate": {
         "default": true,
         "title": "aggregate",
         "type": "boolean",
         "_name_": "aggregate"
        },
        "start": {
         "anyOf": [
          {
           "exclusiveMinimum": 0,
           "type": "integer"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "start",
         "_name_": "start"
        },
        "end": {
         "anyOf": [
          {
           "exclusiveMinimum": 0,
           "type": "integer"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "end",
         "_name_": "end"
        }
       },
       "title": "query",
       "type": "object",
       "_name_": "query",
       "_attrs_order_": [
        "unit",
        "page",
        "aggregate",
        "start",
        "end"
       ]
      },
      "reporting_get_data": {
       "type": "object",
       "properties": {
        "graphs": {
         "$ref": "#/components/schemas/reporting_get_data_0"
        },
        "query": {
         "$ref": "#/components/schemas/reporting_get_data_1"
        }
       }
      },
      "return_schema_of_reporting_get_data": {
       "items": {
        "additionalProperties": false,
        "properties": {
         "name": {
          "minLength": 1,
          "title": "name",
          "type": "string",
          "_name_": "name",
          "_required_": true
         },
         "identifier": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "null"
           }
          ],
          "title": "identifier",
          "_name_": "identifier",
          "_required_": true
         },
         "data": {
          "items": [
           {}
          ],
          "title": "data",
          "type": "array",
          "_name_": "data",
          "_required_": true
         },
         "aggregations": {
          "title": "aggregations",
          "_name_": "aggregations",
          "_required_": true
         },
         "start": {
          "exclusiveMinimum": 0,
          "title": "start",
          "type": "integer",
          "_name_": "start",
          "_required_": true
         },
         "end": {
          "exclusiveMinimum": 0,
          "title": "end",
          "type": "integer",
          "_name_": "end",
          "_required_": true
         },
         "legend": {
          "items": [
           {
            "type": "string"
           }
          ],
          "title": "legend",
          "type": "array",
          "_name_": "legend",
          "_required_": true
         }
        },
        "required": [
         "name",
         "identifier",
         "data",
         "aggregations",
         "start",
         "end",
         "legend"
        ],
        "title": "ReportingGetDataResponse",
        "type": "object",
        "_attrs_order_": [
         "name",
         "identifier",
         "data",
         "aggregations",
         "start",
         "end",
         "legend"
        ]
       },
       "title": "result",
       "type": "array",
       "_name_": "result"
      },
      "reporting_graph_0": {
       "minLength": 1,
       "title": "str",
       "type": "string",
       "_name_": "str"
      },
      "reporting_graph_1": {
       "additionalProperties": false,
       "properties": {
        "unit": {
         "anyOf": [
          {
           "enum": [
            "HOUR",
            "DAY",
            "WEEK",
            "MONTH",
            "YEAR"
           ],
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "unit",
         "_name_": "unit"
        },
        "page": {
         "default": 1,
         "minimum": 1,
         "title": "page",
         "type": "integer",
         "_name_": "page"
        },
        "aggregate": {
         "default": true,
         "title": "aggregate",
         "type": "boolean",
         "_name_": "aggregate"
        },
        "start": {
         "anyOf": [
          {
           "exclusiveMinimum": 0,
           "type": "integer"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "start",
         "_name_": "start"
        },
        "end": {
         "anyOf": [
          {
           "exclusiveMinimum": 0,
           "type": "integer"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "end",
         "_name_": "end"
        }
       },
       "title": "query",
       "type": "object",
       "_name_": "query",
       "_attrs_order_": [
        "unit",
        "page",
        "aggregate",
        "start",
        "end"
       ]
      },
      "reporting_graph": {
       "type": "object",
       "properties": {
        "str": {
         "$ref": "#/components/schemas/reporting_graph_0"
        },
        "query": {
         "$ref": "#/components/schemas/reporting_graph_1"
        }
       }
      },
      "return_schema_of_reporting_graph": {
       "items": {
        "additionalProperties": false,
        "properties": {
         "name": {
          "minLength": 1,
          "title": "name",
          "type": "string",
          "_name_": "name",
          "_required_": true
         },
         "identifier": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "null"
           }
          ],
          "title": "identifier",
          "_name_": "identifier",
          "_required_": true
         },
         "data": {
          "items": [
           {}
          ],
          "title": "data",
          "type": "array",
          "_name_": "data",
          "_required_": true
         },
         "aggregations": {
          "title": "aggregations",
          "_name_": "aggregations",
          "_required_": true
         },
         "start": {
          "exclusiveMinimum": 0,
          "title": "start",
          "type": "integer",
          "_name_": "start",
          "_required_": true
         },
         "end": {
          "exclusiveMinimum": 0,
          "title": "end",
          "type": "integer",
          "_name_": "end",
          "_required_": true
         },
         "legend": {
          "items": [
           {
            "type": "string"
           }
          ],
          "title": "legend",
          "type": "array",
          "_name_": "legend",
          "_required_": true
         }
        },
        "required": [
         "name",
         "identifier",
         "data",
         "aggregations",
         "start",
         "end",
         "legend"
        ],
        "title": "ReportingGetDataResponse",
        "type": "object",
        "_attrs_order_": [
         "name",
         "identifier",
         "data",
         "aggregations",
         "start",
         "end",
         "legend"
        ]
       },
       "title": "result",
       "type": "array",
       "_name_": "result"
      },
      "return_schema_of_reporting_graphs": {
       "anyOf": [
        {
         "items": [
          {
           "additionalProperties": false,
           "properties": {
            "name": {
             "minLength": 1,
             "title": "name",
             "type": "string",
             "_name_": "name",
             "_required_": false
            },
            "title": {
             "minLength": 1,
             "title": "title",
             "type": "string",
             "_name_": "title",
             "_required_": false
            },
            "vertical_label": {
             "minLength": 1,
             "title": "vertical_label",
             "type": "string",
             "_name_": "vertical_label",
             "_required_": false
            },
            "identifiers": {
             "anyOf": [
              {
               "items": [
                {
                 "type": "string"
                }
               ],
               "type": "array"
              },
              {
               "type": "null"
              }
             ],
             "title": "identifiers",
             "_name_": "identifiers",
             "_required_": false
            }
           },
           "title": "ReportingGraphQueryResultItem",
           "type": "object",
           "_attrs_order_": [
            "name",
            "title",
            "vertical_label",
            "identifiers"
           ]
          }
         ],
         "type": "array"
        },
        {
         "additionalProperties": false,
         "properties": {
          "name": {
           "minLength": 1,
           "title": "name",
           "type": "string",
           "_name_": "name",
           "_required_": false
          },
          "title": {
           "minLength": 1,
           "title": "title",
           "type": "string",
           "_name_": "title",
           "_required_": false
          },
          "vertical_label": {
           "minLength": 1,
           "title": "vertical_label",
           "type": "string",
           "_name_": "vertical_label",
           "_required_": false
          },
          "identifiers": {
           "anyOf": [
            {
             "items": [
              {
               "type": "string"
              }
             ],
             "type": "array"
            },
            {
             "type": "null"
            }
           ],
           "title": "identifiers",
           "_name_": "identifiers",
           "_required_": false
          }
         },
         "title": "ReportingGraphQueryResultItem",
         "type": "object",
         "_attrs_order_": [
          "name",
          "title",
          "vertical_label",
          "identifiers"
         ]
        },
        {
         "type": "integer"
        }
       ],
       "title": "result",
       "_name_": "result"
      },
      "reporting_netdata_get_data_0": {
       "items": {
        "additionalProperties": false,
        "properties": {
         "name": {
          "enum": [
           "cpu",
           "cputemp",
           "disk",
           "interface",
           "load",
           "processes",
           "memory",
           "uptime",
           "arcactualrate",
           "arcrate",
           "arcsize",
           "arcresult",
           "disktemp",
           "upscharge",
           "upsruntime",
           "upsvoltage",
           "upscurrent",
           "upsfrequency",
           "upsload",
           "upstemperature"
          ],
          "title": "name",
          "type": "string",
          "_name_": "name",
          "_required_": true
         },
         "identifier": {
          "anyOf": [
           {
            "minLength": 1,
            "type": "string"
           },
           {
            "type": "null"
           }
          ],
          "default": null,
          "title": "identifier",
          "_name_": "identifier",
          "_required_": false
         }
        },
        "required": [
         "name"
        ],
        "title": "GraphIdentifier",
        "type": "object",
        "_attrs_order_": [
         "name",
         "identifier"
        ]
       },
       "minItems": 1,
       "title": "graphs",
       "type": "array",
       "_name_": "graphs"
      },
      "reporting_netdata_get_data_1": {
       "additionalProperties": false,
       "properties": {
        "unit": {
         "anyOf": [
          {
           "enum": [
            "HOUR",
            "DAY",
            "WEEK",
            "MONTH",
            "YEAR"
           ],
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "unit",
         "_name_": "unit"
        },
        "page": {
         "default": 1,
         "minimum": 1,
         "title": "page",
         "type": "integer",
         "_name_": "page"
        },
        "aggregate": {
         "default": true,
         "title": "aggregate",
         "type": "boolean",
         "_name_": "aggregate"
        },
        "start": {
         "anyOf": [
          {
           "exclusiveMinimum": 0,
           "type": "integer"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "start",
         "_name_": "start"
        },
        "end": {
         "anyOf": [
          {
           "exclusiveMinimum": 0,
           "type": "integer"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "end",
         "_name_": "end"
        }
       },
       "title": "query",
       "type": "object",
       "_name_": "query",
       "_attrs_order_": [
        "unit",
        "page",
        "aggregate",
        "start",
        "end"
       ]
      },
      "reporting_netdata_get_data": {
       "type": "object",
       "properties": {
        "graphs": {
         "$ref": "#/components/schemas/reporting_netdata_get_data_0"
        },
        "query": {
         "$ref": "#/components/schemas/reporting_netdata_get_data_1"
        }
       }
      },
      "return_schema_of_reporting_netdata_get_data": {
       "items": {
        "additionalProperties": false,
        "properties": {
         "name": {
          "minLength": 1,
          "title": "name",
          "type": "string",
          "_name_": "name",
          "_required_": true
         },
         "identifier": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "null"
           }
          ],
          "title": "identifier",
          "_name_": "identifier",
          "_required_": true
         },
         "data": {
          "items": [
           {}
          ],
          "title": "data",
          "type": "array",
          "_name_": "data",
          "_required_": true
         },
         "aggregations": {
          "title": "aggregations",
          "_name_": "aggregations",
          "_required_": true
         },
         "start": {
          "exclusiveMinimum": 0,
          "title": "start",
          "type": "integer",
          "_name_": "start",
          "_required_": true
         },
         "end": {
          "exclusiveMinimum": 0,
          "title": "end",
          "type": "integer",
          "_name_": "end",
          "_required_": true
         },
         "legend": {
          "items": [
           {
            "type": "string"
           }
          ],
          "title": "legend",
          "type": "array",
          "_name_": "legend",
          "_required_": true
         }
        },
        "required": [
         "name",
         "identifier",
         "data",
         "aggregations",
         "start",
         "end",
         "legend"
        ],
        "title": "ReportingGetDataResponse",
        "type": "object",
        "_attrs_order_": [
         "name",
         "identifier",
         "data",
         "aggregations",
         "start",
         "end",
         "legend"
        ]
       },
       "title": "result",
       "type": "array",
       "_name_": "result"
      },
      "reporting_netdata_graph_0": {
       "minLength": 1,
       "title": "str",
       "type": "string",
       "_name_": "str"
      },
      "reporting_netdata_graph_1": {
       "additionalProperties": false,
       "properties": {
        "unit": {
         "anyOf": [
          {
           "enum": [
            "HOUR",
            "DAY",
            "WEEK",
            "MONTH",
            "YEAR"
           ],
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "unit",
         "_name_": "unit"
        },
        "page": {
         "default": 1,
         "minimum": 1,
         "title": "page",
         "type": "integer",
         "_name_": "page"
        },
        "aggregate": {
         "default": true,
         "title": "aggregate",
         "type": "boolean",
         "_name_": "aggregate"
        },
        "start": {
         "anyOf": [
          {
           "exclusiveMinimum": 0,
           "type": "integer"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "start",
         "_name_": "start"
        },
        "end": {
         "anyOf": [
          {
           "exclusiveMinimum": 0,
           "type": "integer"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "end",
         "_name_": "end"
        }
       },
       "title": "query",
       "type": "object",
       "_name_": "query",
       "_attrs_order_": [
        "unit",
        "page",
        "aggregate",
        "start",
        "end"
       ]
      },
      "reporting_netdata_graph": {
       "type": "object",
       "properties": {
        "str": {
         "$ref": "#/components/schemas/reporting_netdata_graph_0"
        },
        "query": {
         "$ref": "#/components/schemas/reporting_netdata_graph_1"
        }
       }
      },
      "return_schema_of_reporting_netdata_graph": {
       "items": {
        "additionalProperties": false,
        "properties": {
         "name": {
          "minLength": 1,
          "title": "name",
          "type": "string",
          "_name_": "name",
          "_required_": true
         },
         "identifier": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "null"
           }
          ],
          "title": "identifier",
          "_name_": "identifier",
          "_required_": true
         },
         "data": {
          "items": [
           {}
          ],
          "title": "data",
          "type": "array",
          "_name_": "data",
          "_required_": true
         },
         "aggregations": {
          "title": "aggregations",
          "_name_": "aggregations",
          "_required_": true
         },
         "start": {
          "exclusiveMinimum": 0,
          "title": "start",
          "type": "integer",
          "_name_": "start",
          "_required_": true
         },
         "end": {
          "exclusiveMinimum": 0,
          "title": "end",
          "type": "integer",
          "_name_": "end",
          "_required_": true
         },
         "legend": {
          "items": [
           {
            "type": "string"
           }
          ],
          "title": "legend",
          "type": "array",
          "_name_": "legend",
          "_required_": true
         }
        },
        "required": [
         "name",
         "identifier",
         "data",
         "aggregations",
         "start",
         "end",
         "legend"
        ],
        "title": "ReportingGetDataResponse",
        "type": "object",
        "_attrs_order_": [
         "name",
         "identifier",
         "data",
         "aggregations",
         "start",
         "end",
         "legend"
        ]
       },
       "title": "result",
       "type": "array",
       "_name_": "result"
      },
      "return_schema_of_reporting_netdata_graphs": {
       "anyOf": [
        {
         "items": [
          {
           "additionalProperties": false,
           "properties": {
            "name": {
             "minLength": 1,
             "title": "name",
             "type": "string",
             "_name_": "name",
             "_required_": false
            },
            "title": {
             "minLength": 1,
             "title": "title",
             "type": "string",
             "_name_": "title",
             "_required_": false
            },
            "vertical_label": {
             "minLength": 1,
             "title": "vertical_label",
             "type": "string",
             "_name_": "vertical_label",
             "_required_": false
            },
            "identifiers": {
             "anyOf": [
              {
               "items": [
                {
                 "type": "string"
                }
               ],
               "type": "array"
              },
              {
               "type": "null"
              }
             ],
             "title": "identifiers",
             "_name_": "identifiers",
             "_required_": false
            }
           },
           "title": "ReportingGraphQueryResultItem",
           "type": "object",
           "_attrs_order_": [
            "name",
            "title",
            "vertical_label",
            "identifiers"
           ]
          }
         ],
         "type": "array"
        },
        {
         "additionalProperties": false,
         "properties": {
          "name": {
           "minLength": 1,
           "title": "name",
           "type": "string",
           "_name_": "name",
           "_required_": false
          },
          "title": {
           "minLength": 1,
           "title": "title",
           "type": "string",
           "_name_": "title",
           "_required_": false
          },
          "vertical_label": {
           "minLength": 1,
           "title": "vertical_label",
           "type": "string",
           "_name_": "vertical_label",
           "_required_": false
          },
          "identifiers": {
           "anyOf": [
            {
             "items": [
              {
               "type": "string"
              }
             ],
             "type": "array"
            },
            {
             "type": "null"
            }
           ],
           "title": "identifiers",
           "_name_": "identifiers",
           "_required_": false
          }
         },
         "title": "ReportingGraphQueryResultItem",
         "type": "object",
         "_attrs_order_": [
          "name",
          "title",
          "vertical_label",
          "identifiers"
         ]
        },
        {
         "type": "integer"
        }
       ],
       "title": "result",
       "_name_": "result"
      },
      "return_schema_of_reporting_exporters_query": {
       "anyOf": [
        {
         "items": [
          {
           "additionalProperties": false,
           "properties": {
            "id": {
             "title": "id",
             "type": "integer",
             "_name_": "id",
             "_required_": false
            },
            "enabled": {
             "title": "enabled",
             "type": "boolean",
             "_name_": "enabled",
             "_required_": false
            },
            "attributes": {
             "description": "Specific attributes for the exporter",
             "discriminator": {
              "mapping": {
               "GRAPHITE": "#/$defs/GraphiteExporter"
              },
              "propertyName": "exporter_type"
             },
             "oneOf": [
              {}
             ],
             "title": "attributes",
             "_name_": "attributes",
             "_required_": false
            },
            "name": {
             "description": "User defined name of exporter configuration",
             "title": "name",
             "type": "string",
             "_name_": "name",
             "_required_": false
            }
           },
           "title": "ReportingExporterQueryResultItem",
           "type": "object",
           "_attrs_order_": [
            "id",
            "enabled",
            "attributes",
            "name"
           ]
          }
         ],
         "type": "array"
        },
        {
         "additionalProperties": false,
         "properties": {
          "id": {
           "title": "id",
           "type": "integer",
           "_name_": "id",
           "_required_": false
          },
          "enabled": {
           "title": "enabled",
           "type": "boolean",
           "_name_": "enabled",
           "_required_": false
          },
          "attributes": {
           "description": "Specific attributes for the exporter",
           "discriminator": {
            "mapping": {
             "GRAPHITE": "#/$defs/GraphiteExporter"
            },
            "propertyName": "exporter_type"
           },
           "oneOf": [
            {}
           ],
           "title": "attributes",
           "_name_": "attributes",
           "_required_": false
          },
          "name": {
           "description": "User defined name of exporter configuration",
           "title": "name",
           "type": "string",
           "_name_": "name",
           "_required_": false
          }
         },
         "title": "ReportingExporterQueryResultItem",
         "type": "object",
         "_attrs_order_": [
          "id",
          "enabled",
          "attributes",
          "name"
         ]
        },
        {
         "type": "integer"
        }
       ],
       "title": "result",
       "_name_": "result"
      },
      "reporting_exporters_create": {
       "additionalProperties": false,
       "properties": {
        "enabled": {
         "title": "enabled",
         "type": "boolean",
         "_name_": "enabled"
        },
        "attributes": {
         "description": "Specific attributes for the exporter",
         "discriminator": {
          "mapping": {
           "GRAPHITE": "#/$defs/GraphiteExporter"
          },
          "propertyName": "exporter_type"
         },
         "oneOf": [
          {}
         ],
         "title": "attributes",
         "_name_": "attributes"
        },
        "name": {
         "description": "User defined name of exporter configuration",
         "title": "name",
         "type": "string",
         "_name_": "name"
        }
       },
       "required": [
        "enabled",
        "attributes",
        "name"
       ],
       "title": "reporting_exporter_create",
       "type": "object",
       "_name_": "reporting_exporter_create",
       "_attrs_order_": [
        "enabled",
        "attributes",
        "name"
       ]
      },
      "return_schema_of_reporting_exporters_create": {
       "additionalProperties": false,
       "properties": {
        "id": {
         "title": "id",
         "type": "integer",
         "_name_": "id"
        },
        "enabled": {
         "title": "enabled",
         "type": "boolean",
         "_name_": "enabled"
        },
        "attributes": {
         "description": "Specific attributes for the exporter",
         "discriminator": {
          "mapping": {
           "GRAPHITE": "#/$defs/GraphiteExporter"
          },
          "propertyName": "exporter_type"
         },
         "oneOf": [
          {}
         ],
         "title": "attributes",
         "_name_": "attributes"
        },
        "name": {
         "description": "User defined name of exporter configuration",
         "title": "name",
         "type": "string",
         "_name_": "name"
        }
       },
       "required": [
        "id",
        "enabled",
        "attributes",
        "name"
       ],
       "title": "result",
       "type": "object",
       "_name_": "result",
       "_attrs_order_": [
        "id",
        "enabled",
        "attributes",
        "name"
       ]
      },
      "return_schema_of_reporting_exporters_delete": {
       "title": "result",
       "type": "boolean",
       "_name_": "result"
      },
      "reporting_exporters_update": {
       "additionalProperties": false,
       "properties": {
        "enabled": {
         "title": "enabled",
         "type": "boolean",
         "_name_": "enabled"
        },
        "attributes": {
         "description": "Specific attributes for the exporter",
         "discriminator": {
          "mapping": {
           "GRAPHITE": "#/$defs/GraphiteExporter"
          },
          "propertyName": "exporter_type"
         },
         "oneOf": [
          {}
         ],
         "title": "attributes",
         "_name_": "attributes"
        },
        "name": {
         "description": "User defined name of exporter configuration",
         "title": "name",
         "type": "string",
         "_name_": "name"
        }
       },
       "title": "reporting_exporter_update",
       "type": "object",
       "_name_": "reporting_exporter_update",
       "_attrs_order_": [
        "enabled",
        "attributes",
        "name"
       ]
      },
      "return_schema_of_reporting_exporters_update": {
       "additionalProperties": false,
       "properties": {
        "id": {
         "title": "id",
         "type": "integer",
         "_name_": "id"
        },
        "enabled": {
         "title": "enabled",
         "type": "boolean",
         "_name_": "enabled"
        },
        "attributes": {
         "description": "Specific attributes for the exporter",
         "discriminator": {
          "mapping": {
           "GRAPHITE": "#/$defs/GraphiteExporter"
          },
          "propertyName": "exporter_type"
         },
         "oneOf": [
          {}
         ],
         "title": "attributes",
         "_name_": "attributes"
        },
        "name": {
         "description": "User defined name of exporter configuration",
         "title": "name",
         "type": "string",
         "_name_": "name"
        }
       },
       "required": [
        "id",
        "enabled",
        "attributes",
        "name"
       ],
       "title": "result",
       "type": "object",
       "_name_": "result",
       "_attrs_order_": [
        "id",
        "enabled",
        "attributes",
        "name"
       ]
      },
      "return_schema_of_reporting_exporters_exporter_schemas": {
       "items": {
        "additionalProperties": false,
        "properties": {
         "key": {
          "title": "key",
          "type": "string",
          "_name_": "key",
          "_required_": true
         },
         "schema": {
          "items": [
           {}
          ],
          "title": "schema",
          "type": "array",
          "_name_": "schema",
          "_required_": true
         }
        },
        "required": [
         "key",
         "schema"
        ],
        "title": "ReportingExporterSchema",
        "type": "object",
        "_attrs_order_": [
         "key",
         "schema"
        ]
       },
       "title": "result",
       "type": "array",
       "_name_": "result"
      },
      "reporting_exporters_get_instance_0": {
       "title": "id",
       "type": "integer",
       "_name_": "id"
      },
      "reporting_exporters_get_instance_1": {
       "additionalProperties": false,
       "properties": {
        "relationships": {
         "default": true,
         "title": "relationships",
         "type": "boolean",
         "_name_": "relationships"
        },
        "extend": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "extend",
         "_name_": "extend"
        },
        "extend_context": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "extend_context",
         "_name_": "extend_context"
        },
        "prefix": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "prefix",
         "_name_": "prefix"
        },
        "extra": {
         "default": {},
         "title": "extra",
         "type": "object",
         "_name_": "extra"
        },
        "order_by": {
         "default": [],
         "items": {
          "type": "string"
         },
         "title": "order_by",
         "type": "array",
         "_name_": "order_by"
        },
        "select": {
         "default": [],
         "items": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "items": [
             {}
            ],
            "type": "array"
           }
          ]
         },
         "title": "select",
         "type": "array",
         "_name_": "select"
        },
        "count": {
         "default": false,
         "title": "count",
         "type": "boolean",
         "_name_": "count"
        },
        "get": {
         "default": false,
         "title": "get",
         "type": "boolean",
         "_name_": "get"
        },
        "offset": {
         "default": 0,
         "title": "offset",
         "type": "integer",
         "_name_": "offset"
        },
        "limit": {
         "default": 0,
         "title": "limit",
         "type": "integer",
         "_name_": "limit"
        },
        "force_sql_filters": {
         "default": false,
         "title": "force_sql_filters",
         "type": "boolean",
         "_name_": "force_sql_filters"
        }
       },
       "title": "options",
       "type": "object",
       "default": {},
       "_name_": "options",
       "_attrs_order_": [
        "relationships",
        "extend",
        "extend_context",
        "prefix",
        "extra",
        "order_by",
        "select",
        "count",
        "get",
        "offset",
        "limit",
        "force_sql_filters"
       ]
      },
      "reporting_exporters_get_instance": {
       "type": "object",
       "properties": {
        "id": {
         "$ref": "#/components/schemas/reporting_exporters_get_instance_0"
        },
        "options": {
         "$ref": "#/components/schemas/reporting_exporters_get_instance_1"
        }
       }
      },
      "return_schema_of_reporting_exporters_get_instance": {
       "additionalProperties": false,
       "properties": {
        "id": {
         "title": "id",
         "type": "integer",
         "_name_": "id"
        },
        "enabled": {
         "title": "enabled",
         "type": "boolean",
         "_name_": "enabled"
        },
        "attributes": {
         "description": "Specific attributes for the exporter",
         "discriminator": {
          "mapping": {
           "GRAPHITE": "#/$defs/GraphiteExporter"
          },
          "propertyName": "exporter_type"
         },
         "oneOf": [
          {}
         ],
         "title": "attributes",
         "_name_": "attributes"
        },
        "name": {
         "description": "User defined name of exporter configuration",
         "title": "name",
         "type": "string",
         "_name_": "name"
        }
       },
       "required": [
        "id",
        "enabled",
        "attributes",
        "name"
       ],
       "title": "result",
       "type": "object",
       "_name_": "result",
       "_attrs_order_": [
        "id",
        "enabled",
        "attributes",
        "name"
       ]
      },
      "route_ipv4gw_reachable": {
       "_name_": "ipv4_gateway",
       "title": "ipv4_gateway",
       "type": "string"
      },
      "return_schema_of_route_ipv4gw_reachable": {
       "type": "boolean",
       "_name_": "ipv4gw_reachable",
       "title": "ipv4gw_reachable"
      },
      "return_schema_of_route_system_routes": {
       "anyOf": [
        {
         "type": "integer",
         "_name_": "count",
         "title": "count",
         "_required_": false
        },
        {
         "type": "object",
         "properties": {
          "network": {
           "_name_": "network",
           "title": "network",
           "_required_": true,
           "type": "string"
          },
          "netmask": {
           "_name_": "netmask",
           "title": "netmask",
           "_required_": true,
           "type": "string"
          },
          "gateway": {
           "_name_": "gateway",
           "title": "gateway",
           "_required_": true,
           "type": [
            "string",
            "null"
           ]
          },
          "interface": {
           "_name_": "interface",
           "title": "interface",
           "_required_": true,
           "type": "string"
          },
          "flags": {
           "_name_": "flags",
           "title": "flags",
           "default": [],
           "_required_": true,
           "type": "array",
           "items": []
          },
          "table_id": {
           "type": "integer",
           "_name_": "table_id",
           "title": "table_id",
           "_required_": true
          },
          "scope": {
           "type": "integer",
           "_name_": "scope",
           "title": "scope",
           "_required_": true
          },
          "preferred_source": {
           "_name_": "preferred_source",
           "title": "preferred_source",
           "_required_": true,
           "type": [
            "string",
            "null"
           ]
          }
         },
         "additionalProperties": false,
         "_name_": "system_route",
         "title": "system_route",
         "default": {},
         "_required_": false,
         "_attrs_order_": [
          "network",
          "netmask",
          "gateway",
          "interface",
          "flags",
          "table_id",
          "scope",
          "preferred_source"
         ]
        },
        {
         "_name_": "query_result",
         "title": "query_result",
         "default": [],
         "_required_": false,
         "type": "array",
         "items": [
          {
           "type": "object",
           "properties": {
            "network": {
             "_name_": "network",
             "title": "network",
             "_required_": true,
             "type": "string"
            },
            "netmask": {
             "_name_": "netmask",
             "title": "netmask",
             "_required_": true,
             "type": "string"
            },
            "gateway": {
             "_name_": "gateway",
             "title": "gateway",
             "_required_": true,
             "type": [
              "string",
              "null"
             ]
            },
            "interface": {
             "_name_": "interface",
             "title": "interface",
             "_required_": true,
             "type": "string"
            },
            "flags": {
             "_name_": "flags",
             "title": "flags",
             "default": [],
             "_required_": true,
             "type": "array",
             "items": []
            },
            "table_id": {
             "type": "integer",
             "_name_": "table_id",
             "title": "table_id",
             "_required_": true
            },
            "scope": {
             "type": "integer",
             "_name_": "scope",
             "title": "scope",
             "_required_": true
            },
            "preferred_source": {
             "_name_": "preferred_source",
             "title": "preferred_source",
             "_required_": true,
             "type": [
              "string",
              "null"
             ]
            }
           },
           "additionalProperties": false,
           "_name_": "system_route",
           "title": "system_route",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "network",
            "netmask",
            "gateway",
            "interface",
            "flags",
            "table_id",
            "scope",
            "preferred_source"
           ]
          }
         ]
        }
       ],
       "nullable": false,
       "_name_": "filterable_result",
       "description": null
      },
      "return_schema_of_rsynctask_query": {
       "anyOf": [
        {
         "_name_": "query_result",
         "title": "query_result",
         "default": [],
         "_required_": false,
         "type": "array",
         "items": [
          {
           "type": "object",
           "properties": {
            "path": {
             "_name_": "path",
             "title": "path",
             "_required_": true,
             "type": "string"
            },
            "user": {
             "_name_": "user",
             "title": "user",
             "_required_": true,
             "type": "string"
            },
            "mode": {
             "_name_": "mode",
             "title": "mode",
             "default": "MODULE",
             "_required_": false,
             "type": "string",
             "enum": [
              "MODULE",
              "SSH"
             ]
            },
            "remotehost": {
             "_name_": "remotehost",
             "title": "remotehost",
             "default": null,
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "remoteport": {
             "type": [
              "integer",
              "null"
             ],
             "_name_": "remoteport",
             "title": "remoteport",
             "default": null,
             "_required_": false
            },
            "remotemodule": {
             "_name_": "remotemodule",
             "title": "remotemodule",
             "default": null,
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            "remotepath": {
             "_name_": "remotepath",
             "title": "remotepath",
             "_required_": false,
             "type": "string"
            },
            "direction": {
             "_name_": "direction",
             "title": "direction",
             "default": "PUSH",
             "_required_": false,
             "type": "string",
             "enum": [
              "PULL",
              "PUSH"
             ]
            },
            "desc": {
             "_name_": "desc",
             "title": "desc",
             "_required_": false,
             "type": "string"
            },
            "schedule": {
             "type": "object",
             "properties": {
              "minute": {
               "_name_": "minute",
               "title": "minute",
               "default": "00",
               "_required_": false,
               "type": "string"
              },
              "hour": {
               "_name_": "hour",
               "title": "hour",
               "default": "*",
               "_required_": false,
               "type": "string"
              },
              "dom": {
               "_name_": "dom",
               "title": "dom",
               "default": "*",
               "_required_": false,
               "type": "string"
              },
              "month": {
               "_name_": "month",
               "title": "month",
               "default": "*",
               "_required_": false,
               "type": "string"
              },
              "dow": {
               "_name_": "dow",
               "title": "dow",
               "default": "*",
               "_required_": false,
               "type": "string"
              }
             },
             "additionalProperties": false,
             "_name_": "schedule",
             "title": "schedule",
             "default": {},
             "_required_": false,
             "_attrs_order_": [
              "minute",
              "hour",
              "dom",
              "month",
              "dow"
             ]
            },
            "recursive": {
             "type": "boolean",
             "_name_": "recursive",
             "title": "recursive",
             "_required_": false
            },
            "times": {
             "type": "boolean",
             "_name_": "times",
             "title": "times",
             "_required_": false
            },
            "compress": {
             "type": "boolean",
             "_name_": "compress",
             "title": "compress",
             "_required_": false
            },
            "archive": {
             "type": "boolean",
             "_name_": "archive",
             "title": "archive",
             "_required_": false
            },
            "delete": {
             "type": "boolean",
             "_name_": "delete",
             "title": "delete",
             "_required_": false
            },
            "quiet": {
             "type": "boolean",
             "_name_": "quiet",
             "title": "quiet",
             "_required_": false
            },
            "preserveperm": {
             "type": "boolean",
             "_name_": "preserveperm",
             "title": "preserveperm",
             "_required_": false
            },
            "preserveattr": {
             "type": "boolean",
             "_name_": "preserveattr",
             "title": "preserveattr",
             "_required_": false
            },
            "delayupdates": {
             "type": "boolean",
             "_name_": "delayupdates",
             "title": "delayupdates",
             "_required_": false
            },
            "extra": {
             "_name_": "extra",
             "title": "extra",
             "default": [],
             "_required_": false,
             "type": "array",
             "items": [
              {
               "_name_": "extra",
               "title": "extra",
               "_required_": false,
               "type": "string"
              }
             ]
            },
            "enabled": {
             "type": "boolean",
             "_name_": "enabled",
             "title": "enabled",
             "default": true,
             "_required_": false
            },
            "id": {
             "type": "integer",
             "_name_": "id",
             "title": "id",
             "_required_": false
            },
            "ssh_credentials": {
             "type": "object",
             "properties": {},
             "additionalProperties": true,
             "_name_": "ssh_credentials",
             "title": "ssh_credentials",
             "default": {},
             "_required_": false,
             "_attrs_order_": []
            },
            "locked": {
             "type": "boolean",
             "_name_": "locked",
             "title": "locked",
             "_required_": false
            },
            "job": {
             "type": "object",
             "properties": {},
             "additionalProperties": true,
             "_name_": "job",
             "title": "job",
             "default": {},
             "_required_": false,
             "_attrs_order_": []
            }
           },
           "additionalProperties": false,
           "_name_": "rsync_task_entry",
           "title": "rsync_task_entry",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "path",
            "user",
            "mode",
            "remotehost",
            "remoteport",
            "remotemodule",
            "remotepath",
            "direction",
            "desc",
            "schedule",
            "recursive",
            "times",
            "compress",
            "archive",
            "delete",
            "quiet",
            "preserveperm",
            "preserveattr",
            "delayupdates",
            "extra",
            "enabled",
            "id",
            "ssh_credentials",
            "locked",
            "job"
           ]
          }
         ]
        },
        {
         "type": "object",
         "properties": {
          "path": {
           "_name_": "path",
           "title": "path",
           "_required_": true,
           "type": "string"
          },
          "user": {
           "_name_": "user",
           "title": "user",
           "_required_": true,
           "type": "string"
          },
          "mode": {
           "_name_": "mode",
           "title": "mode",
           "default": "MODULE",
           "_required_": false,
           "type": "string",
           "enum": [
            "MODULE",
            "SSH"
           ]
          },
          "remotehost": {
           "_name_": "remotehost",
           "title": "remotehost",
           "default": null,
           "_required_": false,
           "type": [
            "string",
            "null"
           ]
          },
          "remoteport": {
           "type": [
            "integer",
            "null"
           ],
           "_name_": "remoteport",
           "title": "remoteport",
           "default": null,
           "_required_": false
          },
          "remotemodule": {
           "_name_": "remotemodule",
           "title": "remotemodule",
           "default": null,
           "_required_": false,
           "type": [
            "string",
            "null"
           ]
          },
          "remotepath": {
           "_name_": "remotepath",
           "title": "remotepath",
           "_required_": false,
           "type": "string"
          },
          "direction": {
           "_name_": "direction",
           "title": "direction",
           "default": "PUSH",
           "_required_": false,
           "type": "string",
           "enum": [
            "PULL",
            "PUSH"
           ]
          },
          "desc": {
           "_name_": "desc",
           "title": "desc",
           "_required_": false,
           "type": "string"
          },
          "schedule": {
           "type": "object",
           "properties": {
            "minute": {
             "_name_": "minute",
             "title": "minute",
             "default": "00",
             "_required_": false,
             "type": "string"
            },
            "hour": {
             "_name_": "hour",
             "title": "hour",
             "default": "*",
             "_required_": false,
             "type": "string"
            },
            "dom": {
             "_name_": "dom",
             "title": "dom",
             "default": "*",
             "_required_": false,
             "type": "string"
            },
            "month": {
             "_name_": "month",
             "title": "month",
             "default": "*",
             "_required_": false,
             "type": "string"
            },
            "dow": {
             "_name_": "dow",
             "title": "dow",
             "default": "*",
             "_required_": false,
             "type": "string"
            }
           },
           "additionalProperties": false,
           "_name_": "schedule",
           "title": "schedule",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "minute",
            "hour",
            "dom",
            "month",
            "dow"
           ]
          },
          "recursive": {
           "type": "boolean",
           "_name_": "recursive",
           "title": "recursive",
           "_required_": false
          },
          "times": {
           "type": "boolean",
           "_name_": "times",
           "title": "times",
           "_required_": false
          },
          "compress": {
           "type": "boolean",
           "_name_": "compress",
           "title": "compress",
           "_required_": false
          },
          "archive": {
           "type": "boolean",
           "_name_": "archive",
           "title": "archive",
           "_required_": false
          },
          "delete": {
           "type": "boolean",
           "_name_": "delete",
           "title": "delete",
           "_required_": false
          },
          "quiet": {
           "type": "boolean",
           "_name_": "quiet",
           "title": "quiet",
           "_required_": false
          },
          "preserveperm": {
           "type": "boolean",
           "_name_": "preserveperm",
           "title": "preserveperm",
           "_required_": false
          },
          "preserveattr": {
           "type": "boolean",
           "_name_": "preserveattr",
           "title": "preserveattr",
           "_required_": false
          },
          "delayupdates": {
           "type": "boolean",
           "_name_": "delayupdates",
           "title": "delayupdates",
           "_required_": false
          },
          "extra": {
           "_name_": "extra",
           "title": "extra",
           "default": [],
           "_required_": false,
           "type": "array",
           "items": [
            {
             "_name_": "extra",
             "title": "extra",
             "_required_": false,
             "type": "string"
            }
           ]
          },
          "enabled": {
           "type": "boolean",
           "_name_": "enabled",
           "title": "enabled",
           "default": true,
           "_required_": false
          },
          "id": {
           "type": "integer",
           "_name_": "id",
           "title": "id",
           "_required_": false
          },
          "ssh_credentials": {
           "type": "object",
           "properties": {},
           "additionalProperties": true,
           "_name_": "ssh_credentials",
           "title": "ssh_credentials",
           "default": {},
           "_required_": false,
           "_attrs_order_": []
          },
          "locked": {
           "type": "boolean",
           "_name_": "locked",
           "title": "locked",
           "_required_": false
          },
          "job": {
           "type": "object",
           "properties": {},
           "additionalProperties": true,
           "_name_": "job",
           "title": "job",
           "default": {},
           "_required_": false,
           "_attrs_order_": []
          }
         },
         "additionalProperties": false,
         "_name_": "rsync_task_entry",
         "title": "rsync_task_entry",
         "default": {},
         "_required_": false,
         "_attrs_order_": [
          "path",
          "user",
          "mode",
          "remotehost",
          "remoteport",
          "remotemodule",
          "remotepath",
          "direction",
          "desc",
          "schedule",
          "recursive",
          "times",
          "compress",
          "archive",
          "delete",
          "quiet",
          "preserveperm",
          "preserveattr",
          "delayupdates",
          "extra",
          "enabled",
          "id",
          "ssh_credentials",
          "locked",
          "job"
         ]
        },
        {
         "type": "integer",
         "_name_": "count",
         "title": "count",
         "_required_": false
        },
        {
         "type": "object",
         "properties": {
          "path": {
           "_name_": "path",
           "title": "path",
           "_required_": true,
           "type": "string"
          },
          "user": {
           "_name_": "user",
           "title": "user",
           "_required_": true,
           "type": "string"
          },
          "mode": {
           "_name_": "mode",
           "title": "mode",
           "default": "MODULE",
           "_required_": false,
           "type": "string",
           "enum": [
            "MODULE",
            "SSH"
           ]
          },
          "remotehost": {
           "_name_": "remotehost",
           "title": "remotehost",
           "default": null,
           "_required_": false,
           "type": [
            "string",
            "null"
           ]
          },
          "remoteport": {
           "type": [
            "integer",
            "null"
           ],
           "_name_": "remoteport",
           "title": "remoteport",
           "default": null,
           "_required_": false
          },
          "remotemodule": {
           "_name_": "remotemodule",
           "title": "remotemodule",
           "default": null,
           "_required_": false,
           "type": [
            "string",
            "null"
           ]
          },
          "remotepath": {
           "_name_": "remotepath",
           "title": "remotepath",
           "_required_": false,
           "type": "string"
          },
          "direction": {
           "_name_": "direction",
           "title": "direction",
           "default": "PUSH",
           "_required_": false,
           "type": "string",
           "enum": [
            "PULL",
            "PUSH"
           ]
          },
          "desc": {
           "_name_": "desc",
           "title": "desc",
           "_required_": false,
           "type": "string"
          },
          "schedule": {
           "type": "object",
           "properties": {
            "minute": {
             "_name_": "minute",
             "title": "minute",
             "default": "00",
             "_required_": false,
             "type": "string"
            },
            "hour": {
             "_name_": "hour",
             "title": "hour",
             "default": "*",
             "_required_": false,
             "type": "string"
            },
            "dom": {
             "_name_": "dom",
             "title": "dom",
             "default": "*",
             "_required_": false,
             "type": "string"
            },
            "month": {
             "_name_": "month",
             "title": "month",
             "default": "*",
             "_required_": false,
             "type": "string"
            },
            "dow": {
             "_name_": "dow",
             "title": "dow",
             "default": "*",
             "_required_": false,
             "type": "string"
            }
           },
           "additionalProperties": false,
           "_name_": "schedule",
           "title": "schedule",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "minute",
            "hour",
            "dom",
            "month",
            "dow"
           ]
          },
          "recursive": {
           "type": "boolean",
           "_name_": "recursive",
           "title": "recursive",
           "_required_": false
          },
          "times": {
           "type": "boolean",
           "_name_": "times",
           "title": "times",
           "_required_": false
          },
          "compress": {
           "type": "boolean",
           "_name_": "compress",
           "title": "compress",
           "_required_": false
          },
          "archive": {
           "type": "boolean",
           "_name_": "archive",
           "title": "archive",
           "_required_": false
          },
          "delete": {
           "type": "boolean",
           "_name_": "delete",
           "title": "delete",
           "_required_": false
          },
          "quiet": {
           "type": "boolean",
           "_name_": "quiet",
           "title": "quiet",
           "_required_": false
          },
          "preserveperm": {
           "type": "boolean",
           "_name_": "preserveperm",
           "title": "preserveperm",
           "_required_": false
          },
          "preserveattr": {
           "type": "boolean",
           "_name_": "preserveattr",
           "title": "preserveattr",
           "_required_": false
          },
          "delayupdates": {
           "type": "boolean",
           "_name_": "delayupdates",
           "title": "delayupdates",
           "_required_": false
          },
          "extra": {
           "_name_": "extra",
           "title": "extra",
           "default": [],
           "_required_": false,
           "type": "array",
           "items": [
            {
             "_name_": "extra",
             "title": "extra",
             "_required_": false,
             "type": "string"
            }
           ]
          },
          "enabled": {
           "type": "boolean",
           "_name_": "enabled",
           "title": "enabled",
           "default": true,
           "_required_": false
          },
          "id": {
           "type": "integer",
           "_name_": "id",
           "title": "id",
           "_required_": false
          },
          "ssh_credentials": {
           "type": "object",
           "properties": {},
           "additionalProperties": true,
           "_name_": "ssh_credentials",
           "title": "ssh_credentials",
           "default": {},
           "_required_": false,
           "_attrs_order_": []
          },
          "locked": {
           "type": "boolean",
           "_name_": "locked",
           "title": "locked",
           "_required_": false
          },
          "job": {
           "type": "object",
           "properties": {},
           "additionalProperties": true,
           "_name_": "job",
           "title": "job",
           "default": {},
           "_required_": false,
           "_attrs_order_": []
          }
         },
         "additionalProperties": false,
         "_name_": "rsync_task_entry",
         "title": "rsync_task_entry",
         "default": {},
         "_required_": false,
         "_attrs_order_": [
          "path",
          "user",
          "mode",
          "remotehost",
          "remoteport",
          "remotemodule",
          "remotepath",
          "direction",
          "desc",
          "schedule",
          "recursive",
          "times",
          "compress",
          "archive",
          "delete",
          "quiet",
          "preserveperm",
          "preserveattr",
          "delayupdates",
          "extra",
          "enabled",
          "id",
          "ssh_credentials",
          "locked",
          "job"
         ]
        }
       ],
       "nullable": false,
       "_name_": "query_result",
       "description": null
      },
      "rsynctask_create": {
       "type": "object",
       "properties": {
        "path": {
         "_name_": "path",
         "title": "path",
         "type": "string",
         "description": "See the comment in Rsyncmod about `path` length limits."
        },
        "user": {
         "_name_": "user",
         "title": "user",
         "type": "string",
         "description": "In SSH mode, if `ssh_credentials` (a keychain credential of `SSH_CREDENTIALS` type) is specified then it is used\nto connect to the remote host. If it is not specified, then keys in `user`'s .ssh directory are used."
        },
        "mode": {
         "_name_": "mode",
         "title": "mode",
         "default": "MODULE",
         "type": "string",
         "enum": [
          "MODULE",
          "SSH"
         ],
         "description": "`mode` represents different operating mechanisms for Rsync i.e Rsync Module mode / Rsync SSH mode.\n`remotemodule` is the name of remote module, this attribute should be specified when `mode` is set to MODULE."
        },
        "remotehost": {
         "_name_": "remotehost",
         "title": "remotehost",
         "default": null,
         "type": "string",
         "description": "`remotehost` is ip address or hostname of the remote system. If username differs on the remote host,\n\"username@remote_host\" format should be used.\n`remotehost` and `remoteport` are not used in this case.",
         "nullable": true
        },
        "remoteport": {
         "type": "integer",
         "_name_": "remoteport",
         "title": "remoteport",
         "default": null,
         "description": "`remotehost` and `remoteport` are not used in this case.",
         "nullable": true
        },
        "remotemodule": {
         "_name_": "remotemodule",
         "title": "remotemodule",
         "default": null,
         "type": "string",
         "description": "`remotemodule` is the name of remote module, this attribute should be specified when `mode` is set to MODULE.",
         "nullable": true
        },
        "ssh_credentials": {
         "type": "integer",
         "_name_": "ssh_credentials",
         "title": "ssh_credentials",
         "default": null,
         "description": "In SSH mode, if `ssh_credentials` (a keychain credential of `SSH_CREDENTIALS` type) is specified then it is used\nto connect to the remote host. If it is not specified, then keys in `user`'s .ssh directory are used.",
         "nullable": true
        },
        "remotepath": {
         "_name_": "remotepath",
         "title": "remotepath",
         "type": "string",
         "description": "`remotepath` specifies the path on the remote system."
        },
        "validate_rpath": {
         "type": "boolean",
         "_name_": "validate_rpath",
         "title": "validate_rpath",
         "default": true,
         "description": "`validate_rpath` is a boolean which when sets validates the existence of the remote path."
        },
        "ssh_keyscan": {
         "type": "boolean",
         "_name_": "ssh_keyscan",
         "title": "ssh_keyscan",
         "default": false,
         "description": "`ssh_keyscan` will automatically add remote host key to user's known_hosts file."
        },
        "direction": {
         "_name_": "direction",
         "title": "direction",
         "default": "PUSH",
         "type": "string",
         "enum": [
          "PULL",
          "PUSH"
         ],
         "description": "`direction` specifies if data should be PULLED or PUSHED from the remote system."
        },
        "desc": {
         "_name_": "desc",
         "title": "desc",
         "type": "string"
        },
        "schedule": {
         "type": "object",
         "properties": {
          "minute": {
           "_name_": "minute",
           "title": "minute",
           "default": "00",
           "type": "string"
          },
          "hour": {
           "_name_": "hour",
           "title": "hour",
           "default": "*",
           "type": "string"
          },
          "dom": {
           "_name_": "dom",
           "title": "dom",
           "default": "*",
           "type": "string"
          },
          "month": {
           "_name_": "month",
           "title": "month",
           "default": "*",
           "type": "string"
          },
          "dow": {
           "_name_": "dow",
           "title": "dow",
           "default": "*",
           "type": "string"
          }
         },
         "additionalProperties": false,
         "_name_": "schedule",
         "title": "schedule",
         "default": {},
         "_attrs_order_": [
          "minute",
          "hour",
          "dom",
          "month",
          "dow"
         ]
        },
        "recursive": {
         "type": "boolean",
         "_name_": "recursive",
         "title": "recursive"
        },
        "times": {
         "type": "boolean",
         "_name_": "times",
         "title": "times"
        },
        "compress": {
         "type": "boolean",
         "_name_": "compress",
         "title": "compress",
         "description": "`compress` when set reduces the size of the data which is to be transmitted."
        },
        "archive": {
         "type": "boolean",
         "_name_": "archive",
         "title": "archive",
         "description": "`archive` when set makes rsync run recursively, preserving symlinks, permissions, modification times, group,\nand special files."
        },
        "delete": {
         "type": "boolean",
         "_name_": "delete",
         "title": "delete",
         "description": "`delete` when set deletes files in the destination directory which do not exist in the source directory."
        },
        "quiet": {
         "type": "boolean",
         "_name_": "quiet",
         "title": "quiet"
        },
        "preserveperm": {
         "type": "boolean",
         "_name_": "preserveperm",
         "title": "preserveperm",
         "description": "`preserveperm` when set preserves original file permissions."
        },
        "preserveattr": {
         "type": "boolean",
         "_name_": "preserveattr",
         "title": "preserveattr"
        },
        "delayupdates": {
         "type": "boolean",
         "_name_": "delayupdates",
         "title": "delayupdates"
        },
        "extra": {
         "_name_": "extra",
         "title": "extra",
         "default": [],
         "type": "array",
         "items": {
          "_name_": "extra",
          "title": "extra",
          "_required_": false,
          "type": "string"
         }
        },
        "enabled": {
         "type": "boolean",
         "_name_": "enabled",
         "title": "enabled",
         "default": true
        }
       },
       "additionalProperties": false,
       "_name_": "rsync_task_create",
       "title": "rsync_task_create",
       "default": {},
       "_attrs_order_": [
        "path",
        "user",
        "mode",
        "remotehost",
        "remoteport",
        "remotemodule",
        "ssh_credentials",
        "remotepath",
        "validate_rpath",
        "ssh_keyscan",
        "direction",
        "desc",
        "schedule",
        "recursive",
        "times",
        "compress",
        "archive",
        "delete",
        "quiet",
        "preserveperm",
        "preserveattr",
        "delayupdates",
        "extra",
        "enabled"
       ]
      },
      "return_schema_of_rsynctask_create": {
       "type": "object",
       "properties": {
        "path": {
         "_name_": "path",
         "title": "path",
         "type": "string",
         "description": "See the comment in Rsyncmod about `path` length limits."
        },
        "user": {
         "_name_": "user",
         "title": "user",
         "type": "string",
         "description": "In SSH mode, if `ssh_credentials` (a keychain credential of `SSH_CREDENTIALS` type) is specified then it is used\nto connect to the remote host. If it is not specified, then keys in `user`'s .ssh directory are used."
        },
        "mode": {
         "_name_": "mode",
         "title": "mode",
         "default": "MODULE",
         "type": "string",
         "enum": [
          "MODULE",
          "SSH"
         ],
         "description": "`mode` represents different operating mechanisms for Rsync i.e Rsync Module mode / Rsync SSH mode.\n`remotemodule` is the name of remote module, this attribute should be specified when `mode` is set to MODULE."
        },
        "remotehost": {
         "_name_": "remotehost",
         "title": "remotehost",
         "default": null,
         "type": "string",
         "description": "`remotehost` is ip address or hostname of the remote system. If username differs on the remote host,\n\"username@remote_host\" format should be used.\n`remotehost` and `remoteport` are not used in this case.",
         "nullable": true
        },
        "remoteport": {
         "type": "integer",
         "_name_": "remoteport",
         "title": "remoteport",
         "default": null,
         "description": "`remotehost` and `remoteport` are not used in this case.",
         "nullable": true
        },
        "remotemodule": {
         "_name_": "remotemodule",
         "title": "remotemodule",
         "default": null,
         "type": "string",
         "description": "`remotemodule` is the name of remote module, this attribute should be specified when `mode` is set to MODULE.",
         "nullable": true
        },
        "remotepath": {
         "_name_": "remotepath",
         "title": "remotepath",
         "type": "string",
         "description": "`remotepath` specifies the path on the remote system."
        },
        "direction": {
         "_name_": "direction",
         "title": "direction",
         "default": "PUSH",
         "type": "string",
         "enum": [
          "PULL",
          "PUSH"
         ],
         "description": "`direction` specifies if data should be PULLED or PUSHED from the remote system."
        },
        "desc": {
         "_name_": "desc",
         "title": "desc",
         "type": "string"
        },
        "schedule": {
         "type": "object",
         "properties": {
          "minute": {
           "_name_": "minute",
           "title": "minute",
           "default": "00",
           "type": "string"
          },
          "hour": {
           "_name_": "hour",
           "title": "hour",
           "default": "*",
           "type": "string"
          },
          "dom": {
           "_name_": "dom",
           "title": "dom",
           "default": "*",
           "type": "string"
          },
          "month": {
           "_name_": "month",
           "title": "month",
           "default": "*",
           "type": "string"
          },
          "dow": {
           "_name_": "dow",
           "title": "dow",
           "default": "*",
           "type": "string"
          }
         },
         "additionalProperties": false,
         "_name_": "schedule",
         "title": "schedule",
         "default": {},
         "_attrs_order_": [
          "minute",
          "hour",
          "dom",
          "month",
          "dow"
         ]
        },
        "recursive": {
         "type": "boolean",
         "_name_": "recursive",
         "title": "recursive"
        },
        "times": {
         "type": "boolean",
         "_name_": "times",
         "title": "times"
        },
        "compress": {
         "type": "boolean",
         "_name_": "compress",
         "title": "compress",
         "description": "`compress` when set reduces the size of the data which is to be transmitted."
        },
        "archive": {
         "type": "boolean",
         "_name_": "archive",
         "title": "archive",
         "description": "`archive` when set makes rsync run recursively, preserving symlinks, permissions, modification times, group,\nand special files."
        },
        "delete": {
         "type": "boolean",
         "_name_": "delete",
         "title": "delete",
         "description": "`delete` when set deletes files in the destination directory which do not exist in the source directory."
        },
        "quiet": {
         "type": "boolean",
         "_name_": "quiet",
         "title": "quiet"
        },
        "preserveperm": {
         "type": "boolean",
         "_name_": "preserveperm",
         "title": "preserveperm",
         "description": "`preserveperm` when set preserves original file permissions."
        },
        "preserveattr": {
         "type": "boolean",
         "_name_": "preserveattr",
         "title": "preserveattr"
        },
        "delayupdates": {
         "type": "boolean",
         "_name_": "delayupdates",
         "title": "delayupdates"
        },
        "extra": {
         "_name_": "extra",
         "title": "extra",
         "default": [],
         "type": "array",
         "items": {
          "_name_": "extra",
          "title": "extra",
          "_required_": false,
          "type": "string"
         }
        },
        "enabled": {
         "type": "boolean",
         "_name_": "enabled",
         "title": "enabled",
         "default": true
        },
        "id": {
         "type": "integer",
         "_name_": "id",
         "title": "id"
        },
        "ssh_credentials": {
         "type": "object",
         "properties": {},
         "additionalProperties": true,
         "_name_": "ssh_credentials",
         "title": "ssh_credentials",
         "default": {},
         "_attrs_order_": [],
         "description": "In SSH mode, if `ssh_credentials` (a keychain credential of `SSH_CREDENTIALS` type) is specified then it is used\nto connect to the remote host. If it is not specified, then keys in `user`'s .ssh directory are used."
        },
        "locked": {
         "type": "boolean",
         "_name_": "locked",
         "title": "locked"
        },
        "job": {
         "type": "object",
         "properties": {},
         "additionalProperties": true,
         "_name_": "job",
         "title": "job",
         "default": {},
         "_attrs_order_": []
        }
       },
       "additionalProperties": false,
       "_name_": "rsynctask_create_returns",
       "title": "rsynctask_create_returns",
       "default": {},
       "_attrs_order_": [
        "path",
        "user",
        "mode",
        "remotehost",
        "remoteport",
        "remotemodule",
        "remotepath",
        "direction",
        "desc",
        "schedule",
        "recursive",
        "times",
        "compress",
        "archive",
        "delete",
        "quiet",
        "preserveperm",
        "preserveattr",
        "delayupdates",
        "extra",
        "enabled",
        "id",
        "ssh_credentials",
        "locked",
        "job"
       ]
      },
      "return_schema_of_rsynctask_delete": {
       "type": "boolean",
       "_name_": "deleted",
       "title": "deleted",
       "description": "Will return `true` if `id` is deleted successfully"
      },
      "rsynctask_update": {
       "type": "object",
       "properties": {
        "path": {
         "_name_": "path",
         "title": "path",
         "type": "string",
         "description": "See the comment in Rsyncmod about `path` length limits."
        },
        "user": {
         "_name_": "user",
         "title": "user",
         "type": "string",
         "description": "In SSH mode, if `ssh_credentials` (a keychain credential of `SSH_CREDENTIALS` type) is specified then it is used\nto connect to the remote host. If it is not specified, then keys in `user`'s .ssh directory are used."
        },
        "mode": {
         "_name_": "mode",
         "title": "mode",
         "default": "MODULE",
         "type": "string",
         "enum": [
          "MODULE",
          "SSH"
         ],
         "description": "`mode` represents different operating mechanisms for Rsync i.e Rsync Module mode / Rsync SSH mode.\n`remotemodule` is the name of remote module, this attribute should be specified when `mode` is set to MODULE."
        },
        "remotehost": {
         "_name_": "remotehost",
         "title": "remotehost",
         "default": null,
         "type": "string",
         "description": "`remotehost` is ip address or hostname of the remote system. If username differs on the remote host,\n\"username@remote_host\" format should be used.\n`remotehost` and `remoteport` are not used in this case.",
         "nullable": true
        },
        "remoteport": {
         "type": "integer",
         "_name_": "remoteport",
         "title": "remoteport",
         "default": null,
         "description": "`remotehost` and `remoteport` are not used in this case.",
         "nullable": true
        },
        "remotemodule": {
         "_name_": "remotemodule",
         "title": "remotemodule",
         "default": null,
         "type": "string",
         "description": "`remotemodule` is the name of remote module, this attribute should be specified when `mode` is set to MODULE.",
         "nullable": true
        },
        "ssh_credentials": {
         "type": "integer",
         "_name_": "ssh_credentials",
         "title": "ssh_credentials",
         "default": null,
         "description": "In SSH mode, if `ssh_credentials` (a keychain credential of `SSH_CREDENTIALS` type) is specified then it is used\nto connect to the remote host. If it is not specified, then keys in `user`'s .ssh directory are used.",
         "nullable": true
        },
        "remotepath": {
         "_name_": "remotepath",
         "title": "remotepath",
         "type": "string",
         "description": "`remotepath` specifies the path on the remote system."
        },
        "validate_rpath": {
         "type": "boolean",
         "_name_": "validate_rpath",
         "title": "validate_rpath",
         "default": true,
         "description": "`validate_rpath` is a boolean which when sets validates the existence of the remote path."
        },
        "ssh_keyscan": {
         "type": "boolean",
         "_name_": "ssh_keyscan",
         "title": "ssh_keyscan",
         "default": false,
         "description": "`ssh_keyscan` will automatically add remote host key to user's known_hosts file."
        },
        "direction": {
         "_name_": "direction",
         "title": "direction",
         "default": "PUSH",
         "type": "string",
         "enum": [
          "PULL",
          "PUSH"
         ],
         "description": "`direction` specifies if data should be PULLED or PUSHED from the remote system."
        },
        "desc": {
         "_name_": "desc",
         "title": "desc",
         "type": "string"
        },
        "schedule": {
         "type": "object",
         "properties": {
          "minute": {
           "_name_": "minute",
           "title": "minute",
           "default": "00",
           "type": "string"
          },
          "hour": {
           "_name_": "hour",
           "title": "hour",
           "default": "*",
           "type": "string"
          },
          "dom": {
           "_name_": "dom",
           "title": "dom",
           "default": "*",
           "type": "string"
          },
          "month": {
           "_name_": "month",
           "title": "month",
           "default": "*",
           "type": "string"
          },
          "dow": {
           "_name_": "dow",
           "title": "dow",
           "default": "*",
           "type": "string"
          }
         },
         "additionalProperties": false,
         "_name_": "schedule",
         "title": "schedule",
         "default": {},
         "_attrs_order_": [
          "minute",
          "hour",
          "dom",
          "month",
          "dow"
         ]
        },
        "recursive": {
         "type": "boolean",
         "_name_": "recursive",
         "title": "recursive"
        },
        "times": {
         "type": "boolean",
         "_name_": "times",
         "title": "times"
        },
        "compress": {
         "type": "boolean",
         "_name_": "compress",
         "title": "compress",
         "description": "`compress` when set reduces the size of the data which is to be transmitted."
        },
        "archive": {
         "type": "boolean",
         "_name_": "archive",
         "title": "archive",
         "description": "`archive` when set makes rsync run recursively, preserving symlinks, permissions, modification times, group,\nand special files."
        },
        "delete": {
         "type": "boolean",
         "_name_": "delete",
         "title": "delete",
         "description": "`delete` when set deletes files in the destination directory which do not exist in the source directory."
        },
        "quiet": {
         "type": "boolean",
         "_name_": "quiet",
         "title": "quiet"
        },
        "preserveperm": {
         "type": "boolean",
         "_name_": "preserveperm",
         "title": "preserveperm",
         "description": "`preserveperm` when set preserves original file permissions."
        },
        "preserveattr": {
         "type": "boolean",
         "_name_": "preserveattr",
         "title": "preserveattr"
        },
        "delayupdates": {
         "type": "boolean",
         "_name_": "delayupdates",
         "title": "delayupdates"
        },
        "extra": {
         "_name_": "extra",
         "title": "extra",
         "default": [],
         "type": "array",
         "items": {
          "_name_": "extra",
          "title": "extra",
          "_required_": false,
          "type": "string"
         }
        },
        "enabled": {
         "type": "boolean",
         "_name_": "enabled",
         "title": "enabled",
         "default": true
        }
       },
       "additionalProperties": false,
       "_name_": "rsync_task_update",
       "title": "rsync_task_update",
       "default": {},
       "_attrs_order_": [
        "path",
        "user",
        "mode",
        "remotehost",
        "remoteport",
        "remotemodule",
        "ssh_credentials",
        "remotepath",
        "validate_rpath",
        "ssh_keyscan",
        "direction",
        "desc",
        "schedule",
        "recursive",
        "times",
        "compress",
        "archive",
        "delete",
        "quiet",
        "preserveperm",
        "preserveattr",
        "delayupdates",
        "extra",
        "enabled"
       ]
      },
      "return_schema_of_rsynctask_update": {
       "type": "object",
       "properties": {
        "path": {
         "_name_": "path",
         "title": "path",
         "type": "string",
         "description": "See the comment in Rsyncmod about `path` length limits."
        },
        "user": {
         "_name_": "user",
         "title": "user",
         "type": "string",
         "description": "In SSH mode, if `ssh_credentials` (a keychain credential of `SSH_CREDENTIALS` type) is specified then it is used\nto connect to the remote host. If it is not specified, then keys in `user`'s .ssh directory are used."
        },
        "mode": {
         "_name_": "mode",
         "title": "mode",
         "default": "MODULE",
         "type": "string",
         "enum": [
          "MODULE",
          "SSH"
         ],
         "description": "`mode` represents different operating mechanisms for Rsync i.e Rsync Module mode / Rsync SSH mode.\n`remotemodule` is the name of remote module, this attribute should be specified when `mode` is set to MODULE."
        },
        "remotehost": {
         "_name_": "remotehost",
         "title": "remotehost",
         "default": null,
         "type": "string",
         "description": "`remotehost` is ip address or hostname of the remote system. If username differs on the remote host,\n\"username@remote_host\" format should be used.\n`remotehost` and `remoteport` are not used in this case.",
         "nullable": true
        },
        "remoteport": {
         "type": "integer",
         "_name_": "remoteport",
         "title": "remoteport",
         "default": null,
         "description": "`remotehost` and `remoteport` are not used in this case.",
         "nullable": true
        },
        "remotemodule": {
         "_name_": "remotemodule",
         "title": "remotemodule",
         "default": null,
         "type": "string",
         "description": "`remotemodule` is the name of remote module, this attribute should be specified when `mode` is set to MODULE.",
         "nullable": true
        },
        "remotepath": {
         "_name_": "remotepath",
         "title": "remotepath",
         "type": "string",
         "description": "`remotepath` specifies the path on the remote system."
        },
        "direction": {
         "_name_": "direction",
         "title": "direction",
         "default": "PUSH",
         "type": "string",
         "enum": [
          "PULL",
          "PUSH"
         ],
         "description": "`direction` specifies if data should be PULLED or PUSHED from the remote system."
        },
        "desc": {
         "_name_": "desc",
         "title": "desc",
         "type": "string"
        },
        "schedule": {
         "type": "object",
         "properties": {
          "minute": {
           "_name_": "minute",
           "title": "minute",
           "default": "00",
           "type": "string"
          },
          "hour": {
           "_name_": "hour",
           "title": "hour",
           "default": "*",
           "type": "string"
          },
          "dom": {
           "_name_": "dom",
           "title": "dom",
           "default": "*",
           "type": "string"
          },
          "month": {
           "_name_": "month",
           "title": "month",
           "default": "*",
           "type": "string"
          },
          "dow": {
           "_name_": "dow",
           "title": "dow",
           "default": "*",
           "type": "string"
          }
         },
         "additionalProperties": false,
         "_name_": "schedule",
         "title": "schedule",
         "default": {},
         "_attrs_order_": [
          "minute",
          "hour",
          "dom",
          "month",
          "dow"
         ]
        },
        "recursive": {
         "type": "boolean",
         "_name_": "recursive",
         "title": "recursive"
        },
        "times": {
         "type": "boolean",
         "_name_": "times",
         "title": "times"
        },
        "compress": {
         "type": "boolean",
         "_name_": "compress",
         "title": "compress",
         "description": "`compress` when set reduces the size of the data which is to be transmitted."
        },
        "archive": {
         "type": "boolean",
         "_name_": "archive",
         "title": "archive",
         "description": "`archive` when set makes rsync run recursively, preserving symlinks, permissions, modification times, group,\nand special files."
        },
        "delete": {
         "type": "boolean",
         "_name_": "delete",
         "title": "delete",
         "description": "`delete` when set deletes files in the destination directory which do not exist in the source directory."
        },
        "quiet": {
         "type": "boolean",
         "_name_": "quiet",
         "title": "quiet"
        },
        "preserveperm": {
         "type": "boolean",
         "_name_": "preserveperm",
         "title": "preserveperm",
         "description": "`preserveperm` when set preserves original file permissions."
        },
        "preserveattr": {
         "type": "boolean",
         "_name_": "preserveattr",
         "title": "preserveattr"
        },
        "delayupdates": {
         "type": "boolean",
         "_name_": "delayupdates",
         "title": "delayupdates"
        },
        "extra": {
         "_name_": "extra",
         "title": "extra",
         "default": [],
         "type": "array",
         "items": {
          "_name_": "extra",
          "title": "extra",
          "_required_": false,
          "type": "string"
         }
        },
        "enabled": {
         "type": "boolean",
         "_name_": "enabled",
         "title": "enabled",
         "default": true
        },
        "id": {
         "type": "integer",
         "_name_": "id",
         "title": "id",
         "description": "Update Rsync Task of `id`.\nCreate a Rsync Task."
        },
        "ssh_credentials": {
         "type": "object",
         "properties": {},
         "additionalProperties": true,
         "_name_": "ssh_credentials",
         "title": "ssh_credentials",
         "default": {},
         "_attrs_order_": [],
         "description": "In SSH mode, if `ssh_credentials` (a keychain credential of `SSH_CREDENTIALS` type) is specified then it is used\nto connect to the remote host. If it is not specified, then keys in `user`'s .ssh directory are used."
        },
        "locked": {
         "type": "boolean",
         "_name_": "locked",
         "title": "locked"
        },
        "job": {
         "type": "object",
         "properties": {},
         "additionalProperties": true,
         "_name_": "job",
         "title": "job",
         "default": {},
         "_attrs_order_": []
        }
       },
       "additionalProperties": false,
       "_name_": "rsynctask_update_returns",
       "title": "rsynctask_update_returns",
       "default": {},
       "_attrs_order_": [
        "path",
        "user",
        "mode",
        "remotehost",
        "remoteport",
        "remotemodule",
        "remotepath",
        "direction",
        "desc",
        "schedule",
        "recursive",
        "times",
        "compress",
        "archive",
        "delete",
        "quiet",
        "preserveperm",
        "preserveattr",
        "delayupdates",
        "extra",
        "enabled",
        "id",
        "ssh_credentials",
        "locked",
        "job"
       ]
      },
      "rsynctask_get_instance_0": {
       "anyOf": [
        {
         "type": "string"
        },
        {
         "type": "integer"
        },
        {
         "type": "boolean"
        },
        {
         "type": "object"
        },
        {
         "type": "array"
        }
       ],
       "nullable": false,
       "_name_": "id",
       "title": "id",
       "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised."
      },
      "rsynctask_get_instance_1": {
       "type": "object",
       "properties": {
        "relationships": {
         "type": "boolean",
         "_name_": "relationships",
         "title": "relationships",
         "default": true
        },
        "extend": {
         "_name_": "extend",
         "title": "extend",
         "default": null,
         "type": "string",
         "nullable": true
        },
        "extend_context": {
         "_name_": "extend_context",
         "title": "extend_context",
         "default": null,
         "type": "string",
         "nullable": true
        },
        "prefix": {
         "_name_": "prefix",
         "title": "prefix",
         "default": null,
         "type": "string",
         "nullable": true
        },
        "extra": {
         "type": "object",
         "properties": {},
         "additionalProperties": true,
         "_name_": "extra",
         "title": "extra",
         "default": {},
         "_attrs_order_": []
        },
        "order_by": {
         "_name_": "order_by",
         "title": "order_by",
         "default": [],
         "type": "array",
         "items": {}
        },
        "select": {
         "_name_": "select",
         "title": "select",
         "default": [],
         "type": "array",
         "items": {}
        },
        "count": {
         "type": "boolean",
         "_name_": "count",
         "title": "count",
         "default": false
        },
        "get": {
         "type": "boolean",
         "_name_": "get",
         "title": "get",
         "default": false
        },
        "offset": {
         "type": "integer",
         "_name_": "offset",
         "title": "offset",
         "default": 0
        },
        "limit": {
         "type": "integer",
         "_name_": "limit",
         "title": "limit",
         "default": 0
        },
        "force_sql_filters": {
         "type": "boolean",
         "_name_": "force_sql_filters",
         "title": "force_sql_filters",
         "default": true
        }
       },
       "additionalProperties": false,
       "_name_": "query-options-get_instance",
       "title": "query-options-get_instance",
       "default": {},
       "_attrs_order_": [
        "relationships",
        "extend",
        "extend_context",
        "prefix",
        "extra",
        "order_by",
        "select",
        "count",
        "get",
        "offset",
        "limit",
        "force_sql_filters"
       ]
      },
      "rsynctask_get_instance": {
       "type": "object",
       "properties": {
        "id": {
         "$ref": "#/components/schemas/rsynctask_get_instance_0"
        },
        "query-options-get_instance": {
         "$ref": "#/components/schemas/rsynctask_get_instance_1"
        }
       }
      },
      "return_schema_of_rsynctask_get_instance": {
       "type": "object",
       "properties": {
        "path": {
         "_name_": "path",
         "title": "path",
         "type": "string"
        },
        "user": {
         "_name_": "user",
         "title": "user",
         "type": "string"
        },
        "mode": {
         "_name_": "mode",
         "title": "mode",
         "default": "MODULE",
         "type": "string",
         "enum": [
          "MODULE",
          "SSH"
         ]
        },
        "remotehost": {
         "_name_": "remotehost",
         "title": "remotehost",
         "default": null,
         "type": "string",
         "nullable": true
        },
        "remoteport": {
         "type": "integer",
         "_name_": "remoteport",
         "title": "remoteport",
         "default": null,
         "nullable": true
        },
        "remotemodule": {
         "_name_": "remotemodule",
         "title": "remotemodule",
         "default": null,
         "type": "string",
         "nullable": true
        },
        "remotepath": {
         "_name_": "remotepath",
         "title": "remotepath",
         "type": "string"
        },
        "direction": {
         "_name_": "direction",
         "title": "direction",
         "default": "PUSH",
         "type": "string",
         "enum": [
          "PULL",
          "PUSH"
         ]
        },
        "desc": {
         "_name_": "desc",
         "title": "desc",
         "type": "string"
        },
        "schedule": {
         "type": "object",
         "properties": {
          "minute": {
           "_name_": "minute",
           "title": "minute",
           "default": "00",
           "type": "string"
          },
          "hour": {
           "_name_": "hour",
           "title": "hour",
           "default": "*",
           "type": "string"
          },
          "dom": {
           "_name_": "dom",
           "title": "dom",
           "default": "*",
           "type": "string"
          },
          "month": {
           "_name_": "month",
           "title": "month",
           "default": "*",
           "type": "string"
          },
          "dow": {
           "_name_": "dow",
           "title": "dow",
           "default": "*",
           "type": "string"
          }
         },
         "additionalProperties": false,
         "_name_": "schedule",
         "title": "schedule",
         "default": {},
         "_attrs_order_": [
          "minute",
          "hour",
          "dom",
          "month",
          "dow"
         ]
        },
        "recursive": {
         "type": "boolean",
         "_name_": "recursive",
         "title": "recursive"
        },
        "times": {
         "type": "boolean",
         "_name_": "times",
         "title": "times"
        },
        "compress": {
         "type": "boolean",
         "_name_": "compress",
         "title": "compress"
        },
        "archive": {
         "type": "boolean",
         "_name_": "archive",
         "title": "archive"
        },
        "delete": {
         "type": "boolean",
         "_name_": "delete",
         "title": "delete"
        },
        "quiet": {
         "type": "boolean",
         "_name_": "quiet",
         "title": "quiet"
        },
        "preserveperm": {
         "type": "boolean",
         "_name_": "preserveperm",
         "title": "preserveperm"
        },
        "preserveattr": {
         "type": "boolean",
         "_name_": "preserveattr",
         "title": "preserveattr"
        },
        "delayupdates": {
         "type": "boolean",
         "_name_": "delayupdates",
         "title": "delayupdates"
        },
        "extra": {
         "_name_": "extra",
         "title": "extra",
         "default": [],
         "type": "array",
         "items": {
          "_name_": "extra",
          "title": "extra",
          "_required_": false,
          "type": "string"
         }
        },
        "enabled": {
         "type": "boolean",
         "_name_": "enabled",
         "title": "enabled",
         "default": true
        },
        "id": {
         "type": "integer",
         "_name_": "id",
         "title": "id",
         "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised."
        },
        "ssh_credentials": {
         "type": "object",
         "properties": {},
         "additionalProperties": true,
         "_name_": "ssh_credentials",
         "title": "ssh_credentials",
         "default": {},
         "_attrs_order_": []
        },
        "locked": {
         "type": "boolean",
         "_name_": "locked",
         "title": "locked"
        },
        "job": {
         "type": "object",
         "properties": {},
         "additionalProperties": true,
         "_name_": "job",
         "title": "job",
         "default": {},
         "_attrs_order_": []
        }
       },
       "additionalProperties": false,
       "_name_": "rsync_task_entry",
       "title": "rsync_task_entry",
       "default": {},
       "_attrs_order_": [
        "path",
        "user",
        "mode",
        "remotehost",
        "remoteport",
        "remotemodule",
        "remotepath",
        "direction",
        "desc",
        "schedule",
        "recursive",
        "times",
        "compress",
        "archive",
        "delete",
        "quiet",
        "preserveperm",
        "preserveattr",
        "delayupdates",
        "extra",
        "enabled",
        "id",
        "ssh_credentials",
        "locked",
        "job"
       ]
      },
      "rsynctask_run": {
       "type": "object",
       "properties": {}
      },
      "return_schema_of_service_query": {
       "anyOf": [
        {
         "_name_": "query_result",
         "title": "query_result",
         "default": [],
         "_required_": false,
         "type": "array",
         "items": [
          {
           "type": "object",
           "properties": {
            "id": {
             "type": "integer",
             "_name_": "id",
             "title": "id",
             "_required_": false
            },
            "service": {
             "_name_": "service",
             "title": "service",
             "_required_": false,
             "type": "string"
            },
            "enable": {
             "type": "boolean",
             "_name_": "enable",
             "title": "enable",
             "_required_": false
            },
            "state": {
             "_name_": "state",
             "title": "state",
             "_required_": false,
             "type": "string"
            },
            "pids": {
             "_name_": "pids",
             "title": "pids",
             "default": [],
             "_required_": false,
             "type": "array",
             "items": [
              {
               "type": "integer",
               "_name_": "pid",
               "title": "pid",
               "_required_": false
              }
             ]
            }
           },
           "additionalProperties": false,
           "_name_": "service_entry",
           "title": "service_entry",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "id",
            "service",
            "enable",
            "state",
            "pids"
           ]
          }
         ]
        },
        {
         "type": "object",
         "properties": {
          "id": {
           "type": "integer",
           "_name_": "id",
           "title": "id",
           "_required_": false
          },
          "service": {
           "_name_": "service",
           "title": "service",
           "_required_": false,
           "type": "string"
          },
          "enable": {
           "type": "boolean",
           "_name_": "enable",
           "title": "enable",
           "_required_": false
          },
          "state": {
           "_name_": "state",
           "title": "state",
           "_required_": false,
           "type": "string"
          },
          "pids": {
           "_name_": "pids",
           "title": "pids",
           "default": [],
           "_required_": false,
           "type": "array",
           "items": [
            {
             "type": "integer",
             "_name_": "pid",
             "title": "pid",
             "_required_": false
            }
           ]
          }
         },
         "additionalProperties": false,
         "_name_": "service_entry",
         "title": "service_entry",
         "default": {},
         "_required_": false,
         "_attrs_order_": [
          "id",
          "service",
          "enable",
          "state",
          "pids"
         ]
        },
        {
         "type": "integer",
         "_name_": "count",
         "title": "count",
         "_required_": false
        },
        {
         "type": "object",
         "properties": {
          "id": {
           "type": "integer",
           "_name_": "id",
           "title": "id",
           "_required_": false
          },
          "service": {
           "_name_": "service",
           "title": "service",
           "_required_": false,
           "type": "string"
          },
          "enable": {
           "type": "boolean",
           "_name_": "enable",
           "title": "enable",
           "_required_": false
          },
          "state": {
           "_name_": "state",
           "title": "state",
           "_required_": false,
           "type": "string"
          },
          "pids": {
           "_name_": "pids",
           "title": "pids",
           "default": [],
           "_required_": false,
           "type": "array",
           "items": [
            {
             "type": "integer",
             "_name_": "pid",
             "title": "pid",
             "_required_": false
            }
           ]
          }
         },
         "additionalProperties": false,
         "_name_": "service_entry",
         "title": "service_entry",
         "default": {},
         "_required_": false,
         "_attrs_order_": [
          "id",
          "service",
          "enable",
          "state",
          "pids"
         ]
        }
       ],
       "nullable": false,
       "_name_": "query_result",
       "description": null
      },
      "service_update": {
       "type": "object",
       "properties": {
        "enable": {
         "type": "boolean",
         "_name_": "enable",
         "title": "enable",
         "default": false
        }
       },
       "additionalProperties": false,
       "_name_": "service-update",
       "title": "service-update",
       "default": {},
       "_attrs_order_": [
        "enable"
       ]
      },
      "return_schema_of_service_update": {
       "type": "integer",
       "_name_": "service_primary_key",
       "title": "service_primary_key"
      },
      "service_get_instance_0": {
       "anyOf": [
        {
         "type": "string"
        },
        {
         "type": "integer"
        },
        {
         "type": "boolean"
        },
        {
         "type": "object"
        },
        {
         "type": "array"
        }
       ],
       "nullable": false,
       "_name_": "id",
       "title": "id",
       "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised."
      },
      "service_get_instance_1": {
       "type": "object",
       "properties": {
        "relationships": {
         "type": "boolean",
         "_name_": "relationships",
         "title": "relationships",
         "default": true
        },
        "extend": {
         "_name_": "extend",
         "title": "extend",
         "default": null,
         "type": "string",
         "nullable": true
        },
        "extend_context": {
         "_name_": "extend_context",
         "title": "extend_context",
         "default": null,
         "type": "string",
         "nullable": true
        },
        "prefix": {
         "_name_": "prefix",
         "title": "prefix",
         "default": null,
         "type": "string",
         "nullable": true
        },
        "extra": {
         "type": "object",
         "properties": {},
         "additionalProperties": true,
         "_name_": "extra",
         "title": "extra",
         "default": {},
         "_attrs_order_": []
        },
        "order_by": {
         "_name_": "order_by",
         "title": "order_by",
         "default": [],
         "type": "array",
         "items": {}
        },
        "select": {
         "_name_": "select",
         "title": "select",
         "default": [],
         "type": "array",
         "items": {}
        },
        "count": {
         "type": "boolean",
         "_name_": "count",
         "title": "count",
         "default": false
        },
        "get": {
         "type": "boolean",
         "_name_": "get",
         "title": "get",
         "default": false
        },
        "offset": {
         "type": "integer",
         "_name_": "offset",
         "title": "offset",
         "default": 0
        },
        "limit": {
         "type": "integer",
         "_name_": "limit",
         "title": "limit",
         "default": 0
        },
        "force_sql_filters": {
         "type": "boolean",
         "_name_": "force_sql_filters",
         "title": "force_sql_filters",
         "default": true
        }
       },
       "additionalProperties": false,
       "_name_": "query-options-get_instance",
       "title": "query-options-get_instance",
       "default": {},
       "_attrs_order_": [
        "relationships",
        "extend",
        "extend_context",
        "prefix",
        "extra",
        "order_by",
        "select",
        "count",
        "get",
        "offset",
        "limit",
        "force_sql_filters"
       ]
      },
      "service_get_instance": {
       "type": "object",
       "properties": {
        "id": {
         "$ref": "#/components/schemas/service_get_instance_0"
        },
        "query-options-get_instance": {
         "$ref": "#/components/schemas/service_get_instance_1"
        }
       }
      },
      "return_schema_of_service_get_instance": {
       "type": "object",
       "properties": {
        "id": {
         "type": "integer",
         "_name_": "id",
         "title": "id",
         "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised."
        },
        "service": {
         "_name_": "service",
         "title": "service",
         "type": "string"
        },
        "enable": {
         "type": "boolean",
         "_name_": "enable",
         "title": "enable"
        },
        "state": {
         "_name_": "state",
         "title": "state",
         "type": "string"
        },
        "pids": {
         "_name_": "pids",
         "title": "pids",
         "default": [],
         "type": "array",
         "items": {
          "type": "integer",
          "_name_": "pid",
          "title": "pid",
          "_required_": false
         }
        }
       },
       "additionalProperties": false,
       "_name_": "service_entry",
       "title": "service_entry",
       "default": {},
       "_attrs_order_": [
        "id",
        "service",
        "enable",
        "state",
        "pids"
       ]
      },
      "service_reload_0": {
       "_name_": "service",
       "title": "service",
       "type": "string"
      },
      "service_reload_1": {
       "type": "object",
       "properties": {
        "ha_propagate": {
         "type": "boolean",
         "_name_": "ha_propagate",
         "title": "ha_propagate",
         "default": true
        },
        "silent": {
         "type": "boolean",
         "_name_": "silent",
         "title": "silent",
         "default": true
        }
       },
       "additionalProperties": false,
       "_name_": "service-control",
       "title": "service-control",
       "default": {},
       "_attrs_order_": [
        "ha_propagate",
        "silent"
       ]
      },
      "service_reload": {
       "type": "object",
       "properties": {
        "service": {
         "$ref": "#/components/schemas/service_reload_0"
        },
        "service-control": {
         "$ref": "#/components/schemas/service_reload_1"
        }
       }
      },
      "return_schema_of_service_reload": {
       "type": "boolean",
       "_name_": "service_reloaded",
       "title": "service_reloaded"
      },
      "service_restart_0": {
       "_name_": "service",
       "title": "service",
       "type": "string"
      },
      "service_restart_1": {
       "type": "object",
       "properties": {
        "ha_propagate": {
         "type": "boolean",
         "_name_": "ha_propagate",
         "title": "ha_propagate",
         "default": true
        },
        "silent": {
         "type": "boolean",
         "_name_": "silent",
         "title": "silent",
         "default": true
        }
       },
       "additionalProperties": false,
       "_name_": "service-control",
       "title": "service-control",
       "default": {},
       "_attrs_order_": [
        "ha_propagate",
        "silent"
       ]
      },
      "service_restart": {
       "type": "object",
       "properties": {
        "service": {
         "$ref": "#/components/schemas/service_restart_0"
        },
        "service-control": {
         "$ref": "#/components/schemas/service_restart_1"
        }
       }
      },
      "return_schema_of_service_restart": {
       "type": "boolean",
       "_name_": "service_restarted",
       "title": "service_restarted"
      },
      "service_start_0": {
       "_name_": "service",
       "title": "service",
       "type": "string",
       "description": "Start the service specified by `service`."
      },
      "service_start_1": {
       "type": "object",
       "properties": {
        "ha_propagate": {
         "type": "boolean",
         "_name_": "ha_propagate",
         "title": "ha_propagate",
         "default": true
        },
        "silent": {
         "type": "boolean",
         "_name_": "silent",
         "title": "silent",
         "default": true
        }
       },
       "additionalProperties": false,
       "_name_": "service-control",
       "title": "service-control",
       "default": {},
       "_attrs_order_": [
        "ha_propagate",
        "silent"
       ]
      },
      "service_start": {
       "type": "object",
       "properties": {
        "service": {
         "$ref": "#/components/schemas/service_start_0"
        },
        "service-control": {
         "$ref": "#/components/schemas/service_start_1"
        }
       }
      },
      "return_schema_of_service_start": {
       "type": "boolean",
       "_name_": "started_service",
       "title": "started_service",
       "description": "Will return `true` if service successfully started"
      },
      "service_started": {
       "_name_": "service",
       "title": "service",
       "type": "string"
      },
      "return_schema_of_service_started": {
       "type": "boolean",
       "_name_": "service_started",
       "title": "service_started",
       "description": "Will return `true` if service is running"
      },
      "service_started_or_enabled": {
       "_name_": "service",
       "title": "service",
       "type": "string"
      },
      "return_schema_of_service_started_or_enabled": {
       "type": "boolean",
       "_name_": "service_started_or_enabled",
       "title": "service_started_or_enabled",
       "description": "Will return `true` if service is started or enabled to start automatically."
      },
      "service_stop_0": {
       "_name_": "service",
       "title": "service",
       "type": "string"
      },
      "service_stop_1": {
       "type": "object",
       "properties": {
        "ha_propagate": {
         "type": "boolean",
         "_name_": "ha_propagate",
         "title": "ha_propagate",
         "default": true
        },
        "silent": {
         "type": "boolean",
         "_name_": "silent",
         "title": "silent",
         "default": true
        }
       },
       "additionalProperties": false,
       "_name_": "service-control",
       "title": "service-control",
       "default": {},
       "_attrs_order_": [
        "ha_propagate",
        "silent"
       ]
      },
      "service_stop": {
       "type": "object",
       "properties": {
        "service": {
         "$ref": "#/components/schemas/service_stop_0"
        },
        "service-control": {
         "$ref": "#/components/schemas/service_stop_1"
        }
       }
      },
      "return_schema_of_service_stop": {
       "type": "boolean",
       "_name_": "service_stopped",
       "title": "service_stopped",
       "description": "Will return `true` if service successfully stopped"
      },
      "return_schema_of_sharing_nfs_query": {
       "anyOf": [
        {
         "items": [
          {
           "additionalProperties": false,
           "properties": {
            "id": {
             "title": "id",
             "type": "integer",
             "_name_": "id",
             "_required_": false
            },
            "path": {
             "description": "Local path to be exported. ",
             "minLength": 1,
             "title": "path",
             "type": "string",
             "_name_": "path",
             "_required_": false
            },
            "aliases": {
             "description": "IGNORED for now. ",
             "items": [
              {
               "minLength": 1,
               "type": "string"
              }
             ],
             "title": "aliases",
             "type": "array",
             "_name_": "aliases",
             "_required_": false
            },
            "comment": {
             "description": "User comment associated with share. ",
             "title": "comment",
             "type": "string",
             "_name_": "comment",
             "_required_": false
            },
            "networks": {
             "description": "List of authorized networks that are allowed to access the share having format\n\"network/mask\" CIDR notation. Each entry must be unique. If empty, all networks are allowed.\nMaximum number of entries: 42 ",
             "items": [
              {
               "minLength": 1,
               "type": "string"
              }
             ],
             "maxItems": 42,
             "title": "networks",
             "type": "array",
             "_name_": "networks",
             "_required_": false
            },
            "hosts": {
             "description": "list of IP's/hostnames which are allowed to access the share.  No quotes or spaces are allowed.\nEach entry must be unique. If empty, all IP's/hostnames are allowed.\nMaximum number of entries: 42 ",
             "items": [
              {
               "minLength": 1,
               "type": "string"
              }
             ],
             "maxItems": 42,
             "title": "hosts",
             "type": "array",
             "_name_": "hosts",
             "_required_": false
            },
            "ro": {
             "description": "Export the share as read only. ",
             "title": "ro",
             "type": "boolean",
             "_name_": "ro",
             "_required_": false
            },
            "maproot_user": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "null"
              }
             ],
             "description": "Map root user client to a specified user. ",
             "title": "maproot_user",
             "_name_": "maproot_user",
             "_required_": false
            },
            "maproot_group": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "null"
              }
             ],
             "description": "Map root group client to a specified group. ",
             "title": "maproot_group",
             "_name_": "maproot_group",
             "_required_": false
            },
            "mapall_user": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "null"
              }
             ],
             "description": "Map all client users to a specified user. ",
             "title": "mapall_user",
             "_name_": "mapall_user",
             "_required_": false
            },
            "mapall_group": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "null"
              }
             ],
             "description": "Map all client groups to a specified group. ",
             "title": "mapall_group",
             "_name_": "mapall_group",
             "_required_": false
            },
            "security": {
             "description": "Specify the security schema. ",
             "items": [
              {
               "enum": [
                "SYS",
                "KRB5",
                "KRB5I",
                "KRB5P"
               ],
               "type": "string"
              }
             ],
             "title": "security",
             "type": "array",
             "_name_": "security",
             "_required_": false
            },
            "enabled": {
             "description": "Enable or disable the share. ",
             "title": "enabled",
             "type": "boolean",
             "_name_": "enabled",
             "_required_": false
            },
            "locked": {
             "anyOf": [
              {
               "type": "boolean"
              },
              {
               "type": "null"
              }
             ],
             "description": "Lock state of the dataset (if encrypted). ",
             "title": "locked",
             "_name_": "locked",
             "_required_": false
            },
            "expose_snapshots": {
             "description": "Enterprise feature to enable access to the ZFS snapshot directory for the export.\nExport path must be the root directory of a ZFS dataset.",
             "title": "expose_snapshots",
             "type": "boolean",
             "_name_": "expose_snapshots",
             "_required_": false
            }
           },
           "title": "NfsShareQueryResultItem",
           "type": "object",
           "_attrs_order_": [
            "id",
            "path",
            "aliases",
            "comment",
            "networks",
            "hosts",
            "ro",
            "maproot_user",
            "maproot_group",
            "mapall_user",
            "mapall_group",
            "security",
            "enabled",
            "locked",
            "expose_snapshots"
           ]
          }
         ],
         "type": "array"
        },
        {
         "additionalProperties": false,
         "properties": {
          "id": {
           "title": "id",
           "type": "integer",
           "_name_": "id",
           "_required_": false
          },
          "path": {
           "description": "Local path to be exported. ",
           "minLength": 1,
           "title": "path",
           "type": "string",
           "_name_": "path",
           "_required_": false
          },
          "aliases": {
           "description": "IGNORED for now. ",
           "items": [
            {
             "minLength": 1,
             "type": "string"
            }
           ],
           "title": "aliases",
           "type": "array",
           "_name_": "aliases",
           "_required_": false
          },
          "comment": {
           "description": "User comment associated with share. ",
           "title": "comment",
           "type": "string",
           "_name_": "comment",
           "_required_": false
          },
          "networks": {
           "description": "List of authorized networks that are allowed to access the share having format\n\"network/mask\" CIDR notation. Each entry must be unique. If empty, all networks are allowed.\nMaximum number of entries: 42 ",
           "items": [
            {
             "minLength": 1,
             "type": "string"
            }
           ],
           "maxItems": 42,
           "title": "networks",
           "type": "array",
           "_name_": "networks",
           "_required_": false
          },
          "hosts": {
           "description": "list of IP's/hostnames which are allowed to access the share.  No quotes or spaces are allowed.\nEach entry must be unique. If empty, all IP's/hostnames are allowed.\nMaximum number of entries: 42 ",
           "items": [
            {
             "minLength": 1,
             "type": "string"
            }
           ],
           "maxItems": 42,
           "title": "hosts",
           "type": "array",
           "_name_": "hosts",
           "_required_": false
          },
          "ro": {
           "description": "Export the share as read only. ",
           "title": "ro",
           "type": "boolean",
           "_name_": "ro",
           "_required_": false
          },
          "maproot_user": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "null"
            }
           ],
           "description": "Map root user client to a specified user. ",
           "title": "maproot_user",
           "_name_": "maproot_user",
           "_required_": false
          },
          "maproot_group": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "null"
            }
           ],
           "description": "Map root group client to a specified group. ",
           "title": "maproot_group",
           "_name_": "maproot_group",
           "_required_": false
          },
          "mapall_user": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "null"
            }
           ],
           "description": "Map all client users to a specified user. ",
           "title": "mapall_user",
           "_name_": "mapall_user",
           "_required_": false
          },
          "mapall_group": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "null"
            }
           ],
           "description": "Map all client groups to a specified group. ",
           "title": "mapall_group",
           "_name_": "mapall_group",
           "_required_": false
          },
          "security": {
           "description": "Specify the security schema. ",
           "items": [
            {
             "enum": [
              "SYS",
              "KRB5",
              "KRB5I",
              "KRB5P"
             ],
             "type": "string"
            }
           ],
           "title": "security",
           "type": "array",
           "_name_": "security",
           "_required_": false
          },
          "enabled": {
           "description": "Enable or disable the share. ",
           "title": "enabled",
           "type": "boolean",
           "_name_": "enabled",
           "_required_": false
          },
          "locked": {
           "anyOf": [
            {
             "type": "boolean"
            },
            {
             "type": "null"
            }
           ],
           "description": "Lock state of the dataset (if encrypted). ",
           "title": "locked",
           "_name_": "locked",
           "_required_": false
          },
          "expose_snapshots": {
           "description": "Enterprise feature to enable access to the ZFS snapshot directory for the export.\nExport path must be the root directory of a ZFS dataset.",
           "title": "expose_snapshots",
           "type": "boolean",
           "_name_": "expose_snapshots",
           "_required_": false
          }
         },
         "title": "NfsShareQueryResultItem",
         "type": "object",
         "_attrs_order_": [
          "id",
          "path",
          "aliases",
          "comment",
          "networks",
          "hosts",
          "ro",
          "maproot_user",
          "maproot_group",
          "mapall_user",
          "mapall_group",
          "security",
          "enabled",
          "locked",
          "expose_snapshots"
         ]
        },
        {
         "type": "integer"
        }
       ],
       "title": "result",
       "_name_": "result"
      },
      "sharing_nfs_create": {
       "additionalProperties": false,
       "properties": {
        "path": {
         "description": "Local path to be exported. ",
         "minLength": 1,
         "title": "path",
         "type": "string",
         "_name_": "path"
        },
        "aliases": {
         "default": [],
         "description": "IGNORED for now. ",
         "items": {
          "minLength": 1,
          "type": "string"
         },
         "title": "aliases",
         "type": "array",
         "_name_": "aliases"
        },
        "comment": {
         "default": "",
         "description": "User comment associated with share. ",
         "title": "comment",
         "type": "string",
         "_name_": "comment"
        },
        "networks": {
         "default": [],
         "description": "List of authorized networks that are allowed to access the share having format\n\"network/mask\" CIDR notation. Each entry must be unique. If empty, all networks are allowed.\nMaximum number of entries: 42 ",
         "items": {
          "minLength": 1,
          "type": "string"
         },
         "maxItems": 42,
         "title": "networks",
         "type": "array",
         "_name_": "networks"
        },
        "hosts": {
         "default": [],
         "description": "list of IP's/hostnames which are allowed to access the share.  No quotes or spaces are allowed.\nEach entry must be unique. If empty, all IP's/hostnames are allowed.\nMaximum number of entries: 42 ",
         "items": {
          "minLength": 1,
          "type": "string"
         },
         "maxItems": 42,
         "title": "hosts",
         "type": "array",
         "_name_": "hosts"
        },
        "ro": {
         "default": false,
         "description": "Export the share as read only. ",
         "title": "ro",
         "type": "boolean",
         "_name_": "ro"
        },
        "maproot_user": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "description": "Map root user client to a specified user. ",
         "title": "maproot_user",
         "_name_": "maproot_user"
        },
        "maproot_group": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "description": "Map root group client to a specified group. ",
         "title": "maproot_group",
         "_name_": "maproot_group"
        },
        "mapall_user": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "description": "Map all client users to a specified user. ",
         "title": "mapall_user",
         "_name_": "mapall_user"
        },
        "mapall_group": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "description": "Map all client groups to a specified group. ",
         "title": "mapall_group",
         "_name_": "mapall_group"
        },
        "security": {
         "default": [],
         "description": "Specify the security schema. ",
         "items": {
          "enum": [
           "SYS",
           "KRB5",
           "KRB5I",
           "KRB5P"
          ],
          "type": "string"
         },
         "title": "security",
         "type": "array",
         "_name_": "security"
        },
        "enabled": {
         "default": true,
         "description": "Enable or disable the share. ",
         "title": "enabled",
         "type": "boolean",
         "_name_": "enabled"
        },
        "expose_snapshots": {
         "default": false,
         "description": "Enterprise feature to enable access to the ZFS snapshot directory for the export.\nExport path must be the root directory of a ZFS dataset.",
         "title": "expose_snapshots",
         "type": "boolean",
         "_name_": "expose_snapshots"
        }
       },
       "required": [
        "path"
       ],
       "title": "data",
       "type": "object",
       "_name_": "data",
       "_attrs_order_": [
        "path",
        "aliases",
        "comment",
        "networks",
        "hosts",
        "ro",
        "maproot_user",
        "maproot_group",
        "mapall_user",
        "mapall_group",
        "security",
        "enabled",
        "expose_snapshots"
       ]
      },
      "return_schema_of_sharing_nfs_create": {
       "additionalProperties": false,
       "properties": {
        "id": {
         "title": "id",
         "type": "integer",
         "_name_": "id"
        },
        "path": {
         "description": "Local path to be exported. ",
         "minLength": 1,
         "title": "path",
         "type": "string",
         "_name_": "path"
        },
        "aliases": {
         "default": [],
         "description": "IGNORED for now. ",
         "items": {
          "minLength": 1,
          "type": "string"
         },
         "title": "aliases",
         "type": "array",
         "_name_": "aliases"
        },
        "comment": {
         "default": "",
         "description": "User comment associated with share. ",
         "title": "comment",
         "type": "string",
         "_name_": "comment"
        },
        "networks": {
         "default": [],
         "description": "List of authorized networks that are allowed to access the share having format\n\"network/mask\" CIDR notation. Each entry must be unique. If empty, all networks are allowed.\nMaximum number of entries: 42 ",
         "items": {
          "minLength": 1,
          "type": "string"
         },
         "maxItems": 42,
         "title": "networks",
         "type": "array",
         "_name_": "networks"
        },
        "hosts": {
         "default": [],
         "description": "list of IP's/hostnames which are allowed to access the share.  No quotes or spaces are allowed.\nEach entry must be unique. If empty, all IP's/hostnames are allowed.\nMaximum number of entries: 42 ",
         "items": {
          "minLength": 1,
          "type": "string"
         },
         "maxItems": 42,
         "title": "hosts",
         "type": "array",
         "_name_": "hosts"
        },
        "ro": {
         "default": false,
         "description": "Export the share as read only. ",
         "title": "ro",
         "type": "boolean",
         "_name_": "ro"
        },
        "maproot_user": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "description": "Map root user client to a specified user. ",
         "title": "maproot_user",
         "_name_": "maproot_user"
        },
        "maproot_group": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "description": "Map root group client to a specified group. ",
         "title": "maproot_group",
         "_name_": "maproot_group"
        },
        "mapall_user": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "description": "Map all client users to a specified user. ",
         "title": "mapall_user",
         "_name_": "mapall_user"
        },
        "mapall_group": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "description": "Map all client groups to a specified group. ",
         "title": "mapall_group",
         "_name_": "mapall_group"
        },
        "security": {
         "default": [],
         "description": "Specify the security schema. ",
         "items": {
          "enum": [
           "SYS",
           "KRB5",
           "KRB5I",
           "KRB5P"
          ],
          "type": "string"
         },
         "title": "security",
         "type": "array",
         "_name_": "security"
        },
        "enabled": {
         "default": true,
         "description": "Enable or disable the share. ",
         "title": "enabled",
         "type": "boolean",
         "_name_": "enabled"
        },
        "locked": {
         "anyOf": [
          {
           "type": "boolean"
          },
          {
           "type": "null"
          }
         ],
         "description": "Lock state of the dataset (if encrypted). ",
         "title": "locked",
         "_name_": "locked"
        },
        "expose_snapshots": {
         "default": false,
         "description": "Enterprise feature to enable access to the ZFS snapshot directory for the export.\nExport path must be the root directory of a ZFS dataset.",
         "title": "expose_snapshots",
         "type": "boolean",
         "_name_": "expose_snapshots"
        }
       },
       "required": [
        "id",
        "path",
        "locked"
       ],
       "title": "result",
       "type": "object",
       "_name_": "result",
       "_attrs_order_": [
        "id",
        "path",
        "aliases",
        "comment",
        "networks",
        "hosts",
        "ro",
        "maproot_user",
        "maproot_group",
        "mapall_user",
        "mapall_group",
        "security",
        "enabled",
        "locked",
        "expose_snapshots"
       ]
      },
      "return_schema_of_sharing_nfs_delete": {
       "const": true,
       "enum": [
        true
       ],
       "title": "result",
       "type": "boolean",
       "_name_": "result"
      },
      "sharing_nfs_update": {
       "additionalProperties": false,
       "properties": {
        "path": {
         "description": "Local path to be exported. ",
         "minLength": 1,
         "title": "path",
         "type": "string",
         "_name_": "path"
        },
        "aliases": {
         "description": "IGNORED for now. ",
         "items": {
          "minLength": 1,
          "type": "string"
         },
         "title": "aliases",
         "type": "array",
         "_name_": "aliases"
        },
        "comment": {
         "description": "User comment associated with share. ",
         "title": "comment",
         "type": "string",
         "_name_": "comment"
        },
        "networks": {
         "description": "List of authorized networks that are allowed to access the share having format\n\"network/mask\" CIDR notation. Each entry must be unique. If empty, all networks are allowed.\nMaximum number of entries: 42 ",
         "items": {
          "minLength": 1,
          "type": "string"
         },
         "maxItems": 42,
         "title": "networks",
         "type": "array",
         "_name_": "networks"
        },
        "hosts": {
         "description": "list of IP's/hostnames which are allowed to access the share.  No quotes or spaces are allowed.\nEach entry must be unique. If empty, all IP's/hostnames are allowed.\nMaximum number of entries: 42 ",
         "items": {
          "minLength": 1,
          "type": "string"
         },
         "maxItems": 42,
         "title": "hosts",
         "type": "array",
         "_name_": "hosts"
        },
        "ro": {
         "description": "Export the share as read only. ",
         "title": "ro",
         "type": "boolean",
         "_name_": "ro"
        },
        "maproot_user": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "description": "Map root user client to a specified user. ",
         "title": "maproot_user",
         "_name_": "maproot_user"
        },
        "maproot_group": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "description": "Map root group client to a specified group. ",
         "title": "maproot_group",
         "_name_": "maproot_group"
        },
        "mapall_user": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "description": "Map all client users to a specified user. ",
         "title": "mapall_user",
         "_name_": "mapall_user"
        },
        "mapall_group": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "description": "Map all client groups to a specified group. ",
         "title": "mapall_group",
         "_name_": "mapall_group"
        },
        "security": {
         "description": "Specify the security schema. ",
         "items": {
          "enum": [
           "SYS",
           "KRB5",
           "KRB5I",
           "KRB5P"
          ],
          "type": "string"
         },
         "title": "security",
         "type": "array",
         "_name_": "security"
        },
        "enabled": {
         "description": "Enable or disable the share. ",
         "title": "enabled",
         "type": "boolean",
         "_name_": "enabled"
        },
        "expose_snapshots": {
         "description": "Enterprise feature to enable access to the ZFS snapshot directory for the export.\nExport path must be the root directory of a ZFS dataset.",
         "title": "expose_snapshots",
         "type": "boolean",
         "_name_": "expose_snapshots"
        }
       },
       "title": "data",
       "type": "object",
       "_name_": "data",
       "_attrs_order_": [
        "path",
        "aliases",
        "comment",
        "networks",
        "hosts",
        "ro",
        "maproot_user",
        "maproot_group",
        "mapall_user",
        "mapall_group",
        "security",
        "enabled",
        "expose_snapshots"
       ]
      },
      "return_schema_of_sharing_nfs_update": {
       "additionalProperties": false,
       "properties": {
        "id": {
         "title": "id",
         "type": "integer",
         "_name_": "id"
        },
        "path": {
         "description": "Local path to be exported. ",
         "minLength": 1,
         "title": "path",
         "type": "string",
         "_name_": "path"
        },
        "aliases": {
         "default": [],
         "description": "IGNORED for now. ",
         "items": {
          "minLength": 1,
          "type": "string"
         },
         "title": "aliases",
         "type": "array",
         "_name_": "aliases"
        },
        "comment": {
         "default": "",
         "description": "User comment associated with share. ",
         "title": "comment",
         "type": "string",
         "_name_": "comment"
        },
        "networks": {
         "default": [],
         "description": "List of authorized networks that are allowed to access the share having format\n\"network/mask\" CIDR notation. Each entry must be unique. If empty, all networks are allowed.\nMaximum number of entries: 42 ",
         "items": {
          "minLength": 1,
          "type": "string"
         },
         "maxItems": 42,
         "title": "networks",
         "type": "array",
         "_name_": "networks"
        },
        "hosts": {
         "default": [],
         "description": "list of IP's/hostnames which are allowed to access the share.  No quotes or spaces are allowed.\nEach entry must be unique. If empty, all IP's/hostnames are allowed.\nMaximum number of entries: 42 ",
         "items": {
          "minLength": 1,
          "type": "string"
         },
         "maxItems": 42,
         "title": "hosts",
         "type": "array",
         "_name_": "hosts"
        },
        "ro": {
         "default": false,
         "description": "Export the share as read only. ",
         "title": "ro",
         "type": "boolean",
         "_name_": "ro"
        },
        "maproot_user": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "description": "Map root user client to a specified user. ",
         "title": "maproot_user",
         "_name_": "maproot_user"
        },
        "maproot_group": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "description": "Map root group client to a specified group. ",
         "title": "maproot_group",
         "_name_": "maproot_group"
        },
        "mapall_user": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "description": "Map all client users to a specified user. ",
         "title": "mapall_user",
         "_name_": "mapall_user"
        },
        "mapall_group": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "description": "Map all client groups to a specified group. ",
         "title": "mapall_group",
         "_name_": "mapall_group"
        },
        "security": {
         "default": [],
         "description": "Specify the security schema. ",
         "items": {
          "enum": [
           "SYS",
           "KRB5",
           "KRB5I",
           "KRB5P"
          ],
          "type": "string"
         },
         "title": "security",
         "type": "array",
         "_name_": "security"
        },
        "enabled": {
         "default": true,
         "description": "Enable or disable the share. ",
         "title": "enabled",
         "type": "boolean",
         "_name_": "enabled"
        },
        "locked": {
         "anyOf": [
          {
           "type": "boolean"
          },
          {
           "type": "null"
          }
         ],
         "description": "Lock state of the dataset (if encrypted). ",
         "title": "locked",
         "_name_": "locked"
        },
        "expose_snapshots": {
         "default": false,
         "description": "Enterprise feature to enable access to the ZFS snapshot directory for the export.\nExport path must be the root directory of a ZFS dataset.",
         "title": "expose_snapshots",
         "type": "boolean",
         "_name_": "expose_snapshots"
        }
       },
       "required": [
        "id",
        "path",
        "locked"
       ],
       "title": "result",
       "type": "object",
       "_name_": "result",
       "_attrs_order_": [
        "id",
        "path",
        "aliases",
        "comment",
        "networks",
        "hosts",
        "ro",
        "maproot_user",
        "maproot_group",
        "mapall_user",
        "mapall_group",
        "security",
        "enabled",
        "locked",
        "expose_snapshots"
       ]
      },
      "sharing_nfs_get_instance_0": {
       "title": "id",
       "type": "integer",
       "_name_": "id"
      },
      "sharing_nfs_get_instance_1": {
       "additionalProperties": false,
       "properties": {
        "relationships": {
         "default": true,
         "title": "relationships",
         "type": "boolean",
         "_name_": "relationships"
        },
        "extend": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "extend",
         "_name_": "extend"
        },
        "extend_context": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "extend_context",
         "_name_": "extend_context"
        },
        "prefix": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "prefix",
         "_name_": "prefix"
        },
        "extra": {
         "default": {},
         "title": "extra",
         "type": "object",
         "_name_": "extra"
        },
        "order_by": {
         "default": [],
         "items": {
          "type": "string"
         },
         "title": "order_by",
         "type": "array",
         "_name_": "order_by"
        },
        "select": {
         "default": [],
         "items": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "items": [
             {}
            ],
            "type": "array"
           }
          ]
         },
         "title": "select",
         "type": "array",
         "_name_": "select"
        },
        "count": {
         "default": false,
         "title": "count",
         "type": "boolean",
         "_name_": "count"
        },
        "get": {
         "default": false,
         "title": "get",
         "type": "boolean",
         "_name_": "get"
        },
        "offset": {
         "default": 0,
         "title": "offset",
         "type": "integer",
         "_name_": "offset"
        },
        "limit": {
         "default": 0,
         "title": "limit",
         "type": "integer",
         "_name_": "limit"
        },
        "force_sql_filters": {
         "default": false,
         "title": "force_sql_filters",
         "type": "boolean",
         "_name_": "force_sql_filters"
        }
       },
       "title": "options",
       "type": "object",
       "default": {},
       "_name_": "options",
       "_attrs_order_": [
        "relationships",
        "extend",
        "extend_context",
        "prefix",
        "extra",
        "order_by",
        "select",
        "count",
        "get",
        "offset",
        "limit",
        "force_sql_filters"
       ]
      },
      "sharing_nfs_get_instance": {
       "type": "object",
       "properties": {
        "id": {
         "$ref": "#/components/schemas/sharing_nfs_get_instance_0"
        },
        "options": {
         "$ref": "#/components/schemas/sharing_nfs_get_instance_1"
        }
       }
      },
      "return_schema_of_sharing_nfs_get_instance": {
       "additionalProperties": false,
       "properties": {
        "id": {
         "title": "id",
         "type": "integer",
         "_name_": "id"
        },
        "path": {
         "description": "Local path to be exported. ",
         "minLength": 1,
         "title": "path",
         "type": "string",
         "_name_": "path"
        },
        "aliases": {
         "default": [],
         "description": "IGNORED for now. ",
         "items": {
          "minLength": 1,
          "type": "string"
         },
         "title": "aliases",
         "type": "array",
         "_name_": "aliases"
        },
        "comment": {
         "default": "",
         "description": "User comment associated with share. ",
         "title": "comment",
         "type": "string",
         "_name_": "comment"
        },
        "networks": {
         "default": [],
         "description": "List of authorized networks that are allowed to access the share having format\n\"network/mask\" CIDR notation. Each entry must be unique. If empty, all networks are allowed.\nMaximum number of entries: 42 ",
         "items": {
          "minLength": 1,
          "type": "string"
         },
         "maxItems": 42,
         "title": "networks",
         "type": "array",
         "_name_": "networks"
        },
        "hosts": {
         "default": [],
         "description": "list of IP's/hostnames which are allowed to access the share.  No quotes or spaces are allowed.\nEach entry must be unique. If empty, all IP's/hostnames are allowed.\nMaximum number of entries: 42 ",
         "items": {
          "minLength": 1,
          "type": "string"
         },
         "maxItems": 42,
         "title": "hosts",
         "type": "array",
         "_name_": "hosts"
        },
        "ro": {
         "default": false,
         "description": "Export the share as read only. ",
         "title": "ro",
         "type": "boolean",
         "_name_": "ro"
        },
        "maproot_user": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "description": "Map root user client to a specified user. ",
         "title": "maproot_user",
         "_name_": "maproot_user"
        },
        "maproot_group": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "description": "Map root group client to a specified group. ",
         "title": "maproot_group",
         "_name_": "maproot_group"
        },
        "mapall_user": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "description": "Map all client users to a specified user. ",
         "title": "mapall_user",
         "_name_": "mapall_user"
        },
        "mapall_group": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "description": "Map all client groups to a specified group. ",
         "title": "mapall_group",
         "_name_": "mapall_group"
        },
        "security": {
         "default": [],
         "description": "Specify the security schema. ",
         "items": {
          "enum": [
           "SYS",
           "KRB5",
           "KRB5I",
           "KRB5P"
          ],
          "type": "string"
         },
         "title": "security",
         "type": "array",
         "_name_": "security"
        },
        "enabled": {
         "default": true,
         "description": "Enable or disable the share. ",
         "title": "enabled",
         "type": "boolean",
         "_name_": "enabled"
        },
        "locked": {
         "anyOf": [
          {
           "type": "boolean"
          },
          {
           "type": "null"
          }
         ],
         "description": "Lock state of the dataset (if encrypted). ",
         "title": "locked",
         "_name_": "locked"
        },
        "expose_snapshots": {
         "default": false,
         "description": "Enterprise feature to enable access to the ZFS snapshot directory for the export.\nExport path must be the root directory of a ZFS dataset.",
         "title": "expose_snapshots",
         "type": "boolean",
         "_name_": "expose_snapshots"
        }
       },
       "required": [
        "id",
        "path",
        "locked"
       ],
       "title": "result",
       "type": "object",
       "_name_": "result",
       "_attrs_order_": [
        "id",
        "path",
        "aliases",
        "comment",
        "networks",
        "hosts",
        "ro",
        "maproot_user",
        "maproot_group",
        "mapall_user",
        "mapall_group",
        "security",
        "enabled",
        "locked",
        "expose_snapshots"
       ]
      },
      "return_schema_of_sharing_smb_query": {
       "anyOf": [
        {
         "_name_": "query_result",
         "title": "query_result",
         "default": [],
         "_required_": false,
         "type": "array",
         "items": [
          {
           "type": "object",
           "properties": {},
           "additionalProperties": true,
           "_name_": "sharing_smb_entry",
           "title": "sharing_smb_entry",
           "default": {},
           "_required_": false,
           "_attrs_order_": []
          }
         ]
        },
        {
         "type": "object",
         "properties": {},
         "additionalProperties": true,
         "_name_": "sharing_smb_entry",
         "title": "sharing_smb_entry",
         "default": {},
         "_required_": false,
         "_attrs_order_": []
        },
        {
         "type": "integer",
         "_name_": "count",
         "title": "count",
         "_required_": false
        },
        {
         "type": "object",
         "properties": {},
         "additionalProperties": true,
         "_name_": "sharing_smb_entry",
         "title": "sharing_smb_entry",
         "default": {},
         "_required_": false,
         "_attrs_order_": []
        }
       ],
       "nullable": false,
       "_name_": "query_result",
       "description": null
      },
      "sharing_smb_create": {
       "type": "object",
       "properties": {
        "purpose": {
         "_name_": "purpose",
         "title": "purpose",
         "default": "DEFAULT_SHARE",
         "type": "string",
         "enum": [
          "NO_PRESET",
          "DEFAULT_SHARE",
          "TIMEMACHINE",
          "ENHANCED_TIMEMACHINE",
          "MULTI_PROTOCOL_NFS",
          "PRIVATE_DATASETS",
          "WORM_DROPBOX"
         ],
         "description": "`purpose` applies common configuration presets depending on intended purpose."
        },
        "path": {
         "_name_": "path",
         "title": "path",
         "type": "string",
         "description": "`path` path to export over the SMB protocol."
        },
        "path_suffix": {
         "_name_": "path_suffix",
         "title": "path_suffix",
         "default": "",
         "type": "string"
        },
        "home": {
         "type": "boolean",
         "_name_": "home",
         "title": "home",
         "default": false
        },
        "name": {
         "_name_": "name",
         "title": "name",
         "type": "string"
        },
        "comment": {
         "_name_": "comment",
         "title": "comment",
         "default": "",
         "type": "string"
        },
        "ro": {
         "type": "boolean",
         "_name_": "ro",
         "title": "ro",
         "default": false,
         "description": "`ro` when enabled, prohibits write access to the share."
        },
        "browsable": {
         "type": "boolean",
         "_name_": "browsable",
         "title": "browsable",
         "default": true
        },
        "timemachine": {
         "type": "boolean",
         "_name_": "timemachine",
         "title": "timemachine",
         "default": false,
         "description": "`timemachine` when set, enables Time Machine backups for this share."
        },
        "timemachine_quota": {
         "type": "integer",
         "_name_": "timemachine_quota",
         "title": "timemachine_quota",
         "default": 0
        },
        "recyclebin": {
         "type": "boolean",
         "_name_": "recyclebin",
         "title": "recyclebin",
         "default": false
        },
        "guestok": {
         "type": "boolean",
         "_name_": "guestok",
         "title": "guestok",
         "default": false,
         "description": "`guestok` when enabled, allows access to this share without a password."
        },
        "abe": {
         "type": "boolean",
         "_name_": "abe",
         "title": "abe",
         "default": false
        },
        "hostsallow": {
         "_name_": "hostsallow",
         "title": "hostsallow",
         "default": [],
         "type": "array",
         "items": {},
         "description": "`hostsallow` is a list of hostnames / IP addresses which have access to this share.\n`hostsdeny` is a list of hostnames / IP addresses which are not allowed access to this share. If a handful\nof hostnames are to be only allowed access, `hostsdeny` can be passed \"ALL\" which means that it will deny\naccess to ALL hostnames except for the ones which have been listed in `hostsallow`."
        },
        "hostsdeny": {
         "_name_": "hostsdeny",
         "title": "hostsdeny",
         "default": [],
         "type": "array",
         "items": {},
         "description": "`hostsdeny` is a list of hostnames / IP addresses which are not allowed access to this share. If a handful\nof hostnames are to be only allowed access, `hostsdeny` can be passed \"ALL\" which means that it will deny\naccess to ALL hostnames except for the ones which have been listed in `hostsallow`."
        },
        "aapl_name_mangling": {
         "type": "boolean",
         "_name_": "aapl_name_mangling",
         "title": "aapl_name_mangling",
         "default": false
        },
        "acl": {
         "type": "boolean",
         "_name_": "acl",
         "title": "acl",
         "default": true,
         "description": "`acl` enables support for storing the SMB Security Descriptor as a Filesystem ACL."
        },
        "durablehandle": {
         "type": "boolean",
         "_name_": "durablehandle",
         "title": "durablehandle",
         "default": true
        },
        "shadowcopy": {
         "type": "boolean",
         "_name_": "shadowcopy",
         "title": "shadowcopy",
         "default": true,
         "description": "`shadowcopy` enables support for the volume shadow copy service."
        },
        "streams": {
         "type": "boolean",
         "_name_": "streams",
         "title": "streams",
         "default": true,
         "description": "`streams` enables support for storing alternate datastreams as filesystem extended attributes."
        },
        "fsrvp": {
         "type": "boolean",
         "_name_": "fsrvp",
         "title": "fsrvp",
         "default": false,
         "description": "`fsrvp` enables support for the filesystem remote VSS protocol. This allows clients to create\nZFS snapshots through RPC."
        },
        "auxsmbconf": {
         "_name_": "auxsmbconf",
         "title": "auxsmbconf",
         "default": "",
         "type": "string"
        },
        "enabled": {
         "type": "boolean",
         "_name_": "enabled",
         "title": "enabled",
         "default": true
        },
        "afp": {
         "type": "boolean",
         "_name_": "afp",
         "title": "afp",
         "default": false
        },
        "audit": {
         "type": "object",
         "properties": {
          "enable": {
           "type": "boolean",
           "_name_": "enable",
           "title": "enable"
          },
          "watch_list": {
           "_name_": "watch_list",
           "title": "watch_list",
           "type": "array",
           "items": {}
          },
          "ignore_list": {
           "_name_": "ignore_list",
           "title": "ignore_list",
           "type": "array",
           "items": {}
          }
         },
         "additionalProperties": false,
         "_name_": "audit",
         "title": "audit",
         "default": {},
         "_attrs_order_": [
          "enable",
          "watch_list",
          "ignore_list"
         ],
         "description": "`audit` object contains configuration parameters related to SMB share auditing. It contains the\nfollowing keys: `enable`, `watch_list` and `ignore_list`. Enable is boolean and controls whether\naudit messages will be generated for the share. `watch_list` is a list of groups for which to\ngenerate audit messages (defaults to all groups). `ignore_list` is a list of groups to ignore\nwhen auditing. If conflict arises between watch_list and ignore_list (based on user group\nmembershipt), then watch_list will take precedence and ops will be audited.\nNOTE: auditing may not be enabled if SMB1 support is enabled for the server."
        }
       },
       "additionalProperties": false,
       "_name_": "sharingsmb_create",
       "title": "sharingsmb_create",
       "default": {},
       "_attrs_order_": [
        "purpose",
        "path",
        "path_suffix",
        "home",
        "name",
        "comment",
        "ro",
        "browsable",
        "timemachine",
        "timemachine_quota",
        "recyclebin",
        "guestok",
        "abe",
        "hostsallow",
        "hostsdeny",
        "aapl_name_mangling",
        "acl",
        "durablehandle",
        "shadowcopy",
        "streams",
        "fsrvp",
        "auxsmbconf",
        "enabled",
        "afp",
        "audit"
       ]
      },
      "return_schema_of_sharing_smb_create": {
       "type": "object",
       "properties": {},
       "additionalProperties": true,
       "_name_": "sharing_smb_create_returns",
       "title": "sharing_smb_create_returns",
       "default": {},
       "_attrs_order_": []
      },
      "return_schema_of_sharing_smb_delete": {
       "type": "boolean",
       "_name_": "deleted",
       "title": "deleted",
       "description": "Will return `true` if `id` is deleted successfully"
      },
      "sharing_smb_update": {
       "type": "object",
       "properties": {
        "purpose": {
         "_name_": "purpose",
         "title": "purpose",
         "default": "DEFAULT_SHARE",
         "type": "string",
         "enum": [
          "NO_PRESET",
          "DEFAULT_SHARE",
          "TIMEMACHINE",
          "ENHANCED_TIMEMACHINE",
          "MULTI_PROTOCOL_NFS",
          "PRIVATE_DATASETS",
          "WORM_DROPBOX"
         ],
         "description": "`purpose` applies common configuration presets depending on intended purpose."
        },
        "path": {
         "_name_": "path",
         "title": "path",
         "type": "string",
         "description": "`path` path to export over the SMB protocol."
        },
        "path_suffix": {
         "_name_": "path_suffix",
         "title": "path_suffix",
         "default": "",
         "type": "string"
        },
        "home": {
         "type": "boolean",
         "_name_": "home",
         "title": "home",
         "default": false
        },
        "name": {
         "_name_": "name",
         "title": "name",
         "type": "string"
        },
        "comment": {
         "_name_": "comment",
         "title": "comment",
         "default": "",
         "type": "string"
        },
        "ro": {
         "type": "boolean",
         "_name_": "ro",
         "title": "ro",
         "default": false,
         "description": "`ro` when enabled, prohibits write access to the share."
        },
        "browsable": {
         "type": "boolean",
         "_name_": "browsable",
         "title": "browsable",
         "default": true
        },
        "timemachine": {
         "type": "boolean",
         "_name_": "timemachine",
         "title": "timemachine",
         "default": false,
         "description": "`timemachine` when set, enables Time Machine backups for this share."
        },
        "timemachine_quota": {
         "type": "integer",
         "_name_": "timemachine_quota",
         "title": "timemachine_quota",
         "default": 0
        },
        "recyclebin": {
         "type": "boolean",
         "_name_": "recyclebin",
         "title": "recyclebin",
         "default": false
        },
        "guestok": {
         "type": "boolean",
         "_name_": "guestok",
         "title": "guestok",
         "default": false,
         "description": "`guestok` when enabled, allows access to this share without a password."
        },
        "abe": {
         "type": "boolean",
         "_name_": "abe",
         "title": "abe",
         "default": false
        },
        "hostsallow": {
         "_name_": "hostsallow",
         "title": "hostsallow",
         "default": [],
         "type": "array",
         "items": {},
         "description": "`hostsallow` is a list of hostnames / IP addresses which have access to this share.\n`hostsdeny` is a list of hostnames / IP addresses which are not allowed access to this share. If a handful\nof hostnames are to be only allowed access, `hostsdeny` can be passed \"ALL\" which means that it will deny\naccess to ALL hostnames except for the ones which have been listed in `hostsallow`."
        },
        "hostsdeny": {
         "_name_": "hostsdeny",
         "title": "hostsdeny",
         "default": [],
         "type": "array",
         "items": {},
         "description": "`hostsdeny` is a list of hostnames / IP addresses which are not allowed access to this share. If a handful\nof hostnames are to be only allowed access, `hostsdeny` can be passed \"ALL\" which means that it will deny\naccess to ALL hostnames except for the ones which have been listed in `hostsallow`."
        },
        "aapl_name_mangling": {
         "type": "boolean",
         "_name_": "aapl_name_mangling",
         "title": "aapl_name_mangling",
         "default": false
        },
        "acl": {
         "type": "boolean",
         "_name_": "acl",
         "title": "acl",
         "default": true,
         "description": "`acl` enables support for storing the SMB Security Descriptor as a Filesystem ACL."
        },
        "durablehandle": {
         "type": "boolean",
         "_name_": "durablehandle",
         "title": "durablehandle",
         "default": true
        },
        "shadowcopy": {
         "type": "boolean",
         "_name_": "shadowcopy",
         "title": "shadowcopy",
         "default": true,
         "description": "`shadowcopy` enables support for the volume shadow copy service."
        },
        "streams": {
         "type": "boolean",
         "_name_": "streams",
         "title": "streams",
         "default": true,
         "description": "`streams` enables support for storing alternate datastreams as filesystem extended attributes."
        },
        "fsrvp": {
         "type": "boolean",
         "_name_": "fsrvp",
         "title": "fsrvp",
         "default": false,
         "description": "`fsrvp` enables support for the filesystem remote VSS protocol. This allows clients to create\nZFS snapshots through RPC."
        },
        "auxsmbconf": {
         "_name_": "auxsmbconf",
         "title": "auxsmbconf",
         "default": "",
         "type": "string"
        },
        "enabled": {
         "type": "boolean",
         "_name_": "enabled",
         "title": "enabled",
         "default": true
        },
        "afp": {
         "type": "boolean",
         "_name_": "afp",
         "title": "afp",
         "default": false
        },
        "audit": {
         "type": "object",
         "properties": {
          "enable": {
           "type": "boolean",
           "_name_": "enable",
           "title": "enable"
          },
          "watch_list": {
           "_name_": "watch_list",
           "title": "watch_list",
           "type": "array",
           "items": {}
          },
          "ignore_list": {
           "_name_": "ignore_list",
           "title": "ignore_list",
           "type": "array",
           "items": {}
          }
         },
         "additionalProperties": false,
         "_name_": "audit",
         "title": "audit",
         "default": {},
         "_attrs_order_": [
          "enable",
          "watch_list",
          "ignore_list"
         ],
         "description": "`audit` object contains configuration parameters related to SMB share auditing. It contains the\nfollowing keys: `enable`, `watch_list` and `ignore_list`. Enable is boolean and controls whether\naudit messages will be generated for the share. `watch_list` is a list of groups for which to\ngenerate audit messages (defaults to all groups). `ignore_list` is a list of groups to ignore\nwhen auditing. If conflict arises between watch_list and ignore_list (based on user group\nmembershipt), then watch_list will take precedence and ops will be audited.\nNOTE: auditing may not be enabled if SMB1 support is enabled for the server."
        }
       },
       "additionalProperties": false,
       "_name_": "sharingsmb_update",
       "title": "sharingsmb_update",
       "default": {},
       "_attrs_order_": [
        "purpose",
        "path",
        "path_suffix",
        "home",
        "name",
        "comment",
        "ro",
        "browsable",
        "timemachine",
        "timemachine_quota",
        "recyclebin",
        "guestok",
        "abe",
        "hostsallow",
        "hostsdeny",
        "aapl_name_mangling",
        "acl",
        "durablehandle",
        "shadowcopy",
        "streams",
        "fsrvp",
        "auxsmbconf",
        "enabled",
        "afp",
        "audit"
       ]
      },
      "return_schema_of_sharing_smb_update": {
       "type": "object",
       "properties": {},
       "additionalProperties": true,
       "_name_": "sharing_smb_update_returns",
       "title": "sharing_smb_update_returns",
       "default": {},
       "_attrs_order_": []
      },
      "sharing_smb_get_instance_0": {
       "anyOf": [
        {
         "type": "string"
        },
        {
         "type": "integer"
        },
        {
         "type": "boolean"
        },
        {
         "type": "object"
        },
        {
         "type": "array"
        }
       ],
       "nullable": false,
       "_name_": "id",
       "title": "id",
       "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised."
      },
      "sharing_smb_get_instance_1": {
       "type": "object",
       "properties": {
        "relationships": {
         "type": "boolean",
         "_name_": "relationships",
         "title": "relationships",
         "default": true
        },
        "extend": {
         "_name_": "extend",
         "title": "extend",
         "default": null,
         "type": "string",
         "nullable": true
        },
        "extend_context": {
         "_name_": "extend_context",
         "title": "extend_context",
         "default": null,
         "type": "string",
         "nullable": true
        },
        "prefix": {
         "_name_": "prefix",
         "title": "prefix",
         "default": null,
         "type": "string",
         "nullable": true
        },
        "extra": {
         "type": "object",
         "properties": {},
         "additionalProperties": true,
         "_name_": "extra",
         "title": "extra",
         "default": {},
         "_attrs_order_": []
        },
        "order_by": {
         "_name_": "order_by",
         "title": "order_by",
         "default": [],
         "type": "array",
         "items": {}
        },
        "select": {
         "_name_": "select",
         "title": "select",
         "default": [],
         "type": "array",
         "items": {}
        },
        "count": {
         "type": "boolean",
         "_name_": "count",
         "title": "count",
         "default": false
        },
        "get": {
         "type": "boolean",
         "_name_": "get",
         "title": "get",
         "default": false
        },
        "offset": {
         "type": "integer",
         "_name_": "offset",
         "title": "offset",
         "default": 0
        },
        "limit": {
         "type": "integer",
         "_name_": "limit",
         "title": "limit",
         "default": 0
        },
        "force_sql_filters": {
         "type": "boolean",
         "_name_": "force_sql_filters",
         "title": "force_sql_filters",
         "default": true
        }
       },
       "additionalProperties": false,
       "_name_": "query-options-get_instance",
       "title": "query-options-get_instance",
       "default": {},
       "_attrs_order_": [
        "relationships",
        "extend",
        "extend_context",
        "prefix",
        "extra",
        "order_by",
        "select",
        "count",
        "get",
        "offset",
        "limit",
        "force_sql_filters"
       ]
      },
      "sharing_smb_get_instance": {
       "type": "object",
       "properties": {
        "id": {
         "$ref": "#/components/schemas/sharing_smb_get_instance_0"
        },
        "query-options-get_instance": {
         "$ref": "#/components/schemas/sharing_smb_get_instance_1"
        }
       }
      },
      "return_schema_of_sharing_smb_get_instance": {
       "type": "object",
       "properties": {},
       "additionalProperties": true,
       "_name_": "sharing_smb_entry",
       "title": "sharing_smb_entry",
       "default": {},
       "_attrs_order_": []
      },
      "sharing_smb_getacl": {
       "additionalProperties": false,
       "properties": {
        "share_name": {
         "minLength": 1,
         "title": "share_name",
         "type": "string",
         "_name_": "share_name"
        }
       },
       "required": [
        "share_name"
       ],
       "title": "smb_getacl",
       "type": "object",
       "_name_": "smb_getacl",
       "_attrs_order_": [
        "share_name"
       ]
      },
      "return_schema_of_sharing_smb_getacl": {
       "additionalProperties": false,
       "properties": {
        "share_name": {
         "description": "Name of the SMB share. ",
         "minLength": 1,
         "title": "share_name",
         "type": "string",
         "_name_": "share_name"
        },
        "share_acl": {
         "default": [
          {
           "ae_perm": "FULL",
           "ae_type": "ALLOWED",
           "ae_who_sid": "S-1-1-0",
           "ae_who_id": null,
           "ae_who_str": null
          }
         ],
         "description": "List of SMB share ACL entries ",
         "items": {},
         "title": "share_acl",
         "type": "array",
         "_name_": "share_acl"
        }
       },
       "required": [
        "share_name"
       ],
       "title": "result",
       "type": "object",
       "_name_": "result",
       "_attrs_order_": [
        "share_name",
        "share_acl"
       ]
      },
      "return_schema_of_sharing_smb_presets": {
       "additionalProperties": {
        "type": "object"
       },
       "title": "result",
       "type": "object",
       "_name_": "result"
      },
      "sharing_smb_setacl": {
       "additionalProperties": false,
       "properties": {
        "share_name": {
         "description": "Name of the SMB share. ",
         "minLength": 1,
         "title": "share_name",
         "type": "string",
         "_name_": "share_name"
        },
        "share_acl": {
         "default": [
          {
           "ae_perm": "FULL",
           "ae_type": "ALLOWED",
           "ae_who_sid": "S-1-1-0",
           "ae_who_id": null,
           "ae_who_str": null
          }
         ],
         "description": "List of SMB share ACL entries ",
         "items": {},
         "title": "share_acl",
         "type": "array",
         "_name_": "share_acl"
        }
       },
       "required": [
        "share_name"
       ],
       "title": "smb_setacl",
       "type": "object",
       "_name_": "smb_setacl",
       "_attrs_order_": [
        "share_name",
        "share_acl"
       ]
      },
      "return_schema_of_sharing_smb_setacl": {
       "additionalProperties": false,
       "properties": {
        "share_name": {
         "description": "Name of the SMB share. ",
         "minLength": 1,
         "title": "share_name",
         "type": "string",
         "_name_": "share_name"
        },
        "share_acl": {
         "default": [
          {
           "ae_perm": "FULL",
           "ae_type": "ALLOWED",
           "ae_who_sid": "S-1-1-0",
           "ae_who_id": null,
           "ae_who_str": null
          }
         ],
         "description": "List of SMB share ACL entries ",
         "items": {},
         "title": "share_acl",
         "type": "array",
         "_name_": "share_acl"
        }
       },
       "required": [
        "share_name"
       ],
       "title": "result",
       "type": "object",
       "_name_": "result",
       "_attrs_order_": [
        "share_name",
        "share_acl"
       ]
      },
      "return_schema_of_smart_config": {
       "type": "object",
       "properties": {
        "interval": {
         "type": "integer",
         "_name_": "interval",
         "title": "interval"
        },
        "id": {
         "type": "integer",
         "_name_": "id",
         "title": "id"
        },
        "powermode": {
         "_name_": "powermode",
         "title": "powermode",
         "type": "string",
         "enum": [
          "NEVER",
          "SLEEP",
          "STANDBY",
          "IDLE"
         ]
        },
        "difference": {
         "type": "integer",
         "_name_": "difference",
         "title": "difference"
        },
        "informational": {
         "type": "integer",
         "_name_": "informational",
         "title": "informational"
        },
        "critical": {
         "type": "integer",
         "_name_": "critical",
         "title": "critical"
        }
       },
       "additionalProperties": false,
       "_name_": "smart_entry",
       "title": "smart_entry",
       "default": {},
       "_attrs_order_": [
        "interval",
        "id",
        "powermode",
        "difference",
        "informational",
        "critical"
       ]
      },
      "smart_update": {
       "type": "object",
       "properties": {
        "interval": {
         "type": "integer",
         "_name_": "interval",
         "title": "interval",
         "description": "`interval` is an integer value in minutes which defines how often smartd activates to check if any tests\nare configured to run."
        },
        "powermode": {
         "_name_": "powermode",
         "title": "powermode",
         "type": "string",
         "enum": [
          "NEVER",
          "SLEEP",
          "STANDBY",
          "IDLE"
         ]
        },
        "difference": {
         "type": "integer",
         "_name_": "difference",
         "title": "difference"
        },
        "informational": {
         "type": "integer",
         "_name_": "informational",
         "title": "informational"
        },
        "critical": {
         "type": "integer",
         "_name_": "critical",
         "title": "critical"
        }
       },
       "additionalProperties": false,
       "_name_": "smart_update",
       "title": "smart_update",
       "default": {},
       "_attrs_order_": [
        "interval",
        "powermode",
        "difference",
        "informational",
        "critical"
       ]
      },
      "return_schema_of_smart_update": {
       "type": "object",
       "properties": {
        "interval": {
         "type": "integer",
         "_name_": "interval",
         "title": "interval",
         "description": "`interval` is an integer value in minutes which defines how often smartd activates to check if any tests\nare configured to run."
        },
        "id": {
         "type": "integer",
         "_name_": "id",
         "title": "id"
        },
        "powermode": {
         "_name_": "powermode",
         "title": "powermode",
         "type": "string",
         "enum": [
          "NEVER",
          "SLEEP",
          "STANDBY",
          "IDLE"
         ]
        },
        "difference": {
         "type": "integer",
         "_name_": "difference",
         "title": "difference"
        },
        "informational": {
         "type": "integer",
         "_name_": "informational",
         "title": "informational"
        },
        "critical": {
         "type": "integer",
         "_name_": "critical",
         "title": "critical"
        }
       },
       "additionalProperties": false,
       "_name_": "smart_update_returns",
       "title": "smart_update_returns",
       "default": {},
       "_attrs_order_": [
        "interval",
        "id",
        "powermode",
        "difference",
        "informational",
        "critical"
       ]
      },
      "return_schema_of_smart_test_query": {
       "anyOf": [
        {
         "_name_": "query_result",
         "title": "query_result",
         "default": [],
         "_required_": false,
         "type": "array",
         "items": [
          {
           "type": "object",
           "properties": {
            "schedule": {
             "type": "object",
             "properties": {
              "hour": {
               "_name_": "hour",
               "title": "hour",
               "default": "*",
               "_required_": false,
               "type": "string"
              },
              "dom": {
               "_name_": "dom",
               "title": "dom",
               "default": "*",
               "_required_": false,
               "type": "string"
              },
              "month": {
               "_name_": "month",
               "title": "month",
               "default": "*",
               "_required_": false,
               "type": "string"
              },
              "dow": {
               "_name_": "dow",
               "title": "dow",
               "default": "*",
               "_required_": false,
               "type": "string"
              }
             },
             "additionalProperties": false,
             "_name_": "schedule",
             "title": "schedule",
             "default": {},
             "_required_": false,
             "_attrs_order_": [
              "hour",
              "dom",
              "month",
              "dow"
             ]
            },
            "desc": {
             "_name_": "desc",
             "title": "desc",
             "_required_": false,
             "type": "string"
            },
            "all_disks": {
             "type": "boolean",
             "_name_": "all_disks",
             "title": "all_disks",
             "default": false,
             "_required_": false
            },
            "disks": {
             "_name_": "disks",
             "title": "disks",
             "default": [],
             "_required_": false,
             "type": "array",
             "items": [
              {
               "_name_": "disk",
               "title": "disk",
               "_required_": false,
               "type": "string"
              }
             ]
            },
            "type": {
             "_name_": "type",
             "title": "type",
             "_required_": true,
             "type": "string",
             "enum": [
              "LONG",
              "SHORT",
              "CONVEYANCE",
              "OFFLINE"
             ]
            },
            "id": {
             "type": "integer",
             "_name_": "id",
             "title": "id",
             "_required_": false
            }
           },
           "additionalProperties": false,
           "_name_": "smart_task_entry",
           "title": "smart_task_entry",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "schedule",
            "desc",
            "all_disks",
            "disks",
            "type",
            "id"
           ]
          }
         ]
        },
        {
         "type": "object",
         "properties": {
          "schedule": {
           "type": "object",
           "properties": {
            "hour": {
             "_name_": "hour",
             "title": "hour",
             "default": "*",
             "_required_": false,
             "type": "string"
            },
            "dom": {
             "_name_": "dom",
             "title": "dom",
             "default": "*",
             "_required_": false,
             "type": "string"
            },
            "month": {
             "_name_": "month",
             "title": "month",
             "default": "*",
             "_required_": false,
             "type": "string"
            },
            "dow": {
             "_name_": "dow",
             "title": "dow",
             "default": "*",
             "_required_": false,
             "type": "string"
            }
           },
           "additionalProperties": false,
           "_name_": "schedule",
           "title": "schedule",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "hour",
            "dom",
            "month",
            "dow"
           ]
          },
          "desc": {
           "_name_": "desc",
           "title": "desc",
           "_required_": false,
           "type": "string"
          },
          "all_disks": {
           "type": "boolean",
           "_name_": "all_disks",
           "title": "all_disks",
           "default": false,
           "_required_": false
          },
          "disks": {
           "_name_": "disks",
           "title": "disks",
           "default": [],
           "_required_": false,
           "type": "array",
           "items": [
            {
             "_name_": "disk",
             "title": "disk",
             "_required_": false,
             "type": "string"
            }
           ]
          },
          "type": {
           "_name_": "type",
           "title": "type",
           "_required_": true,
           "type": "string",
           "enum": [
            "LONG",
            "SHORT",
            "CONVEYANCE",
            "OFFLINE"
           ]
          },
          "id": {
           "type": "integer",
           "_name_": "id",
           "title": "id",
           "_required_": false
          }
         },
         "additionalProperties": false,
         "_name_": "smart_task_entry",
         "title": "smart_task_entry",
         "default": {},
         "_required_": false,
         "_attrs_order_": [
          "schedule",
          "desc",
          "all_disks",
          "disks",
          "type",
          "id"
         ]
        },
        {
         "type": "integer",
         "_name_": "count",
         "title": "count",
         "_required_": false
        },
        {
         "type": "object",
         "properties": {
          "schedule": {
           "type": "object",
           "properties": {
            "hour": {
             "_name_": "hour",
             "title": "hour",
             "default": "*",
             "_required_": false,
             "type": "string"
            },
            "dom": {
             "_name_": "dom",
             "title": "dom",
             "default": "*",
             "_required_": false,
             "type": "string"
            },
            "month": {
             "_name_": "month",
             "title": "month",
             "default": "*",
             "_required_": false,
             "type": "string"
            },
            "dow": {
             "_name_": "dow",
             "title": "dow",
             "default": "*",
             "_required_": false,
             "type": "string"
            }
           },
           "additionalProperties": false,
           "_name_": "schedule",
           "title": "schedule",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "hour",
            "dom",
            "month",
            "dow"
           ]
          },
          "desc": {
           "_name_": "desc",
           "title": "desc",
           "_required_": false,
           "type": "string"
          },
          "all_disks": {
           "type": "boolean",
           "_name_": "all_disks",
           "title": "all_disks",
           "default": false,
           "_required_": false
          },
          "disks": {
           "_name_": "disks",
           "title": "disks",
           "default": [],
           "_required_": false,
           "type": "array",
           "items": [
            {
             "_name_": "disk",
             "title": "disk",
             "_required_": false,
             "type": "string"
            }
           ]
          },
          "type": {
           "_name_": "type",
           "title": "type",
           "_required_": true,
           "type": "string",
           "enum": [
            "LONG",
            "SHORT",
            "CONVEYANCE",
            "OFFLINE"
           ]
          },
          "id": {
           "type": "integer",
           "_name_": "id",
           "title": "id",
           "_required_": false
          }
         },
         "additionalProperties": false,
         "_name_": "smart_task_entry",
         "title": "smart_task_entry",
         "default": {},
         "_required_": false,
         "_attrs_order_": [
          "schedule",
          "desc",
          "all_disks",
          "disks",
          "type",
          "id"
         ]
        }
       ],
       "nullable": false,
       "_name_": "query_result",
       "description": null
      },
      "smart_test_create": {
       "type": "object",
       "properties": {
        "schedule": {
         "type": "object",
         "properties": {
          "hour": {
           "_name_": "hour",
           "title": "hour",
           "default": "*",
           "type": "string"
          },
          "dom": {
           "_name_": "dom",
           "title": "dom",
           "default": "*",
           "type": "string"
          },
          "month": {
           "_name_": "month",
           "title": "month",
           "default": "*",
           "type": "string"
          },
          "dow": {
           "_name_": "dow",
           "title": "dow",
           "default": "*",
           "type": "string"
          }
         },
         "additionalProperties": false,
         "_name_": "schedule",
         "title": "schedule",
         "default": {},
         "_attrs_order_": [
          "hour",
          "dom",
          "month",
          "dow"
         ]
        },
        "desc": {
         "_name_": "desc",
         "title": "desc",
         "type": "string"
        },
        "all_disks": {
         "type": "boolean",
         "_name_": "all_disks",
         "title": "all_disks",
         "default": false,
         "description": "`all_disks` when enabled sets the task to cover all disks in which case `disks` is not required."
        },
        "disks": {
         "_name_": "disks",
         "title": "disks",
         "default": [],
         "type": "array",
         "items": {
          "_name_": "disk",
          "title": "disk",
          "_required_": false,
          "type": "string"
         },
         "description": "`disks` is a list of valid disks which should be monitored in this task.\n`all_disks` when enabled sets the task to cover all disks in which case `disks` is not required."
        },
        "type": {
         "_name_": "type",
         "title": "type",
         "type": "string",
         "enum": [
          "LONG",
          "SHORT",
          "CONVEYANCE",
          "OFFLINE"
         ],
         "description": "`type` is specified to represent the type of SMART test to be executed."
        }
       },
       "additionalProperties": false,
       "_name_": "smart_task_create",
       "title": "smart_task_create",
       "default": {},
       "_attrs_order_": [
        "schedule",
        "desc",
        "all_disks",
        "disks",
        "type"
       ]
      },
      "return_schema_of_smart_test_create": {
       "type": "object",
       "properties": {
        "schedule": {
         "type": "object",
         "properties": {
          "hour": {
           "_name_": "hour",
           "title": "hour",
           "default": "*",
           "type": "string"
          },
          "dom": {
           "_name_": "dom",
           "title": "dom",
           "default": "*",
           "type": "string"
          },
          "month": {
           "_name_": "month",
           "title": "month",
           "default": "*",
           "type": "string"
          },
          "dow": {
           "_name_": "dow",
           "title": "dow",
           "default": "*",
           "type": "string"
          }
         },
         "additionalProperties": false,
         "_name_": "schedule",
         "title": "schedule",
         "default": {},
         "_attrs_order_": [
          "hour",
          "dom",
          "month",
          "dow"
         ]
        },
        "desc": {
         "_name_": "desc",
         "title": "desc",
         "type": "string"
        },
        "all_disks": {
         "type": "boolean",
         "_name_": "all_disks",
         "title": "all_disks",
         "default": false,
         "description": "`all_disks` when enabled sets the task to cover all disks in which case `disks` is not required."
        },
        "disks": {
         "_name_": "disks",
         "title": "disks",
         "default": [],
         "type": "array",
         "items": {
          "_name_": "disk",
          "title": "disk",
          "_required_": false,
          "type": "string"
         },
         "description": "`disks` is a list of valid disks which should be monitored in this task.\n`all_disks` when enabled sets the task to cover all disks in which case `disks` is not required."
        },
        "type": {
         "_name_": "type",
         "title": "type",
         "type": "string",
         "enum": [
          "LONG",
          "SHORT",
          "CONVEYANCE",
          "OFFLINE"
         ],
         "description": "`type` is specified to represent the type of SMART test to be executed."
        },
        "id": {
         "type": "integer",
         "_name_": "id",
         "title": "id"
        }
       },
       "additionalProperties": false,
       "_name_": "smart_test_create_returns",
       "title": "smart_test_create_returns",
       "default": {},
       "_attrs_order_": [
        "schedule",
        "desc",
        "all_disks",
        "disks",
        "type",
        "id"
       ]
      },
      "return_schema_of_smart_test_delete": {
       "type": "boolean",
       "_name_": "deleted",
       "title": "deleted",
       "description": "Will return `true` if `id` is deleted successfully"
      },
      "smart_test_update": {
       "type": "object",
       "properties": {
        "schedule": {
         "type": "object",
         "properties": {
          "hour": {
           "_name_": "hour",
           "title": "hour",
           "default": "*",
           "type": "string"
          },
          "dom": {
           "_name_": "dom",
           "title": "dom",
           "default": "*",
           "type": "string"
          },
          "month": {
           "_name_": "month",
           "title": "month",
           "default": "*",
           "type": "string"
          },
          "dow": {
           "_name_": "dow",
           "title": "dow",
           "default": "*",
           "type": "string"
          }
         },
         "additionalProperties": false,
         "_name_": "schedule",
         "title": "schedule",
         "default": {},
         "_attrs_order_": [
          "hour",
          "dom",
          "month",
          "dow"
         ]
        },
        "desc": {
         "_name_": "desc",
         "title": "desc",
         "type": "string"
        },
        "all_disks": {
         "type": "boolean",
         "_name_": "all_disks",
         "title": "all_disks",
         "default": false,
         "description": "`all_disks` when enabled sets the task to cover all disks in which case `disks` is not required."
        },
        "disks": {
         "_name_": "disks",
         "title": "disks",
         "default": [],
         "type": "array",
         "items": {
          "_name_": "disk",
          "title": "disk",
          "_required_": false,
          "type": "string"
         },
         "description": "`disks` is a list of valid disks which should be monitored in this task.\n`all_disks` when enabled sets the task to cover all disks in which case `disks` is not required."
        },
        "type": {
         "_name_": "type",
         "title": "type",
         "type": "string",
         "enum": [
          "LONG",
          "SHORT",
          "CONVEYANCE",
          "OFFLINE"
         ],
         "description": "`type` is specified to represent the type of SMART test to be executed."
        }
       },
       "additionalProperties": false,
       "_name_": "smart_test_update",
       "title": "smart_test_update",
       "default": {},
       "_attrs_order_": [
        "schedule",
        "desc",
        "all_disks",
        "disks",
        "type"
       ]
      },
      "return_schema_of_smart_test_update": {
       "type": "object",
       "properties": {
        "schedule": {
         "type": "object",
         "properties": {
          "hour": {
           "_name_": "hour",
           "title": "hour",
           "default": "*",
           "type": "string"
          },
          "dom": {
           "_name_": "dom",
           "title": "dom",
           "default": "*",
           "type": "string"
          },
          "month": {
           "_name_": "month",
           "title": "month",
           "default": "*",
           "type": "string"
          },
          "dow": {
           "_name_": "dow",
           "title": "dow",
           "default": "*",
           "type": "string"
          }
         },
         "additionalProperties": false,
         "_name_": "schedule",
         "title": "schedule",
         "default": {},
         "_attrs_order_": [
          "hour",
          "dom",
          "month",
          "dow"
         ]
        },
        "desc": {
         "_name_": "desc",
         "title": "desc",
         "type": "string"
        },
        "all_disks": {
         "type": "boolean",
         "_name_": "all_disks",
         "title": "all_disks",
         "default": false,
         "description": "`all_disks` when enabled sets the task to cover all disks in which case `disks` is not required."
        },
        "disks": {
         "_name_": "disks",
         "title": "disks",
         "default": [],
         "type": "array",
         "items": {
          "_name_": "disk",
          "title": "disk",
          "_required_": false,
          "type": "string"
         },
         "description": "`disks` is a list of valid disks which should be monitored in this task.\n`all_disks` when enabled sets the task to cover all disks in which case `disks` is not required."
        },
        "type": {
         "_name_": "type",
         "title": "type",
         "type": "string",
         "enum": [
          "LONG",
          "SHORT",
          "CONVEYANCE",
          "OFFLINE"
         ],
         "description": "`type` is specified to represent the type of SMART test to be executed."
        },
        "id": {
         "type": "integer",
         "_name_": "id",
         "title": "id",
         "description": "Update SMART Test Task of `id`.\nCreate a SMART Test Task."
        }
       },
       "additionalProperties": false,
       "_name_": "smart_test_update_returns",
       "title": "smart_test_update_returns",
       "default": {},
       "_attrs_order_": [
        "schedule",
        "desc",
        "all_disks",
        "disks",
        "type",
        "id"
       ]
      },
      "smart_test_abort": {
       "_name_": "disk",
       "title": "disk",
       "type": "string"
      },
      "smart_test_disk_choices": {
       "type": "boolean",
       "_name_": "full_disk",
       "title": "full_disk",
       "default": false
      },
      "smart_test_get_instance_0": {
       "anyOf": [
        {
         "type": "string"
        },
        {
         "type": "integer"
        },
        {
         "type": "boolean"
        },
        {
         "type": "object"
        },
        {
         "type": "array"
        }
       ],
       "nullable": false,
       "_name_": "id",
       "title": "id",
       "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised."
      },
      "smart_test_get_instance_1": {
       "type": "object",
       "properties": {
        "relationships": {
         "type": "boolean",
         "_name_": "relationships",
         "title": "relationships",
         "default": true
        },
        "extend": {
         "_name_": "extend",
         "title": "extend",
         "default": null,
         "type": "string",
         "nullable": true
        },
        "extend_context": {
         "_name_": "extend_context",
         "title": "extend_context",
         "default": null,
         "type": "string",
         "nullable": true
        },
        "prefix": {
         "_name_": "prefix",
         "title": "prefix",
         "default": null,
         "type": "string",
         "nullable": true
        },
        "extra": {
         "type": "object",
         "properties": {},
         "additionalProperties": true,
         "_name_": "extra",
         "title": "extra",
         "default": {},
         "_attrs_order_": []
        },
        "order_by": {
         "_name_": "order_by",
         "title": "order_by",
         "default": [],
         "type": "array",
         "items": {}
        },
        "select": {
         "_name_": "select",
         "title": "select",
         "default": [],
         "type": "array",
         "items": {}
        },
        "count": {
         "type": "boolean",
         "_name_": "count",
         "title": "count",
         "default": false
        },
        "get": {
         "type": "boolean",
         "_name_": "get",
         "title": "get",
         "default": false
        },
        "offset": {
         "type": "integer",
         "_name_": "offset",
         "title": "offset",
         "default": 0
        },
        "limit": {
         "type": "integer",
         "_name_": "limit",
         "title": "limit",
         "default": 0
        },
        "force_sql_filters": {
         "type": "boolean",
         "_name_": "force_sql_filters",
         "title": "force_sql_filters",
         "default": true
        }
       },
       "additionalProperties": false,
       "_name_": "query-options-get_instance",
       "title": "query-options-get_instance",
       "default": {},
       "_attrs_order_": [
        "relationships",
        "extend",
        "extend_context",
        "prefix",
        "extra",
        "order_by",
        "select",
        "count",
        "get",
        "offset",
        "limit",
        "force_sql_filters"
       ]
      },
      "smart_test_get_instance": {
       "type": "object",
       "properties": {
        "id": {
         "$ref": "#/components/schemas/smart_test_get_instance_0"
        },
        "query-options-get_instance": {
         "$ref": "#/components/schemas/smart_test_get_instance_1"
        }
       }
      },
      "return_schema_of_smart_test_get_instance": {
       "type": "object",
       "properties": {
        "schedule": {
         "type": "object",
         "properties": {
          "hour": {
           "_name_": "hour",
           "title": "hour",
           "default": "*",
           "type": "string"
          },
          "dom": {
           "_name_": "dom",
           "title": "dom",
           "default": "*",
           "type": "string"
          },
          "month": {
           "_name_": "month",
           "title": "month",
           "default": "*",
           "type": "string"
          },
          "dow": {
           "_name_": "dow",
           "title": "dow",
           "default": "*",
           "type": "string"
          }
         },
         "additionalProperties": false,
         "_name_": "schedule",
         "title": "schedule",
         "default": {},
         "_attrs_order_": [
          "hour",
          "dom",
          "month",
          "dow"
         ]
        },
        "desc": {
         "_name_": "desc",
         "title": "desc",
         "type": "string"
        },
        "all_disks": {
         "type": "boolean",
         "_name_": "all_disks",
         "title": "all_disks",
         "default": false
        },
        "disks": {
         "_name_": "disks",
         "title": "disks",
         "default": [],
         "type": "array",
         "items": {
          "_name_": "disk",
          "title": "disk",
          "_required_": false,
          "type": "string"
         }
        },
        "type": {
         "_name_": "type",
         "title": "type",
         "type": "string",
         "enum": [
          "LONG",
          "SHORT",
          "CONVEYANCE",
          "OFFLINE"
         ]
        },
        "id": {
         "type": "integer",
         "_name_": "id",
         "title": "id",
         "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised."
        }
       },
       "additionalProperties": false,
       "_name_": "smart_task_entry",
       "title": "smart_task_entry",
       "default": {},
       "_attrs_order_": [
        "schedule",
        "desc",
        "all_disks",
        "disks",
        "type",
        "id"
       ]
      },
      "smart_test_manual_test": {
       "_name_": "disks",
       "title": "disks",
       "default": [],
       "type": "array",
       "items": {
        "type": "object",
        "properties": {
         "identifier": {
          "_name_": "identifier",
          "title": "identifier",
          "_required_": true,
          "type": "string"
         },
         "mode": {
          "_name_": "mode",
          "title": "mode",
          "default": "BACKGROUND",
          "_required_": false,
          "type": "string",
          "enum": [
           "FOREGROUND",
           "BACKGROUND"
          ]
         },
         "type": {
          "_name_": "type",
          "title": "type",
          "_required_": true,
          "type": "string",
          "enum": [
           "LONG",
           "SHORT",
           "CONVEYANCE",
           "OFFLINE"
          ]
         }
        },
        "additionalProperties": false,
        "_name_": "disk_run",
        "title": "disk_run",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "identifier",
         "mode",
         "type"
        ]
       },
       "description": "Run manual SMART tests for `disks`."
      },
      "return_schema_of_smart_test_manual_test": {
       "_name_": "smart_manual_test",
       "title": "smart_manual_test",
       "default": [],
       "type": "array",
       "items": {
        "type": "object",
        "properties": {
         "disk": {
          "_name_": "disk",
          "title": "disk",
          "_required_": true,
          "type": "string"
         },
         "identifier": {
          "_name_": "identifier",
          "title": "identifier",
          "_required_": true,
          "type": "string"
         },
         "error": {
          "_name_": "error",
          "title": "error",
          "_required_": true,
          "type": [
           "string",
           "null"
          ]
         },
         "expected_result_time": {
          "_name_": "expected_result_time",
          "title": "expected_result_time",
          "_required_": false,
          "type": "string"
         },
         "job": {
          "type": "integer",
          "_name_": "job",
          "title": "job",
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "smart_manual_test_disk_response",
        "title": "smart_manual_test_disk_response",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "disk",
         "identifier",
         "error",
         "expected_result_time",
         "job"
        ]
       }
      },
      "smart_test_query_for_disk": {
       "_name_": "disk",
       "title": "disk",
       "type": "string"
      },
      "return_schema_of_smart_test_results": {
       "anyOf": [
        {
         "type": "integer",
         "_name_": "count",
         "title": "count",
         "_required_": false
        },
        {
         "type": "object",
         "properties": {
          "disk": {
           "_name_": "disk",
           "title": "disk",
           "_required_": true,
           "type": "string"
          },
          "tests": {
           "_name_": "tests",
           "title": "tests",
           "default": [],
           "_required_": false,
           "type": "array",
           "items": [
            {
             "type": "object",
             "properties": {
              "num": {
               "type": "integer",
               "_name_": "num",
               "title": "num",
               "_required_": true
              },
              "description": {
               "_name_": "description",
               "title": "description",
               "_required_": true,
               "type": "string"
              },
              "status": {
               "_name_": "status",
               "title": "status",
               "_required_": true,
               "type": "string"
              },
              "status_verbose": {
               "_name_": "status_verbose",
               "title": "status_verbose",
               "_required_": true,
               "type": "string"
              },
              "segment_number": {
               "type": [
                "integer",
                "null"
               ],
               "_name_": "segment_number",
               "title": "segment_number",
               "_required_": false
              },
              "remaining": {
               "type": "float",
               "_name_": "remaining",
               "title": "remaining",
               "_required_": false
              },
              "lifetime": {
               "type": [
                "integer",
                "null"
               ],
               "_name_": "lifetime",
               "title": "lifetime",
               "_required_": true
              },
              "lba_of_first_error": {
               "_name_": "lba_of_first_error",
               "title": "lba_of_first_error",
               "_required_": true,
               "type": [
                "string",
                "null"
               ]
              }
             },
             "additionalProperties": false,
             "_name_": "test_result",
             "title": "test_result",
             "default": {},
             "_required_": false,
             "_attrs_order_": [
              "num",
              "description",
              "status",
              "status_verbose",
              "segment_number",
              "remaining",
              "lifetime",
              "lba_of_first_error"
             ]
            }
           ]
          },
          "current_test": {
           "type": "object",
           "properties": {
            "progress": {
             "type": "integer",
             "_name_": "progress",
             "title": "progress",
             "_required_": true
            }
           },
           "additionalProperties": false,
           "_name_": "current_test",
           "title": "current_test",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "progress"
           ]
          }
         },
         "additionalProperties": true,
         "_name_": "disk_smart_test_result",
         "title": "disk_smart_test_result",
         "default": {},
         "_required_": false,
         "_attrs_order_": [
          "disk",
          "tests",
          "current_test"
         ]
        },
        {
         "_name_": "query_result",
         "title": "query_result",
         "default": [],
         "_required_": false,
         "type": "array",
         "items": [
          {
           "type": "object",
           "properties": {
            "disk": {
             "_name_": "disk",
             "title": "disk",
             "_required_": true,
             "type": "string"
            },
            "tests": {
             "_name_": "tests",
             "title": "tests",
             "default": [],
             "_required_": false,
             "type": "array",
             "items": [
              {
               "type": "object",
               "properties": {
                "num": {
                 "type": "integer",
                 "_name_": "num",
                 "title": "num",
                 "_required_": true
                },
                "description": {
                 "_name_": "description",
                 "title": "description",
                 "_required_": true,
                 "type": "string"
                },
                "status": {
                 "_name_": "status",
                 "title": "status",
                 "_required_": true,
                 "type": "string"
                },
                "status_verbose": {
                 "_name_": "status_verbose",
                 "title": "status_verbose",
                 "_required_": true,
                 "type": "string"
                },
                "segment_number": {
                 "type": [
                  "integer",
                  "null"
                 ],
                 "_name_": "segment_number",
                 "title": "segment_number",
                 "_required_": false
                },
                "remaining": {
                 "type": "float",
                 "_name_": "remaining",
                 "title": "remaining",
                 "_required_": false
                },
                "lifetime": {
                 "type": [
                  "integer",
                  "null"
                 ],
                 "_name_": "lifetime",
                 "title": "lifetime",
                 "_required_": true
                },
                "lba_of_first_error": {
                 "_name_": "lba_of_first_error",
                 "title": "lba_of_first_error",
                 "_required_": true,
                 "type": [
                  "string",
                  "null"
                 ]
                }
               },
               "additionalProperties": false,
               "_name_": "test_result",
               "title": "test_result",
               "default": {},
               "_required_": false,
               "_attrs_order_": [
                "num",
                "description",
                "status",
                "status_verbose",
                "segment_number",
                "remaining",
                "lifetime",
                "lba_of_first_error"
               ]
              }
             ]
            },
            "current_test": {
             "type": "object",
             "properties": {
              "progress": {
               "type": "integer",
               "_name_": "progress",
               "title": "progress",
               "_required_": true
              }
             },
             "additionalProperties": false,
             "_name_": "current_test",
             "title": "current_test",
             "default": {},
             "_required_": false,
             "_attrs_order_": [
              "progress"
             ]
            }
           },
           "additionalProperties": true,
           "_name_": "disk_smart_test_result",
           "title": "disk_smart_test_result",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "disk",
            "tests",
            "current_test"
           ]
          }
         ]
        }
       ],
       "nullable": false,
       "_name_": "filterable_result",
       "description": null
      },
      "return_schema_of_smb_config": {
       "additionalProperties": false,
       "properties": {
        "id": {
         "title": "id",
         "type": "integer",
         "_name_": "id"
        },
        "netbiosname": {
         "description": "Netbios name of this server ",
         "title": "netbiosname",
         "type": "string",
         "_name_": "netbiosname"
        },
        "netbiosalias": {
         "description": "Alternative netbios names of the server that will be announced via\nnetbios nameserver and registered in active directory when joined.",
         "items": {
          "type": "string"
         },
         "title": "netbiosalias",
         "type": "array",
         "_name_": "netbiosalias"
        },
        "workgroup": {
         "description": "Workgroup. When joined to active directory, this will be automatically\nreconfigured to match the netbios domain of the AD domain. ",
         "title": "workgroup",
         "type": "string",
         "_name_": "workgroup"
        },
        "description": {
         "description": "Description of SMB server. May appear to clients during some operations. ",
         "title": "description",
         "type": "string",
         "_name_": "description"
        },
        "enable_smb1": {
         "description": "Enable SMB1 support for server. WARNING: using SMB1 protocol is not recommended ",
         "title": "enable_smb1",
         "type": "boolean",
         "_name_": "enable_smb1"
        },
        "unixcharset": {
         "description": "Select characterset for file names on local filesystem. This should only be used\nin cases where system administrator knows that the filenames are not UTF-8.",
         "enum": [
          "UTF-8",
          "GB2312",
          "HZ-GB-2312",
          "CP1361",
          "BIG5",
          "BIG5HKSCS",
          "CP037",
          "CP273",
          "CP424",
          "CP437",
          "CP500",
          "CP775",
          "CP850",
          "CP852",
          "CP855",
          "CP857",
          "CP858",
          "CP860",
          "CP861",
          "CP862",
          "CP863",
          "CP864",
          "CP865",
          "CP866",
          "CP869",
          "CP932",
          "CP949",
          "CP950",
          "CP1026",
          "CP1125",
          "CP1140",
          "CP1250",
          "CP1251",
          "CP1252",
          "CP1253",
          "CP1254",
          "CP1255",
          "CP1256",
          "CP1257",
          "CP1258",
          "EUC_JIS_2004",
          "EUC_JISX0213",
          "EUC_JP",
          "EUC_KR",
          "GB18030",
          "GBK",
          "HZ",
          "ISO2022_JP",
          "ISO2022_JP_1",
          "ISO2022_JP_2",
          "ISO2022_JP_2004",
          "ISO2022_JP_3",
          "ISO2022_JP_EXT",
          "ISO2022_KR",
          "ISO8859_1",
          "ISO8859_2",
          "ISO8859_3",
          "ISO8859_4",
          "ISO8859_5",
          "ISO8859_6",
          "ISO8859_7",
          "ISO8859_8",
          "ISO8859_9",
          "ISO8859_10",
          "ISO8859_11",
          "ISO8859_13",
          "ISO8859_14",
          "ISO8859_15",
          "ISO8859_16",
          "JOHAB",
          "KOI8_R",
          "KZ1048",
          "LATIN_1",
          "MAC_CYRILLIC",
          "MAC_GREEK",
          "MAC_ICELAND",
          "MAC_LATIN2",
          "MAC_ROMAN",
          "MAC_TURKISH",
          "PTCP154",
          "SHIFT_JIS",
          "SHIFT_JIS_2004",
          "SHIFT_JISX0213",
          "TIS_620",
          "UTF_16",
          "UTF_16_BE",
          "UTF_16_LE"
         ],
         "title": "unixcharset",
         "type": "string",
         "_name_": "unixcharset"
        },
        "localmaster": {
         "title": "localmaster",
         "type": "boolean",
         "_name_": "localmaster"
        },
        "syslog": {
         "description": "Send log messages to syslog. This should be enabled if system administrator\nwishes for SMB server error logs to be included in information sent to remote syslog\nserver if this is globally configured for TrueNAS.",
         "title": "syslog",
         "type": "boolean",
         "_name_": "syslog"
        },
        "aapl_extensions": {
         "description": "Enable support for SMB2/3 AAPL protocol extensions. This changes the TrueNAS server\nso that it is advertised as supporting Apple protocol extensions as a MacOS server, and\nis required for Time Machine support. ",
         "title": "aapl_extensions",
         "type": "boolean",
         "_name_": "aapl_extensions"
        },
        "admin_group": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "description": "The selected group will have full administrator privileges on TrueNAS over SMB protocol. ",
         "title": "admin_group",
         "_name_": "admin_group"
        },
        "guest": {
         "minLength": 1,
         "title": "guest",
         "type": "string",
         "_name_": "guest"
        },
        "filemask": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "const": "DEFAULT",
           "enum": [
            "DEFAULT"
           ],
           "type": "string"
          }
         ],
         "description": "smb.conf create mask. DEFAULT applies current server default which is 664. ",
         "title": "filemask",
         "_name_": "filemask"
        },
        "dirmask": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "const": "DEFAULT",
           "enum": [
            "DEFAULT"
           ],
           "type": "string"
          }
         ],
         "description": "smb.conf directory mask. DEFAULT applies current server default which is 775. ",
         "title": "dirmask",
         "_name_": "dirmask"
        },
        "ntlmv1_auth": {
         "description": "Enable legacy and very insecure NTLMv1 authentication. This should never be done except\nin extreme edge cases and may be against regulations in non-home environments. ",
         "title": "ntlmv1_auth",
         "type": "boolean",
         "_name_": "ntlmv1_auth"
        },
        "multichannel": {
         "title": "multichannel",
         "type": "boolean",
         "_name_": "multichannel"
        },
        "encryption": {
         "enum": [
          "DEFAULT",
          "NEGOTIATE",
          "DESIRED",
          "REQUIRED"
         ],
         "title": "encryption",
         "type": "string",
         "_name_": "encryption"
        },
        "bindip": {
         "items": {
          "format": "ipvanyinterface",
          "type": "string"
         },
         "title": "bindip",
         "type": "array",
         "_name_": "bindip"
        },
        "server_sid": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "description": "Universally-unique identifier for this particular SMB server that serves as domain SID\nfor all local SMB user and group accounts ",
         "title": "server_sid",
         "_name_": "server_sid"
        },
        "smb_options": {
         "description": "Additional unvalidated and unsupported configuration options for the SMB server.\nWARNING: using smb_options may produce unexpected server behavior. ",
         "title": "smb_options",
         "type": "string",
         "_name_": "smb_options"
        },
        "debug": {
         "description": "Set SMB log levels to debug. This should only be used when troubleshooting a specific SMB\nissue and should not be used in production environments. ",
         "title": "debug",
         "type": "boolean",
         "_name_": "debug"
        }
       },
       "required": [
        "id",
        "netbiosname",
        "netbiosalias",
        "workgroup",
        "description",
        "enable_smb1",
        "unixcharset",
        "localmaster",
        "syslog",
        "aapl_extensions",
        "admin_group",
        "guest",
        "filemask",
        "dirmask",
        "ntlmv1_auth",
        "multichannel",
        "encryption",
        "bindip",
        "server_sid",
        "smb_options",
        "debug"
       ],
       "title": "result",
       "type": "object",
       "_name_": "result",
       "_attrs_order_": [
        "id",
        "netbiosname",
        "netbiosalias",
        "workgroup",
        "description",
        "enable_smb1",
        "unixcharset",
        "localmaster",
        "syslog",
        "aapl_extensions",
        "admin_group",
        "guest",
        "filemask",
        "dirmask",
        "ntlmv1_auth",
        "multichannel",
        "encryption",
        "bindip",
        "server_sid",
        "smb_options",
        "debug"
       ]
      },
      "smb_update": {
       "additionalProperties": false,
       "properties": {
        "netbiosname": {
         "description": "Netbios name of this server ",
         "title": "netbiosname",
         "type": "string",
         "_name_": "netbiosname"
        },
        "netbiosalias": {
         "description": "Alternative netbios names of the server that will be announced via\nnetbios nameserver and registered in active directory when joined.",
         "items": {
          "type": "string"
         },
         "title": "netbiosalias",
         "type": "array",
         "_name_": "netbiosalias"
        },
        "workgroup": {
         "description": "Workgroup. When joined to active directory, this will be automatically\nreconfigured to match the netbios domain of the AD domain. ",
         "title": "workgroup",
         "type": "string",
         "_name_": "workgroup"
        },
        "description": {
         "description": "Description of SMB server. May appear to clients during some operations. ",
         "title": "description",
         "type": "string",
         "_name_": "description"
        },
        "enable_smb1": {
         "description": "Enable SMB1 support for server. WARNING: using SMB1 protocol is not recommended ",
         "title": "enable_smb1",
         "type": "boolean",
         "_name_": "enable_smb1"
        },
        "unixcharset": {
         "description": "Select characterset for file names on local filesystem. This should only be used\nin cases where system administrator knows that the filenames are not UTF-8.",
         "enum": [
          "UTF-8",
          "GB2312",
          "HZ-GB-2312",
          "CP1361",
          "BIG5",
          "BIG5HKSCS",
          "CP037",
          "CP273",
          "CP424",
          "CP437",
          "CP500",
          "CP775",
          "CP850",
          "CP852",
          "CP855",
          "CP857",
          "CP858",
          "CP860",
          "CP861",
          "CP862",
          "CP863",
          "CP864",
          "CP865",
          "CP866",
          "CP869",
          "CP932",
          "CP949",
          "CP950",
          "CP1026",
          "CP1125",
          "CP1140",
          "CP1250",
          "CP1251",
          "CP1252",
          "CP1253",
          "CP1254",
          "CP1255",
          "CP1256",
          "CP1257",
          "CP1258",
          "EUC_JIS_2004",
          "EUC_JISX0213",
          "EUC_JP",
          "EUC_KR",
          "GB18030",
          "GBK",
          "HZ",
          "ISO2022_JP",
          "ISO2022_JP_1",
          "ISO2022_JP_2",
          "ISO2022_JP_2004",
          "ISO2022_JP_3",
          "ISO2022_JP_EXT",
          "ISO2022_KR",
          "ISO8859_1",
          "ISO8859_2",
          "ISO8859_3",
          "ISO8859_4",
          "ISO8859_5",
          "ISO8859_6",
          "ISO8859_7",
          "ISO8859_8",
          "ISO8859_9",
          "ISO8859_10",
          "ISO8859_11",
          "ISO8859_13",
          "ISO8859_14",
          "ISO8859_15",
          "ISO8859_16",
          "JOHAB",
          "KOI8_R",
          "KZ1048",
          "LATIN_1",
          "MAC_CYRILLIC",
          "MAC_GREEK",
          "MAC_ICELAND",
          "MAC_LATIN2",
          "MAC_ROMAN",
          "MAC_TURKISH",
          "PTCP154",
          "SHIFT_JIS",
          "SHIFT_JIS_2004",
          "SHIFT_JISX0213",
          "TIS_620",
          "UTF_16",
          "UTF_16_BE",
          "UTF_16_LE"
         ],
         "title": "unixcharset",
         "type": "string",
         "_name_": "unixcharset"
        },
        "localmaster": {
         "title": "localmaster",
         "type": "boolean",
         "_name_": "localmaster"
        },
        "syslog": {
         "description": "Send log messages to syslog. This should be enabled if system administrator\nwishes for SMB server error logs to be included in information sent to remote syslog\nserver if this is globally configured for TrueNAS.",
         "title": "syslog",
         "type": "boolean",
         "_name_": "syslog"
        },
        "aapl_extensions": {
         "description": "Enable support for SMB2/3 AAPL protocol extensions. This changes the TrueNAS server\nso that it is advertised as supporting Apple protocol extensions as a MacOS server, and\nis required for Time Machine support. ",
         "title": "aapl_extensions",
         "type": "boolean",
         "_name_": "aapl_extensions"
        },
        "admin_group": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "description": "The selected group will have full administrator privileges on TrueNAS over SMB protocol. ",
         "title": "admin_group",
         "_name_": "admin_group"
        },
        "guest": {
         "minLength": 1,
         "title": "guest",
         "type": "string",
         "_name_": "guest"
        },
        "filemask": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "const": "DEFAULT",
           "enum": [
            "DEFAULT"
           ],
           "type": "string"
          }
         ],
         "description": "smb.conf create mask. DEFAULT applies current server default which is 664. ",
         "title": "filemask",
         "_name_": "filemask"
        },
        "dirmask": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "const": "DEFAULT",
           "enum": [
            "DEFAULT"
           ],
           "type": "string"
          }
         ],
         "description": "smb.conf directory mask. DEFAULT applies current server default which is 775. ",
         "title": "dirmask",
         "_name_": "dirmask"
        },
        "ntlmv1_auth": {
         "description": "Enable legacy and very insecure NTLMv1 authentication. This should never be done except\nin extreme edge cases and may be against regulations in non-home environments. ",
         "title": "ntlmv1_auth",
         "type": "boolean",
         "_name_": "ntlmv1_auth"
        },
        "multichannel": {
         "title": "multichannel",
         "type": "boolean",
         "_name_": "multichannel"
        },
        "encryption": {
         "enum": [
          "DEFAULT",
          "NEGOTIATE",
          "DESIRED",
          "REQUIRED"
         ],
         "title": "encryption",
         "type": "string",
         "_name_": "encryption"
        },
        "bindip": {
         "items": {
          "format": "ipvanyinterface",
          "type": "string"
         },
         "title": "bindip",
         "type": "array",
         "_name_": "bindip"
        },
        "server_sid": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "description": "Universally-unique identifier for this particular SMB server that serves as domain SID\nfor all local SMB user and group accounts ",
         "title": "server_sid",
         "_name_": "server_sid"
        },
        "smb_options": {
         "description": "Additional unvalidated and unsupported configuration options for the SMB server.\nWARNING: using smb_options may produce unexpected server behavior. ",
         "title": "smb_options",
         "type": "string",
         "_name_": "smb_options"
        },
        "debug": {
         "description": "Set SMB log levels to debug. This should only be used when troubleshooting a specific SMB\nissue and should not be used in production environments. ",
         "title": "debug",
         "type": "boolean",
         "_name_": "debug"
        }
       },
       "title": "smb_update",
       "type": "object",
       "_name_": "smb_update",
       "_attrs_order_": [
        "netbiosname",
        "netbiosalias",
        "workgroup",
        "description",
        "enable_smb1",
        "unixcharset",
        "localmaster",
        "syslog",
        "aapl_extensions",
        "admin_group",
        "guest",
        "filemask",
        "dirmask",
        "ntlmv1_auth",
        "multichannel",
        "encryption",
        "bindip",
        "server_sid",
        "smb_options",
        "debug"
       ]
      },
      "return_schema_of_smb_update": {
       "additionalProperties": false,
       "properties": {
        "id": {
         "title": "id",
         "type": "integer",
         "_name_": "id"
        },
        "netbiosname": {
         "description": "Netbios name of this server ",
         "title": "netbiosname",
         "type": "string",
         "_name_": "netbiosname"
        },
        "netbiosalias": {
         "description": "Alternative netbios names of the server that will be announced via\nnetbios nameserver and registered in active directory when joined.",
         "items": {
          "type": "string"
         },
         "title": "netbiosalias",
         "type": "array",
         "_name_": "netbiosalias"
        },
        "workgroup": {
         "description": "Workgroup. When joined to active directory, this will be automatically\nreconfigured to match the netbios domain of the AD domain. ",
         "title": "workgroup",
         "type": "string",
         "_name_": "workgroup"
        },
        "description": {
         "description": "Description of SMB server. May appear to clients during some operations. ",
         "title": "description",
         "type": "string",
         "_name_": "description"
        },
        "enable_smb1": {
         "description": "Enable SMB1 support for server. WARNING: using SMB1 protocol is not recommended ",
         "title": "enable_smb1",
         "type": "boolean",
         "_name_": "enable_smb1"
        },
        "unixcharset": {
         "description": "Select characterset for file names on local filesystem. This should only be used\nin cases where system administrator knows that the filenames are not UTF-8.",
         "enum": [
          "UTF-8",
          "GB2312",
          "HZ-GB-2312",
          "CP1361",
          "BIG5",
          "BIG5HKSCS",
          "CP037",
          "CP273",
          "CP424",
          "CP437",
          "CP500",
          "CP775",
          "CP850",
          "CP852",
          "CP855",
          "CP857",
          "CP858",
          "CP860",
          "CP861",
          "CP862",
          "CP863",
          "CP864",
          "CP865",
          "CP866",
          "CP869",
          "CP932",
          "CP949",
          "CP950",
          "CP1026",
          "CP1125",
          "CP1140",
          "CP1250",
          "CP1251",
          "CP1252",
          "CP1253",
          "CP1254",
          "CP1255",
          "CP1256",
          "CP1257",
          "CP1258",
          "EUC_JIS_2004",
          "EUC_JISX0213",
          "EUC_JP",
          "EUC_KR",
          "GB18030",
          "GBK",
          "HZ",
          "ISO2022_JP",
          "ISO2022_JP_1",
          "ISO2022_JP_2",
          "ISO2022_JP_2004",
          "ISO2022_JP_3",
          "ISO2022_JP_EXT",
          "ISO2022_KR",
          "ISO8859_1",
          "ISO8859_2",
          "ISO8859_3",
          "ISO8859_4",
          "ISO8859_5",
          "ISO8859_6",
          "ISO8859_7",
          "ISO8859_8",
          "ISO8859_9",
          "ISO8859_10",
          "ISO8859_11",
          "ISO8859_13",
          "ISO8859_14",
          "ISO8859_15",
          "ISO8859_16",
          "JOHAB",
          "KOI8_R",
          "KZ1048",
          "LATIN_1",
          "MAC_CYRILLIC",
          "MAC_GREEK",
          "MAC_ICELAND",
          "MAC_LATIN2",
          "MAC_ROMAN",
          "MAC_TURKISH",
          "PTCP154",
          "SHIFT_JIS",
          "SHIFT_JIS_2004",
          "SHIFT_JISX0213",
          "TIS_620",
          "UTF_16",
          "UTF_16_BE",
          "UTF_16_LE"
         ],
         "title": "unixcharset",
         "type": "string",
         "_name_": "unixcharset"
        },
        "localmaster": {
         "title": "localmaster",
         "type": "boolean",
         "_name_": "localmaster"
        },
        "syslog": {
         "description": "Send log messages to syslog. This should be enabled if system administrator\nwishes for SMB server error logs to be included in information sent to remote syslog\nserver if this is globally configured for TrueNAS.",
         "title": "syslog",
         "type": "boolean",
         "_name_": "syslog"
        },
        "aapl_extensions": {
         "description": "Enable support for SMB2/3 AAPL protocol extensions. This changes the TrueNAS server\nso that it is advertised as supporting Apple protocol extensions as a MacOS server, and\nis required for Time Machine support. ",
         "title": "aapl_extensions",
         "type": "boolean",
         "_name_": "aapl_extensions"
        },
        "admin_group": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "description": "The selected group will have full administrator privileges on TrueNAS over SMB protocol. ",
         "title": "admin_group",
         "_name_": "admin_group"
        },
        "guest": {
         "minLength": 1,
         "title": "guest",
         "type": "string",
         "_name_": "guest"
        },
        "filemask": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "const": "DEFAULT",
           "enum": [
            "DEFAULT"
           ],
           "type": "string"
          }
         ],
         "description": "smb.conf create mask. DEFAULT applies current server default which is 664. ",
         "title": "filemask",
         "_name_": "filemask"
        },
        "dirmask": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "const": "DEFAULT",
           "enum": [
            "DEFAULT"
           ],
           "type": "string"
          }
         ],
         "description": "smb.conf directory mask. DEFAULT applies current server default which is 775. ",
         "title": "dirmask",
         "_name_": "dirmask"
        },
        "ntlmv1_auth": {
         "description": "Enable legacy and very insecure NTLMv1 authentication. This should never be done except\nin extreme edge cases and may be against regulations in non-home environments. ",
         "title": "ntlmv1_auth",
         "type": "boolean",
         "_name_": "ntlmv1_auth"
        },
        "multichannel": {
         "title": "multichannel",
         "type": "boolean",
         "_name_": "multichannel"
        },
        "encryption": {
         "enum": [
          "DEFAULT",
          "NEGOTIATE",
          "DESIRED",
          "REQUIRED"
         ],
         "title": "encryption",
         "type": "string",
         "_name_": "encryption"
        },
        "bindip": {
         "items": {
          "format": "ipvanyinterface",
          "type": "string"
         },
         "title": "bindip",
         "type": "array",
         "_name_": "bindip"
        },
        "server_sid": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "description": "Universally-unique identifier for this particular SMB server that serves as domain SID\nfor all local SMB user and group accounts ",
         "title": "server_sid",
         "_name_": "server_sid"
        },
        "smb_options": {
         "description": "Additional unvalidated and unsupported configuration options for the SMB server.\nWARNING: using smb_options may produce unexpected server behavior. ",
         "title": "smb_options",
         "type": "string",
         "_name_": "smb_options"
        },
        "debug": {
         "description": "Set SMB log levels to debug. This should only be used when troubleshooting a specific SMB\nissue and should not be used in production environments. ",
         "title": "debug",
         "type": "boolean",
         "_name_": "debug"
        }
       },
       "required": [
        "id",
        "netbiosname",
        "netbiosalias",
        "workgroup",
        "description",
        "enable_smb1",
        "unixcharset",
        "localmaster",
        "syslog",
        "aapl_extensions",
        "admin_group",
        "guest",
        "filemask",
        "dirmask",
        "ntlmv1_auth",
        "multichannel",
        "encryption",
        "bindip",
        "server_sid",
        "smb_options",
        "debug"
       ],
       "title": "result",
       "type": "object",
       "_name_": "result",
       "_attrs_order_": [
        "id",
        "netbiosname",
        "netbiosalias",
        "workgroup",
        "description",
        "enable_smb1",
        "unixcharset",
        "localmaster",
        "syslog",
        "aapl_extensions",
        "admin_group",
        "guest",
        "filemask",
        "dirmask",
        "ntlmv1_auth",
        "multichannel",
        "encryption",
        "bindip",
        "server_sid",
        "smb_options",
        "debug"
       ]
      },
      "return_schema_of_smb_bindip_choices": {
       "additionalProperties": {
        "type": "string"
       },
       "title": "result",
       "type": "object",
       "_name_": "result"
      },
      "smb_status_0": {
       "_name_": "info_level",
       "title": "info_level",
       "default": "ALL",
       "type": "string",
       "enum": [
        "AUTH_LOG",
        "ALL",
        "SESSIONS",
        "SHARES",
        "LOCKS",
        "BYTERANGE",
        "NOTIFICATIONS"
       ],
       "description": "`info_level` type of information requests. Defaults to ALL."
      },
      "smb_status_1": {
       "_name_": "query-filters",
       "title": "query-filters",
       "default": [],
       "type": "array",
       "items": {
        "_name_": "query-filter",
        "title": "query-filter",
        "default": [],
        "_required_": false,
        "type": "array",
        "items": []
       }
      },
      "smb_status_2": {
       "type": "object",
       "properties": {
        "relationships": {
         "type": "boolean",
         "_name_": "relationships",
         "title": "relationships",
         "default": true
        },
        "extend": {
         "_name_": "extend",
         "title": "extend",
         "default": null,
         "type": "string",
         "nullable": true
        },
        "extend_context": {
         "_name_": "extend_context",
         "title": "extend_context",
         "default": null,
         "type": "string",
         "nullable": true
        },
        "prefix": {
         "_name_": "prefix",
         "title": "prefix",
         "default": null,
         "type": "string",
         "nullable": true
        },
        "extra": {
         "type": "object",
         "properties": {},
         "additionalProperties": true,
         "_name_": "extra",
         "title": "extra",
         "default": {},
         "_attrs_order_": []
        },
        "order_by": {
         "_name_": "order_by",
         "title": "order_by",
         "default": [],
         "type": "array",
         "items": {}
        },
        "select": {
         "_name_": "select",
         "title": "select",
         "default": [],
         "type": "array",
         "items": {}
        },
        "count": {
         "type": "boolean",
         "_name_": "count",
         "title": "count",
         "default": false
        },
        "get": {
         "type": "boolean",
         "_name_": "get",
         "title": "get",
         "default": false
        },
        "offset": {
         "type": "integer",
         "_name_": "offset",
         "title": "offset",
         "default": 0
        },
        "limit": {
         "type": "integer",
         "_name_": "limit",
         "title": "limit",
         "default": 0
        },
        "force_sql_filters": {
         "type": "boolean",
         "_name_": "force_sql_filters",
         "title": "force_sql_filters",
         "default": false
        }
       },
       "additionalProperties": false,
       "_name_": "query-options",
       "title": "query-options",
       "default": {},
       "_attrs_order_": [
        "relationships",
        "extend",
        "extend_context",
        "prefix",
        "extra",
        "order_by",
        "select",
        "count",
        "get",
        "offset",
        "limit",
        "force_sql_filters"
       ]
      },
      "smb_status_3": {
       "type": "object",
       "properties": {
        "verbose": {
         "type": "boolean",
         "_name_": "verbose",
         "title": "verbose",
         "default": true,
         "description": "`status_options` additional options to filter query results. Supported\nvalues are as follows: `verbose` gives more verbose status output"
        },
        "fast": {
         "type": "boolean",
         "_name_": "fast",
         "title": "fast",
         "default": false,
         "description": "`fast` causes smbstatus to not check if the status data is valid by\nchecking if the processes that the status data refer to all still\nexist. This speeds up execution on busy systems and clusters but\nmight display stale data of processes that died without cleaning up\nproperly. `restrict_user` specifies the limits results to the specified\nuser."
        },
        "restrict_user": {
         "_name_": "restrict_user",
         "title": "restrict_user",
         "default": "",
         "type": "string",
         "description": "`fast` causes smbstatus to not check if the status data is valid by\nchecking if the processes that the status data refer to all still\nexist. This speeds up execution on busy systems and clusters but\nmight display stale data of processes that died without cleaning up\nproperly. `restrict_user` specifies the limits results to the specified\nuser."
        },
        "restrict_session": {
         "_name_": "restrict_session",
         "title": "restrict_session",
         "default": "",
         "type": "string"
        },
        "resolve_uids": {
         "type": "boolean",
         "_name_": "resolve_uids",
         "title": "resolve_uids",
         "default": true
        }
       },
       "additionalProperties": false,
       "_name_": "status_options",
       "title": "status_options",
       "default": {},
       "_attrs_order_": [
        "verbose",
        "fast",
        "restrict_user",
        "restrict_session",
        "resolve_uids"
       ],
       "description": "`status_options` additional options to filter query results. Supported\nvalues are as follows: `verbose` gives more verbose status output"
      },
      "smb_status": {
       "type": "object",
       "properties": {
        "info_level": {
         "$ref": "#/components/schemas/smb_status_0"
        },
        "query-filters": {
         "$ref": "#/components/schemas/smb_status_1"
        },
        "query-options": {
         "$ref": "#/components/schemas/smb_status_2"
        },
        "status_options": {
         "$ref": "#/components/schemas/smb_status_3"
        }
       }
      },
      "return_schema_of_smb_unixcharset_choices": {
       "additionalProperties": {
        "enum": [
         "UTF-8",
         "GB2312",
         "HZ-GB-2312",
         "CP1361",
         "BIG5",
         "BIG5HKSCS",
         "CP037",
         "CP273",
         "CP424",
         "CP437",
         "CP500",
         "CP775",
         "CP850",
         "CP852",
         "CP855",
         "CP857",
         "CP858",
         "CP860",
         "CP861",
         "CP862",
         "CP863",
         "CP864",
         "CP865",
         "CP866",
         "CP869",
         "CP932",
         "CP949",
         "CP950",
         "CP1026",
         "CP1125",
         "CP1140",
         "CP1250",
         "CP1251",
         "CP1252",
         "CP1253",
         "CP1254",
         "CP1255",
         "CP1256",
         "CP1257",
         "CP1258",
         "EUC_JIS_2004",
         "EUC_JISX0213",
         "EUC_JP",
         "EUC_KR",
         "GB18030",
         "GBK",
         "HZ",
         "ISO2022_JP",
         "ISO2022_JP_1",
         "ISO2022_JP_2",
         "ISO2022_JP_2004",
         "ISO2022_JP_3",
         "ISO2022_JP_EXT",
         "ISO2022_KR",
         "ISO8859_1",
         "ISO8859_2",
         "ISO8859_3",
         "ISO8859_4",
         "ISO8859_5",
         "ISO8859_6",
         "ISO8859_7",
         "ISO8859_8",
         "ISO8859_9",
         "ISO8859_10",
         "ISO8859_11",
         "ISO8859_13",
         "ISO8859_14",
         "ISO8859_15",
         "ISO8859_16",
         "JOHAB",
         "KOI8_R",
         "KZ1048",
         "LATIN_1",
         "MAC_CYRILLIC",
         "MAC_GREEK",
         "MAC_ICELAND",
         "MAC_LATIN2",
         "MAC_ROMAN",
         "MAC_TURKISH",
         "PTCP154",
         "SHIFT_JIS",
         "SHIFT_JIS_2004",
         "SHIFT_JISX0213",
         "TIS_620",
         "UTF_16",
         "UTF_16_BE",
         "UTF_16_LE"
        ],
        "type": "string"
       },
       "title": "result",
       "type": "object",
       "_name_": "result"
      },
      "return_schema_of_snmp_config": {
       "additionalProperties": false,
       "properties": {
        "location": {
         "title": "location",
         "type": "string",
         "_name_": "location"
        },
        "contact": {
         "anyOf": [
          {
           "format": "email",
           "type": "string"
          },
          {
           "pattern": "^[-_a-zA-Z0-9\\s]*$",
           "type": "string"
          }
         ],
         "title": "contact",
         "_name_": "contact"
        },
        "traps": {
         "title": "traps",
         "type": "boolean",
         "_name_": "traps"
        },
        "v3": {
         "title": "v3",
         "type": "boolean",
         "_name_": "v3"
        },
        "community": {
         "default": "public",
         "pattern": "^[-_a-zA-Z0-9\\s]*$",
         "title": "community",
         "type": "string",
         "_name_": "community"
        },
        "v3_username": {
         "maxLength": 20,
         "title": "v3_username",
         "type": "string",
         "_name_": "v3_username"
        },
        "v3_authtype": {
         "enum": [
          "",
          "MD5",
          "SHA"
         ],
         "title": "v3_authtype",
         "type": "string",
         "_name_": "v3_authtype"
        },
        "v3_password": {
         "title": "v3_password",
         "type": "string",
         "_name_": "v3_password"
        },
        "v3_privproto": {
         "anyOf": [
          {
           "enum": [
            null,
            "AES",
            "DES"
           ]
          },
          {
           "type": "null"
          }
         ],
         "title": "v3_privproto",
         "_name_": "v3_privproto"
        },
        "v3_privpassphrase": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "v3_privpassphrase",
         "_name_": "v3_privpassphrase"
        },
        "loglevel": {
         "maximum": 7,
         "minimum": 0,
         "title": "loglevel",
         "type": "integer",
         "_name_": "loglevel"
        },
        "options": {
         "title": "options",
         "type": "string",
         "_name_": "options"
        },
        "zilstat": {
         "title": "zilstat",
         "type": "boolean",
         "_name_": "zilstat"
        },
        "id": {
         "title": "id",
         "type": "integer",
         "_name_": "id"
        }
       },
       "required": [
        "location",
        "contact",
        "traps",
        "v3",
        "v3_username",
        "v3_authtype",
        "v3_password",
        "v3_privproto",
        "loglevel",
        "options",
        "zilstat",
        "id"
       ],
       "title": "result",
       "type": "object",
       "_name_": "result",
       "_attrs_order_": [
        "location",
        "contact",
        "traps",
        "v3",
        "community",
        "v3_username",
        "v3_authtype",
        "v3_password",
        "v3_privproto",
        "v3_privpassphrase",
        "loglevel",
        "options",
        "zilstat",
        "id"
       ]
      },
      "snmp_update": {
       "additionalProperties": false,
       "properties": {
        "location": {
         "title": "location",
         "type": "string",
         "_name_": "location"
        },
        "contact": {
         "anyOf": [
          {
           "format": "email",
           "type": "string"
          },
          {
           "pattern": "^[-_a-zA-Z0-9\\s]*$",
           "type": "string"
          }
         ],
         "title": "contact",
         "_name_": "contact"
        },
        "traps": {
         "title": "traps",
         "type": "boolean",
         "_name_": "traps"
        },
        "v3": {
         "title": "v3",
         "type": "boolean",
         "_name_": "v3"
        },
        "community": {
         "pattern": "^[-_a-zA-Z0-9\\s]*$",
         "title": "community",
         "type": "string",
         "_name_": "community"
        },
        "v3_username": {
         "maxLength": 20,
         "title": "v3_username",
         "type": "string",
         "_name_": "v3_username"
        },
        "v3_authtype": {
         "enum": [
          "",
          "MD5",
          "SHA"
         ],
         "title": "v3_authtype",
         "type": "string",
         "_name_": "v3_authtype"
        },
        "v3_password": {
         "title": "v3_password",
         "type": "string",
         "_name_": "v3_password"
        },
        "v3_privproto": {
         "anyOf": [
          {
           "enum": [
            null,
            "AES",
            "DES"
           ]
          },
          {
           "type": "null"
          }
         ],
         "title": "v3_privproto",
         "_name_": "v3_privproto"
        },
        "v3_privpassphrase": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "title": "v3_privpassphrase",
         "_name_": "v3_privpassphrase"
        },
        "loglevel": {
         "maximum": 7,
         "minimum": 0,
         "title": "loglevel",
         "type": "integer",
         "_name_": "loglevel"
        },
        "options": {
         "title": "options",
         "type": "string",
         "_name_": "options"
        },
        "zilstat": {
         "title": "zilstat",
         "type": "boolean",
         "_name_": "zilstat"
        }
       },
       "title": "snmp_update",
       "type": "object",
       "_name_": "snmp_update",
       "_attrs_order_": [
        "location",
        "contact",
        "traps",
        "v3",
        "community",
        "v3_username",
        "v3_authtype",
        "v3_password",
        "v3_privproto",
        "v3_privpassphrase",
        "loglevel",
        "options",
        "zilstat"
       ]
      },
      "return_schema_of_snmp_update": {
       "additionalProperties": false,
       "properties": {
        "location": {
         "title": "location",
         "type": "string",
         "_name_": "location"
        },
        "contact": {
         "anyOf": [
          {
           "format": "email",
           "type": "string"
          },
          {
           "pattern": "^[-_a-zA-Z0-9\\s]*$",
           "type": "string"
          }
         ],
         "title": "contact",
         "_name_": "contact"
        },
        "traps": {
         "title": "traps",
         "type": "boolean",
         "_name_": "traps"
        },
        "v3": {
         "title": "v3",
         "type": "boolean",
         "_name_": "v3"
        },
        "community": {
         "default": "public",
         "pattern": "^[-_a-zA-Z0-9\\s]*$",
         "title": "community",
         "type": "string",
         "_name_": "community"
        },
        "v3_username": {
         "maxLength": 20,
         "title": "v3_username",
         "type": "string",
         "_name_": "v3_username"
        },
        "v3_authtype": {
         "enum": [
          "",
          "MD5",
          "SHA"
         ],
         "title": "v3_authtype",
         "type": "string",
         "_name_": "v3_authtype"
        },
        "v3_password": {
         "title": "v3_password",
         "type": "string",
         "_name_": "v3_password"
        },
        "v3_privproto": {
         "anyOf": [
          {
           "enum": [
            null,
            "AES",
            "DES"
           ]
          },
          {
           "type": "null"
          }
         ],
         "title": "v3_privproto",
         "_name_": "v3_privproto"
        },
        "v3_privpassphrase": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "v3_privpassphrase",
         "_name_": "v3_privpassphrase"
        },
        "loglevel": {
         "maximum": 7,
         "minimum": 0,
         "title": "loglevel",
         "type": "integer",
         "_name_": "loglevel"
        },
        "options": {
         "title": "options",
         "type": "string",
         "_name_": "options"
        },
        "zilstat": {
         "title": "zilstat",
         "type": "boolean",
         "_name_": "zilstat"
        },
        "id": {
         "title": "id",
         "type": "integer",
         "_name_": "id"
        }
       },
       "required": [
        "location",
        "contact",
        "traps",
        "v3",
        "v3_username",
        "v3_authtype",
        "v3_password",
        "v3_privproto",
        "loglevel",
        "options",
        "zilstat",
        "id"
       ],
       "title": "result",
       "type": "object",
       "_name_": "result",
       "_attrs_order_": [
        "location",
        "contact",
        "traps",
        "v3",
        "community",
        "v3_username",
        "v3_authtype",
        "v3_password",
        "v3_privproto",
        "v3_privpassphrase",
        "loglevel",
        "options",
        "zilstat",
        "id"
       ]
      },
      "return_schema_of_ssh_config": {
       "type": "object",
       "properties": {
        "bindiface": {
         "_name_": "bindiface",
         "title": "bindiface",
         "default": [],
         "type": "array",
         "items": {
          "_name_": "iface",
          "title": "iface",
          "_required_": false,
          "type": "string"
         }
        },
        "tcpport": {
         "type": "integer",
         "_name_": "tcpport",
         "title": "tcpport"
        },
        "password_login_groups": {
         "_name_": "password_login_groups",
         "title": "password_login_groups",
         "default": [],
         "type": "array",
         "items": {
          "_name_": "group",
          "title": "group",
          "_required_": false,
          "type": "string"
         }
        },
        "passwordauth": {
         "type": "boolean",
         "_name_": "passwordauth",
         "title": "passwordauth"
        },
        "kerberosauth": {
         "type": "boolean",
         "_name_": "kerberosauth",
         "title": "kerberosauth"
        },
        "tcpfwd": {
         "type": "boolean",
         "_name_": "tcpfwd",
         "title": "tcpfwd"
        },
        "compression": {
         "type": "boolean",
         "_name_": "compression",
         "title": "compression"
        },
        "sftp_log_level": {
         "_name_": "sftp_log_level",
         "title": "sftp_log_level",
         "type": "string",
         "enum": [
          "",
          "QUIET",
          "FATAL",
          "ERROR",
          "INFO",
          "VERBOSE",
          "DEBUG",
          "DEBUG2",
          "DEBUG3"
         ]
        },
        "sftp_log_facility": {
         "_name_": "sftp_log_facility",
         "title": "sftp_log_facility",
         "type": "string",
         "enum": [
          "",
          "DAEMON",
          "USER",
          "AUTH",
          "LOCAL0",
          "LOCAL1",
          "LOCAL2",
          "LOCAL3",
          "LOCAL4",
          "LOCAL5",
          "LOCAL6",
          "LOCAL7"
         ]
        },
        "weak_ciphers": {
         "_name_": "weak_ciphers",
         "title": "weak_ciphers",
         "default": [],
         "type": "array",
         "items": {
          "_name_": "cipher",
          "title": "cipher",
          "_required_": false,
          "type": "string",
          "enum": [
           "AES128-CBC",
           "NONE"
          ]
         }
        },
        "options": {
         "_name_": "options",
         "title": "options",
         "type": "string"
        },
        "privatekey": {
         "_name_": "privatekey",
         "title": "privatekey",
         "type": "string"
        },
        "host_dsa_key": {
         "_name_": "host_dsa_key",
         "title": "host_dsa_key",
         "type": "string",
         "nullable": true
        },
        "host_dsa_key_pub": {
         "_name_": "host_dsa_key_pub",
         "title": "host_dsa_key_pub",
         "type": "string",
         "nullable": true
        },
        "host_dsa_key_cert_pub": {
         "_name_": "host_dsa_key_cert_pub",
         "title": "host_dsa_key_cert_pub",
         "type": "string",
         "nullable": true
        },
        "host_ecdsa_key": {
         "_name_": "host_ecdsa_key",
         "title": "host_ecdsa_key",
         "type": "string",
         "nullable": true
        },
        "host_ecdsa_key_pub": {
         "_name_": "host_ecdsa_key_pub",
         "title": "host_ecdsa_key_pub",
         "type": "string",
         "nullable": true
        },
        "host_ecdsa_key_cert_pub": {
         "_name_": "host_ecdsa_key_cert_pub",
         "title": "host_ecdsa_key_cert_pub",
         "type": "string",
         "nullable": true
        },
        "host_ed25519_key": {
         "_name_": "host_ed25519_key",
         "title": "host_ed25519_key",
         "type": "string",
         "nullable": true
        },
        "host_ed25519_key_pub": {
         "_name_": "host_ed25519_key_pub",
         "title": "host_ed25519_key_pub",
         "type": "string",
         "nullable": true
        },
        "host_ed25519_key_cert_pub": {
         "_name_": "host_ed25519_key_cert_pub",
         "title": "host_ed25519_key_cert_pub",
         "type": "string",
         "nullable": true
        },
        "host_key": {
         "_name_": "host_key",
         "title": "host_key",
         "type": "string",
         "nullable": true
        },
        "host_key_pub": {
         "_name_": "host_key_pub",
         "title": "host_key_pub",
         "type": "string",
         "nullable": true
        },
        "host_rsa_key": {
         "_name_": "host_rsa_key",
         "title": "host_rsa_key",
         "type": "string",
         "nullable": true
        },
        "host_rsa_key_pub": {
         "_name_": "host_rsa_key_pub",
         "title": "host_rsa_key_pub",
         "type": "string",
         "nullable": true
        },
        "host_rsa_key_cert_pub": {
         "_name_": "host_rsa_key_cert_pub",
         "title": "host_rsa_key_cert_pub",
         "type": "string",
         "nullable": true
        },
        "id": {
         "type": "integer",
         "_name_": "id",
         "title": "id"
        }
       },
       "additionalProperties": false,
       "_name_": "ssh_entry",
       "title": "ssh_entry",
       "default": {},
       "_attrs_order_": [
        "bindiface",
        "tcpport",
        "password_login_groups",
        "passwordauth",
        "kerberosauth",
        "tcpfwd",
        "compression",
        "sftp_log_level",
        "sftp_log_facility",
        "weak_ciphers",
        "options",
        "privatekey",
        "host_dsa_key",
        "host_dsa_key_pub",
        "host_dsa_key_cert_pub",
        "host_ecdsa_key",
        "host_ecdsa_key_pub",
        "host_ecdsa_key_cert_pub",
        "host_ed25519_key",
        "host_ed25519_key_pub",
        "host_ed25519_key_cert_pub",
        "host_key",
        "host_key_pub",
        "host_rsa_key",
        "host_rsa_key_pub",
        "host_rsa_key_cert_pub",
        "id"
       ]
      },
      "ssh_update": {
       "type": "object",
       "properties": {
        "bindiface": {
         "_name_": "bindiface",
         "title": "bindiface",
         "default": [],
         "type": "array",
         "items": {
          "_name_": "iface",
          "title": "iface",
          "_required_": false,
          "type": "string"
         },
         "description": "If `bindiface` is empty it will listen for all available addresses."
        },
        "tcpport": {
         "type": "integer",
         "_name_": "tcpport",
         "title": "tcpport"
        },
        "password_login_groups": {
         "_name_": "password_login_groups",
         "title": "password_login_groups",
         "default": [],
         "type": "array",
         "items": {
          "_name_": "group",
          "title": "group",
          "_required_": false,
          "type": "string"
         }
        },
        "passwordauth": {
         "type": "boolean",
         "_name_": "passwordauth",
         "title": "passwordauth"
        },
        "kerberosauth": {
         "type": "boolean",
         "_name_": "kerberosauth",
         "title": "kerberosauth"
        },
        "tcpfwd": {
         "type": "boolean",
         "_name_": "tcpfwd",
         "title": "tcpfwd"
        },
        "compression": {
         "type": "boolean",
         "_name_": "compression",
         "title": "compression"
        },
        "sftp_log_level": {
         "_name_": "sftp_log_level",
         "title": "sftp_log_level",
         "type": "string",
         "enum": [
          "",
          "QUIET",
          "FATAL",
          "ERROR",
          "INFO",
          "VERBOSE",
          "DEBUG",
          "DEBUG2",
          "DEBUG3"
         ]
        },
        "sftp_log_facility": {
         "_name_": "sftp_log_facility",
         "title": "sftp_log_facility",
         "type": "string",
         "enum": [
          "",
          "DAEMON",
          "USER",
          "AUTH",
          "LOCAL0",
          "LOCAL1",
          "LOCAL2",
          "LOCAL3",
          "LOCAL4",
          "LOCAL5",
          "LOCAL6",
          "LOCAL7"
         ]
        },
        "weak_ciphers": {
         "_name_": "weak_ciphers",
         "title": "weak_ciphers",
         "default": [],
         "type": "array",
         "items": {
          "_name_": "cipher",
          "title": "cipher",
          "_required_": false,
          "type": "string",
          "enum": [
           "AES128-CBC",
           "NONE"
          ]
         }
        },
        "options": {
         "_name_": "options",
         "title": "options",
         "type": "string"
        }
       },
       "additionalProperties": false,
       "_name_": "ssh_update",
       "title": "ssh_update",
       "default": {},
       "_attrs_order_": [
        "bindiface",
        "tcpport",
        "password_login_groups",
        "passwordauth",
        "kerberosauth",
        "tcpfwd",
        "compression",
        "sftp_log_level",
        "sftp_log_facility",
        "weak_ciphers",
        "options"
       ]
      },
      "return_schema_of_ssh_update": {
       "type": "object",
       "properties": {
        "bindiface": {
         "_name_": "bindiface",
         "title": "bindiface",
         "default": [],
         "type": "array",
         "items": {
          "_name_": "iface",
          "title": "iface",
          "_required_": false,
          "type": "string"
         },
         "description": "If `bindiface` is empty it will listen for all available addresses."
        },
        "tcpport": {
         "type": "integer",
         "_name_": "tcpport",
         "title": "tcpport"
        },
        "password_login_groups": {
         "_name_": "password_login_groups",
         "title": "password_login_groups",
         "default": [],
         "type": "array",
         "items": {
          "_name_": "group",
          "title": "group",
          "_required_": false,
          "type": "string"
         }
        },
        "passwordauth": {
         "type": "boolean",
         "_name_": "passwordauth",
         "title": "passwordauth"
        },
        "kerberosauth": {
         "type": "boolean",
         "_name_": "kerberosauth",
         "title": "kerberosauth"
        },
        "tcpfwd": {
         "type": "boolean",
         "_name_": "tcpfwd",
         "title": "tcpfwd"
        },
        "compression": {
         "type": "boolean",
         "_name_": "compression",
         "title": "compression"
        },
        "sftp_log_level": {
         "_name_": "sftp_log_level",
         "title": "sftp_log_level",
         "type": "string",
         "enum": [
          "",
          "QUIET",
          "FATAL",
          "ERROR",
          "INFO",
          "VERBOSE",
          "DEBUG",
          "DEBUG2",
          "DEBUG3"
         ]
        },
        "sftp_log_facility": {
         "_name_": "sftp_log_facility",
         "title": "sftp_log_facility",
         "type": "string",
         "enum": [
          "",
          "DAEMON",
          "USER",
          "AUTH",
          "LOCAL0",
          "LOCAL1",
          "LOCAL2",
          "LOCAL3",
          "LOCAL4",
          "LOCAL5",
          "LOCAL6",
          "LOCAL7"
         ]
        },
        "weak_ciphers": {
         "_name_": "weak_ciphers",
         "title": "weak_ciphers",
         "default": [],
         "type": "array",
         "items": {
          "_name_": "cipher",
          "title": "cipher",
          "_required_": false,
          "type": "string",
          "enum": [
           "AES128-CBC",
           "NONE"
          ]
         }
        },
        "options": {
         "_name_": "options",
         "title": "options",
         "type": "string"
        },
        "privatekey": {
         "_name_": "privatekey",
         "title": "privatekey",
         "type": "string"
        },
        "host_dsa_key": {
         "_name_": "host_dsa_key",
         "title": "host_dsa_key",
         "type": "string",
         "nullable": true
        },
        "host_dsa_key_pub": {
         "_name_": "host_dsa_key_pub",
         "title": "host_dsa_key_pub",
         "type": "string",
         "nullable": true
        },
        "host_dsa_key_cert_pub": {
         "_name_": "host_dsa_key_cert_pub",
         "title": "host_dsa_key_cert_pub",
         "type": "string",
         "nullable": true
        },
        "host_ecdsa_key": {
         "_name_": "host_ecdsa_key",
         "title": "host_ecdsa_key",
         "type": "string",
         "nullable": true
        },
        "host_ecdsa_key_pub": {
         "_name_": "host_ecdsa_key_pub",
         "title": "host_ecdsa_key_pub",
         "type": "string",
         "nullable": true
        },
        "host_ecdsa_key_cert_pub": {
         "_name_": "host_ecdsa_key_cert_pub",
         "title": "host_ecdsa_key_cert_pub",
         "type": "string",
         "nullable": true
        },
        "host_ed25519_key": {
         "_name_": "host_ed25519_key",
         "title": "host_ed25519_key",
         "type": "string",
         "nullable": true
        },
        "host_ed25519_key_pub": {
         "_name_": "host_ed25519_key_pub",
         "title": "host_ed25519_key_pub",
         "type": "string",
         "nullable": true
        },
        "host_ed25519_key_cert_pub": {
         "_name_": "host_ed25519_key_cert_pub",
         "title": "host_ed25519_key_cert_pub",
         "type": "string",
         "nullable": true
        },
        "host_key": {
         "_name_": "host_key",
         "title": "host_key",
         "type": "string",
         "nullable": true
        },
        "host_key_pub": {
         "_name_": "host_key_pub",
         "title": "host_key_pub",
         "type": "string",
         "nullable": true
        },
        "host_rsa_key": {
         "_name_": "host_rsa_key",
         "title": "host_rsa_key",
         "type": "string",
         "nullable": true
        },
        "host_rsa_key_pub": {
         "_name_": "host_rsa_key_pub",
         "title": "host_rsa_key_pub",
         "type": "string",
         "nullable": true
        },
        "host_rsa_key_cert_pub": {
         "_name_": "host_rsa_key_cert_pub",
         "title": "host_rsa_key_cert_pub",
         "type": "string",
         "nullable": true
        },
        "id": {
         "type": "integer",
         "_name_": "id",
         "title": "id"
        }
       },
       "additionalProperties": false,
       "_name_": "ssh_update_returns",
       "title": "ssh_update_returns",
       "default": {},
       "_attrs_order_": [
        "bindiface",
        "tcpport",
        "password_login_groups",
        "passwordauth",
        "kerberosauth",
        "tcpfwd",
        "compression",
        "sftp_log_level",
        "sftp_log_facility",
        "weak_ciphers",
        "options",
        "privatekey",
        "host_dsa_key",
        "host_dsa_key_pub",
        "host_dsa_key_cert_pub",
        "host_ecdsa_key",
        "host_ecdsa_key_pub",
        "host_ecdsa_key_cert_pub",
        "host_ed25519_key",
        "host_ed25519_key_pub",
        "host_ed25519_key_cert_pub",
        "host_key",
        "host_key_pub",
        "host_rsa_key",
        "host_rsa_key_pub",
        "host_rsa_key_cert_pub",
        "id"
       ]
      },
      "return_schema_of_ssh_bindiface_choices": {
       "type": "object",
       "properties": {},
       "additionalProperties": true,
       "_name_": "ssh_bind_interfaces_choices",
       "title": "ssh_bind_interfaces_choices",
       "default": {},
       "_attrs_order_": []
      },
      "return_schema_of_staticroute_query": {
       "anyOf": [
        {
         "items": [
          {
           "additionalProperties": false,
           "properties": {
            "destination": {
             "minLength": 1,
             "title": "destination",
             "type": "string",
             "_name_": "destination",
             "_required_": false
            },
            "gateway": {
             "minLength": 1,
             "title": "gateway",
             "type": "string",
             "_name_": "gateway",
             "_required_": false
            },
            "description": {
             "title": "description",
             "type": "string",
             "_name_": "description",
             "_required_": false
            },
            "id": {
             "title": "id",
             "type": "integer",
             "_name_": "id",
             "_required_": false
            }
           },
           "title": "StaticRouteQueryResultItem",
           "type": "object",
           "_attrs_order_": [
            "destination",
            "gateway",
            "description",
            "id"
           ]
          }
         ],
         "type": "array"
        },
        {
         "additionalProperties": false,
         "properties": {
          "destination": {
           "minLength": 1,
           "title": "destination",
           "type": "string",
           "_name_": "destination",
           "_required_": false
          },
          "gateway": {
           "minLength": 1,
           "title": "gateway",
           "type": "string",
           "_name_": "gateway",
           "_required_": false
          },
          "description": {
           "title": "description",
           "type": "string",
           "_name_": "description",
           "_required_": false
          },
          "id": {
           "title": "id",
           "type": "integer",
           "_name_": "id",
           "_required_": false
          }
         },
         "title": "StaticRouteQueryResultItem",
         "type": "object",
         "_attrs_order_": [
          "destination",
          "gateway",
          "description",
          "id"
         ]
        },
        {
         "type": "integer"
        }
       ],
       "title": "result",
       "_name_": "result"
      },
      "staticroute_create": {
       "additionalProperties": false,
       "properties": {
        "destination": {
         "format": "ipvanynetwork",
         "title": "destination",
         "type": "string",
         "_name_": "destination"
        },
        "gateway": {
         "format": "ipvanyaddress",
         "title": "gateway",
         "type": "string",
         "_name_": "gateway"
        },
        "description": {
         "default": "",
         "title": "description",
         "type": "string",
         "_name_": "description"
        }
       },
       "required": [
        "destination",
        "gateway"
       ],
       "title": "data",
       "type": "object",
       "_name_": "data",
       "_attrs_order_": [
        "destination",
        "gateway",
        "description"
       ]
      },
      "return_schema_of_staticroute_create": {
       "additionalProperties": false,
       "properties": {
        "destination": {
         "minLength": 1,
         "title": "destination",
         "type": "string",
         "_name_": "destination"
        },
        "gateway": {
         "minLength": 1,
         "title": "gateway",
         "type": "string",
         "_name_": "gateway"
        },
        "description": {
         "default": "",
         "title": "description",
         "type": "string",
         "_name_": "description"
        },
        "id": {
         "title": "id",
         "type": "integer",
         "_name_": "id"
        }
       },
       "required": [
        "destination",
        "gateway",
        "id"
       ],
       "title": "result",
       "type": "object",
       "_name_": "result",
       "_attrs_order_": [
        "destination",
        "gateway",
        "description",
        "id"
       ]
      },
      "return_schema_of_staticroute_delete": {
       "title": "result",
       "type": "boolean",
       "_name_": "result"
      },
      "staticroute_update": {
       "additionalProperties": false,
       "properties": {
        "destination": {
         "format": "ipvanynetwork",
         "title": "destination",
         "type": "string",
         "_name_": "destination"
        },
        "gateway": {
         "format": "ipvanyaddress",
         "title": "gateway",
         "type": "string",
         "_name_": "gateway"
        },
        "description": {
         "title": "description",
         "type": "string",
         "_name_": "description"
        }
       },
       "title": "data",
       "type": "object",
       "_name_": "data",
       "_attrs_order_": [
        "destination",
        "gateway",
        "description"
       ]
      },
      "return_schema_of_staticroute_update": {
       "additionalProperties": false,
       "properties": {
        "destination": {
         "minLength": 1,
         "title": "destination",
         "type": "string",
         "_name_": "destination"
        },
        "gateway": {
         "minLength": 1,
         "title": "gateway",
         "type": "string",
         "_name_": "gateway"
        },
        "description": {
         "default": "",
         "title": "description",
         "type": "string",
         "_name_": "description"
        },
        "id": {
         "title": "id",
         "type": "integer",
         "_name_": "id"
        }
       },
       "required": [
        "destination",
        "gateway",
        "id"
       ],
       "title": "result",
       "type": "object",
       "_name_": "result",
       "_attrs_order_": [
        "destination",
        "gateway",
        "description",
        "id"
       ]
      },
      "staticroute_get_instance_0": {
       "title": "id",
       "type": "integer",
       "_name_": "id"
      },
      "staticroute_get_instance_1": {
       "additionalProperties": false,
       "properties": {
        "relationships": {
         "default": true,
         "title": "relationships",
         "type": "boolean",
         "_name_": "relationships"
        },
        "extend": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "extend",
         "_name_": "extend"
        },
        "extend_context": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "extend_context",
         "_name_": "extend_context"
        },
        "prefix": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "prefix",
         "_name_": "prefix"
        },
        "extra": {
         "default": {},
         "title": "extra",
         "type": "object",
         "_name_": "extra"
        },
        "order_by": {
         "default": [],
         "items": {
          "type": "string"
         },
         "title": "order_by",
         "type": "array",
         "_name_": "order_by"
        },
        "select": {
         "default": [],
         "items": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "items": [
             {}
            ],
            "type": "array"
           }
          ]
         },
         "title": "select",
         "type": "array",
         "_name_": "select"
        },
        "count": {
         "default": false,
         "title": "count",
         "type": "boolean",
         "_name_": "count"
        },
        "get": {
         "default": false,
         "title": "get",
         "type": "boolean",
         "_name_": "get"
        },
        "offset": {
         "default": 0,
         "title": "offset",
         "type": "integer",
         "_name_": "offset"
        },
        "limit": {
         "default": 0,
         "title": "limit",
         "type": "integer",
         "_name_": "limit"
        },
        "force_sql_filters": {
         "default": false,
         "title": "force_sql_filters",
         "type": "boolean",
         "_name_": "force_sql_filters"
        }
       },
       "title": "options",
       "type": "object",
       "default": {},
       "_name_": "options",
       "_attrs_order_": [
        "relationships",
        "extend",
        "extend_context",
        "prefix",
        "extra",
        "order_by",
        "select",
        "count",
        "get",
        "offset",
        "limit",
        "force_sql_filters"
       ]
      },
      "staticroute_get_instance": {
       "type": "object",
       "properties": {
        "id": {
         "$ref": "#/components/schemas/staticroute_get_instance_0"
        },
        "options": {
         "$ref": "#/components/schemas/staticroute_get_instance_1"
        }
       }
      },
      "return_schema_of_staticroute_get_instance": {
       "additionalProperties": false,
       "properties": {
        "destination": {
         "minLength": 1,
         "title": "destination",
         "type": "string",
         "_name_": "destination"
        },
        "gateway": {
         "minLength": 1,
         "title": "gateway",
         "type": "string",
         "_name_": "gateway"
        },
        "description": {
         "default": "",
         "title": "description",
         "type": "string",
         "_name_": "description"
        },
        "id": {
         "title": "id",
         "type": "integer",
         "_name_": "id"
        }
       },
       "required": [
        "destination",
        "gateway",
        "id"
       ],
       "title": "result",
       "type": "object",
       "_name_": "result",
       "_attrs_order_": [
        "destination",
        "gateway",
        "description",
        "id"
       ]
      },
      "return_schema_of_support_config": {
       "type": "object",
       "properties": {
        "enabled": {
         "type": "boolean",
         "_name_": "enabled",
         "title": "enabled",
         "nullable": true
        },
        "name": {
         "_name_": "name",
         "title": "name",
         "type": "string"
        },
        "title": {
         "_name_": "title",
         "title": "title",
         "type": "string"
        },
        "email": {
         "_name_": "email",
         "title": "email",
         "type": "string"
        },
        "phone": {
         "_name_": "phone",
         "title": "phone",
         "type": "string"
        },
        "secondary_name": {
         "_name_": "secondary_name",
         "title": "secondary_name",
         "type": "string"
        },
        "secondary_title": {
         "_name_": "secondary_title",
         "title": "secondary_title",
         "type": "string"
        },
        "secondary_email": {
         "_name_": "secondary_email",
         "title": "secondary_email",
         "type": "string"
        },
        "secondary_phone": {
         "_name_": "secondary_phone",
         "title": "secondary_phone",
         "type": "string"
        },
        "id": {
         "type": "integer",
         "_name_": "id",
         "title": "id"
        }
       },
       "additionalProperties": false,
       "_name_": "support_entry",
       "title": "support_entry",
       "default": {},
       "_attrs_order_": [
        "enabled",
        "name",
        "title",
        "email",
        "phone",
        "secondary_name",
        "secondary_title",
        "secondary_email",
        "secondary_phone",
        "id"
       ]
      },
      "support_update": {
       "type": "object",
       "properties": {
        "enabled": {
         "type": "boolean",
         "_name_": "enabled",
         "title": "enabled",
         "nullable": true
        },
        "name": {
         "_name_": "name",
         "title": "name",
         "type": "string"
        },
        "title": {
         "_name_": "title",
         "title": "title",
         "type": "string"
        },
        "email": {
         "_name_": "email",
         "title": "email",
         "type": "string"
        },
        "phone": {
         "_name_": "phone",
         "title": "phone",
         "type": "string"
        },
        "secondary_name": {
         "_name_": "secondary_name",
         "title": "secondary_name",
         "type": "string"
        },
        "secondary_title": {
         "_name_": "secondary_title",
         "title": "secondary_title",
         "type": "string"
        },
        "secondary_email": {
         "_name_": "secondary_email",
         "title": "secondary_email",
         "type": "string"
        },
        "secondary_phone": {
         "_name_": "secondary_phone",
         "title": "secondary_phone",
         "type": "string"
        }
       },
       "additionalProperties": false,
       "_name_": "support_update",
       "title": "support_update",
       "default": {},
       "_attrs_order_": [
        "enabled",
        "name",
        "title",
        "email",
        "phone",
        "secondary_name",
        "secondary_title",
        "secondary_email",
        "secondary_phone"
       ]
      },
      "return_schema_of_support_update": {
       "type": "object",
       "properties": {
        "enabled": {
         "type": "boolean",
         "_name_": "enabled",
         "title": "enabled",
         "nullable": true
        },
        "name": {
         "_name_": "name",
         "title": "name",
         "type": "string"
        },
        "title": {
         "_name_": "title",
         "title": "title",
         "type": "string"
        },
        "email": {
         "_name_": "email",
         "title": "email",
         "type": "string"
        },
        "phone": {
         "_name_": "phone",
         "title": "phone",
         "type": "string"
        },
        "secondary_name": {
         "_name_": "secondary_name",
         "title": "secondary_name",
         "type": "string"
        },
        "secondary_title": {
         "_name_": "secondary_title",
         "title": "secondary_title",
         "type": "string"
        },
        "secondary_email": {
         "_name_": "secondary_email",
         "title": "secondary_email",
         "type": "string"
        },
        "secondary_phone": {
         "_name_": "secondary_phone",
         "title": "secondary_phone",
         "type": "string"
        },
        "id": {
         "type": "integer",
         "_name_": "id",
         "title": "id"
        }
       },
       "additionalProperties": false,
       "_name_": "support_update_returns",
       "title": "support_update_returns",
       "default": {},
       "_attrs_order_": [
        "enabled",
        "name",
        "title",
        "email",
        "phone",
        "secondary_name",
        "secondary_title",
        "secondary_email",
        "secondary_phone",
        "id"
       ]
      },
      "support_attach_ticket": {
       "type": "object",
       "properties": {
        "ticket": {
         "type": "integer",
         "_name_": "ticket",
         "title": "ticket"
        },
        "filename": {
         "_name_": "filename",
         "title": "filename",
         "type": "string"
        },
        "token": {
         "_name_": "token",
         "title": "token",
         "type": "string"
        }
       },
       "additionalProperties": false,
       "_name_": "attach_ticket",
       "title": "attach_ticket",
       "default": {},
       "_attrs_order_": [
        "ticket",
        "filename",
        "token"
       ]
      },
      "return_schema_of_support_attach_ticket_max_size": {
       "type": "integer",
       "_name_": "attach_ticket_max_size",
       "title": "attach_ticket_max_size"
      },
      "return_schema_of_support_fields": {
       "_name_": "support_fields",
       "title": "support_fields",
       "default": [],
       "type": "array",
       "items": {
        "_name_": "support_field",
        "title": "support_field",
        "default": [],
        "_required_": false,
        "type": "array",
        "items": [
         {
          "_name_": "field",
          "title": "field",
          "_required_": false,
          "type": "string"
         }
        ]
       }
      },
      "return_schema_of_support_is_available": {
       "type": "boolean",
       "_name_": "proactive_support_is_available",
       "title": "proactive_support_is_available"
      },
      "return_schema_of_support_is_available_and_enabled": {
       "type": "boolean",
       "_name_": "proactive_support_is_available_and_enabled",
       "title": "proactive_support_is_available_and_enabled"
      },
      "support_new_ticket": {
       "type": "object",
       "properties": {
        "title": {
         "_name_": "title",
         "title": "title",
         "type": "string"
        },
        "body": {
         "_name_": "body",
         "title": "body",
         "type": "string"
        },
        "category": {
         "_name_": "category",
         "title": "category",
         "type": "string"
        },
        "attach_debug": {
         "type": "boolean",
         "_name_": "attach_debug",
         "title": "attach_debug",
         "default": false
        },
        "token": {
         "_name_": "token",
         "title": "token",
         "type": "string"
        },
        "type": {
         "_name_": "type",
         "title": "type",
         "type": "string",
         "enum": [
          "BUG",
          "FEATURE"
         ]
        },
        "criticality": {
         "_name_": "criticality",
         "title": "criticality",
         "type": "string",
         "description": "For Community Edition, `criticality`, `environment`, `phone`, `name`, and `email` attributes are not required."
        },
        "environment": {
         "_name_": "environment",
         "title": "environment",
         "type": "string",
         "description": "For Community Edition, `criticality`, `environment`, `phone`, `name`, and `email` attributes are not required."
        },
        "phone": {
         "_name_": "phone",
         "title": "phone",
         "type": "string",
         "description": "For Community Edition, `criticality`, `environment`, `phone`, `name`, and `email` attributes are not required."
        },
        "name": {
         "_name_": "name",
         "title": "name",
         "type": "string",
         "description": "For Community Edition, `criticality`, `environment`, `phone`, `name`, and `email` attributes are not required."
        },
        "email": {
         "_name_": "email",
         "title": "email",
         "type": "string",
         "description": "For Community Edition, `criticality`, `environment`, `phone`, `name`, and `email` attributes are not required."
        },
        "cc": {
         "_name_": "cc",
         "title": "cc",
         "default": [],
         "type": "array",
         "items": {
          "_name_": "email",
          "title": "email",
          "_required_": false,
          "type": "string"
         }
        }
       },
       "additionalProperties": false,
       "_name_": "new_ticket",
       "title": "new_ticket",
       "default": {},
       "_attrs_order_": [
        "title",
        "body",
        "category",
        "attach_debug",
        "token",
        "type",
        "criticality",
        "environment",
        "phone",
        "name",
        "email",
        "cc"
       ]
      },
      "return_schema_of_support_new_ticket": {
       "type": "object",
       "properties": {
        "ticket": {
         "type": "integer",
         "_name_": "ticket",
         "title": "ticket",
         "nullable": true
        },
        "url": {
         "_name_": "url",
         "title": "url",
         "type": "string",
         "nullable": true
        },
        "has_debug": {
         "type": "boolean",
         "_name_": "has_debug",
         "title": "has_debug"
        }
       },
       "additionalProperties": false,
       "_name_": "new_ticket_response",
       "title": "new_ticket_response",
       "default": {},
       "_attrs_order_": [
        "ticket",
        "url",
        "has_debug"
       ]
      },
      "support_similar_issues": {
       "_name_": "query",
       "title": "query",
       "type": "string"
      },
      "return_schema_of_support_similar_issues": {
       "_name_": "similar_issues",
       "title": "similar_issues",
       "default": [],
       "type": "array",
       "items": {
        "type": "object",
        "properties": {
         "url": {
          "_name_": "url",
          "title": "url",
          "_required_": false,
          "type": "string"
         },
         "summary": {
          "_name_": "summary",
          "title": "summary",
          "_required_": false,
          "type": "string"
         }
        },
        "additionalProperties": true,
        "_name_": "similar_issue",
        "title": "similar_issue",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "url",
         "summary"
        ]
       }
      },
      "system_feature_enabled": {
       "_name_": "feature",
       "title": "feature",
       "type": "string",
       "enum": [
        "DEDUP",
        "FIBRECHANNEL",
        "VM"
       ]
      },
      "return_schema_of_system_feature_enabled": {
       "type": "boolean",
       "_name_": "feature_enabled",
       "title": "feature_enabled"
      },
      "return_schema_of_system_host_id": {
       "_name_": "system_host_identifier",
       "title": "system_host_identifier",
       "type": "string"
      },
      "return_schema_of_system_info": {
       "type": "object",
       "properties": {
        "version": {
         "_name_": "version",
         "title": "TrueNAS Version",
         "type": "string"
        },
        "buildtime": {
         "_name_": "buildtime",
         "title": "TrueNAS build time",
         "type": "string"
        },
        "hostname": {
         "_name_": "hostname",
         "title": "System host name",
         "type": "string"
        },
        "physmem": {
         "type": "integer",
         "_name_": "physmem",
         "title": "System physical memory"
        },
        "model": {
         "_name_": "model",
         "title": "CPU Model",
         "type": "string"
        },
        "cores": {
         "type": "integer",
         "_name_": "cores",
         "title": "CPU Cores"
        },
        "physical_cores": {
         "type": "integer",
         "_name_": "physical_cores",
         "title": "CPU Physical Cores"
        },
        "loadavg": {
         "_name_": "loadavg",
         "title": "loadavg",
         "default": [],
         "type": "array",
         "items": {}
        },
        "uptime": {
         "_name_": "uptime",
         "title": "uptime",
         "type": "string"
        },
        "uptime_seconds": {
         "type": "float",
         "_name_": "uptime_seconds",
         "title": "uptime_seconds"
        },
        "system_serial": {
         "_name_": "system_serial",
         "title": "system_serial",
         "type": "string",
         "nullable": true
        },
        "system_product": {
         "_name_": "system_product",
         "title": "system_product",
         "type": "string",
         "nullable": true
        },
        "system_product_version": {
         "_name_": "system_product_version",
         "title": "system_product_version",
         "type": "string",
         "nullable": true
        },
        "license": {
         "type": "object",
         "properties": {},
         "additionalProperties": true,
         "_name_": "license",
         "title": "license",
         "default": {},
         "_attrs_order_": []
        },
        "boottime": {
         "_name_": "boottime",
         "title": "boottime",
         "type": "string"
        },
        "datetime": {
         "_name_": "datetime",
         "title": "datetime",
         "type": "string"
        },
        "timezone": {
         "_name_": "timezone",
         "title": "timezone",
         "type": "string"
        },
        "system_manufacturer": {
         "_name_": "system_manufacturer",
         "title": "system_manufacturer",
         "type": "string",
         "nullable": true
        },
        "ecc_memory": {
         "type": "boolean",
         "_name_": "ecc_memory",
         "title": "ecc_memory"
        }
       },
       "additionalProperties": false,
       "_name_": "system_info",
       "title": "system_info",
       "default": {},
       "_attrs_order_": [
        "version",
        "buildtime",
        "hostname",
        "physmem",
        "model",
        "cores",
        "physical_cores",
        "loadavg",
        "uptime",
        "uptime_seconds",
        "system_serial",
        "system_product",
        "system_product_version",
        "license",
        "boottime",
        "datetime",
        "timezone",
        "system_manufacturer",
        "ecc_memory"
       ]
      },
      "system_license_update": {
       "_name_": "license",
       "title": "license",
       "type": "string"
      },
      "return_schema_of_system_product_type": {
       "_name_": "product_type",
       "title": "product_type",
       "type": "string"
      },
      "return_schema_of_system_ready": {
       "type": "boolean",
       "_name_": "system_ready",
       "title": "system_ready"
      },
      "system_reboot_0": {
       "minLength": 1,
       "title": "reason",
       "type": "string",
       "_name_": "reason"
      },
      "system_reboot_1": {
       "additionalProperties": false,
       "properties": {
        "delay": {
         "anyOf": [
          {
           "type": "integer"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "delay",
         "_name_": "delay"
        }
       },
       "title": "options",
       "type": "object",
       "default": {
        "delay": null
       },
       "_name_": "options",
       "_attrs_order_": [
        "delay"
       ]
      },
      "system_reboot": {
       "type": "object",
       "properties": {
        "reason": {
         "$ref": "#/components/schemas/system_reboot_0"
        },
        "options": {
         "$ref": "#/components/schemas/system_reboot_1"
        }
       }
      },
      "return_schema_of_system_reboot": {
       "title": "result",
       "type": "null",
       "_name_": "result"
      },
      "system_release_notes_url": {
       "_name_": "version_str",
       "title": "version_str",
       "default": null,
       "type": "string",
       "description": "`version_str` str: represents a version to check against"
      },
      "return_schema_of_system_release_notes_url": {
       "_name_": "truenas_release_notes_url",
       "title": "truenas_release_notes_url",
       "type": "string",
       "nullable": true
      },
      "system_shutdown_0": {
       "minLength": 1,
       "title": "reason",
       "type": "string",
       "_name_": "reason"
      },
      "system_shutdown_1": {
       "additionalProperties": false,
       "properties": {
        "delay": {
         "anyOf": [
          {
           "type": "integer"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "delay",
         "_name_": "delay"
        }
       },
       "title": "options",
       "type": "object",
       "default": {
        "delay": null
       },
       "_name_": "options",
       "_attrs_order_": [
        "delay"
       ]
      },
      "system_shutdown": {
       "type": "object",
       "properties": {
        "reason": {
         "$ref": "#/components/schemas/system_shutdown_0"
        },
        "options": {
         "$ref": "#/components/schemas/system_shutdown_1"
        }
       }
      },
      "return_schema_of_system_shutdown": {
       "title": "result",
       "type": "null",
       "_name_": "result"
      },
      "return_schema_of_system_state": {
       "_name_": "system_state",
       "title": "system_state",
       "type": "string",
       "enum": [
        "SHUTTING_DOWN",
        "READY",
        "BOOTING"
       ]
      },
      "return_schema_of_system_version": {
       "_name_": "truenas_version",
       "title": "truenas_version",
       "type": "string"
      },
      "return_schema_of_system_version_short": {
       "_name_": "truenas_version_shortname",
       "title": "truenas_version_shortname",
       "type": "string"
      },
      "return_schema_of_system_advanced_config": {
       "type": "object",
       "properties": {
        "advancedmode": {
         "type": "boolean",
         "_name_": "advancedmode",
         "title": "advancedmode"
        },
        "autotune": {
         "type": "boolean",
         "_name_": "autotune",
         "title": "autotune"
        },
        "kdump_enabled": {
         "type": "boolean",
         "_name_": "kdump_enabled",
         "title": "kdump_enabled"
        },
        "boot_scrub": {
         "type": "integer",
         "_name_": "boot_scrub",
         "title": "boot_scrub"
        },
        "consolemenu": {
         "type": "boolean",
         "_name_": "consolemenu",
         "title": "consolemenu"
        },
        "consolemsg": {
         "type": "boolean",
         "_name_": "consolemsg",
         "title": "consolemsg"
        },
        "debugkernel": {
         "type": "boolean",
         "_name_": "debugkernel",
         "title": "debugkernel"
        },
        "fqdn_syslog": {
         "type": "boolean",
         "_name_": "fqdn_syslog",
         "title": "fqdn_syslog"
        },
        "motd": {
         "_name_": "motd",
         "title": "motd",
         "type": "string"
        },
        "login_banner": {
         "_name_": "login_banner",
         "title": "login_banner",
         "type": "string"
        },
        "powerdaemon": {
         "type": "boolean",
         "_name_": "powerdaemon",
         "title": "powerdaemon"
        },
        "serialconsole": {
         "type": "boolean",
         "_name_": "serialconsole",
         "title": "serialconsole"
        },
        "serialport": {
         "_name_": "serialport",
         "title": "serialport",
         "type": "string"
        },
        "anonstats_token": {
         "_name_": "anonstats_token",
         "title": "anonstats_token",
         "type": "string"
        },
        "serialspeed": {
         "_name_": "serialspeed",
         "title": "serialspeed",
         "type": "string",
         "enum": [
          "9600",
          "19200",
          "38400",
          "57600",
          "115200"
         ]
        },
        "overprovision": {
         "type": "integer",
         "_name_": "overprovision",
         "title": "overprovision",
         "nullable": true
        },
        "traceback": {
         "type": "boolean",
         "_name_": "traceback",
         "title": "traceback"
        },
        "uploadcrash": {
         "type": "boolean",
         "_name_": "uploadcrash",
         "title": "uploadcrash"
        },
        "anonstats": {
         "type": "boolean",
         "_name_": "anonstats",
         "title": "anonstats"
        },
        "sed_user": {
         "_name_": "sed_user",
         "title": "sed_user",
         "type": "string",
         "enum": [
          "USER",
          "MASTER"
         ]
        },
        "sysloglevel": {
         "_name_": "sysloglevel",
         "title": "sysloglevel",
         "type": "string",
         "enum": [
          "F_EMERG",
          "F_ALERT",
          "F_CRIT",
          "F_ERR",
          "F_WARNING",
          "F_NOTICE",
          "F_INFO",
          "F_DEBUG"
         ]
        },
        "syslogserver": {
         "_name_": "syslogserver",
         "title": "syslogserver",
         "type": "string"
        },
        "syslog_transport": {
         "_name_": "syslog_transport",
         "title": "syslog_transport",
         "type": "string",
         "enum": [
          "UDP",
          "TCP",
          "TLS"
         ]
        },
        "syslog_tls_certificate": {
         "type": "integer",
         "_name_": "syslog_tls_certificate",
         "title": "syslog_tls_certificate",
         "nullable": true
        },
        "syslog_tls_certificate_authority": {
         "type": "integer",
         "_name_": "syslog_tls_certificate_authority",
         "title": "syslog_tls_certificate_authority",
         "nullable": true
        },
        "syslog_audit": {
         "type": "boolean",
         "_name_": "syslog_audit",
         "title": "syslog_audit"
        },
        "isolated_gpu_pci_ids": {
         "_name_": "isolated_gpu_pci_ids",
         "title": "isolated_gpu_pci_ids",
         "default": [],
         "type": "array",
         "items": {
          "_name_": "pci_id",
          "title": "pci_id",
          "_required_": false,
          "type": "string"
         }
        },
        "kernel_extra_options": {
         "_name_": "kernel_extra_options",
         "title": "kernel_extra_options",
         "type": "string"
        },
        "id": {
         "type": "integer",
         "_name_": "id",
         "title": "id"
        }
       },
       "additionalProperties": false,
       "_name_": "system_advanced_entry",
       "title": "system_advanced_entry",
       "default": {},
       "_attrs_order_": [
        "advancedmode",
        "autotune",
        "kdump_enabled",
        "boot_scrub",
        "consolemenu",
        "consolemsg",
        "debugkernel",
        "fqdn_syslog",
        "motd",
        "login_banner",
        "powerdaemon",
        "serialconsole",
        "serialport",
        "anonstats_token",
        "serialspeed",
        "overprovision",
        "traceback",
        "uploadcrash",
        "anonstats",
        "sed_user",
        "sysloglevel",
        "syslogserver",
        "syslog_transport",
        "syslog_tls_certificate",
        "syslog_tls_certificate_authority",
        "syslog_audit",
        "isolated_gpu_pci_ids",
        "kernel_extra_options",
        "id"
       ]
      },
      "system_advanced_update": {
       "type": "object",
       "properties": {
        "advancedmode": {
         "type": "boolean",
         "_name_": "advancedmode",
         "title": "advancedmode"
        },
        "autotune": {
         "type": "boolean",
         "_name_": "autotune",
         "title": "autotune",
         "description": "`autotune` when enabled executes autotune script which attempts to optimize the system based on the installed\nhardware."
        },
        "kdump_enabled": {
         "type": "boolean",
         "_name_": "kdump_enabled",
         "title": "kdump_enabled"
        },
        "boot_scrub": {
         "type": "integer",
         "_name_": "boot_scrub",
         "title": "boot_scrub"
        },
        "consolemenu": {
         "type": "boolean",
         "_name_": "consolemenu",
         "title": "consolemenu",
         "description": "`consolemenu` should be disabled if the menu at console is not desired. It will default to standard login\nin the console if disabled."
        },
        "consolemsg": {
         "type": "boolean",
         "_name_": "consolemsg",
         "title": "consolemsg"
        },
        "debugkernel": {
         "type": "boolean",
         "_name_": "debugkernel",
         "title": "debugkernel"
        },
        "fqdn_syslog": {
         "type": "boolean",
         "_name_": "fqdn_syslog",
         "title": "fqdn_syslog"
        },
        "motd": {
         "_name_": "motd",
         "title": "motd",
         "type": "string"
        },
        "login_banner": {
         "_name_": "login_banner",
         "title": "login_banner",
         "type": "string"
        },
        "powerdaemon": {
         "type": "boolean",
         "_name_": "powerdaemon",
         "title": "powerdaemon"
        },
        "serialconsole": {
         "type": "boolean",
         "_name_": "serialconsole",
         "title": "serialconsole"
        },
        "serialport": {
         "_name_": "serialport",
         "title": "serialport",
         "type": "string"
        },
        "serialspeed": {
         "_name_": "serialspeed",
         "title": "serialspeed",
         "type": "string",
         "enum": [
          "9600",
          "19200",
          "38400",
          "57600",
          "115200"
         ]
        },
        "overprovision": {
         "type": "integer",
         "_name_": "overprovision",
         "title": "overprovision",
         "nullable": true
        },
        "traceback": {
         "type": "boolean",
         "_name_": "traceback",
         "title": "traceback"
        },
        "uploadcrash": {
         "type": "boolean",
         "_name_": "uploadcrash",
         "title": "uploadcrash"
        },
        "anonstats": {
         "type": "boolean",
         "_name_": "anonstats",
         "title": "anonstats"
        },
        "sed_user": {
         "_name_": "sed_user",
         "title": "sed_user",
         "type": "string",
         "enum": [
          "USER",
          "MASTER"
         ]
        },
        "sysloglevel": {
         "_name_": "sysloglevel",
         "title": "sysloglevel",
         "type": "string",
         "enum": [
          "F_EMERG",
          "F_ALERT",
          "F_CRIT",
          "F_ERR",
          "F_WARNING",
          "F_NOTICE",
          "F_INFO",
          "F_DEBUG"
         ],
         "description": "When `syslogserver` is defined, logs of `sysloglevel` or above are sent. If syslog_audit is also set\nthen the remote syslog server will also receive audit messages."
        },
        "syslogserver": {
         "_name_": "syslogserver",
         "title": "syslogserver",
         "type": "string",
         "description": "When `syslogserver` is defined, logs of `sysloglevel` or above are sent. If syslog_audit is also set\nthen the remote syslog server will also receive audit messages."
        },
        "syslog_transport": {
         "_name_": "syslog_transport",
         "title": "syslog_transport",
         "type": "string",
         "enum": [
          "UDP",
          "TCP",
          "TLS"
         ]
        },
        "syslog_tls_certificate": {
         "type": "integer",
         "_name_": "syslog_tls_certificate",
         "title": "syslog_tls_certificate",
         "nullable": true
        },
        "syslog_tls_certificate_authority": {
         "type": "integer",
         "_name_": "syslog_tls_certificate_authority",
         "title": "syslog_tls_certificate_authority",
         "nullable": true
        },
        "syslog_audit": {
         "type": "boolean",
         "_name_": "syslog_audit",
         "title": "syslog_audit"
        },
        "kernel_extra_options": {
         "_name_": "kernel_extra_options",
         "title": "kernel_extra_options",
         "type": "string"
        },
        "sed_passwd": {
         "_name_": "sed_passwd",
         "title": "sed_passwd",
         "type": "string"
        }
       },
       "additionalProperties": false,
       "_name_": "system_advanced_update",
       "title": "system_advanced_update",
       "default": {},
       "_attrs_order_": [
        "advancedmode",
        "autotune",
        "kdump_enabled",
        "boot_scrub",
        "consolemenu",
        "consolemsg",
        "debugkernel",
        "fqdn_syslog",
        "motd",
        "login_banner",
        "powerdaemon",
        "serialconsole",
        "serialport",
        "serialspeed",
        "overprovision",
        "traceback",
        "uploadcrash",
        "anonstats",
        "sed_user",
        "sysloglevel",
        "syslogserver",
        "syslog_transport",
        "syslog_tls_certificate",
        "syslog_tls_certificate_authority",
        "syslog_audit",
        "kernel_extra_options",
        "sed_passwd"
       ]
      },
      "return_schema_of_system_advanced_update": {
       "type": "object",
       "properties": {
        "advancedmode": {
         "type": "boolean",
         "_name_": "advancedmode",
         "title": "advancedmode"
        },
        "autotune": {
         "type": "boolean",
         "_name_": "autotune",
         "title": "autotune",
         "description": "`autotune` when enabled executes autotune script which attempts to optimize the system based on the installed\nhardware."
        },
        "kdump_enabled": {
         "type": "boolean",
         "_name_": "kdump_enabled",
         "title": "kdump_enabled"
        },
        "boot_scrub": {
         "type": "integer",
         "_name_": "boot_scrub",
         "title": "boot_scrub"
        },
        "consolemenu": {
         "type": "boolean",
         "_name_": "consolemenu",
         "title": "consolemenu",
         "description": "`consolemenu` should be disabled if the menu at console is not desired. It will default to standard login\nin the console if disabled."
        },
        "consolemsg": {
         "type": "boolean",
         "_name_": "consolemsg",
         "title": "consolemsg"
        },
        "debugkernel": {
         "type": "boolean",
         "_name_": "debugkernel",
         "title": "debugkernel"
        },
        "fqdn_syslog": {
         "type": "boolean",
         "_name_": "fqdn_syslog",
         "title": "fqdn_syslog"
        },
        "motd": {
         "_name_": "motd",
         "title": "motd",
         "type": "string"
        },
        "login_banner": {
         "_name_": "login_banner",
         "title": "login_banner",
         "type": "string"
        },
        "powerdaemon": {
         "type": "boolean",
         "_name_": "powerdaemon",
         "title": "powerdaemon"
        },
        "serialconsole": {
         "type": "boolean",
         "_name_": "serialconsole",
         "title": "serialconsole"
        },
        "serialport": {
         "_name_": "serialport",
         "title": "serialport",
         "type": "string"
        },
        "anonstats_token": {
         "_name_": "anonstats_token",
         "title": "anonstats_token",
         "type": "string"
        },
        "serialspeed": {
         "_name_": "serialspeed",
         "title": "serialspeed",
         "type": "string",
         "enum": [
          "9600",
          "19200",
          "38400",
          "57600",
          "115200"
         ]
        },
        "overprovision": {
         "type": "integer",
         "_name_": "overprovision",
         "title": "overprovision",
         "nullable": true
        },
        "traceback": {
         "type": "boolean",
         "_name_": "traceback",
         "title": "traceback"
        },
        "uploadcrash": {
         "type": "boolean",
         "_name_": "uploadcrash",
         "title": "uploadcrash"
        },
        "anonstats": {
         "type": "boolean",
         "_name_": "anonstats",
         "title": "anonstats"
        },
        "sed_user": {
         "_name_": "sed_user",
         "title": "sed_user",
         "type": "string",
         "enum": [
          "USER",
          "MASTER"
         ]
        },
        "sysloglevel": {
         "_name_": "sysloglevel",
         "title": "sysloglevel",
         "type": "string",
         "enum": [
          "F_EMERG",
          "F_ALERT",
          "F_CRIT",
          "F_ERR",
          "F_WARNING",
          "F_NOTICE",
          "F_INFO",
          "F_DEBUG"
         ],
         "description": "When `syslogserver` is defined, logs of `sysloglevel` or above are sent. If syslog_audit is also set\nthen the remote syslog server will also receive audit messages."
        },
        "syslogserver": {
         "_name_": "syslogserver",
         "title": "syslogserver",
         "type": "string",
         "description": "When `syslogserver` is defined, logs of `sysloglevel` or above are sent. If syslog_audit is also set\nthen the remote syslog server will also receive audit messages."
        },
        "syslog_transport": {
         "_name_": "syslog_transport",
         "title": "syslog_transport",
         "type": "string",
         "enum": [
          "UDP",
          "TCP",
          "TLS"
         ]
        },
        "syslog_tls_certificate": {
         "type": "integer",
         "_name_": "syslog_tls_certificate",
         "title": "syslog_tls_certificate",
         "nullable": true
        },
        "syslog_tls_certificate_authority": {
         "type": "integer",
         "_name_": "syslog_tls_certificate_authority",
         "title": "syslog_tls_certificate_authority",
         "nullable": true
        },
        "syslog_audit": {
         "type": "boolean",
         "_name_": "syslog_audit",
         "title": "syslog_audit"
        },
        "isolated_gpu_pci_ids": {
         "_name_": "isolated_gpu_pci_ids",
         "title": "isolated_gpu_pci_ids",
         "default": [],
         "type": "array",
         "items": {
          "_name_": "pci_id",
          "title": "pci_id",
          "_required_": false,
          "type": "string"
         }
        },
        "kernel_extra_options": {
         "_name_": "kernel_extra_options",
         "title": "kernel_extra_options",
         "type": "string"
        },
        "id": {
         "type": "integer",
         "_name_": "id",
         "title": "id"
        }
       },
       "additionalProperties": false,
       "_name_": "system_advanced_update_returns",
       "title": "system_advanced_update_returns",
       "default": {},
       "_attrs_order_": [
        "advancedmode",
        "autotune",
        "kdump_enabled",
        "boot_scrub",
        "consolemenu",
        "consolemsg",
        "debugkernel",
        "fqdn_syslog",
        "motd",
        "login_banner",
        "powerdaemon",
        "serialconsole",
        "serialport",
        "anonstats_token",
        "serialspeed",
        "overprovision",
        "traceback",
        "uploadcrash",
        "anonstats",
        "sed_user",
        "sysloglevel",
        "syslogserver",
        "syslog_transport",
        "syslog_tls_certificate",
        "syslog_tls_certificate_authority",
        "syslog_audit",
        "isolated_gpu_pci_ids",
        "kernel_extra_options",
        "id"
       ]
      },
      "return_schema_of_system_advanced_get_gpu_pci_choices": {
       "type": "object",
       "properties": {},
       "additionalProperties": true,
       "_name_": "get_gpu_pci_choices",
       "title": "get_gpu_pci_choices",
       "default": {},
       "_attrs_order_": []
      },
      "return_schema_of_system_advanced_login_banner": {
       "_name_": "login_banner",
       "title": "login_banner",
       "type": "string"
      },
      "return_schema_of_system_advanced_sed_global_password": {
       "_name_": "sed_global_password",
       "title": "sed_global_password",
       "type": "string"
      },
      "return_schema_of_system_advanced_sed_global_password_is_set": {
       "type": "boolean",
       "_name_": "sed_global_password_is_set",
       "title": "sed_global_password_is_set"
      },
      "return_schema_of_system_advanced_serial_port_choices": {
       "type": "object",
       "properties": {},
       "additionalProperties": true,
       "_name_": "serial_port_choices",
       "title": "serial_port_choices",
       "default": {},
       "_attrs_order_": []
      },
      "return_schema_of_system_advanced_syslog_certificate_authority_choices": {
       "type": "object",
       "properties": {},
       "additionalProperties": true,
       "_name_": "syslog_certificate_authority_choices",
       "title": "Syslog Certificate Authority Choices",
       "default": {},
       "_attrs_order_": []
      },
      "return_schema_of_system_advanced_syslog_certificate_choices": {
       "type": "object",
       "properties": {},
       "additionalProperties": true,
       "_name_": "syslog_certificate_choices",
       "title": "Syslog Certificate Choices",
       "default": {},
       "_attrs_order_": []
      },
      "system_advanced_update_gpu_pci_ids": {
       "_name_": "isolated_gpu_pci_ids",
       "title": "isolated_gpu_pci_ids",
       "default": [],
       "type": "array",
       "items": {
        "_name_": "pci_id",
        "title": "pci_id",
        "_required_": false,
        "type": "string"
       }
      },
      "return_schema_of_system_general_config": {
       "type": "object",
       "properties": {
        "ui_certificate": {
         "type": "object",
         "properties": {
          "id": {
           "type": "integer",
           "_name_": "id",
           "title": "id"
          },
          "type": {
           "type": "integer",
           "_name_": "type",
           "title": "type"
          },
          "name": {
           "_name_": "name",
           "title": "name",
           "type": "string"
          },
          "certificate": {
           "_name_": "certificate",
           "title": "certificate",
           "type": "string",
           "nullable": true
          },
          "privatekey": {
           "_name_": "privatekey",
           "title": "privatekey",
           "type": "string",
           "nullable": true
          },
          "CSR": {
           "_name_": "CSR",
           "title": "CSR",
           "type": "string",
           "nullable": true
          },
          "acme_uri": {
           "_name_": "acme_uri",
           "title": "acme_uri",
           "type": "string",
           "nullable": true
          },
          "domains_authenticators": {
           "type": "object",
           "properties": {},
           "additionalProperties": true,
           "_name_": "domains_authenticators",
           "title": "domains_authenticators",
           "default": {},
           "_attrs_order_": []
          },
          "renew_days": {
           "type": "integer",
           "_name_": "renew_days",
           "title": "renew_days"
          },
          "revoked_date": {
           "_name_": "revoked_date",
           "title": "revoked_date",
           "type": "string",
           "nullable": true
          },
          "signedby": {
           "type": "object",
           "properties": {},
           "additionalProperties": true,
           "_name_": "signedby",
           "title": "signedby",
           "default": {},
           "_attrs_order_": []
          },
          "root_path": {
           "_name_": "root_path",
           "title": "root_path",
           "type": "string"
          },
          "acme": {
           "type": "object",
           "properties": {},
           "additionalProperties": true,
           "_name_": "acme",
           "title": "acme",
           "default": {},
           "_attrs_order_": []
          },
          "certificate_path": {
           "_name_": "certificate_path",
           "title": "certificate_path",
           "type": "string",
           "nullable": true
          },
          "privatekey_path": {
           "_name_": "privatekey_path",
           "title": "privatekey_path",
           "type": "string",
           "nullable": true
          },
          "csr_path": {
           "_name_": "csr_path",
           "title": "csr_path",
           "type": "string",
           "nullable": true
          },
          "cert_type": {
           "_name_": "cert_type",
           "title": "cert_type",
           "type": "string"
          },
          "revoked": {
           "type": "boolean",
           "_name_": "revoked",
           "title": "revoked"
          },
          "expired": {
           "type": "boolean",
           "_name_": "expired",
           "title": "expired",
           "nullable": true
          },
          "issuer": {
           "anyOf": [
            {
             "_name_": "issuer",
             "title": "issuer",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            {
             "type": "object",
             "properties": {},
             "additionalProperties": true,
             "_name_": "issuer",
             "title": "issuer",
             "default": {},
             "_required_": false,
             "_attrs_order_": []
            }
           ],
           "nullable": false,
           "_name_": "issuer",
           "description": null
          },
          "chain_list": {
           "_name_": "chain_list",
           "title": "chain_list",
           "default": [],
           "type": "array",
           "items": {
            "_name_": "certificate",
            "title": "certificate",
            "_required_": false,
            "type": "string"
           }
          },
          "country": {
           "_name_": "country",
           "title": "country",
           "type": "string",
           "nullable": true
          },
          "state": {
           "_name_": "state",
           "title": "state",
           "type": "string",
           "nullable": true
          },
          "city": {
           "_name_": "city",
           "title": "city",
           "type": "string",
           "nullable": true
          },
          "organization": {
           "_name_": "organization",
           "title": "organization",
           "type": "string",
           "nullable": true
          },
          "organizational_unit": {
           "_name_": "organizational_unit",
           "title": "organizational_unit",
           "type": "string",
           "nullable": true
          },
          "san": {
           "_name_": "san",
           "title": "san",
           "default": [],
           "type": "array",
           "items": {
            "_name_": "san_entry",
            "title": "san_entry",
            "_required_": false,
            "type": "string"
           },
           "nullable": true
          },
          "email": {
           "_name_": "email",
           "title": "email",
           "type": "string",
           "nullable": true
          },
          "DN": {
           "_name_": "DN",
           "title": "DN",
           "type": "string",
           "nullable": true
          },
          "subject_name_hash": {
           "_name_": "subject_name_hash",
           "title": "subject_name_hash",
           "type": "string",
           "nullable": true
          },
          "digest_algorithm": {
           "_name_": "digest_algorithm",
           "title": "digest_algorithm",
           "type": "string",
           "nullable": true
          },
          "from": {
           "_name_": "from",
           "title": "from",
           "type": "string",
           "nullable": true
          },
          "common": {
           "_name_": "common",
           "title": "common",
           "type": "string",
           "nullable": true
          },
          "until": {
           "_name_": "until",
           "title": "until",
           "type": "string",
           "nullable": true
          },
          "fingerprint": {
           "_name_": "fingerprint",
           "title": "fingerprint",
           "type": "string",
           "nullable": true
          },
          "key_type": {
           "_name_": "key_type",
           "title": "key_type",
           "type": "string",
           "nullable": true
          },
          "internal": {
           "_name_": "internal",
           "title": "internal",
           "type": "string",
           "nullable": true
          },
          "lifetime": {
           "type": "integer",
           "_name_": "lifetime",
           "title": "lifetime",
           "nullable": true
          },
          "serial": {
           "type": "integer",
           "_name_": "serial",
           "title": "serial",
           "nullable": true
          },
          "key_length": {
           "type": "integer",
           "_name_": "key_length",
           "title": "key_length",
           "nullable": true
          },
          "add_to_trusted_store": {
           "type": "boolean",
           "_name_": "add_to_trusted_store",
           "title": "add_to_trusted_store",
           "default": false
          },
          "chain": {
           "type": "boolean",
           "_name_": "chain",
           "title": "chain",
           "nullable": true
          },
          "CA_type_existing": {
           "type": "boolean",
           "_name_": "CA_type_existing",
           "title": "CA_type_existing"
          },
          "CA_type_internal": {
           "type": "boolean",
           "_name_": "CA_type_internal",
           "title": "CA_type_internal"
          },
          "CA_type_intermediate": {
           "type": "boolean",
           "_name_": "CA_type_intermediate",
           "title": "CA_type_intermediate"
          },
          "cert_type_existing": {
           "type": "boolean",
           "_name_": "cert_type_existing",
           "title": "cert_type_existing"
          },
          "cert_type_internal": {
           "type": "boolean",
           "_name_": "cert_type_internal",
           "title": "cert_type_internal"
          },
          "cert_type_CSR": {
           "type": "boolean",
           "_name_": "cert_type_CSR",
           "title": "cert_type_CSR"
          },
          "parsed": {
           "type": "boolean",
           "_name_": "parsed",
           "title": "parsed"
          },
          "can_be_revoked": {
           "type": "boolean",
           "_name_": "can_be_revoked",
           "title": "can_be_revoked"
          },
          "extensions": {
           "type": "object",
           "properties": {},
           "additionalProperties": true,
           "_name_": "extensions",
           "title": "extensions",
           "default": {},
           "_attrs_order_": []
          },
          "revoked_certs": {
           "_name_": "revoked_certs",
           "title": "revoked_certs",
           "default": [],
           "type": "array",
           "items": {}
          },
          "crl_path": {
           "_name_": "crl_path",
           "title": "crl_path",
           "type": "string"
          },
          "signed_certificates": {
           "type": "integer",
           "_name_": "signed_certificates",
           "title": "signed_certificates"
          }
         },
         "additionalProperties": false,
         "_name_": "ui_certificate",
         "title": "ui_certificate",
         "default": {},
         "_attrs_order_": [
          "id",
          "type",
          "name",
          "certificate",
          "privatekey",
          "CSR",
          "acme_uri",
          "domains_authenticators",
          "renew_days",
          "revoked_date",
          "signedby",
          "root_path",
          "acme",
          "certificate_path",
          "privatekey_path",
          "csr_path",
          "cert_type",
          "revoked",
          "expired",
          "issuer",
          "chain_list",
          "country",
          "state",
          "city",
          "organization",
          "organizational_unit",
          "san",
          "email",
          "DN",
          "subject_name_hash",
          "digest_algorithm",
          "from",
          "common",
          "until",
          "fingerprint",
          "key_type",
          "internal",
          "lifetime",
          "serial",
          "key_length",
          "add_to_trusted_store",
          "chain",
          "CA_type_existing",
          "CA_type_internal",
          "CA_type_intermediate",
          "cert_type_existing",
          "cert_type_internal",
          "cert_type_CSR",
          "parsed",
          "can_be_revoked",
          "extensions",
          "revoked_certs",
          "crl_path",
          "signed_certificates"
         ]
        },
        "ui_httpsport": {
         "type": "integer",
         "_name_": "ui_httpsport",
         "title": "ui_httpsport"
        },
        "ui_httpsredirect": {
         "type": "boolean",
         "_name_": "ui_httpsredirect",
         "title": "ui_httpsredirect"
        },
        "ui_httpsprotocols": {
         "_name_": "ui_httpsprotocols",
         "title": "ui_httpsprotocols",
         "default": [],
         "type": "array",
         "items": {
          "_name_": "protocol",
          "title": "protocol",
          "_required_": false,
          "type": "string",
          "enum": [
           "TLSv1",
           "TLSv1.1",
           "TLSv1.2",
           "TLSv1.3"
          ]
         }
        },
        "ui_port": {
         "type": "integer",
         "_name_": "ui_port",
         "title": "ui_port"
        },
        "ui_address": {
         "_name_": "ui_address",
         "title": "ui_address",
         "default": [],
         "type": "array",
         "items": {
          "_name_": "addr",
          "title": "addr",
          "_required_": false,
          "type": "string"
         }
        },
        "ui_v6address": {
         "_name_": "ui_v6address",
         "title": "ui_v6address",
         "default": [],
         "type": "array",
         "items": {
          "_name_": "addr",
          "title": "addr",
          "_required_": false,
          "type": "string"
         }
        },
        "ui_allowlist": {
         "_name_": "ui_allowlist",
         "title": "ui_allowlist",
         "default": [],
         "type": "array",
         "items": {
          "_name_": "addr",
          "title": "addr",
          "_required_": false,
          "type": "string"
         }
        },
        "ui_consolemsg": {
         "type": "boolean",
         "_name_": "ui_consolemsg",
         "title": "ui_consolemsg"
        },
        "ui_x_frame_options": {
         "_name_": "ui_x_frame_options",
         "title": "ui_x_frame_options",
         "type": "string",
         "enum": [
          "SAMEORIGIN",
          "DENY",
          "ALLOW_ALL"
         ]
        },
        "kbdmap": {
         "_name_": "kbdmap",
         "title": "kbdmap",
         "type": "string"
        },
        "language": {
         "_name_": "language",
         "title": "language",
         "type": "string"
        },
        "timezone": {
         "_name_": "timezone",
         "title": "timezone",
         "type": "string"
        },
        "usage_collection": {
         "type": "boolean",
         "_name_": "usage_collection",
         "title": "usage_collection",
         "nullable": true
        },
        "wizardshown": {
         "type": "boolean",
         "_name_": "wizardshown",
         "title": "wizardshown"
        },
        "usage_collection_is_set": {
         "type": "boolean",
         "_name_": "usage_collection_is_set",
         "title": "usage_collection_is_set"
        },
        "ds_auth": {
         "type": "boolean",
         "_name_": "ds_auth",
         "title": "ds_auth"
        },
        "id": {
         "type": "integer",
         "_name_": "id",
         "title": "id"
        }
       },
       "additionalProperties": false,
       "_name_": "system_general_entry",
       "title": "system_general_entry",
       "default": {},
       "_attrs_order_": [
        "ui_certificate",
        "ui_httpsport",
        "ui_httpsredirect",
        "ui_httpsprotocols",
        "ui_port",
        "ui_address",
        "ui_v6address",
        "ui_allowlist",
        "ui_consolemsg",
        "ui_x_frame_options",
        "kbdmap",
        "language",
        "timezone",
        "usage_collection",
        "wizardshown",
        "usage_collection_is_set",
        "ds_auth",
        "id"
       ]
      },
      "system_general_update": {
       "type": "object",
       "properties": {
        "ui_httpsport": {
         "type": "integer",
         "_name_": "ui_httpsport",
         "title": "ui_httpsport"
        },
        "ui_httpsredirect": {
         "type": "boolean",
         "_name_": "ui_httpsredirect",
         "title": "ui_httpsredirect",
         "description": "`ui_httpsredirect` when set, makes sure that all HTTP requests are converted to HTTPS requests to better\nenhance security."
        },
        "ui_httpsprotocols": {
         "_name_": "ui_httpsprotocols",
         "title": "ui_httpsprotocols",
         "default": [],
         "type": "array",
         "items": {
          "_name_": "protocol",
          "title": "protocol",
          "_required_": false,
          "type": "string",
          "enum": [
           "TLSv1",
           "TLSv1.1",
           "TLSv1.2",
           "TLSv1.3"
          ]
         }
        },
        "ui_port": {
         "type": "integer",
         "_name_": "ui_port",
         "title": "ui_port"
        },
        "ui_address": {
         "_name_": "ui_address",
         "title": "ui_address",
         "default": [],
         "type": "array",
         "items": {
          "_name_": "addr",
          "title": "addr",
          "_required_": false,
          "type": "string"
         },
         "description": "`ui_address` and `ui_v6address` are a list of valid ipv4/ipv6 addresses respectively which the system will\nlisten on."
        },
        "ui_v6address": {
         "_name_": "ui_v6address",
         "title": "ui_v6address",
         "default": [],
         "type": "array",
         "items": {
          "_name_": "addr",
          "title": "addr",
          "_required_": false,
          "type": "string"
         },
         "description": "`ui_address` and `ui_v6address` are a list of valid ipv4/ipv6 addresses respectively which the system will\nlisten on."
        },
        "ui_allowlist": {
         "_name_": "ui_allowlist",
         "title": "ui_allowlist",
         "default": [],
         "type": "array",
         "items": {
          "_name_": "addr",
          "title": "addr",
          "_required_": false,
          "type": "string"
         },
         "description": "`ui_allowlist` is a list of IP addresses and networks that are allow to use API and UI. If this list is empty,\nthen all IP addresses are allowed to use API and UI."
        },
        "ui_consolemsg": {
         "type": "boolean",
         "_name_": "ui_consolemsg",
         "title": "ui_consolemsg"
        },
        "ui_x_frame_options": {
         "_name_": "ui_x_frame_options",
         "title": "ui_x_frame_options",
         "type": "string",
         "enum": [
          "SAMEORIGIN",
          "DENY",
          "ALLOW_ALL"
         ]
        },
        "kbdmap": {
         "_name_": "kbdmap",
         "title": "kbdmap",
         "type": "string"
        },
        "language": {
         "_name_": "language",
         "title": "language",
         "type": "string"
        },
        "timezone": {
         "_name_": "timezone",
         "title": "timezone",
         "type": "string"
        },
        "usage_collection": {
         "type": "boolean",
         "_name_": "usage_collection",
         "title": "usage_collection",
         "nullable": true
        },
        "ds_auth": {
         "type": "boolean",
         "_name_": "ds_auth",
         "title": "ds_auth",
         "description": "`ds_auth` controls whether configured Directory Service users that are granted with Privileges are allowed to\nlog in to the Web UI or use TrueNAS API."
        },
        "ui_certificate": {
         "type": "integer",
         "_name_": "ui_certificate",
         "title": "ui_certificate",
         "description": "`ui_certificate` is used to enable HTTPS access to the system. If `ui_certificate` is not configured on boot,\nit is automatically created by the system.",
         "nullable": true
        },
        "rollback_timeout": {
         "type": "integer",
         "_name_": "rollback_timeout",
         "title": "rollback_timeout",
         "nullable": true
        },
        "ui_restart_delay": {
         "type": "integer",
         "_name_": "ui_restart_delay",
         "title": "ui_restart_delay",
         "description": "HTTP connections will be aborted) or specify `ui_restart_delay` (in seconds) to automatically apply them after\nsome small amount of time necessary you might need to receive the response for your settings update request.",
         "nullable": true
        }
       },
       "additionalProperties": false,
       "_name_": "general_settings",
       "title": "general_settings",
       "default": {},
       "_attrs_order_": [
        "ui_httpsport",
        "ui_httpsredirect",
        "ui_httpsprotocols",
        "ui_port",
        "ui_address",
        "ui_v6address",
        "ui_allowlist",
        "ui_consolemsg",
        "ui_x_frame_options",
        "kbdmap",
        "language",
        "timezone",
        "usage_collection",
        "ds_auth",
        "ui_certificate",
        "rollback_timeout",
        "ui_restart_delay"
       ]
      },
      "return_schema_of_system_general_update": {
       "type": "object",
       "properties": {
        "ui_certificate": {
         "type": "object",
         "properties": {
          "id": {
           "type": "integer",
           "_name_": "id",
           "title": "id"
          },
          "type": {
           "type": "integer",
           "_name_": "type",
           "title": "type"
          },
          "name": {
           "_name_": "name",
           "title": "name",
           "type": "string"
          },
          "certificate": {
           "_name_": "certificate",
           "title": "certificate",
           "type": "string",
           "nullable": true
          },
          "privatekey": {
           "_name_": "privatekey",
           "title": "privatekey",
           "type": "string",
           "nullable": true
          },
          "CSR": {
           "_name_": "CSR",
           "title": "CSR",
           "type": "string",
           "nullable": true
          },
          "acme_uri": {
           "_name_": "acme_uri",
           "title": "acme_uri",
           "type": "string",
           "nullable": true
          },
          "domains_authenticators": {
           "type": "object",
           "properties": {},
           "additionalProperties": true,
           "_name_": "domains_authenticators",
           "title": "domains_authenticators",
           "default": {},
           "_attrs_order_": []
          },
          "renew_days": {
           "type": "integer",
           "_name_": "renew_days",
           "title": "renew_days"
          },
          "revoked_date": {
           "_name_": "revoked_date",
           "title": "revoked_date",
           "type": "string",
           "nullable": true
          },
          "signedby": {
           "type": "object",
           "properties": {},
           "additionalProperties": true,
           "_name_": "signedby",
           "title": "signedby",
           "default": {},
           "_attrs_order_": []
          },
          "root_path": {
           "_name_": "root_path",
           "title": "root_path",
           "type": "string"
          },
          "acme": {
           "type": "object",
           "properties": {},
           "additionalProperties": true,
           "_name_": "acme",
           "title": "acme",
           "default": {},
           "_attrs_order_": []
          },
          "certificate_path": {
           "_name_": "certificate_path",
           "title": "certificate_path",
           "type": "string",
           "nullable": true
          },
          "privatekey_path": {
           "_name_": "privatekey_path",
           "title": "privatekey_path",
           "type": "string",
           "nullable": true
          },
          "csr_path": {
           "_name_": "csr_path",
           "title": "csr_path",
           "type": "string",
           "nullable": true
          },
          "cert_type": {
           "_name_": "cert_type",
           "title": "cert_type",
           "type": "string"
          },
          "revoked": {
           "type": "boolean",
           "_name_": "revoked",
           "title": "revoked"
          },
          "expired": {
           "type": "boolean",
           "_name_": "expired",
           "title": "expired",
           "nullable": true
          },
          "issuer": {
           "anyOf": [
            {
             "_name_": "issuer",
             "title": "issuer",
             "_required_": false,
             "type": [
              "string",
              "null"
             ]
            },
            {
             "type": "object",
             "properties": {},
             "additionalProperties": true,
             "_name_": "issuer",
             "title": "issuer",
             "default": {},
             "_required_": false,
             "_attrs_order_": []
            }
           ],
           "nullable": false,
           "_name_": "issuer",
           "description": null
          },
          "chain_list": {
           "_name_": "chain_list",
           "title": "chain_list",
           "default": [],
           "type": "array",
           "items": {
            "_name_": "certificate",
            "title": "certificate",
            "_required_": false,
            "type": "string"
           }
          },
          "country": {
           "_name_": "country",
           "title": "country",
           "type": "string",
           "nullable": true
          },
          "state": {
           "_name_": "state",
           "title": "state",
           "type": "string",
           "nullable": true
          },
          "city": {
           "_name_": "city",
           "title": "city",
           "type": "string",
           "nullable": true
          },
          "organization": {
           "_name_": "organization",
           "title": "organization",
           "type": "string",
           "nullable": true
          },
          "organizational_unit": {
           "_name_": "organizational_unit",
           "title": "organizational_unit",
           "type": "string",
           "nullable": true
          },
          "san": {
           "_name_": "san",
           "title": "san",
           "default": [],
           "type": "array",
           "items": {
            "_name_": "san_entry",
            "title": "san_entry",
            "_required_": false,
            "type": "string"
           },
           "nullable": true
          },
          "email": {
           "_name_": "email",
           "title": "email",
           "type": "string",
           "nullable": true
          },
          "DN": {
           "_name_": "DN",
           "title": "DN",
           "type": "string",
           "nullable": true
          },
          "subject_name_hash": {
           "_name_": "subject_name_hash",
           "title": "subject_name_hash",
           "type": "string",
           "nullable": true
          },
          "digest_algorithm": {
           "_name_": "digest_algorithm",
           "title": "digest_algorithm",
           "type": "string",
           "nullable": true
          },
          "from": {
           "_name_": "from",
           "title": "from",
           "type": "string",
           "nullable": true
          },
          "common": {
           "_name_": "common",
           "title": "common",
           "type": "string",
           "nullable": true
          },
          "until": {
           "_name_": "until",
           "title": "until",
           "type": "string",
           "nullable": true
          },
          "fingerprint": {
           "_name_": "fingerprint",
           "title": "fingerprint",
           "type": "string",
           "nullable": true
          },
          "key_type": {
           "_name_": "key_type",
           "title": "key_type",
           "type": "string",
           "nullable": true
          },
          "internal": {
           "_name_": "internal",
           "title": "internal",
           "type": "string",
           "nullable": true
          },
          "lifetime": {
           "type": "integer",
           "_name_": "lifetime",
           "title": "lifetime",
           "nullable": true
          },
          "serial": {
           "type": "integer",
           "_name_": "serial",
           "title": "serial",
           "nullable": true
          },
          "key_length": {
           "type": "integer",
           "_name_": "key_length",
           "title": "key_length",
           "nullable": true
          },
          "add_to_trusted_store": {
           "type": "boolean",
           "_name_": "add_to_trusted_store",
           "title": "add_to_trusted_store",
           "default": false
          },
          "chain": {
           "type": "boolean",
           "_name_": "chain",
           "title": "chain",
           "nullable": true
          },
          "CA_type_existing": {
           "type": "boolean",
           "_name_": "CA_type_existing",
           "title": "CA_type_existing"
          },
          "CA_type_internal": {
           "type": "boolean",
           "_name_": "CA_type_internal",
           "title": "CA_type_internal"
          },
          "CA_type_intermediate": {
           "type": "boolean",
           "_name_": "CA_type_intermediate",
           "title": "CA_type_intermediate"
          },
          "cert_type_existing": {
           "type": "boolean",
           "_name_": "cert_type_existing",
           "title": "cert_type_existing"
          },
          "cert_type_internal": {
           "type": "boolean",
           "_name_": "cert_type_internal",
           "title": "cert_type_internal"
          },
          "cert_type_CSR": {
           "type": "boolean",
           "_name_": "cert_type_CSR",
           "title": "cert_type_CSR"
          },
          "parsed": {
           "type": "boolean",
           "_name_": "parsed",
           "title": "parsed"
          },
          "can_be_revoked": {
           "type": "boolean",
           "_name_": "can_be_revoked",
           "title": "can_be_revoked"
          },
          "extensions": {
           "type": "object",
           "properties": {},
           "additionalProperties": true,
           "_name_": "extensions",
           "title": "extensions",
           "default": {},
           "_attrs_order_": []
          },
          "revoked_certs": {
           "_name_": "revoked_certs",
           "title": "revoked_certs",
           "default": [],
           "type": "array",
           "items": {}
          },
          "crl_path": {
           "_name_": "crl_path",
           "title": "crl_path",
           "type": "string"
          },
          "signed_certificates": {
           "type": "integer",
           "_name_": "signed_certificates",
           "title": "signed_certificates"
          }
         },
         "additionalProperties": false,
         "_name_": "ui_certificate",
         "title": "ui_certificate",
         "default": {},
         "_attrs_order_": [
          "id",
          "type",
          "name",
          "certificate",
          "privatekey",
          "CSR",
          "acme_uri",
          "domains_authenticators",
          "renew_days",
          "revoked_date",
          "signedby",
          "root_path",
          "acme",
          "certificate_path",
          "privatekey_path",
          "csr_path",
          "cert_type",
          "revoked",
          "expired",
          "issuer",
          "chain_list",
          "country",
          "state",
          "city",
          "organization",
          "organizational_unit",
          "san",
          "email",
          "DN",
          "subject_name_hash",
          "digest_algorithm",
          "from",
          "common",
          "until",
          "fingerprint",
          "key_type",
          "internal",
          "lifetime",
          "serial",
          "key_length",
          "add_to_trusted_store",
          "chain",
          "CA_type_existing",
          "CA_type_internal",
          "CA_type_intermediate",
          "cert_type_existing",
          "cert_type_internal",
          "cert_type_CSR",
          "parsed",
          "can_be_revoked",
          "extensions",
          "revoked_certs",
          "crl_path",
          "signed_certificates"
         ],
         "description": "`ui_certificate` is used to enable HTTPS access to the system. If `ui_certificate` is not configured on boot,\nit is automatically created by the system."
        },
        "ui_httpsport": {
         "type": "integer",
         "_name_": "ui_httpsport",
         "title": "ui_httpsport"
        },
        "ui_httpsredirect": {
         "type": "boolean",
         "_name_": "ui_httpsredirect",
         "title": "ui_httpsredirect",
         "description": "`ui_httpsredirect` when set, makes sure that all HTTP requests are converted to HTTPS requests to better\nenhance security."
        },
        "ui_httpsprotocols": {
         "_name_": "ui_httpsprotocols",
         "title": "ui_httpsprotocols",
         "default": [],
         "type": "array",
         "items": {
          "_name_": "protocol",
          "title": "protocol",
          "_required_": false,
          "type": "string",
          "enum": [
           "TLSv1",
           "TLSv1.1",
           "TLSv1.2",
           "TLSv1.3"
          ]
         }
        },
        "ui_port": {
         "type": "integer",
         "_name_": "ui_port",
         "title": "ui_port"
        },
        "ui_address": {
         "_name_": "ui_address",
         "title": "ui_address",
         "default": [],
         "type": "array",
         "items": {
          "_name_": "addr",
          "title": "addr",
          "_required_": false,
          "type": "string"
         },
         "description": "`ui_address` and `ui_v6address` are a list of valid ipv4/ipv6 addresses respectively which the system will\nlisten on."
        },
        "ui_v6address": {
         "_name_": "ui_v6address",
         "title": "ui_v6address",
         "default": [],
         "type": "array",
         "items": {
          "_name_": "addr",
          "title": "addr",
          "_required_": false,
          "type": "string"
         },
         "description": "`ui_address` and `ui_v6address` are a list of valid ipv4/ipv6 addresses respectively which the system will\nlisten on."
        },
        "ui_allowlist": {
         "_name_": "ui_allowlist",
         "title": "ui_allowlist",
         "default": [],
         "type": "array",
         "items": {
          "_name_": "addr",
          "title": "addr",
          "_required_": false,
          "type": "string"
         },
         "description": "`ui_allowlist` is a list of IP addresses and networks that are allow to use API and UI. If this list is empty,\nthen all IP addresses are allowed to use API and UI."
        },
        "ui_consolemsg": {
         "type": "boolean",
         "_name_": "ui_consolemsg",
         "title": "ui_consolemsg"
        },
        "ui_x_frame_options": {
         "_name_": "ui_x_frame_options",
         "title": "ui_x_frame_options",
         "type": "string",
         "enum": [
          "SAMEORIGIN",
          "DENY",
          "ALLOW_ALL"
         ]
        },
        "kbdmap": {
         "_name_": "kbdmap",
         "title": "kbdmap",
         "type": "string"
        },
        "language": {
         "_name_": "language",
         "title": "language",
         "type": "string"
        },
        "timezone": {
         "_name_": "timezone",
         "title": "timezone",
         "type": "string"
        },
        "usage_collection": {
         "type": "boolean",
         "_name_": "usage_collection",
         "title": "usage_collection",
         "nullable": true
        },
        "wizardshown": {
         "type": "boolean",
         "_name_": "wizardshown",
         "title": "wizardshown"
        },
        "usage_collection_is_set": {
         "type": "boolean",
         "_name_": "usage_collection_is_set",
         "title": "usage_collection_is_set"
        },
        "ds_auth": {
         "type": "boolean",
         "_name_": "ds_auth",
         "title": "ds_auth",
         "description": "`ds_auth` controls whether configured Directory Service users that are granted with Privileges are allowed to\nlog in to the Web UI or use TrueNAS API."
        },
        "id": {
         "type": "integer",
         "_name_": "id",
         "title": "id"
        }
       },
       "additionalProperties": false,
       "_name_": "system_general_update_returns",
       "title": "system_general_update_returns",
       "default": {},
       "_attrs_order_": [
        "ui_certificate",
        "ui_httpsport",
        "ui_httpsredirect",
        "ui_httpsprotocols",
        "ui_port",
        "ui_address",
        "ui_v6address",
        "ui_allowlist",
        "ui_consolemsg",
        "ui_x_frame_options",
        "kbdmap",
        "language",
        "timezone",
        "usage_collection",
        "wizardshown",
        "usage_collection_is_set",
        "ds_auth",
        "id"
       ]
      },
      "return_schema_of_system_general_checkin_waiting": {
       "type": "integer",
       "_name_": "remaining_seconds",
       "title": "remaining_seconds",
       "nullable": true
      },
      "return_schema_of_system_general_country_choices": {
       "additionalProperties": {
        "type": "string"
       },
       "title": "result",
       "type": "object",
       "_name_": "result"
      },
      "return_schema_of_system_general_kbdmap_choices": {
       "type": "object",
       "properties": {},
       "additionalProperties": true,
       "_name_": "kbdmap_choices",
       "title": "kbdmap_choices",
       "default": {},
       "_attrs_order_": []
      },
      "return_schema_of_system_general_language_choices": {
       "type": "object",
       "properties": {},
       "additionalProperties": true,
       "_name_": "system_language_choices",
       "title": "System Language Choices",
       "default": {},
       "_attrs_order_": []
      },
      "return_schema_of_system_general_local_url": {
       "_name_": "local_url",
       "title": "local_url",
       "type": "string"
      },
      "return_schema_of_system_general_timezone_choices": {
       "type": "object",
       "properties": {},
       "additionalProperties": true,
       "_name_": "system_timezone_choices",
       "title": "System Timezone Choices",
       "default": {},
       "_attrs_order_": []
      },
      "return_schema_of_system_general_ui_address_choices": {
       "type": "object",
       "properties": {},
       "additionalProperties": true,
       "_name_": "available_ui_address_choices",
       "title": "Available UI IPv4 Address Choices",
       "default": {},
       "_attrs_order_": []
      },
      "return_schema_of_system_general_ui_certificate_choices": {
       "type": "object",
       "properties": {},
       "additionalProperties": true,
       "_name_": "ui_certificate_choices",
       "title": "UI Certificate Choices",
       "default": {},
       "_attrs_order_": []
      },
      "return_schema_of_system_general_ui_httpsprotocols_choices": {
       "type": "object",
       "properties": {
        "TLSv1": {
         "_name_": "TLSv1",
         "title": "TLSv1",
         "type": "string",
         "enum": [
          "TLSv1"
         ]
        },
        "TLSv1.1": {
         "_name_": "TLSv1.1",
         "title": "TLSv1.1",
         "type": "string",
         "enum": [
          "TLSv1.1"
         ]
        },
        "TLSv1.2": {
         "_name_": "TLSv1.2",
         "title": "TLSv1.2",
         "type": "string",
         "enum": [
          "TLSv1.2"
         ]
        },
        "TLSv1.3": {
         "_name_": "TLSv1.3",
         "title": "TLSv1.3",
         "type": "string",
         "enum": [
          "TLSv1.3"
         ]
        }
       },
       "additionalProperties": false,
       "_name_": "ui_https_protocols",
       "title": "UI HTTPS Protocol Choices",
       "default": {},
       "_attrs_order_": [
        "TLSv1",
        "TLSv1.1",
        "TLSv1.2",
        "TLSv1.3"
       ]
      },
      "system_general_ui_restart": {
       "type": "integer",
       "_name_": "delay",
       "title": "delay",
       "default": 3
      },
      "return_schema_of_system_general_ui_v6address_choices": {
       "type": "object",
       "properties": {},
       "additionalProperties": true,
       "_name_": "available_ui_v6address_choices",
       "title": "Available UI IPv6 Address Choices",
       "default": {},
       "_attrs_order_": []
      },
      "return_schema_of_system_global_id": {
       "_name_": "system_uuid",
       "title": "system_uuid",
       "type": "string"
      },
      "return_schema_of_system_ntpserver_query": {
       "anyOf": [
        {
         "items": [
          {
           "additionalProperties": false,
           "properties": {
            "id": {
             "title": "id",
             "type": "integer",
             "_name_": "id",
             "_required_": false
            },
            "address": {
             "title": "address",
             "type": "string",
             "_name_": "address",
             "_required_": false
            },
            "burst": {
             "title": "burst",
             "type": "boolean",
             "_name_": "burst",
             "_required_": false
            },
            "iburst": {
             "title": "iburst",
             "type": "boolean",
             "_name_": "iburst",
             "_required_": false
            },
            "prefer": {
             "title": "prefer",
             "type": "boolean",
             "_name_": "prefer",
             "_required_": false
            },
            "minpoll": {
             "title": "minpoll",
             "type": "integer",
             "_name_": "minpoll",
             "_required_": false
            },
            "maxpoll": {
             "title": "maxpoll",
             "type": "integer",
             "_name_": "maxpoll",
             "_required_": false
            }
           },
           "title": "NTPServerQueryResultItem",
           "type": "object",
           "_attrs_order_": [
            "id",
            "address",
            "burst",
            "iburst",
            "prefer",
            "minpoll",
            "maxpoll"
           ]
          }
         ],
         "type": "array"
        },
        {
         "additionalProperties": false,
         "properties": {
          "id": {
           "title": "id",
           "type": "integer",
           "_name_": "id",
           "_required_": false
          },
          "address": {
           "title": "address",
           "type": "string",
           "_name_": "address",
           "_required_": false
          },
          "burst": {
           "title": "burst",
           "type": "boolean",
           "_name_": "burst",
           "_required_": false
          },
          "iburst": {
           "title": "iburst",
           "type": "boolean",
           "_name_": "iburst",
           "_required_": false
          },
          "prefer": {
           "title": "prefer",
           "type": "boolean",
           "_name_": "prefer",
           "_required_": false
          },
          "minpoll": {
           "title": "minpoll",
           "type": "integer",
           "_name_": "minpoll",
           "_required_": false
          },
          "maxpoll": {
           "title": "maxpoll",
           "type": "integer",
           "_name_": "maxpoll",
           "_required_": false
          }
         },
         "title": "NTPServerQueryResultItem",
         "type": "object",
         "_attrs_order_": [
          "id",
          "address",
          "burst",
          "iburst",
          "prefer",
          "minpoll",
          "maxpoll"
         ]
        },
        {
         "type": "integer"
        }
       ],
       "title": "result",
       "_name_": "result"
      },
      "system_ntpserver_create": {
       "additionalProperties": false,
       "properties": {
        "address": {
         "title": "address",
         "type": "string",
         "_name_": "address"
        },
        "burst": {
         "default": false,
         "title": "burst",
         "type": "boolean",
         "_name_": "burst"
        },
        "iburst": {
         "default": true,
         "title": "iburst",
         "type": "boolean",
         "_name_": "iburst"
        },
        "prefer": {
         "default": false,
         "title": "prefer",
         "type": "boolean",
         "_name_": "prefer"
        },
        "minpoll": {
         "default": 6,
         "title": "minpoll",
         "type": "integer",
         "_name_": "minpoll"
        },
        "maxpoll": {
         "default": 10,
         "title": "maxpoll",
         "type": "integer",
         "_name_": "maxpoll"
        },
        "force": {
         "default": false,
         "title": "force",
         "type": "boolean",
         "_name_": "force"
        }
       },
       "required": [
        "address"
       ],
       "title": "ntp_server_create",
       "type": "object",
       "_name_": "ntp_server_create",
       "_attrs_order_": [
        "address",
        "burst",
        "iburst",
        "prefer",
        "minpoll",
        "maxpoll",
        "force"
       ]
      },
      "return_schema_of_system_ntpserver_create": {
       "additionalProperties": false,
       "properties": {
        "id": {
         "title": "id",
         "type": "integer",
         "_name_": "id"
        },
        "address": {
         "title": "address",
         "type": "string",
         "_name_": "address"
        },
        "burst": {
         "default": false,
         "title": "burst",
         "type": "boolean",
         "_name_": "burst"
        },
        "iburst": {
         "default": true,
         "title": "iburst",
         "type": "boolean",
         "_name_": "iburst"
        },
        "prefer": {
         "default": false,
         "title": "prefer",
         "type": "boolean",
         "_name_": "prefer"
        },
        "minpoll": {
         "default": 6,
         "title": "minpoll",
         "type": "integer",
         "_name_": "minpoll"
        },
        "maxpoll": {
         "default": 10,
         "title": "maxpoll",
         "type": "integer",
         "_name_": "maxpoll"
        }
       },
       "required": [
        "id",
        "address"
       ],
       "title": "result",
       "type": "object",
       "_name_": "result",
       "_attrs_order_": [
        "id",
        "address",
        "burst",
        "iburst",
        "prefer",
        "minpoll",
        "maxpoll"
       ]
      },
      "return_schema_of_system_ntpserver_delete": {
       "const": true,
       "enum": [
        true
       ],
       "title": "result",
       "type": "boolean",
       "_name_": "result"
      },
      "system_ntpserver_update": {
       "additionalProperties": false,
       "properties": {
        "address": {
         "title": "address",
         "type": "string",
         "_name_": "address"
        },
        "burst": {
         "title": "burst",
         "type": "boolean",
         "_name_": "burst"
        },
        "iburst": {
         "title": "iburst",
         "type": "boolean",
         "_name_": "iburst"
        },
        "prefer": {
         "title": "prefer",
         "type": "boolean",
         "_name_": "prefer"
        },
        "minpoll": {
         "title": "minpoll",
         "type": "integer",
         "_name_": "minpoll"
        },
        "maxpoll": {
         "title": "maxpoll",
         "type": "integer",
         "_name_": "maxpoll"
        },
        "force": {
         "title": "force",
         "type": "boolean",
         "_name_": "force"
        }
       },
       "title": "ntp_server_update",
       "type": "object",
       "_name_": "ntp_server_update",
       "_attrs_order_": [
        "address",
        "burst",
        "iburst",
        "prefer",
        "minpoll",
        "maxpoll",
        "force"
       ]
      },
      "return_schema_of_system_ntpserver_update": {
       "additionalProperties": false,
       "properties": {
        "id": {
         "title": "id",
         "type": "integer",
         "_name_": "id"
        },
        "address": {
         "title": "address",
         "type": "string",
         "_name_": "address"
        },
        "burst": {
         "default": false,
         "title": "burst",
         "type": "boolean",
         "_name_": "burst"
        },
        "iburst": {
         "default": true,
         "title": "iburst",
         "type": "boolean",
         "_name_": "iburst"
        },
        "prefer": {
         "default": false,
         "title": "prefer",
         "type": "boolean",
         "_name_": "prefer"
        },
        "minpoll": {
         "default": 6,
         "title": "minpoll",
         "type": "integer",
         "_name_": "minpoll"
        },
        "maxpoll": {
         "default": 10,
         "title": "maxpoll",
         "type": "integer",
         "_name_": "maxpoll"
        }
       },
       "required": [
        "id",
        "address"
       ],
       "title": "result",
       "type": "object",
       "_name_": "result",
       "_attrs_order_": [
        "id",
        "address",
        "burst",
        "iburst",
        "prefer",
        "minpoll",
        "maxpoll"
       ]
      },
      "system_ntpserver_get_instance_0": {
       "title": "id",
       "type": "integer",
       "_name_": "id"
      },
      "system_ntpserver_get_instance_1": {
       "additionalProperties": false,
       "properties": {
        "relationships": {
         "default": true,
         "title": "relationships",
         "type": "boolean",
         "_name_": "relationships"
        },
        "extend": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "extend",
         "_name_": "extend"
        },
        "extend_context": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "extend_context",
         "_name_": "extend_context"
        },
        "prefix": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "prefix",
         "_name_": "prefix"
        },
        "extra": {
         "default": {},
         "title": "extra",
         "type": "object",
         "_name_": "extra"
        },
        "order_by": {
         "default": [],
         "items": {
          "type": "string"
         },
         "title": "order_by",
         "type": "array",
         "_name_": "order_by"
        },
        "select": {
         "default": [],
         "items": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "items": [
             {}
            ],
            "type": "array"
           }
          ]
         },
         "title": "select",
         "type": "array",
         "_name_": "select"
        },
        "count": {
         "default": false,
         "title": "count",
         "type": "boolean",
         "_name_": "count"
        },
        "get": {
         "default": false,
         "title": "get",
         "type": "boolean",
         "_name_": "get"
        },
        "offset": {
         "default": 0,
         "title": "offset",
         "type": "integer",
         "_name_": "offset"
        },
        "limit": {
         "default": 0,
         "title": "limit",
         "type": "integer",
         "_name_": "limit"
        },
        "force_sql_filters": {
         "default": false,
         "title": "force_sql_filters",
         "type": "boolean",
         "_name_": "force_sql_filters"
        }
       },
       "title": "options",
       "type": "object",
       "default": {},
       "_name_": "options",
       "_attrs_order_": [
        "relationships",
        "extend",
        "extend_context",
        "prefix",
        "extra",
        "order_by",
        "select",
        "count",
        "get",
        "offset",
        "limit",
        "force_sql_filters"
       ]
      },
      "system_ntpserver_get_instance": {
       "type": "object",
       "properties": {
        "id": {
         "$ref": "#/components/schemas/system_ntpserver_get_instance_0"
        },
        "options": {
         "$ref": "#/components/schemas/system_ntpserver_get_instance_1"
        }
       }
      },
      "return_schema_of_system_ntpserver_get_instance": {
       "additionalProperties": false,
       "properties": {
        "id": {
         "title": "id",
         "type": "integer",
         "_name_": "id"
        },
        "address": {
         "title": "address",
         "type": "string",
         "_name_": "address"
        },
        "burst": {
         "default": false,
         "title": "burst",
         "type": "boolean",
         "_name_": "burst"
        },
        "iburst": {
         "default": true,
         "title": "iburst",
         "type": "boolean",
         "_name_": "iburst"
        },
        "prefer": {
         "default": false,
         "title": "prefer",
         "type": "boolean",
         "_name_": "prefer"
        },
        "minpoll": {
         "default": 6,
         "title": "minpoll",
         "type": "integer",
         "_name_": "minpoll"
        },
        "maxpoll": {
         "default": 10,
         "title": "maxpoll",
         "type": "integer",
         "_name_": "maxpoll"
        }
       },
       "required": [
        "id",
        "address"
       ],
       "title": "result",
       "type": "object",
       "_name_": "result",
       "_attrs_order_": [
        "id",
        "address",
        "burst",
        "iburst",
        "prefer",
        "minpoll",
        "maxpoll"
       ]
      },
      "return_schema_of_system_reboot_info": {
       "additionalProperties": false,
       "properties": {
        "boot_id": {
         "title": "boot_id",
         "type": "string",
         "_name_": "boot_id"
        },
        "reboot_required_reasons": {
         "items": {},
         "title": "reboot_required_reasons",
         "type": "array",
         "_name_": "reboot_required_reasons"
        }
       },
       "required": [
        "boot_id",
        "reboot_required_reasons"
       ],
       "title": "result",
       "type": "object",
       "_name_": "result",
       "_attrs_order_": [
        "boot_id",
        "reboot_required_reasons"
       ]
      },
      "return_schema_of_system_security_config": {
       "additionalProperties": false,
       "properties": {
        "id": {
         "title": "id",
         "type": "integer",
         "_name_": "id"
        },
        "enable_fips": {
         "description": "When set, enables FIPS mode. ",
         "title": "enable_fips",
         "type": "boolean",
         "_name_": "enable_fips"
        },
        "enable_gpos_stig": {
         "description": "When set, enables compatibility with the General Purpose Operating System STIG. ",
         "title": "enable_gpos_stig",
         "type": "boolean",
         "_name_": "enable_gpos_stig"
        }
       },
       "required": [
        "id",
        "enable_fips",
        "enable_gpos_stig"
       ],
       "title": "result",
       "type": "object",
       "_name_": "result",
       "_attrs_order_": [
        "id",
        "enable_fips",
        "enable_gpos_stig"
       ]
      },
      "system_security_update": {
       "additionalProperties": false,
       "properties": {
        "enable_fips": {
         "description": "When set, enables FIPS mode. ",
         "title": "enable_fips",
         "type": "boolean",
         "_name_": "enable_fips"
        },
        "enable_gpos_stig": {
         "description": "When set, enables compatibility with the General Purpose Operating System STIG. ",
         "title": "enable_gpos_stig",
         "type": "boolean",
         "_name_": "enable_gpos_stig"
        }
       },
       "title": "system_security_update",
       "type": "object",
       "_name_": "system_security_update",
       "_attrs_order_": [
        "enable_fips",
        "enable_gpos_stig"
       ]
      },
      "return_schema_of_system_security_update": {
       "additionalProperties": false,
       "properties": {
        "id": {
         "title": "id",
         "type": "integer",
         "_name_": "id"
        },
        "enable_fips": {
         "description": "When set, enables FIPS mode. ",
         "title": "enable_fips",
         "type": "boolean",
         "_name_": "enable_fips"
        },
        "enable_gpos_stig": {
         "description": "When set, enables compatibility with the General Purpose Operating System STIG. ",
         "title": "enable_gpos_stig",
         "type": "boolean",
         "_name_": "enable_gpos_stig"
        }
       },
       "required": [
        "id",
        "enable_fips",
        "enable_gpos_stig"
       ],
       "title": "result",
       "type": "object",
       "_name_": "result",
       "_attrs_order_": [
        "id",
        "enable_fips",
        "enable_gpos_stig"
       ]
      },
      "return_schema_of_system_security_info_fips_available": {
       "title": "result",
       "type": "boolean",
       "_name_": "result"
      },
      "return_schema_of_system_security_info_fips_enabled": {
       "title": "result",
       "type": "boolean",
       "_name_": "result"
      },
      "return_schema_of_systemdataset_config": {
       "type": "object",
       "properties": {
        "id": {
         "type": "integer",
         "_name_": "id",
         "title": "id"
        },
        "pool": {
         "_name_": "pool",
         "title": "pool",
         "type": "string"
        },
        "pool_set": {
         "type": "boolean",
         "_name_": "pool_set",
         "title": "pool_set"
        },
        "uuid": {
         "_name_": "uuid",
         "title": "uuid",
         "type": "string"
        },
        "basename": {
         "_name_": "basename",
         "title": "basename",
         "type": "string"
        },
        "path": {
         "_name_": "path",
         "title": "path",
         "type": "string",
         "nullable": true
        }
       },
       "additionalProperties": false,
       "_name_": "systemdataset_entry",
       "title": "systemdataset_entry",
       "default": {},
       "_attrs_order_": [
        "id",
        "pool",
        "pool_set",
        "uuid",
        "basename",
        "path"
       ]
      },
      "systemdataset_update": {
       "type": "object",
       "properties": {
        "pool": {
         "_name_": "pool",
         "title": "pool",
         "type": "string",
         "description": "`pool` is the name of a valid pool configured in the system which will be used to host the system dataset.",
         "nullable": true
        },
        "pool_exclude": {
         "_name_": "pool_exclude",
         "title": "pool_exclude",
         "type": "string",
         "nullable": true
        }
       },
       "additionalProperties": false,
       "_name_": "sysdataset_update",
       "title": "sysdataset_update",
       "default": {},
       "_attrs_order_": [
        "pool",
        "pool_exclude"
       ]
      },
      "return_schema_of_systemdataset_update": {
       "type": "object",
       "properties": {
        "id": {
         "type": "integer",
         "_name_": "id",
         "title": "id"
        },
        "pool": {
         "_name_": "pool",
         "title": "pool",
         "type": "string",
         "description": "`pool` is the name of a valid pool configured in the system which will be used to host the system dataset."
        },
        "pool_set": {
         "type": "boolean",
         "_name_": "pool_set",
         "title": "pool_set"
        },
        "uuid": {
         "_name_": "uuid",
         "title": "uuid",
         "type": "string"
        },
        "basename": {
         "_name_": "basename",
         "title": "basename",
         "type": "string"
        },
        "path": {
         "_name_": "path",
         "title": "path",
         "type": "string",
         "nullable": true
        }
       },
       "additionalProperties": false,
       "_name_": "systemdataset_update_returns",
       "title": "systemdataset_update_returns",
       "default": {},
       "_attrs_order_": [
        "id",
        "pool",
        "pool_set",
        "uuid",
        "basename",
        "path"
       ]
      },
      "systemdataset_pool_choices": {
       "type": "boolean",
       "_name_": "include_current_pool",
       "title": "include_current_pool",
       "default": true
      },
      "return_schema_of_systemdataset_pool_choices": {
       "type": "object",
       "properties": {},
       "additionalProperties": true,
       "_name_": "systemdataset_pool_choices",
       "title": "systemdataset_pool_choices",
       "default": {},
       "_attrs_order_": []
      },
      "return_schema_of_tn_connect_config": {
       "additionalProperties": false,
       "properties": {
        "id": {
         "title": "id",
         "type": "integer",
         "_name_": "id"
        },
        "enabled": {
         "title": "enabled",
         "type": "boolean",
         "_name_": "enabled"
        },
        "registration_details": {
         "title": "registration_details",
         "type": "object",
         "_name_": "registration_details"
        },
        "ips": {
         "items": {
          "minLength": 1,
          "type": "string"
         },
         "title": "ips",
         "type": "array",
         "_name_": "ips"
        },
        "status": {
         "minLength": 1,
         "title": "status",
         "type": "string",
         "_name_": "status"
        },
        "status_reason": {
         "minLength": 1,
         "title": "status_reason",
         "type": "string",
         "_name_": "status_reason"
        },
        "certificate": {
         "anyOf": [
          {
           "type": "integer"
          },
          {
           "type": "null"
          }
         ],
         "title": "certificate",
         "_name_": "certificate"
        },
        "account_service_base_url": {
         "format": "uri",
         "maxLength": 2083,
         "minLength": 1,
         "title": "account_service_base_url",
         "type": "string",
         "_name_": "account_service_base_url"
        },
        "leca_service_base_url": {
         "format": "uri",
         "maxLength": 2083,
         "minLength": 1,
         "title": "leca_service_base_url",
         "type": "string",
         "_name_": "leca_service_base_url"
        },
        "tnc_base_url": {
         "format": "uri",
         "maxLength": 2083,
         "minLength": 1,
         "title": "tnc_base_url",
         "type": "string",
         "_name_": "tnc_base_url"
        },
        "heartbeat_url": {
         "format": "uri",
         "maxLength": 2083,
         "minLength": 1,
         "title": "heartbeat_url",
         "type": "string",
         "_name_": "heartbeat_url"
        }
       },
       "required": [
        "id",
        "enabled",
        "registration_details",
        "ips",
        "status",
        "status_reason",
        "certificate",
        "account_service_base_url",
        "leca_service_base_url",
        "tnc_base_url",
        "heartbeat_url"
       ],
       "title": "result",
       "type": "object",
       "_name_": "result",
       "_attrs_order_": [
        "id",
        "enabled",
        "registration_details",
        "ips",
        "status",
        "status_reason",
        "certificate",
        "account_service_base_url",
        "leca_service_base_url",
        "tnc_base_url",
        "heartbeat_url"
       ]
      },
      "tn_connect_update": {
       "additionalProperties": false,
       "properties": {
        "enabled": {
         "title": "enabled",
         "type": "boolean",
         "_name_": "enabled"
        },
        "ips": {
         "items": {
          "format": "ipvanyaddress",
          "type": "string"
         },
         "title": "ips",
         "type": "array",
         "_name_": "ips"
        },
        "account_service_base_url": {
         "format": "uri",
         "maxLength": 2083,
         "minLength": 1,
         "title": "account_service_base_url",
         "type": "string",
         "_name_": "account_service_base_url"
        },
        "leca_service_base_url": {
         "format": "uri",
         "maxLength": 2083,
         "minLength": 1,
         "title": "leca_service_base_url",
         "type": "string",
         "_name_": "leca_service_base_url"
        },
        "tnc_base_url": {
         "format": "uri",
         "maxLength": 2083,
         "minLength": 1,
         "title": "tnc_base_url",
         "type": "string",
         "_name_": "tnc_base_url"
        },
        "heartbeat_url": {
         "format": "uri",
         "maxLength": 2083,
         "minLength": 1,
         "title": "heartbeat_url",
         "type": "string",
         "_name_": "heartbeat_url"
        }
       },
       "title": "tn_connect_update",
       "type": "object",
       "_name_": "tn_connect_update",
       "_attrs_order_": [
        "enabled",
        "ips",
        "account_service_base_url",
        "leca_service_base_url",
        "tnc_base_url",
        "heartbeat_url"
       ]
      },
      "return_schema_of_tn_connect_update": {
       "additionalProperties": false,
       "properties": {
        "id": {
         "title": "id",
         "type": "integer",
         "_name_": "id"
        },
        "enabled": {
         "title": "enabled",
         "type": "boolean",
         "_name_": "enabled"
        },
        "registration_details": {
         "title": "registration_details",
         "type": "object",
         "_name_": "registration_details"
        },
        "ips": {
         "items": {
          "minLength": 1,
          "type": "string"
         },
         "title": "ips",
         "type": "array",
         "_name_": "ips"
        },
        "status": {
         "minLength": 1,
         "title": "status",
         "type": "string",
         "_name_": "status"
        },
        "status_reason": {
         "minLength": 1,
         "title": "status_reason",
         "type": "string",
         "_name_": "status_reason"
        },
        "certificate": {
         "anyOf": [
          {
           "type": "integer"
          },
          {
           "type": "null"
          }
         ],
         "title": "certificate",
         "_name_": "certificate"
        },
        "account_service_base_url": {
         "format": "uri",
         "maxLength": 2083,
         "minLength": 1,
         "title": "account_service_base_url",
         "type": "string",
         "_name_": "account_service_base_url"
        },
        "leca_service_base_url": {
         "format": "uri",
         "maxLength": 2083,
         "minLength": 1,
         "title": "leca_service_base_url",
         "type": "string",
         "_name_": "leca_service_base_url"
        },
        "tnc_base_url": {
         "format": "uri",
         "maxLength": 2083,
         "minLength": 1,
         "title": "tnc_base_url",
         "type": "string",
         "_name_": "tnc_base_url"
        },
        "heartbeat_url": {
         "format": "uri",
         "maxLength": 2083,
         "minLength": 1,
         "title": "heartbeat_url",
         "type": "string",
         "_name_": "heartbeat_url"
        }
       },
       "required": [
        "id",
        "enabled",
        "registration_details",
        "ips",
        "status",
        "status_reason",
        "certificate",
        "account_service_base_url",
        "leca_service_base_url",
        "tnc_base_url",
        "heartbeat_url"
       ],
       "title": "result",
       "type": "object",
       "_name_": "result",
       "_attrs_order_": [
        "id",
        "enabled",
        "registration_details",
        "ips",
        "status",
        "status_reason",
        "certificate",
        "account_service_base_url",
        "leca_service_base_url",
        "tnc_base_url",
        "heartbeat_url"
       ]
      },
      "return_schema_of_tn_connect_generate_claim_token": {
       "minLength": 1,
       "title": "result",
       "type": "string",
       "_name_": "result"
      },
      "return_schema_of_tn_connect_get_registration_uri": {
       "minLength": 1,
       "title": "result",
       "type": "string",
       "_name_": "result"
      },
      "return_schema_of_tn_connect_ip_choices": {
       "additionalProperties": {
        "type": "string"
       },
       "title": "result",
       "type": "object",
       "_name_": "result"
      },
      "return_schema_of_truecommand_config": {
       "type": "object",
       "properties": {
        "id": {
         "type": "integer",
         "_name_": "id",
         "title": "id"
        },
        "api_key": {
         "_name_": "api_key",
         "title": "api_key",
         "type": "string",
         "nullable": true
        },
        "status": {
         "_name_": "status",
         "title": "status",
         "type": "string",
         "enum": [
          "CONNECTED",
          "CONNECTING",
          "DISABLED",
          "FAILED"
         ]
        },
        "status_reason": {
         "_name_": "status_reason",
         "title": "status_reason",
         "type": "string",
         "enum": [
          "Truecommand service is connected.",
          "Pending Confirmation From iX Portal for Truecommand API Key.",
          "Truecommand service is disabled.",
          "Truecommand API Key Disabled by iX Portal.",
          "Waiting for connection from Truecommand."
         ]
        },
        "remote_url": {
         "_name_": "remote_url",
         "title": "remote_url",
         "type": "string",
         "nullable": true
        },
        "remote_ip_address": {
         "_name_": "remote_ip_address",
         "title": "remote_ip_address",
         "type": "string",
         "nullable": true
        },
        "enabled": {
         "type": "boolean",
         "_name_": "enabled",
         "title": "enabled"
        }
       },
       "additionalProperties": false,
       "_name_": "truecommand_entry",
       "title": "truecommand_entry",
       "default": {},
       "_attrs_order_": [
        "id",
        "api_key",
        "status",
        "status_reason",
        "remote_url",
        "remote_ip_address",
        "enabled"
       ]
      },
      "truecommand_update": {
       "type": "object",
       "properties": {
        "enabled": {
         "type": "boolean",
         "_name_": "enabled",
         "title": "enabled"
        },
        "api_key": {
         "_name_": "api_key",
         "title": "api_key",
         "type": "string",
         "nullable": true
        }
       },
       "additionalProperties": false,
       "_name_": "truecommand_update",
       "title": "truecommand_update",
       "default": {},
       "_attrs_order_": [
        "enabled",
        "api_key"
       ]
      },
      "return_schema_of_truecommand_update": {
       "type": "object",
       "properties": {
        "id": {
         "type": "integer",
         "_name_": "id",
         "title": "id"
        },
        "api_key": {
         "_name_": "api_key",
         "title": "api_key",
         "type": "string",
         "nullable": true
        },
        "status": {
         "_name_": "status",
         "title": "status",
         "type": "string",
         "enum": [
          "CONNECTED",
          "CONNECTING",
          "DISABLED",
          "FAILED"
         ]
        },
        "status_reason": {
         "_name_": "status_reason",
         "title": "status_reason",
         "type": "string",
         "enum": [
          "Truecommand service is connected.",
          "Pending Confirmation From iX Portal for Truecommand API Key.",
          "Truecommand service is disabled.",
          "Truecommand API Key Disabled by iX Portal.",
          "Waiting for connection from Truecommand."
         ]
        },
        "remote_url": {
         "_name_": "remote_url",
         "title": "remote_url",
         "type": "string",
         "nullable": true
        },
        "remote_ip_address": {
         "_name_": "remote_ip_address",
         "title": "remote_ip_address",
         "type": "string",
         "nullable": true
        },
        "enabled": {
         "type": "boolean",
         "_name_": "enabled",
         "title": "enabled"
        }
       },
       "additionalProperties": false,
       "_name_": "truecommand_update_returns",
       "title": "truecommand_update_returns",
       "default": {},
       "_attrs_order_": [
        "id",
        "api_key",
        "status",
        "status_reason",
        "remote_url",
        "remote_ip_address",
        "enabled"
       ]
      },
      "return_schema_of_truenas_accept_eula": {
       "title": "result",
       "type": "null",
       "_name_": "result"
      },
      "return_schema_of_truenas_get_chassis_hardware": {
       "title": "result",
       "type": "string",
       "_name_": "result"
      },
      "return_schema_of_truenas_get_eula": {
       "anyOf": [
        {
         "type": "string"
        },
        {
         "type": "null"
        }
       ],
       "title": "result",
       "_name_": "result"
      },
      "return_schema_of_truenas_is_eula_accepted": {
       "title": "result",
       "type": "boolean",
       "_name_": "result"
      },
      "return_schema_of_truenas_is_ix_hardware": {
       "title": "result",
       "type": "boolean",
       "_name_": "result"
      },
      "return_schema_of_truenas_is_production": {
       "title": "result",
       "type": "boolean",
       "_name_": "result"
      },
      "return_schema_of_truenas_managed_by_truecommand": {
       "title": "result",
       "type": "boolean",
       "_name_": "result"
      },
      "truenas_set_production_0": {
       "title": "production",
       "type": "boolean",
       "_name_": "production"
      },
      "truenas_set_production_1": {
       "default": false,
       "title": "attach_debug",
       "type": "boolean",
       "_name_": "attach_debug"
      },
      "truenas_set_production": {
       "type": "object",
       "properties": {
        "production": {
         "$ref": "#/components/schemas/truenas_set_production_0"
        },
        "attach_debug": {
         "$ref": "#/components/schemas/truenas_set_production_1"
        }
       }
      },
      "return_schema_of_truenas_set_production": {
       "anyOf": [
        {
         "type": "object"
        },
        {
         "type": "null"
        }
       ],
       "title": "result",
       "_name_": "result"
      },
      "return_schema_of_tunable_query": {
       "anyOf": [
        {
         "_name_": "query_result",
         "title": "query_result",
         "default": [],
         "_required_": false,
         "type": "array",
         "items": [
          {
           "type": "object",
           "properties": {
            "type": {
             "_name_": "type",
             "title": "type",
             "default": "SYSCTL",
             "_required_": true,
             "type": "string",
             "enum": [
              "SYSCTL",
              "UDEV",
              "ZFS"
             ]
            },
            "var": {
             "_name_": "var",
             "title": "var",
             "_required_": true,
             "type": "string"
            },
            "value": {
             "_name_": "value",
             "title": "value",
             "_required_": true,
             "type": "string"
            },
            "comment": {
             "_name_": "comment",
             "title": "comment",
             "default": "",
             "_required_": false,
             "type": "string"
            },
            "enabled": {
             "type": "boolean",
             "_name_": "enabled",
             "title": "enabled",
             "default": true,
             "_required_": false
            },
            "update_initramfs": {
             "type": "boolean",
             "_name_": "update_initramfs",
             "title": "update_initramfs",
             "default": true,
             "_required_": false
            },
            "id": {
             "type": "integer",
             "_name_": "id",
             "title": "id",
             "_required_": false
            },
            "orig_value": {
             "_name_": "orig_value",
             "title": "orig_value",
             "_required_": false,
             "type": "string"
            }
           },
           "additionalProperties": false,
           "_name_": "tunable_entry",
           "title": "tunable_entry",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "type",
            "var",
            "value",
            "comment",
            "enabled",
            "update_initramfs",
            "id",
            "orig_value"
           ]
          }
         ]
        },
        {
         "type": "object",
         "properties": {
          "type": {
           "_name_": "type",
           "title": "type",
           "default": "SYSCTL",
           "_required_": true,
           "type": "string",
           "enum": [
            "SYSCTL",
            "UDEV",
            "ZFS"
           ]
          },
          "var": {
           "_name_": "var",
           "title": "var",
           "_required_": true,
           "type": "string"
          },
          "value": {
           "_name_": "value",
           "title": "value",
           "_required_": true,
           "type": "string"
          },
          "comment": {
           "_name_": "comment",
           "title": "comment",
           "default": "",
           "_required_": false,
           "type": "string"
          },
          "enabled": {
           "type": "boolean",
           "_name_": "enabled",
           "title": "enabled",
           "default": true,
           "_required_": false
          },
          "update_initramfs": {
           "type": "boolean",
           "_name_": "update_initramfs",
           "title": "update_initramfs",
           "default": true,
           "_required_": false
          },
          "id": {
           "type": "integer",
           "_name_": "id",
           "title": "id",
           "_required_": false
          },
          "orig_value": {
           "_name_": "orig_value",
           "title": "orig_value",
           "_required_": false,
           "type": "string"
          }
         },
         "additionalProperties": false,
         "_name_": "tunable_entry",
         "title": "tunable_entry",
         "default": {},
         "_required_": false,
         "_attrs_order_": [
          "type",
          "var",
          "value",
          "comment",
          "enabled",
          "update_initramfs",
          "id",
          "orig_value"
         ]
        },
        {
         "type": "integer",
         "_name_": "count",
         "title": "count",
         "_required_": false
        },
        {
         "type": "object",
         "properties": {
          "type": {
           "_name_": "type",
           "title": "type",
           "default": "SYSCTL",
           "_required_": true,
           "type": "string",
           "enum": [
            "SYSCTL",
            "UDEV",
            "ZFS"
           ]
          },
          "var": {
           "_name_": "var",
           "title": "var",
           "_required_": true,
           "type": "string"
          },
          "value": {
           "_name_": "value",
           "title": "value",
           "_required_": true,
           "type": "string"
          },
          "comment": {
           "_name_": "comment",
           "title": "comment",
           "default": "",
           "_required_": false,
           "type": "string"
          },
          "enabled": {
           "type": "boolean",
           "_name_": "enabled",
           "title": "enabled",
           "default": true,
           "_required_": false
          },
          "update_initramfs": {
           "type": "boolean",
           "_name_": "update_initramfs",
           "title": "update_initramfs",
           "default": true,
           "_required_": false
          },
          "id": {
           "type": "integer",
           "_name_": "id",
           "title": "id",
           "_required_": false
          },
          "orig_value": {
           "_name_": "orig_value",
           "title": "orig_value",
           "_required_": false,
           "type": "string"
          }
         },
         "additionalProperties": false,
         "_name_": "tunable_entry",
         "title": "tunable_entry",
         "default": {},
         "_required_": false,
         "_attrs_order_": [
          "type",
          "var",
          "value",
          "comment",
          "enabled",
          "update_initramfs",
          "id",
          "orig_value"
         ]
        }
       ],
       "nullable": false,
       "_name_": "query_result",
       "description": null
      },
      "tunable_create": {
       "type": "object",
       "properties": {
        "type": {
         "_name_": "type",
         "title": "type",
         "default": "SYSCTL",
         "type": "string",
         "enum": [
          "SYSCTL",
          "UDEV",
          "ZFS"
         ],
         "description": "If `type` is `SYSCTL` then `var` is a sysctl name (e.g. `kernel.watchdog`) and `value` is its corresponding\nvalue (e.g. `0`).\nIf `type` is `UDEV` then `var` is an udev rules file name (e.g. `10-disable-usb`, `.rules` suffix will be\nappended automatically) and `value` is its contents (e.g. `BUS==\"usb\", OPTIONS+=\"ignore_device\"`).\nIf `type` is `ZFS` then `var` is a ZFS kernel module parameter name (e.g. `zfs_dirty_data_max_max`) and `value`\nis its value (e.g. `783091712`)."
        },
        "var": {
         "_name_": "var",
         "title": "var",
         "type": "string",
         "description": "If `type` is `SYSCTL` then `var` is a sysctl name (e.g. `kernel.watchdog`) and `value` is its corresponding\nvalue (e.g. `0`).\nIf `type` is `UDEV` then `var` is an udev rules file name (e.g. `10-disable-usb`, `.rules` suffix will be\nappended automatically) and `value` is its contents (e.g. `BUS==\"usb\", OPTIONS+=\"ignore_device\"`).\nIf `type` is `ZFS` then `var` is a ZFS kernel module parameter name (e.g. `zfs_dirty_data_max_max`) and `value`\nis its value (e.g. `783091712`)."
        },
        "value": {
         "_name_": "value",
         "title": "value",
         "type": "string",
         "description": "If `type` is `SYSCTL` then `var` is a sysctl name (e.g. `kernel.watchdog`) and `value` is its corresponding\nvalue (e.g. `0`).\nIf `type` is `UDEV` then `var` is an udev rules file name (e.g. `10-disable-usb`, `.rules` suffix will be\nappended automatically) and `value` is its contents (e.g. `BUS==\"usb\", OPTIONS+=\"ignore_device\"`).\nIf `type` is `ZFS` then `var` is a ZFS kernel module parameter name (e.g. `zfs_dirty_data_max_max`) and `value`\nis its value (e.g. `783091712`)."
        },
        "comment": {
         "_name_": "comment",
         "title": "comment",
         "default": "",
         "type": "string"
        },
        "enabled": {
         "type": "boolean",
         "_name_": "enabled",
         "title": "enabled",
         "default": true
        },
        "update_initramfs": {
         "type": "boolean",
         "_name_": "update_initramfs",
         "title": "update_initramfs",
         "default": true
        }
       },
       "additionalProperties": false,
       "_name_": "tunable_create",
       "title": "tunable_create",
       "default": {},
       "_attrs_order_": [
        "type",
        "var",
        "value",
        "comment",
        "enabled",
        "update_initramfs"
       ]
      },
      "return_schema_of_tunable_create": {
       "type": "object",
       "properties": {
        "type": {
         "_name_": "type",
         "title": "type",
         "default": "SYSCTL",
         "type": "string",
         "enum": [
          "SYSCTL",
          "UDEV",
          "ZFS"
         ],
         "description": "If `type` is `SYSCTL` then `var` is a sysctl name (e.g. `kernel.watchdog`) and `value` is its corresponding\nvalue (e.g. `0`).\nIf `type` is `UDEV` then `var` is an udev rules file name (e.g. `10-disable-usb`, `.rules` suffix will be\nappended automatically) and `value` is its contents (e.g. `BUS==\"usb\", OPTIONS+=\"ignore_device\"`).\nIf `type` is `ZFS` then `var` is a ZFS kernel module parameter name (e.g. `zfs_dirty_data_max_max`) and `value`\nis its value (e.g. `783091712`)."
        },
        "var": {
         "_name_": "var",
         "title": "var",
         "type": "string",
         "description": "If `type` is `SYSCTL` then `var` is a sysctl name (e.g. `kernel.watchdog`) and `value` is its corresponding\nvalue (e.g. `0`).\nIf `type` is `UDEV` then `var` is an udev rules file name (e.g. `10-disable-usb`, `.rules` suffix will be\nappended automatically) and `value` is its contents (e.g. `BUS==\"usb\", OPTIONS+=\"ignore_device\"`).\nIf `type` is `ZFS` then `var` is a ZFS kernel module parameter name (e.g. `zfs_dirty_data_max_max`) and `value`\nis its value (e.g. `783091712`)."
        },
        "value": {
         "_name_": "value",
         "title": "value",
         "type": "string",
         "description": "If `type` is `SYSCTL` then `var` is a sysctl name (e.g. `kernel.watchdog`) and `value` is its corresponding\nvalue (e.g. `0`).\nIf `type` is `UDEV` then `var` is an udev rules file name (e.g. `10-disable-usb`, `.rules` suffix will be\nappended automatically) and `value` is its contents (e.g. `BUS==\"usb\", OPTIONS+=\"ignore_device\"`).\nIf `type` is `ZFS` then `var` is a ZFS kernel module parameter name (e.g. `zfs_dirty_data_max_max`) and `value`\nis its value (e.g. `783091712`)."
        },
        "comment": {
         "_name_": "comment",
         "title": "comment",
         "default": "",
         "type": "string"
        },
        "enabled": {
         "type": "boolean",
         "_name_": "enabled",
         "title": "enabled",
         "default": true
        },
        "update_initramfs": {
         "type": "boolean",
         "_name_": "update_initramfs",
         "title": "update_initramfs",
         "default": true
        },
        "id": {
         "type": "integer",
         "_name_": "id",
         "title": "id"
        },
        "orig_value": {
         "_name_": "orig_value",
         "title": "orig_value",
         "type": "string"
        }
       },
       "additionalProperties": false,
       "_name_": "tunable_create_returns",
       "title": "tunable_create_returns",
       "default": {},
       "_attrs_order_": [
        "type",
        "var",
        "value",
        "comment",
        "enabled",
        "update_initramfs",
        "id",
        "orig_value"
       ]
      },
      "return_schema_of_tunable_delete": {
       "type": "boolean",
       "_name_": "deleted",
       "title": "deleted",
       "description": "Will return `true` if `id` is deleted successfully"
      },
      "tunable_update": {
       "type": "object",
       "properties": {
        "value": {
         "_name_": "value",
         "title": "value",
         "type": "string",
         "description": "If `type` is `SYSCTL` then `var` is a sysctl name (e.g. `kernel.watchdog`) and `value` is its corresponding\nvalue (e.g. `0`).\nIf `type` is `UDEV` then `var` is an udev rules file name (e.g. `10-disable-usb`, `.rules` suffix will be\nappended automatically) and `value` is its contents (e.g. `BUS==\"usb\", OPTIONS+=\"ignore_device\"`).\nIf `type` is `ZFS` then `var` is a ZFS kernel module parameter name (e.g. `zfs_dirty_data_max_max`) and `value`\nis its value (e.g. `783091712`)."
        },
        "comment": {
         "_name_": "comment",
         "title": "comment",
         "default": "",
         "type": "string"
        },
        "enabled": {
         "type": "boolean",
         "_name_": "enabled",
         "title": "enabled",
         "default": true
        },
        "update_initramfs": {
         "type": "boolean",
         "_name_": "update_initramfs",
         "title": "update_initramfs",
         "default": true
        }
       },
       "additionalProperties": false,
       "_name_": "tunable_update",
       "title": "tunable_update",
       "default": {},
       "_attrs_order_": [
        "value",
        "comment",
        "enabled",
        "update_initramfs"
       ]
      },
      "return_schema_of_tunable_update": {
       "type": "object",
       "properties": {
        "type": {
         "_name_": "type",
         "title": "type",
         "default": "SYSCTL",
         "type": "string",
         "enum": [
          "SYSCTL",
          "UDEV",
          "ZFS"
         ],
         "description": "If `type` is `SYSCTL` then `var` is a sysctl name (e.g. `kernel.watchdog`) and `value` is its corresponding\nvalue (e.g. `0`).\nIf `type` is `UDEV` then `var` is an udev rules file name (e.g. `10-disable-usb`, `.rules` suffix will be\nappended automatically) and `value` is its contents (e.g. `BUS==\"usb\", OPTIONS+=\"ignore_device\"`).\nIf `type` is `ZFS` then `var` is a ZFS kernel module parameter name (e.g. `zfs_dirty_data_max_max`) and `value`\nis its value (e.g. `783091712`)."
        },
        "var": {
         "_name_": "var",
         "title": "var",
         "type": "string",
         "description": "If `type` is `SYSCTL` then `var` is a sysctl name (e.g. `kernel.watchdog`) and `value` is its corresponding\nvalue (e.g. `0`).\nIf `type` is `UDEV` then `var` is an udev rules file name (e.g. `10-disable-usb`, `.rules` suffix will be\nappended automatically) and `value` is its contents (e.g. `BUS==\"usb\", OPTIONS+=\"ignore_device\"`).\nIf `type` is `ZFS` then `var` is a ZFS kernel module parameter name (e.g. `zfs_dirty_data_max_max`) and `value`\nis its value (e.g. `783091712`)."
        },
        "value": {
         "_name_": "value",
         "title": "value",
         "type": "string",
         "description": "If `type` is `SYSCTL` then `var` is a sysctl name (e.g. `kernel.watchdog`) and `value` is its corresponding\nvalue (e.g. `0`).\nIf `type` is `UDEV` then `var` is an udev rules file name (e.g. `10-disable-usb`, `.rules` suffix will be\nappended automatically) and `value` is its contents (e.g. `BUS==\"usb\", OPTIONS+=\"ignore_device\"`).\nIf `type` is `ZFS` then `var` is a ZFS kernel module parameter name (e.g. `zfs_dirty_data_max_max`) and `value`\nis its value (e.g. `783091712`)."
        },
        "comment": {
         "_name_": "comment",
         "title": "comment",
         "default": "",
         "type": "string"
        },
        "enabled": {
         "type": "boolean",
         "_name_": "enabled",
         "title": "enabled",
         "default": true
        },
        "update_initramfs": {
         "type": "boolean",
         "_name_": "update_initramfs",
         "title": "update_initramfs",
         "default": true
        },
        "id": {
         "type": "integer",
         "_name_": "id",
         "title": "id",
         "description": "Update Tunable of `id`.\nCreate a tunable."
        },
        "orig_value": {
         "_name_": "orig_value",
         "title": "orig_value",
         "type": "string"
        }
       },
       "additionalProperties": false,
       "_name_": "tunable_update_returns",
       "title": "tunable_update_returns",
       "default": {},
       "_attrs_order_": [
        "type",
        "var",
        "value",
        "comment",
        "enabled",
        "update_initramfs",
        "id",
        "orig_value"
       ]
      },
      "tunable_get_instance_0": {
       "anyOf": [
        {
         "type": "string"
        },
        {
         "type": "integer"
        },
        {
         "type": "boolean"
        },
        {
         "type": "object"
        },
        {
         "type": "array"
        }
       ],
       "nullable": false,
       "_name_": "id",
       "title": "id",
       "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised."
      },
      "tunable_get_instance_1": {
       "type": "object",
       "properties": {
        "relationships": {
         "type": "boolean",
         "_name_": "relationships",
         "title": "relationships",
         "default": true
        },
        "extend": {
         "_name_": "extend",
         "title": "extend",
         "default": null,
         "type": "string",
         "nullable": true
        },
        "extend_context": {
         "_name_": "extend_context",
         "title": "extend_context",
         "default": null,
         "type": "string",
         "nullable": true
        },
        "prefix": {
         "_name_": "prefix",
         "title": "prefix",
         "default": null,
         "type": "string",
         "nullable": true
        },
        "extra": {
         "type": "object",
         "properties": {},
         "additionalProperties": true,
         "_name_": "extra",
         "title": "extra",
         "default": {},
         "_attrs_order_": []
        },
        "order_by": {
         "_name_": "order_by",
         "title": "order_by",
         "default": [],
         "type": "array",
         "items": {}
        },
        "select": {
         "_name_": "select",
         "title": "select",
         "default": [],
         "type": "array",
         "items": {}
        },
        "count": {
         "type": "boolean",
         "_name_": "count",
         "title": "count",
         "default": false
        },
        "get": {
         "type": "boolean",
         "_name_": "get",
         "title": "get",
         "default": false
        },
        "offset": {
         "type": "integer",
         "_name_": "offset",
         "title": "offset",
         "default": 0
        },
        "limit": {
         "type": "integer",
         "_name_": "limit",
         "title": "limit",
         "default": 0
        },
        "force_sql_filters": {
         "type": "boolean",
         "_name_": "force_sql_filters",
         "title": "force_sql_filters",
         "default": true
        }
       },
       "additionalProperties": false,
       "_name_": "query-options-get_instance",
       "title": "query-options-get_instance",
       "default": {},
       "_attrs_order_": [
        "relationships",
        "extend",
        "extend_context",
        "prefix",
        "extra",
        "order_by",
        "select",
        "count",
        "get",
        "offset",
        "limit",
        "force_sql_filters"
       ]
      },
      "tunable_get_instance": {
       "type": "object",
       "properties": {
        "id": {
         "$ref": "#/components/schemas/tunable_get_instance_0"
        },
        "query-options-get_instance": {
         "$ref": "#/components/schemas/tunable_get_instance_1"
        }
       }
      },
      "return_schema_of_tunable_get_instance": {
       "type": "object",
       "properties": {
        "type": {
         "_name_": "type",
         "title": "type",
         "default": "SYSCTL",
         "type": "string",
         "enum": [
          "SYSCTL",
          "UDEV",
          "ZFS"
         ]
        },
        "var": {
         "_name_": "var",
         "title": "var",
         "type": "string"
        },
        "value": {
         "_name_": "value",
         "title": "value",
         "type": "string"
        },
        "comment": {
         "_name_": "comment",
         "title": "comment",
         "default": "",
         "type": "string"
        },
        "enabled": {
         "type": "boolean",
         "_name_": "enabled",
         "title": "enabled",
         "default": true
        },
        "update_initramfs": {
         "type": "boolean",
         "_name_": "update_initramfs",
         "title": "update_initramfs",
         "default": true
        },
        "id": {
         "type": "integer",
         "_name_": "id",
         "title": "id",
         "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised."
        },
        "orig_value": {
         "_name_": "orig_value",
         "title": "orig_value",
         "type": "string"
        }
       },
       "additionalProperties": false,
       "_name_": "tunable_entry",
       "title": "tunable_entry",
       "default": {},
       "_attrs_order_": [
        "type",
        "var",
        "value",
        "comment",
        "enabled",
        "update_initramfs",
        "id",
        "orig_value"
       ]
      },
      "return_schema_of_tunable_tunable_type_choices": {
       "type": "object",
       "properties": {
        "SYSCTL": {
         "_name_": "SYSCTL",
         "title": "SYSCTL",
         "type": "string",
         "enum": [
          "SYSCTL"
         ]
        },
        "UDEV": {
         "_name_": "UDEV",
         "title": "UDEV",
         "type": "string",
         "enum": [
          "UDEV"
         ]
        },
        "ZFS": {
         "_name_": "ZFS",
         "title": "ZFS",
         "type": "string",
         "enum": [
          "ZFS"
         ]
        }
       },
       "additionalProperties": false,
       "_name_": "tunable_type_choices",
       "title": "tunable_type_choices",
       "default": {},
       "_attrs_order_": [
        "SYSCTL",
        "UDEV",
        "ZFS"
       ]
      },
      "update_check_available": {
       "type": "object",
       "properties": {
        "train": {
         "_name_": "train",
         "title": "train",
         "type": "string"
        }
       },
       "additionalProperties": false,
       "_name_": "update-check-available",
       "title": "update-check-available",
       "default": {},
       "_attrs_order_": [
        "train"
       ]
      },
      "update_file": {
       "type": "object",
       "properties": {
        "resume": {
         "type": "boolean",
         "_name_": "resume",
         "title": "resume",
         "default": false,
         "description": "`resume` should be set to `true` if a previous call to this method returned a `CallError` with `errno=EAGAIN`\nmeaning that an upgrade can be performed with a warning and that warning is accepted. In that case, re-uploading\nthe file is not necessary."
        },
        "destination": {
         "_name_": "destination",
         "title": "destination",
         "default": null,
         "type": "string",
         "nullable": true
        }
       },
       "additionalProperties": false,
       "_name_": "updatefile",
       "title": "updatefile",
       "default": {},
       "_attrs_order_": [
        "resume",
        "destination"
       ]
      },
      "update_get_pending": {
       "_name_": "path",
       "title": "path",
       "default": null,
       "type": "string",
       "nullable": true
      },
      "update_manual_0": {
       "_name_": "path",
       "title": "path",
       "type": "string",
       "description": "`path` must be the absolute path to the update file."
      },
      "update_manual_1": {
       "type": "object",
       "properties": {
        "dataset_name": {
         "_name_": "dataset_name",
         "title": "dataset_name",
         "default": null,
         "type": "string",
         "nullable": true
        },
        "resume": {
         "type": "boolean",
         "_name_": "resume",
         "title": "resume",
         "default": false
        },
        "cleanup": {
         "type": "boolean",
         "_name_": "cleanup",
         "title": "cleanup",
         "default": true
        }
       },
       "additionalProperties": false,
       "_name_": "options",
       "title": "options",
       "default": {},
       "_attrs_order_": [
        "dataset_name",
        "resume",
        "cleanup"
       ]
      },
      "update_manual": {
       "type": "object",
       "properties": {
        "path": {
         "$ref": "#/components/schemas/update_manual_0"
        },
        "options": {
         "$ref": "#/components/schemas/update_manual_1"
        }
       }
      },
      "update_set_auto_download": {
       "type": "boolean",
       "_name_": "autocheck",
       "title": "autocheck"
      },
      "update_set_train": {
       "_name_": "train",
       "title": "train",
       "type": "string"
      },
      "update_update": {
       "type": "object",
       "properties": {
        "dataset_name": {
         "_name_": "dataset_name",
         "title": "dataset_name",
         "default": null,
         "type": "string",
         "nullable": true
        },
        "resume": {
         "type": "boolean",
         "_name_": "resume",
         "title": "resume",
         "default": false
        },
        "train": {
         "_name_": "train",
         "title": "train",
         "default": null,
         "type": "string",
         "nullable": true
        },
        "reboot": {
         "type": "boolean",
         "_name_": "reboot",
         "title": "reboot",
         "default": false
        }
       },
       "additionalProperties": false,
       "_name_": "update",
       "title": "update",
       "default": {},
       "_attrs_order_": [
        "dataset_name",
        "resume",
        "train",
        "reboot"
       ]
      },
      "return_schema_of_ups_config": {
       "type": "object",
       "properties": {
        "powerdown": {
         "type": "boolean",
         "_name_": "powerdown",
         "title": "powerdown"
        },
        "rmonitor": {
         "type": "boolean",
         "_name_": "rmonitor",
         "title": "rmonitor"
        },
        "id": {
         "type": "integer",
         "_name_": "id",
         "title": "id"
        },
        "nocommwarntime": {
         "type": "integer",
         "_name_": "nocommwarntime",
         "title": "nocommwarntime",
         "nullable": true
        },
        "remoteport": {
         "type": "integer",
         "_name_": "remoteport",
         "title": "remoteport"
        },
        "shutdowntimer": {
         "type": "integer",
         "_name_": "shutdowntimer",
         "title": "shutdowntimer"
        },
        "hostsync": {
         "type": "integer",
         "_name_": "hostsync",
         "title": "hostsync"
        },
        "description": {
         "_name_": "description",
         "title": "description",
         "type": "string"
        },
        "driver": {
         "_name_": "driver",
         "title": "driver",
         "type": "string"
        },
        "extrausers": {
         "_name_": "extrausers",
         "title": "extrausers",
         "type": "string"
        },
        "identifier": {
         "_name_": "identifier",
         "title": "identifier",
         "type": "string"
        },
        "mode": {
         "_name_": "mode",
         "title": "mode",
         "type": "string",
         "enum": [
          "MASTER",
          "SLAVE"
         ]
        },
        "monpwd": {
         "_name_": "monpwd",
         "title": "monpwd",
         "type": "string"
        },
        "monuser": {
         "_name_": "monuser",
         "title": "monuser",
         "type": "string"
        },
        "options": {
         "_name_": "options",
         "title": "options",
         "type": "string"
        },
        "optionsupsd": {
         "_name_": "optionsupsd",
         "title": "optionsupsd",
         "type": "string"
        },
        "port": {
         "_name_": "port",
         "title": "port",
         "type": "string"
        },
        "remotehost": {
         "_name_": "remotehost",
         "title": "remotehost",
         "type": "string"
        },
        "shutdown": {
         "_name_": "shutdown",
         "title": "shutdown",
         "type": "string",
         "enum": [
          "LOWBATT",
          "BATT"
         ]
        },
        "shutdowncmd": {
         "_name_": "shutdowncmd",
         "title": "shutdowncmd",
         "type": "string",
         "nullable": true
        },
        "complete_identifier": {
         "_name_": "complete_identifier",
         "title": "complete_identifier",
         "type": "string"
        }
       },
       "additionalProperties": false,
       "_name_": "ups_entry",
       "title": "ups_entry",
       "default": {},
       "_attrs_order_": [
        "powerdown",
        "rmonitor",
        "id",
        "nocommwarntime",
        "remoteport",
        "shutdowntimer",
        "hostsync",
        "description",
        "driver",
        "extrausers",
        "identifier",
        "mode",
        "monpwd",
        "monuser",
        "options",
        "optionsupsd",
        "port",
        "remotehost",
        "shutdown",
        "shutdowncmd",
        "complete_identifier"
       ]
      },
      "ups_update": {
       "type": "object",
       "properties": {
        "powerdown": {
         "type": "boolean",
         "_name_": "powerdown",
         "title": "powerdown",
         "description": "`powerdown` when enabled, sets UPS to power off after shutting down the system."
        },
        "rmonitor": {
         "type": "boolean",
         "_name_": "rmonitor",
         "title": "rmonitor"
        },
        "nocommwarntime": {
         "type": "integer",
         "_name_": "nocommwarntime",
         "title": "nocommwarntime",
         "description": "`nocommwarntime` is a value in seconds which makes UPS Service wait the specified seconds before alerting that\nthe Service cannot reach configured UPS.",
         "nullable": true
        },
        "remoteport": {
         "type": "integer",
         "_name_": "remoteport",
         "title": "remoteport"
        },
        "shutdowntimer": {
         "type": "integer",
         "_name_": "shutdowntimer",
         "title": "shutdowntimer",
         "description": "`shutdowntimer` is a value in seconds which tells the Service to wait specified seconds for the UPS before\ninitiating a shutdown. This only applies when `shutdown` is set to \"BATT\"."
        },
        "hostsync": {
         "type": "integer",
         "_name_": "hostsync",
         "title": "hostsync"
        },
        "description": {
         "_name_": "description",
         "title": "description",
         "type": "string"
        },
        "driver": {
         "_name_": "driver",
         "title": "driver",
         "type": "string"
        },
        "extrausers": {
         "_name_": "extrausers",
         "title": "extrausers",
         "type": "string"
        },
        "identifier": {
         "_name_": "identifier",
         "title": "identifier",
         "type": "string"
        },
        "mode": {
         "_name_": "mode",
         "title": "mode",
         "type": "string",
         "enum": [
          "MASTER",
          "SLAVE"
         ]
        },
        "monpwd": {
         "_name_": "monpwd",
         "title": "monpwd",
         "type": "string"
        },
        "monuser": {
         "_name_": "monuser",
         "title": "monuser",
         "type": "string"
        },
        "options": {
         "_name_": "options",
         "title": "options",
         "type": "string"
        },
        "optionsupsd": {
         "_name_": "optionsupsd",
         "title": "optionsupsd",
         "type": "string"
        },
        "port": {
         "_name_": "port",
         "title": "port",
         "type": "string"
        },
        "remotehost": {
         "_name_": "remotehost",
         "title": "remotehost",
         "type": "string"
        },
        "shutdown": {
         "_name_": "shutdown",
         "title": "shutdown",
         "type": "string",
         "enum": [
          "LOWBATT",
          "BATT"
         ],
         "description": "`shutdowntimer` is a value in seconds which tells the Service to wait specified seconds for the UPS before\ninitiating a shutdown. This only applies when `shutdown` is set to \"BATT\"."
        },
        "shutdowncmd": {
         "_name_": "shutdowncmd",
         "title": "shutdowncmd",
         "type": "string",
         "nullable": true
        }
       },
       "additionalProperties": false,
       "_name_": "ups_update",
       "title": "ups_update",
       "default": {},
       "_attrs_order_": [
        "powerdown",
        "rmonitor",
        "nocommwarntime",
        "remoteport",
        "shutdowntimer",
        "hostsync",
        "description",
        "driver",
        "extrausers",
        "identifier",
        "mode",
        "monpwd",
        "monuser",
        "options",
        "optionsupsd",
        "port",
        "remotehost",
        "shutdown",
        "shutdowncmd"
       ]
      },
      "return_schema_of_ups_update": {
       "type": "object",
       "properties": {
        "powerdown": {
         "type": "boolean",
         "_name_": "powerdown",
         "title": "powerdown",
         "description": "`powerdown` when enabled, sets UPS to power off after shutting down the system."
        },
        "rmonitor": {
         "type": "boolean",
         "_name_": "rmonitor",
         "title": "rmonitor"
        },
        "id": {
         "type": "integer",
         "_name_": "id",
         "title": "id"
        },
        "nocommwarntime": {
         "type": "integer",
         "_name_": "nocommwarntime",
         "title": "nocommwarntime",
         "description": "`nocommwarntime` is a value in seconds which makes UPS Service wait the specified seconds before alerting that\nthe Service cannot reach configured UPS.",
         "nullable": true
        },
        "remoteport": {
         "type": "integer",
         "_name_": "remoteport",
         "title": "remoteport"
        },
        "shutdowntimer": {
         "type": "integer",
         "_name_": "shutdowntimer",
         "title": "shutdowntimer",
         "description": "`shutdowntimer` is a value in seconds which tells the Service to wait specified seconds for the UPS before\ninitiating a shutdown. This only applies when `shutdown` is set to \"BATT\"."
        },
        "hostsync": {
         "type": "integer",
         "_name_": "hostsync",
         "title": "hostsync"
        },
        "description": {
         "_name_": "description",
         "title": "description",
         "type": "string"
        },
        "driver": {
         "_name_": "driver",
         "title": "driver",
         "type": "string"
        },
        "extrausers": {
         "_name_": "extrausers",
         "title": "extrausers",
         "type": "string"
        },
        "identifier": {
         "_name_": "identifier",
         "title": "identifier",
         "type": "string"
        },
        "mode": {
         "_name_": "mode",
         "title": "mode",
         "type": "string",
         "enum": [
          "MASTER",
          "SLAVE"
         ]
        },
        "monpwd": {
         "_name_": "monpwd",
         "title": "monpwd",
         "type": "string"
        },
        "monuser": {
         "_name_": "monuser",
         "title": "monuser",
         "type": "string"
        },
        "options": {
         "_name_": "options",
         "title": "options",
         "type": "string"
        },
        "optionsupsd": {
         "_name_": "optionsupsd",
         "title": "optionsupsd",
         "type": "string"
        },
        "port": {
         "_name_": "port",
         "title": "port",
         "type": "string"
        },
        "remotehost": {
         "_name_": "remotehost",
         "title": "remotehost",
         "type": "string"
        },
        "shutdown": {
         "_name_": "shutdown",
         "title": "shutdown",
         "type": "string",
         "enum": [
          "LOWBATT",
          "BATT"
         ],
         "description": "`shutdowntimer` is a value in seconds which tells the Service to wait specified seconds for the UPS before\ninitiating a shutdown. This only applies when `shutdown` is set to \"BATT\"."
        },
        "shutdowncmd": {
         "_name_": "shutdowncmd",
         "title": "shutdowncmd",
         "type": "string",
         "nullable": true
        },
        "complete_identifier": {
         "_name_": "complete_identifier",
         "title": "complete_identifier",
         "type": "string"
        }
       },
       "additionalProperties": false,
       "_name_": "ups_update_returns",
       "title": "ups_update_returns",
       "default": {},
       "_attrs_order_": [
        "powerdown",
        "rmonitor",
        "id",
        "nocommwarntime",
        "remoteport",
        "shutdowntimer",
        "hostsync",
        "description",
        "driver",
        "extrausers",
        "identifier",
        "mode",
        "monpwd",
        "monuser",
        "options",
        "optionsupsd",
        "port",
        "remotehost",
        "shutdown",
        "shutdowncmd",
        "complete_identifier"
       ]
      },
      "return_schema_of_ups_driver_choices": {
       "type": "object",
       "properties": {},
       "additionalProperties": true,
       "_name_": "driver_choices",
       "title": "driver_choices",
       "description": "\n\nExample(s):\n```\n{\n    \"blazer_ser$CPM-800\": \"WinPower ups 2 CPM-800 (blazer_ser)\"\n}\n```\n",
       "default": {},
       "_attrs_order_": []
      },
      "return_schema_of_ups_port_choices": {
       "_name_": "port_choices",
       "title": "port_choices",
       "default": [],
       "type": "array",
       "items": {
        "_name_": "port_choice",
        "title": "port_choice",
        "_required_": false,
        "type": "string"
       }
      },
      "return_schema_of_user_query": {
       "anyOf": [
        {
         "items": [
          {
           "additionalProperties": false,
           "properties": {
            "id": {
             "title": "id",
             "type": "integer",
             "_name_": "id",
             "_required_": false
            },
            "uid": {
             "title": "uid",
             "type": "integer",
             "_name_": "uid",
             "_required_": false
            },
            "username": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "minLength": 1,
               "type": "string"
              }
             ],
             "title": "username",
             "_name_": "username",
             "_required_": false
            },
            "unixhash": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "null"
              }
             ],
             "title": "unixhash",
             "_name_": "unixhash",
             "_required_": false
            },
            "smbhash": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "null"
              }
             ],
             "title": "smbhash",
             "_name_": "smbhash",
             "_required_": false
            },
            "home": {
             "minLength": 1,
             "title": "home",
             "type": "string",
             "_name_": "home",
             "_required_": false
            },
            "shell": {
             "description": "Available choices can be retrieved with `user.shell_choices`.",
             "minLength": 1,
             "title": "shell",
             "type": "string",
             "_name_": "shell",
             "_required_": false
            },
            "full_name": {
             "title": "full_name",
             "type": "string",
             "_name_": "full_name",
             "_required_": false
            },
            "builtin": {
             "title": "builtin",
             "type": "boolean",
             "_name_": "builtin",
             "_required_": false
            },
            "smb": {
             "title": "smb",
             "type": "boolean",
             "_name_": "smb",
             "_required_": false
            },
            "userns_idmap": {
             "anyOf": [
              {
               "const": "DIRECT",
               "enum": [
                "DIRECT"
               ],
               "type": "string"
              },
              {
               "maximum": 4294967294,
               "minimum": 1,
               "type": "integer"
              },
              {
               "type": "null"
              }
             ],
             "description": "Species the subuid mapping for this user. If DIRECT then the UID will be\ndirectly mapped to all containers. Alternatively, the target UID may be\nexplicitly specified. If None, then the UID will not be mapped.\n\nNOTE: this field will be ignored for users that have been assigned\nTrueNAS roles.",
             "title": "userns_idmap",
             "_name_": "userns_idmap",
             "_required_": false
            },
            "group": {
             "title": "group",
             "type": "object",
             "_name_": "group",
             "_required_": false
            },
            "groups": {
             "description": "Specifies whether the user should be allowed access to SMB shares. User will also automatically be added to\nthe `builtin_users` group.",
             "items": [
              {
               "type": "integer"
              }
             ],
             "title": "groups",
             "type": "array",
             "_name_": "groups",
             "_required_": false
            },
            "password_disabled": {
             "title": "password_disabled",
             "type": "boolean",
             "_name_": "password_disabled",
             "_required_": false
            },
            "ssh_password_enabled": {
             "description": "Required if `password_disabled` is false.",
             "title": "ssh_password_enabled",
             "type": "boolean",
             "_name_": "ssh_password_enabled",
             "_required_": false
            },
            "sshpubkey": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "null"
              }
             ],
             "title": "sshpubkey",
             "_name_": "sshpubkey",
             "_required_": false
            },
            "locked": {
             "title": "locked",
             "type": "boolean",
             "_name_": "locked",
             "_required_": false
            },
            "sudo_commands": {
             "items": [
              {
               "minLength": 1,
               "type": "string"
              }
             ],
             "title": "sudo_commands",
             "type": "array",
             "_name_": "sudo_commands",
             "_required_": false
            },
            "sudo_commands_nopasswd": {
             "items": [
              {
               "minLength": 1,
               "type": "string"
              }
             ],
             "title": "sudo_commands_nopasswd",
             "type": "array",
             "_name_": "sudo_commands_nopasswd",
             "_required_": false
            },
            "email": {
             "anyOf": [
              {
               "format": "email",
               "type": "string"
              },
              {
               "type": "null"
              }
             ],
             "title": "email",
             "_name_": "email",
             "_required_": false
            },
            "id_type_both": {
             "title": "id_type_both",
             "type": "boolean",
             "_name_": "id_type_both",
             "_required_": false
            },
            "local": {
             "title": "local",
             "type": "boolean",
             "_name_": "local",
             "_required_": false
            },
            "immutable": {
             "title": "immutable",
             "type": "boolean",
             "_name_": "immutable",
             "_required_": false
            },
            "twofactor_auth_configured": {
             "title": "twofactor_auth_configured",
             "type": "boolean",
             "_name_": "twofactor_auth_configured",
             "_required_": false
            },
            "sid": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "null"
              }
             ],
             "title": "sid",
             "_name_": "sid",
             "_required_": false
            },
            "roles": {
             "items": [
              {
               "type": "string"
              }
             ],
             "title": "roles",
             "type": "array",
             "_name_": "roles",
             "_required_": false
            },
            "api_keys": {
             "items": [
              {
               "type": "integer"
              }
             ],
             "title": "api_keys",
             "type": "array",
             "_name_": "api_keys",
             "_required_": false
            }
           },
           "title": "UserQueryResultItem",
           "type": "object",
           "_attrs_order_": [
            "id",
            "uid",
            "username",
            "unixhash",
            "smbhash",
            "home",
            "shell",
            "full_name",
            "builtin",
            "smb",
            "userns_idmap",
            "group",
            "groups",
            "password_disabled",
            "ssh_password_enabled",
            "sshpubkey",
            "locked",
            "sudo_commands",
            "sudo_commands_nopasswd",
            "email",
            "id_type_both",
            "local",
            "immutable",
            "twofactor_auth_configured",
            "sid",
            "roles",
            "api_keys"
           ]
          }
         ],
         "type": "array"
        },
        {
         "additionalProperties": false,
         "properties": {
          "id": {
           "title": "id",
           "type": "integer",
           "_name_": "id",
           "_required_": false
          },
          "uid": {
           "title": "uid",
           "type": "integer",
           "_name_": "uid",
           "_required_": false
          },
          "username": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "minLength": 1,
             "type": "string"
            }
           ],
           "title": "username",
           "_name_": "username",
           "_required_": false
          },
          "unixhash": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "null"
            }
           ],
           "title": "unixhash",
           "_name_": "unixhash",
           "_required_": false
          },
          "smbhash": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "null"
            }
           ],
           "title": "smbhash",
           "_name_": "smbhash",
           "_required_": false
          },
          "home": {
           "minLength": 1,
           "title": "home",
           "type": "string",
           "_name_": "home",
           "_required_": false
          },
          "shell": {
           "description": "Available choices can be retrieved with `user.shell_choices`.",
           "minLength": 1,
           "title": "shell",
           "type": "string",
           "_name_": "shell",
           "_required_": false
          },
          "full_name": {
           "title": "full_name",
           "type": "string",
           "_name_": "full_name",
           "_required_": false
          },
          "builtin": {
           "title": "builtin",
           "type": "boolean",
           "_name_": "builtin",
           "_required_": false
          },
          "smb": {
           "title": "smb",
           "type": "boolean",
           "_name_": "smb",
           "_required_": false
          },
          "userns_idmap": {
           "anyOf": [
            {
             "const": "DIRECT",
             "enum": [
              "DIRECT"
             ],
             "type": "string"
            },
            {
             "maximum": 4294967294,
             "minimum": 1,
             "type": "integer"
            },
            {
             "type": "null"
            }
           ],
           "description": "Species the subuid mapping for this user. If DIRECT then the UID will be\ndirectly mapped to all containers. Alternatively, the target UID may be\nexplicitly specified. If None, then the UID will not be mapped.\n\nNOTE: this field will be ignored for users that have been assigned\nTrueNAS roles.",
           "title": "userns_idmap",
           "_name_": "userns_idmap",
           "_required_": false
          },
          "group": {
           "title": "group",
           "type": "object",
           "_name_": "group",
           "_required_": false
          },
          "groups": {
           "description": "Specifies whether the user should be allowed access to SMB shares. User will also automatically be added to\nthe `builtin_users` group.",
           "items": [
            {
             "type": "integer"
            }
           ],
           "title": "groups",
           "type": "array",
           "_name_": "groups",
           "_required_": false
          },
          "password_disabled": {
           "title": "password_disabled",
           "type": "boolean",
           "_name_": "password_disabled",
           "_required_": false
          },
          "ssh_password_enabled": {
           "description": "Required if `password_disabled` is false.",
           "title": "ssh_password_enabled",
           "type": "boolean",
           "_name_": "ssh_password_enabled",
           "_required_": false
          },
          "sshpubkey": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "null"
            }
           ],
           "title": "sshpubkey",
           "_name_": "sshpubkey",
           "_required_": false
          },
          "locked": {
           "title": "locked",
           "type": "boolean",
           "_name_": "locked",
           "_required_": false
          },
          "sudo_commands": {
           "items": [
            {
             "minLength": 1,
             "type": "string"
            }
           ],
           "title": "sudo_commands",
           "type": "array",
           "_name_": "sudo_commands",
           "_required_": false
          },
          "sudo_commands_nopasswd": {
           "items": [
            {
             "minLength": 1,
             "type": "string"
            }
           ],
           "title": "sudo_commands_nopasswd",
           "type": "array",
           "_name_": "sudo_commands_nopasswd",
           "_required_": false
          },
          "email": {
           "anyOf": [
            {
             "format": "email",
             "type": "string"
            },
            {
             "type": "null"
            }
           ],
           "title": "email",
           "_name_": "email",
           "_required_": false
          },
          "id_type_both": {
           "title": "id_type_both",
           "type": "boolean",
           "_name_": "id_type_both",
           "_required_": false
          },
          "local": {
           "title": "local",
           "type": "boolean",
           "_name_": "local",
           "_required_": false
          },
          "immutable": {
           "title": "immutable",
           "type": "boolean",
           "_name_": "immutable",
           "_required_": false
          },
          "twofactor_auth_configured": {
           "title": "twofactor_auth_configured",
           "type": "boolean",
           "_name_": "twofactor_auth_configured",
           "_required_": false
          },
          "sid": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "null"
            }
           ],
           "title": "sid",
           "_name_": "sid",
           "_required_": false
          },
          "roles": {
           "items": [
            {
             "type": "string"
            }
           ],
           "title": "roles",
           "type": "array",
           "_name_": "roles",
           "_required_": false
          },
          "api_keys": {
           "items": [
            {
             "type": "integer"
            }
           ],
           "title": "api_keys",
           "type": "array",
           "_name_": "api_keys",
           "_required_": false
          }
         },
         "title": "UserQueryResultItem",
         "type": "object",
         "_attrs_order_": [
          "id",
          "uid",
          "username",
          "unixhash",
          "smbhash",
          "home",
          "shell",
          "full_name",
          "builtin",
          "smb",
          "userns_idmap",
          "group",
          "groups",
          "password_disabled",
          "ssh_password_enabled",
          "sshpubkey",
          "locked",
          "sudo_commands",
          "sudo_commands_nopasswd",
          "email",
          "id_type_both",
          "local",
          "immutable",
          "twofactor_auth_configured",
          "sid",
          "roles",
          "api_keys"
         ]
        },
        {
         "type": "integer"
        }
       ],
       "title": "result",
       "_name_": "result"
      },
      "user_create": {
       "additionalProperties": false,
       "properties": {
        "uid": {
         "anyOf": [
          {
           "maximum": 90000000,
           "minimum": 0,
           "type": "integer"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "description": "UNIX UID. If not provided, it is automatically filled with the next one available.",
         "title": "uid",
         "_name_": "uid"
        },
        "username": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "minLength": 1,
           "type": "string"
          }
         ],
         "title": "username",
         "_name_": "username"
        },
        "home": {
         "default": "/var/empty",
         "minLength": 1,
         "title": "home",
         "type": "string",
         "_name_": "home"
        },
        "shell": {
         "default": "/usr/bin/zsh",
         "description": "Available choices can be retrieved with `user.shell_choices`.",
         "minLength": 1,
         "title": "shell",
         "type": "string",
         "_name_": "shell"
        },
        "full_name": {
         "minLength": 1,
         "title": "full_name",
         "type": "string",
         "_name_": "full_name"
        },
        "smb": {
         "default": true,
         "title": "smb",
         "type": "boolean",
         "_name_": "smb"
        },
        "userns_idmap": {
         "anyOf": [
          {
           "const": "DIRECT",
           "enum": [
            "DIRECT"
           ],
           "type": "string"
          },
          {
           "maximum": 4294967294,
           "minimum": 1,
           "type": "integer"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "description": "Species the subuid mapping for this user. If DIRECT then the UID will be\ndirectly mapped to all containers. Alternatively, the target UID may be\nexplicitly specified. If None, then the UID will not be mapped.\n\nNOTE: this field will be ignored for users that have been assigned\nTrueNAS roles.",
         "title": "userns_idmap",
         "_name_": "userns_idmap"
        },
        "group": {
         "anyOf": [
          {
           "type": "integer"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "description": "Required if `group_create` is `false`.",
         "title": "group",
         "_name_": "group"
        },
        "groups": {
         "description": "Specifies whether the user should be allowed access to SMB shares. User will also automatically be added to\nthe `builtin_users` group.",
         "items": {
          "type": "integer"
         },
         "title": "groups",
         "type": "array",
         "_name_": "groups"
        },
        "password_disabled": {
         "default": false,
         "title": "password_disabled",
         "type": "boolean",
         "_name_": "password_disabled"
        },
        "ssh_password_enabled": {
         "default": false,
         "description": "Required if `password_disabled` is false.",
         "title": "ssh_password_enabled",
         "type": "boolean",
         "_name_": "ssh_password_enabled"
        },
        "sshpubkey": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "sshpubkey",
         "_name_": "sshpubkey"
        },
        "locked": {
         "default": false,
         "title": "locked",
         "type": "boolean",
         "_name_": "locked"
        },
        "sudo_commands": {
         "items": {
          "minLength": 1,
          "type": "string"
         },
         "title": "sudo_commands",
         "type": "array",
         "_name_": "sudo_commands"
        },
        "sudo_commands_nopasswd": {
         "items": {
          "minLength": 1,
          "type": "string"
         },
         "title": "sudo_commands_nopasswd",
         "type": "array",
         "_name_": "sudo_commands_nopasswd"
        },
        "email": {
         "anyOf": [
          {
           "format": "email",
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "email",
         "_name_": "email"
        },
        "group_create": {
         "default": false,
         "title": "group_create",
         "type": "boolean",
         "_name_": "group_create"
        },
        "home_create": {
         "default": false,
         "title": "home_create",
         "type": "boolean",
         "_name_": "home_create"
        },
        "home_mode": {
         "default": "700",
         "title": "home_mode",
         "type": "string",
         "_name_": "home_mode"
        },
        "password": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "password",
         "_name_": "password"
        },
        "random_password": {
         "default": false,
         "description": "Generate a random 20 character password for the user",
         "title": "random_password",
         "type": "boolean",
         "_name_": "random_password"
        }
       },
       "required": [
        "username",
        "full_name"
       ],
       "title": "user_create",
       "type": "object",
       "_name_": "user_create",
       "_attrs_order_": [
        "uid",
        "username",
        "home",
        "shell",
        "full_name",
        "smb",
        "userns_idmap",
        "group",
        "groups",
        "password_disabled",
        "ssh_password_enabled",
        "sshpubkey",
        "locked",
        "sudo_commands",
        "sudo_commands_nopasswd",
        "email",
        "group_create",
        "home_create",
        "home_mode",
        "password",
        "random_password"
       ]
      },
      "return_schema_of_user_create": {
       "additionalProperties": false,
       "properties": {
        "id": {
         "title": "id",
         "type": "integer",
         "_name_": "id"
        },
        "uid": {
         "title": "uid",
         "type": "integer",
         "_name_": "uid"
        },
        "username": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "minLength": 1,
           "type": "string"
          }
         ],
         "title": "username",
         "_name_": "username"
        },
        "unixhash": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "title": "unixhash",
         "_name_": "unixhash"
        },
        "smbhash": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "title": "smbhash",
         "_name_": "smbhash"
        },
        "home": {
         "default": "/var/empty",
         "minLength": 1,
         "title": "home",
         "type": "string",
         "_name_": "home"
        },
        "shell": {
         "default": "/usr/bin/zsh",
         "description": "Available choices can be retrieved with `user.shell_choices`.",
         "minLength": 1,
         "title": "shell",
         "type": "string",
         "_name_": "shell"
        },
        "full_name": {
         "title": "full_name",
         "type": "string",
         "_name_": "full_name"
        },
        "builtin": {
         "title": "builtin",
         "type": "boolean",
         "_name_": "builtin"
        },
        "smb": {
         "default": true,
         "title": "smb",
         "type": "boolean",
         "_name_": "smb"
        },
        "userns_idmap": {
         "anyOf": [
          {
           "const": "DIRECT",
           "enum": [
            "DIRECT"
           ],
           "type": "string"
          },
          {
           "maximum": 4294967294,
           "minimum": 1,
           "type": "integer"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "description": "Species the subuid mapping for this user. If DIRECT then the UID will be\ndirectly mapped to all containers. Alternatively, the target UID may be\nexplicitly specified. If None, then the UID will not be mapped.\n\nNOTE: this field will be ignored for users that have been assigned\nTrueNAS roles.",
         "title": "userns_idmap",
         "_name_": "userns_idmap"
        },
        "group": {
         "title": "group",
         "type": "object",
         "_name_": "group"
        },
        "groups": {
         "description": "Specifies whether the user should be allowed access to SMB shares. User will also automatically be added to\nthe `builtin_users` group.",
         "items": {
          "type": "integer"
         },
         "title": "groups",
         "type": "array",
         "_name_": "groups"
        },
        "password_disabled": {
         "default": false,
         "title": "password_disabled",
         "type": "boolean",
         "_name_": "password_disabled"
        },
        "ssh_password_enabled": {
         "default": false,
         "description": "Required if `password_disabled` is false.",
         "title": "ssh_password_enabled",
         "type": "boolean",
         "_name_": "ssh_password_enabled"
        },
        "sshpubkey": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "sshpubkey",
         "_name_": "sshpubkey"
        },
        "locked": {
         "default": false,
         "title": "locked",
         "type": "boolean",
         "_name_": "locked"
        },
        "sudo_commands": {
         "items": {
          "minLength": 1,
          "type": "string"
         },
         "title": "sudo_commands",
         "type": "array",
         "_name_": "sudo_commands"
        },
        "sudo_commands_nopasswd": {
         "items": {
          "minLength": 1,
          "type": "string"
         },
         "title": "sudo_commands_nopasswd",
         "type": "array",
         "_name_": "sudo_commands_nopasswd"
        },
        "email": {
         "anyOf": [
          {
           "format": "email",
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "email",
         "_name_": "email"
        },
        "id_type_both": {
         "title": "id_type_both",
         "type": "boolean",
         "_name_": "id_type_both"
        },
        "local": {
         "title": "local",
         "type": "boolean",
         "_name_": "local"
        },
        "immutable": {
         "title": "immutable",
         "type": "boolean",
         "_name_": "immutable"
        },
        "twofactor_auth_configured": {
         "title": "twofactor_auth_configured",
         "type": "boolean",
         "_name_": "twofactor_auth_configured"
        },
        "sid": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "title": "sid",
         "_name_": "sid"
        },
        "roles": {
         "items": {
          "type": "string"
         },
         "title": "roles",
         "type": "array",
         "_name_": "roles"
        },
        "api_keys": {
         "items": {
          "type": "integer"
         },
         "title": "api_keys",
         "type": "array",
         "_name_": "api_keys"
        },
        "password": {
         "anyOf": [
          {
           "minLength": 1,
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "description": "Password if it was specified in create or update payload. If random_password\nwas specified then this will be a 20 character random string.",
         "title": "password",
         "_name_": "password"
        }
       },
       "required": [
        "id",
        "uid",
        "username",
        "unixhash",
        "smbhash",
        "full_name",
        "builtin",
        "group",
        "id_type_both",
        "local",
        "immutable",
        "twofactor_auth_configured",
        "sid",
        "roles",
        "api_keys",
        "password"
       ],
       "title": "result",
       "type": "object",
       "_name_": "result",
       "_attrs_order_": [
        "id",
        "uid",
        "username",
        "unixhash",
        "smbhash",
        "home",
        "shell",
        "full_name",
        "builtin",
        "smb",
        "userns_idmap",
        "group",
        "groups",
        "password_disabled",
        "ssh_password_enabled",
        "sshpubkey",
        "locked",
        "sudo_commands",
        "sudo_commands_nopasswd",
        "email",
        "id_type_both",
        "local",
        "immutable",
        "twofactor_auth_configured",
        "sid",
        "roles",
        "api_keys",
        "password"
       ]
      },
      "user_delete": {
       "additionalProperties": false,
       "properties": {
        "delete_group": {
         "default": true,
         "description": "Deletes the user primary group if it is not being used by any other user.",
         "title": "delete_group",
         "type": "boolean",
         "_name_": "delete_group"
        }
       },
       "title": "options",
       "type": "object",
       "default": {
        "delete_group": true
       },
       "_name_": "options",
       "_attrs_order_": [
        "delete_group"
       ]
      },
      "return_schema_of_user_delete": {
       "title": "result",
       "type": "integer",
       "_name_": "result"
      },
      "user_update": {
       "additionalProperties": false,
       "properties": {
        "username": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "minLength": 1,
           "type": "string"
          }
         ],
         "title": "username",
         "_name_": "username"
        },
        "home": {
         "minLength": 1,
         "title": "home",
         "type": "string",
         "_name_": "home"
        },
        "shell": {
         "description": "Available choices can be retrieved with `user.shell_choices`.",
         "minLength": 1,
         "title": "shell",
         "type": "string",
         "_name_": "shell"
        },
        "full_name": {
         "minLength": 1,
         "title": "full_name",
         "type": "string",
         "_name_": "full_name"
        },
        "smb": {
         "title": "smb",
         "type": "boolean",
         "_name_": "smb"
        },
        "userns_idmap": {
         "anyOf": [
          {
           "const": "DIRECT",
           "enum": [
            "DIRECT"
           ],
           "type": "string"
          },
          {
           "maximum": 4294967294,
           "minimum": 1,
           "type": "integer"
          },
          {
           "type": "null"
          }
         ],
         "description": "Species the subuid mapping for this user. If DIRECT then the UID will be\ndirectly mapped to all containers. Alternatively, the target UID may be\nexplicitly specified. If None, then the UID will not be mapped.\n\nNOTE: this field will be ignored for users that have been assigned\nTrueNAS roles.",
         "title": "userns_idmap",
         "_name_": "userns_idmap"
        },
        "group": {
         "anyOf": [
          {
           "type": "integer"
          },
          {
           "type": "null"
          }
         ],
         "description": "Required if `group_create` is `false`.",
         "title": "group",
         "_name_": "group"
        },
        "groups": {
         "description": "Specifies whether the user should be allowed access to SMB shares. User will also automatically be added to\nthe `builtin_users` group.",
         "items": {
          "type": "integer"
         },
         "title": "groups",
         "type": "array",
         "_name_": "groups"
        },
        "password_disabled": {
         "title": "password_disabled",
         "type": "boolean",
         "_name_": "password_disabled"
        },
        "ssh_password_enabled": {
         "description": "Required if `password_disabled` is false.",
         "title": "ssh_password_enabled",
         "type": "boolean",
         "_name_": "ssh_password_enabled"
        },
        "sshpubkey": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "title": "sshpubkey",
         "_name_": "sshpubkey"
        },
        "locked": {
         "title": "locked",
         "type": "boolean",
         "_name_": "locked"
        },
        "sudo_commands": {
         "items": {
          "minLength": 1,
          "type": "string"
         },
         "title": "sudo_commands",
         "type": "array",
         "_name_": "sudo_commands"
        },
        "sudo_commands_nopasswd": {
         "items": {
          "minLength": 1,
          "type": "string"
         },
         "title": "sudo_commands_nopasswd",
         "type": "array",
         "_name_": "sudo_commands_nopasswd"
        },
        "email": {
         "anyOf": [
          {
           "format": "email",
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "title": "email",
         "_name_": "email"
        },
        "home_create": {
         "title": "home_create",
         "type": "boolean",
         "_name_": "home_create"
        },
        "home_mode": {
         "title": "home_mode",
         "type": "string",
         "_name_": "home_mode"
        },
        "password": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "title": "password",
         "_name_": "password"
        },
        "random_password": {
         "description": "Generate a random 20 character password for the user",
         "title": "random_password",
         "type": "boolean",
         "_name_": "random_password"
        }
       },
       "title": "user_update",
       "type": "object",
       "_name_": "user_update",
       "_attrs_order_": [
        "username",
        "home",
        "shell",
        "full_name",
        "smb",
        "userns_idmap",
        "group",
        "groups",
        "password_disabled",
        "ssh_password_enabled",
        "sshpubkey",
        "locked",
        "sudo_commands",
        "sudo_commands_nopasswd",
        "email",
        "home_create",
        "home_mode",
        "password",
        "random_password"
       ]
      },
      "return_schema_of_user_update": {
       "additionalProperties": false,
       "properties": {
        "id": {
         "title": "id",
         "type": "integer",
         "_name_": "id"
        },
        "uid": {
         "title": "uid",
         "type": "integer",
         "_name_": "uid"
        },
        "username": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "minLength": 1,
           "type": "string"
          }
         ],
         "title": "username",
         "_name_": "username"
        },
        "unixhash": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "title": "unixhash",
         "_name_": "unixhash"
        },
        "smbhash": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "title": "smbhash",
         "_name_": "smbhash"
        },
        "home": {
         "default": "/var/empty",
         "minLength": 1,
         "title": "home",
         "type": "string",
         "_name_": "home"
        },
        "shell": {
         "default": "/usr/bin/zsh",
         "description": "Available choices can be retrieved with `user.shell_choices`.",
         "minLength": 1,
         "title": "shell",
         "type": "string",
         "_name_": "shell"
        },
        "full_name": {
         "title": "full_name",
         "type": "string",
         "_name_": "full_name"
        },
        "builtin": {
         "title": "builtin",
         "type": "boolean",
         "_name_": "builtin"
        },
        "smb": {
         "default": true,
         "title": "smb",
         "type": "boolean",
         "_name_": "smb"
        },
        "userns_idmap": {
         "anyOf": [
          {
           "const": "DIRECT",
           "enum": [
            "DIRECT"
           ],
           "type": "string"
          },
          {
           "maximum": 4294967294,
           "minimum": 1,
           "type": "integer"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "description": "Species the subuid mapping for this user. If DIRECT then the UID will be\ndirectly mapped to all containers. Alternatively, the target UID may be\nexplicitly specified. If None, then the UID will not be mapped.\n\nNOTE: this field will be ignored for users that have been assigned\nTrueNAS roles.",
         "title": "userns_idmap",
         "_name_": "userns_idmap"
        },
        "group": {
         "title": "group",
         "type": "object",
         "_name_": "group"
        },
        "groups": {
         "description": "Specifies whether the user should be allowed access to SMB shares. User will also automatically be added to\nthe `builtin_users` group.",
         "items": {
          "type": "integer"
         },
         "title": "groups",
         "type": "array",
         "_name_": "groups"
        },
        "password_disabled": {
         "default": false,
         "title": "password_disabled",
         "type": "boolean",
         "_name_": "password_disabled"
        },
        "ssh_password_enabled": {
         "default": false,
         "description": "Required if `password_disabled` is false.",
         "title": "ssh_password_enabled",
         "type": "boolean",
         "_name_": "ssh_password_enabled"
        },
        "sshpubkey": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "sshpubkey",
         "_name_": "sshpubkey"
        },
        "locked": {
         "default": false,
         "title": "locked",
         "type": "boolean",
         "_name_": "locked"
        },
        "sudo_commands": {
         "items": {
          "minLength": 1,
          "type": "string"
         },
         "title": "sudo_commands",
         "type": "array",
         "_name_": "sudo_commands"
        },
        "sudo_commands_nopasswd": {
         "items": {
          "minLength": 1,
          "type": "string"
         },
         "title": "sudo_commands_nopasswd",
         "type": "array",
         "_name_": "sudo_commands_nopasswd"
        },
        "email": {
         "anyOf": [
          {
           "format": "email",
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "email",
         "_name_": "email"
        },
        "id_type_both": {
         "title": "id_type_both",
         "type": "boolean",
         "_name_": "id_type_both"
        },
        "local": {
         "title": "local",
         "type": "boolean",
         "_name_": "local"
        },
        "immutable": {
         "title": "immutable",
         "type": "boolean",
         "_name_": "immutable"
        },
        "twofactor_auth_configured": {
         "title": "twofactor_auth_configured",
         "type": "boolean",
         "_name_": "twofactor_auth_configured"
        },
        "sid": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "title": "sid",
         "_name_": "sid"
        },
        "roles": {
         "items": {
          "type": "string"
         },
         "title": "roles",
         "type": "array",
         "_name_": "roles"
        },
        "api_keys": {
         "items": {
          "type": "integer"
         },
         "title": "api_keys",
         "type": "array",
         "_name_": "api_keys"
        },
        "password": {
         "anyOf": [
          {
           "minLength": 1,
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "description": "Password if it was specified in create or update payload. If random_password\nwas specified then this will be a 20 character random string.",
         "title": "password",
         "_name_": "password"
        }
       },
       "required": [
        "id",
        "uid",
        "username",
        "unixhash",
        "smbhash",
        "full_name",
        "builtin",
        "group",
        "id_type_both",
        "local",
        "immutable",
        "twofactor_auth_configured",
        "sid",
        "roles",
        "api_keys",
        "password"
       ],
       "title": "result",
       "type": "object",
       "_name_": "result",
       "_attrs_order_": [
        "id",
        "uid",
        "username",
        "unixhash",
        "smbhash",
        "home",
        "shell",
        "full_name",
        "builtin",
        "smb",
        "userns_idmap",
        "group",
        "groups",
        "password_disabled",
        "ssh_password_enabled",
        "sshpubkey",
        "locked",
        "sudo_commands",
        "sudo_commands_nopasswd",
        "email",
        "id_type_both",
        "local",
        "immutable",
        "twofactor_auth_configured",
        "sid",
        "roles",
        "api_keys",
        "password"
       ]
      },
      "user_get_instance_0": {
       "title": "id",
       "type": "integer",
       "_name_": "id"
      },
      "user_get_instance_1": {
       "additionalProperties": false,
       "properties": {
        "relationships": {
         "default": true,
         "title": "relationships",
         "type": "boolean",
         "_name_": "relationships"
        },
        "extend": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "extend",
         "_name_": "extend"
        },
        "extend_context": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "extend_context",
         "_name_": "extend_context"
        },
        "prefix": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "prefix",
         "_name_": "prefix"
        },
        "extra": {
         "default": {},
         "title": "extra",
         "type": "object",
         "_name_": "extra"
        },
        "order_by": {
         "default": [],
         "items": {
          "type": "string"
         },
         "title": "order_by",
         "type": "array",
         "_name_": "order_by"
        },
        "select": {
         "default": [],
         "items": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "items": [
             {}
            ],
            "type": "array"
           }
          ]
         },
         "title": "select",
         "type": "array",
         "_name_": "select"
        },
        "count": {
         "default": false,
         "title": "count",
         "type": "boolean",
         "_name_": "count"
        },
        "get": {
         "default": false,
         "title": "get",
         "type": "boolean",
         "_name_": "get"
        },
        "offset": {
         "default": 0,
         "title": "offset",
         "type": "integer",
         "_name_": "offset"
        },
        "limit": {
         "default": 0,
         "title": "limit",
         "type": "integer",
         "_name_": "limit"
        },
        "force_sql_filters": {
         "default": false,
         "title": "force_sql_filters",
         "type": "boolean",
         "_name_": "force_sql_filters"
        }
       },
       "title": "options",
       "type": "object",
       "default": {},
       "_name_": "options",
       "_attrs_order_": [
        "relationships",
        "extend",
        "extend_context",
        "prefix",
        "extra",
        "order_by",
        "select",
        "count",
        "get",
        "offset",
        "limit",
        "force_sql_filters"
       ]
      },
      "user_get_instance": {
       "type": "object",
       "properties": {
        "id": {
         "$ref": "#/components/schemas/user_get_instance_0"
        },
        "options": {
         "$ref": "#/components/schemas/user_get_instance_1"
        }
       }
      },
      "return_schema_of_user_get_instance": {
       "additionalProperties": false,
       "properties": {
        "id": {
         "title": "id",
         "type": "integer",
         "_name_": "id"
        },
        "uid": {
         "title": "uid",
         "type": "integer",
         "_name_": "uid"
        },
        "username": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "minLength": 1,
           "type": "string"
          }
         ],
         "title": "username",
         "_name_": "username"
        },
        "unixhash": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "title": "unixhash",
         "_name_": "unixhash"
        },
        "smbhash": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "title": "smbhash",
         "_name_": "smbhash"
        },
        "home": {
         "default": "/var/empty",
         "minLength": 1,
         "title": "home",
         "type": "string",
         "_name_": "home"
        },
        "shell": {
         "default": "/usr/bin/zsh",
         "description": "Available choices can be retrieved with `user.shell_choices`.",
         "minLength": 1,
         "title": "shell",
         "type": "string",
         "_name_": "shell"
        },
        "full_name": {
         "title": "full_name",
         "type": "string",
         "_name_": "full_name"
        },
        "builtin": {
         "title": "builtin",
         "type": "boolean",
         "_name_": "builtin"
        },
        "smb": {
         "default": true,
         "title": "smb",
         "type": "boolean",
         "_name_": "smb"
        },
        "userns_idmap": {
         "anyOf": [
          {
           "const": "DIRECT",
           "enum": [
            "DIRECT"
           ],
           "type": "string"
          },
          {
           "maximum": 4294967294,
           "minimum": 1,
           "type": "integer"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "description": "Species the subuid mapping for this user. If DIRECT then the UID will be\ndirectly mapped to all containers. Alternatively, the target UID may be\nexplicitly specified. If None, then the UID will not be mapped.\n\nNOTE: this field will be ignored for users that have been assigned\nTrueNAS roles.",
         "title": "userns_idmap",
         "_name_": "userns_idmap"
        },
        "group": {
         "title": "group",
         "type": "object",
         "_name_": "group"
        },
        "groups": {
         "description": "Specifies whether the user should be allowed access to SMB shares. User will also automatically be added to\nthe `builtin_users` group.",
         "items": {
          "type": "integer"
         },
         "title": "groups",
         "type": "array",
         "_name_": "groups"
        },
        "password_disabled": {
         "default": false,
         "title": "password_disabled",
         "type": "boolean",
         "_name_": "password_disabled"
        },
        "ssh_password_enabled": {
         "default": false,
         "description": "Required if `password_disabled` is false.",
         "title": "ssh_password_enabled",
         "type": "boolean",
         "_name_": "ssh_password_enabled"
        },
        "sshpubkey": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "sshpubkey",
         "_name_": "sshpubkey"
        },
        "locked": {
         "default": false,
         "title": "locked",
         "type": "boolean",
         "_name_": "locked"
        },
        "sudo_commands": {
         "items": {
          "minLength": 1,
          "type": "string"
         },
         "title": "sudo_commands",
         "type": "array",
         "_name_": "sudo_commands"
        },
        "sudo_commands_nopasswd": {
         "items": {
          "minLength": 1,
          "type": "string"
         },
         "title": "sudo_commands_nopasswd",
         "type": "array",
         "_name_": "sudo_commands_nopasswd"
        },
        "email": {
         "anyOf": [
          {
           "format": "email",
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "email",
         "_name_": "email"
        },
        "id_type_both": {
         "title": "id_type_both",
         "type": "boolean",
         "_name_": "id_type_both"
        },
        "local": {
         "title": "local",
         "type": "boolean",
         "_name_": "local"
        },
        "immutable": {
         "title": "immutable",
         "type": "boolean",
         "_name_": "immutable"
        },
        "twofactor_auth_configured": {
         "title": "twofactor_auth_configured",
         "type": "boolean",
         "_name_": "twofactor_auth_configured"
        },
        "sid": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "title": "sid",
         "_name_": "sid"
        },
        "roles": {
         "items": {
          "type": "string"
         },
         "title": "roles",
         "type": "array",
         "_name_": "roles"
        },
        "api_keys": {
         "items": {
          "type": "integer"
         },
         "title": "api_keys",
         "type": "array",
         "_name_": "api_keys"
        }
       },
       "required": [
        "id",
        "uid",
        "username",
        "unixhash",
        "smbhash",
        "full_name",
        "builtin",
        "group",
        "id_type_both",
        "local",
        "immutable",
        "twofactor_auth_configured",
        "sid",
        "roles",
        "api_keys"
       ],
       "title": "result",
       "type": "object",
       "_name_": "result",
       "_attrs_order_": [
        "id",
        "uid",
        "username",
        "unixhash",
        "smbhash",
        "home",
        "shell",
        "full_name",
        "builtin",
        "smb",
        "userns_idmap",
        "group",
        "groups",
        "password_disabled",
        "ssh_password_enabled",
        "sshpubkey",
        "locked",
        "sudo_commands",
        "sudo_commands_nopasswd",
        "email",
        "id_type_both",
        "local",
        "immutable",
        "twofactor_auth_configured",
        "sid",
        "roles",
        "api_keys"
       ]
      },
      "return_schema_of_user_get_next_uid": {
       "title": "result",
       "type": "integer",
       "_name_": "result"
      },
      "user_get_user_obj": {
       "additionalProperties": false,
       "properties": {
        "username": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "username",
         "_name_": "username"
        },
        "uid": {
         "anyOf": [
          {
           "type": "integer"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "uid",
         "_name_": "uid"
        },
        "get_groups": {
         "default": false,
         "description": "retrieve group list for the specified user.",
         "title": "get_groups",
         "type": "boolean",
         "_name_": "get_groups"
        },
        "sid_info": {
         "default": false,
         "description": "retrieve SID and domain information for the user.",
         "title": "sid_info",
         "type": "boolean",
         "_name_": "sid_info"
        }
       },
       "title": "get_user_obj",
       "type": "object",
       "_name_": "get_user_obj",
       "_attrs_order_": [
        "username",
        "uid",
        "get_groups",
        "sid_info"
       ]
      },
      "return_schema_of_user_get_user_obj": {
       "additionalProperties": false,
       "properties": {
        "pw_name": {
         "description": "name of the user",
         "title": "pw_name",
         "type": "string",
         "_name_": "pw_name"
        },
        "pw_gecos": {
         "description": "full username or comment field",
         "title": "pw_gecos",
         "type": "string",
         "_name_": "pw_gecos"
        },
        "pw_dir": {
         "description": "user home directory",
         "title": "pw_dir",
         "type": "string",
         "_name_": "pw_dir"
        },
        "pw_shell": {
         "description": "user command line interpreter",
         "title": "pw_shell",
         "type": "string",
         "_name_": "pw_shell"
        },
        "pw_uid": {
         "description": "numerical user id of the user",
         "title": "pw_uid",
         "type": "integer",
         "_name_": "pw_uid"
        },
        "pw_gid": {
         "description": "numerical group id for the user's primary group",
         "title": "pw_gid",
         "type": "integer",
         "_name_": "pw_gid"
        },
        "grouplist": {
         "anyOf": [
          {
           "items": [
            {
             "type": "integer"
            }
           ],
           "type": "array"
          },
          {
           "type": "null"
          }
         ],
         "description": "optional list of group ids for groups of which this account is a member. If `get_groups` is not specified,\nthis value will be null.",
         "title": "grouplist",
         "_name_": "grouplist"
        },
        "sid": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "description": "optional SID value for the account that is present if `sid_info` is specified in payload.",
         "title": "sid",
         "_name_": "sid"
        },
        "source": {
         "description": "the source for the user account.",
         "enum": [
          "LOCAL",
          "ACTIVEDIRECTORY",
          "LDAP"
         ],
         "title": "source",
         "type": "string",
         "_name_": "source"
        },
        "local": {
         "description": "boolean value indicating whether the account is local to TrueNAS or provided by a directory service.",
         "title": "local",
         "type": "boolean",
         "_name_": "local"
        }
       },
       "required": [
        "pw_name",
        "pw_gecos",
        "pw_dir",
        "pw_shell",
        "pw_uid",
        "pw_gid",
        "grouplist",
        "sid",
        "source",
        "local"
       ],
       "title": "result",
       "type": "object",
       "_name_": "result",
       "_attrs_order_": [
        "pw_name",
        "pw_gecos",
        "pw_dir",
        "pw_shell",
        "pw_uid",
        "pw_gid",
        "grouplist",
        "sid",
        "source",
        "local"
       ]
      },
      "return_schema_of_user_has_local_administrator_set_up": {
       "title": "result",
       "type": "boolean",
       "_name_": "result"
      },
      "user_shell_choices": {
       "default": [],
       "items": {
        "type": "integer"
       },
       "title": "group_ids",
       "type": "array",
       "_name_": "group_ids"
      },
      "return_schema_of_user_shell_choices": {
       "examples": [
        {
         "/usr/bin/bash": "bash",
         "/usr/bin/dash": "dash",
         "/usr/bin/rbash": "rbash",
         "/usr/bin/sh": "sh",
         "/usr/bin/tmux": "tmux",
         "/usr/bin/zsh": "zsh",
         "/usr/sbin/nologin": "nologin"
        }
       ],
       "title": "result",
       "type": "object",
       "_name_": "result"
      },
      "user_unset_2fa_secret": {
       "title": "username",
       "type": "string",
       "_name_": "username"
      },
      "return_schema_of_user_unset_2fa_secret": {
       "title": "result",
       "type": "null",
       "_name_": "result"
      },
      "return_schema_of_virt_device_disk_choices": {
       "additionalProperties": {
        "type": "string"
       },
       "title": "result",
       "type": "object",
       "_name_": "result"
      },
      "virt_device_export_disk_image": {
       "additionalProperties": false,
       "properties": {
        "format": {
         "minLength": 1,
         "title": "format",
         "type": "string",
         "_name_": "format"
        },
        "directory": {
         "minLength": 1,
         "title": "directory",
         "type": "string",
         "_name_": "directory"
        },
        "zvol": {
         "minLength": 1,
         "title": "zvol",
         "type": "string",
         "_name_": "zvol"
        }
       },
       "required": [
        "format",
        "directory",
        "zvol"
       ],
       "title": "virt_device_export_disk_image",
       "type": "object",
       "_name_": "virt_device_export_disk_image",
       "_attrs_order_": [
        "format",
        "directory",
        "zvol"
       ]
      },
      "return_schema_of_virt_device_export_disk_image": {
       "title": "result",
       "type": "boolean",
       "_name_": "result"
      },
      "virt_device_gpu_choices": {
       "enum": [
        "PHYSICAL",
        "MDEV",
        "MIG",
        "SRIOV"
       ],
       "title": "gpu_type",
       "type": "string",
       "_name_": "gpu_type"
      },
      "return_schema_of_virt_device_gpu_choices": {
       "additionalProperties": {
        "additionalProperties": false,
        "properties": {
         "bus": {
          "title": "bus",
          "type": "string",
          "_name_": "bus",
          "_required_": true
         },
         "slot": {
          "title": "slot",
          "type": "string",
          "_name_": "slot",
          "_required_": true
         },
         "description": {
          "title": "description",
          "type": "string",
          "_name_": "description",
          "_required_": true
         },
         "vendor": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "null"
           }
          ],
          "default": null,
          "title": "vendor",
          "_name_": "vendor",
          "_required_": false
         },
         "pci": {
          "title": "pci",
          "type": "string",
          "_name_": "pci",
          "_required_": true
         }
        },
        "required": [
         "bus",
         "slot",
         "description",
         "pci"
        ],
        "title": "GPUChoice",
        "type": "object",
        "_attrs_order_": [
         "bus",
         "slot",
         "description",
         "vendor",
         "pci"
        ]
       },
       "title": "result",
       "type": "object",
       "_name_": "result"
      },
      "virt_device_import_disk_image": {
       "additionalProperties": false,
       "properties": {
        "diskimg": {
         "minLength": 1,
         "title": "diskimg",
         "type": "string",
         "_name_": "diskimg"
        },
        "zvol": {
         "minLength": 1,
         "title": "zvol",
         "type": "string",
         "_name_": "zvol"
        }
       },
       "required": [
        "diskimg",
        "zvol"
       ],
       "title": "virt_device_import_disk_image",
       "type": "object",
       "_name_": "virt_device_import_disk_image",
       "_attrs_order_": [
        "diskimg",
        "zvol"
       ]
      },
      "return_schema_of_virt_device_import_disk_image": {
       "title": "result",
       "type": "boolean",
       "_name_": "result"
      },
      "virt_device_nic_choices": {
       "enum": [
        "BRIDGED",
        "MACVLAN"
       ],
       "title": "nic_type",
       "type": "string",
       "_name_": "nic_type"
      },
      "return_schema_of_virt_device_nic_choices": {
       "additionalProperties": {
        "type": "string"
       },
       "title": "result",
       "type": "object",
       "_name_": "result"
      },
      "return_schema_of_virt_device_pci_choices": {
       "title": "result",
       "type": "object",
       "_name_": "result"
      },
      "return_schema_of_virt_device_usb_choices": {
       "additionalProperties": {
        "additionalProperties": false,
        "properties": {
         "vendor_id": {
          "title": "vendor_id",
          "type": "string",
          "_name_": "vendor_id",
          "_required_": true
         },
         "product_id": {
          "title": "product_id",
          "type": "string",
          "_name_": "product_id",
          "_required_": true
         },
         "bus": {
          "title": "bus",
          "type": "integer",
          "_name_": "bus",
          "_required_": true
         },
         "dev": {
          "title": "dev",
          "type": "integer",
          "_name_": "dev",
          "_required_": true
         },
         "product": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "null"
           }
          ],
          "title": "product",
          "_name_": "product",
          "_required_": true
         },
         "manufacturer": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "null"
           }
          ],
          "title": "manufacturer",
          "_name_": "manufacturer",
          "_required_": true
         }
        },
        "required": [
         "vendor_id",
         "product_id",
         "bus",
         "dev",
         "product",
         "manufacturer"
        ],
        "title": "USBChoice",
        "type": "object",
        "_attrs_order_": [
         "vendor_id",
         "product_id",
         "bus",
         "dev",
         "product",
         "manufacturer"
        ]
       },
       "title": "result",
       "type": "object",
       "_name_": "result"
      },
      "return_schema_of_virt_global_config": {
       "additionalProperties": false,
       "properties": {
        "id": {
         "title": "id",
         "type": "integer",
         "_name_": "id"
        },
        "pool": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "description": "Default storage pool when creating new instances and volumes",
         "title": "pool",
         "_name_": "pool"
        },
        "dataset": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "dataset",
         "_name_": "dataset"
        },
        "storage_pools": {
         "anyOf": [
          {
           "items": [
            {
             "type": "string"
            }
           ],
           "type": "array"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "description": "ZFS pools to use as storage pools",
         "title": "storage_pools",
         "_name_": "storage_pools"
        },
        "bridge": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "bridge",
         "_name_": "bridge"
        },
        "v4_network": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "v4_network",
         "_name_": "v4_network"
        },
        "v6_network": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "v6_network",
         "_name_": "v6_network"
        },
        "state": {
         "anyOf": [
          {
           "enum": [
            "INITIALIZING",
            "INITIALIZED",
            "NO_POOL",
            "ERROR",
            "LOCKED"
           ],
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "state",
         "_name_": "state"
        }
       },
       "required": [
        "id"
       ],
       "title": "result",
       "type": "object",
       "_name_": "result",
       "_attrs_order_": [
        "id",
        "pool",
        "dataset",
        "storage_pools",
        "bridge",
        "v4_network",
        "v6_network",
        "state"
       ]
      },
      "virt_global_update": {
       "additionalProperties": false,
       "properties": {
        "pool": {
         "anyOf": [
          {
           "minLength": 1,
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "description": "Default storage pool when creating new instances and volumes",
         "title": "pool",
         "_name_": "pool"
        },
        "bridge": {
         "anyOf": [
          {
           "minLength": 1,
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "title": "bridge",
         "_name_": "bridge"
        },
        "storage_pools": {
         "anyOf": [
          {
           "items": [
            {
             "type": "string"
            }
           ],
           "type": "array"
          },
          {
           "type": "null"
          }
         ],
         "description": "ZFS pools to use as storage pools",
         "title": "storage_pools",
         "_name_": "storage_pools"
        },
        "v4_network": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "title": "v4_network",
         "_name_": "v4_network"
        },
        "v6_network": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "title": "v6_network",
         "_name_": "v6_network"
        }
       },
       "title": "virt_global_update",
       "type": "object",
       "_name_": "virt_global_update",
       "_attrs_order_": [
        "pool",
        "bridge",
        "storage_pools",
        "v4_network",
        "v6_network"
       ]
      },
      "return_schema_of_virt_global_update": {
       "additionalProperties": false,
       "properties": {
        "id": {
         "title": "id",
         "type": "integer",
         "_name_": "id"
        },
        "pool": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "description": "Default storage pool when creating new instances and volumes",
         "title": "pool",
         "_name_": "pool"
        },
        "dataset": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "dataset",
         "_name_": "dataset"
        },
        "storage_pools": {
         "anyOf": [
          {
           "items": [
            {
             "type": "string"
            }
           ],
           "type": "array"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "description": "ZFS pools to use as storage pools",
         "title": "storage_pools",
         "_name_": "storage_pools"
        },
        "bridge": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "bridge",
         "_name_": "bridge"
        },
        "v4_network": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "v4_network",
         "_name_": "v4_network"
        },
        "v6_network": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "v6_network",
         "_name_": "v6_network"
        },
        "state": {
         "anyOf": [
          {
           "enum": [
            "INITIALIZING",
            "INITIALIZED",
            "NO_POOL",
            "ERROR",
            "LOCKED"
           ],
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "state",
         "_name_": "state"
        }
       },
       "required": [
        "id"
       ],
       "title": "result",
       "type": "object",
       "_name_": "result",
       "_attrs_order_": [
        "id",
        "pool",
        "dataset",
        "storage_pools",
        "bridge",
        "v4_network",
        "v6_network",
        "state"
       ]
      },
      "return_schema_of_virt_global_bridge_choices": {
       "title": "result",
       "type": "object",
       "_name_": "result"
      },
      "virt_global_get_network": {
       "minLength": 1,
       "title": "name",
       "type": "string",
       "_name_": "name"
      },
      "return_schema_of_virt_global_get_network": {
       "additionalProperties": false,
       "properties": {
        "type": {
         "const": "BRIDGE",
         "enum": [
          "BRIDGE"
         ],
         "title": "type",
         "type": "string",
         "_name_": "type"
        },
        "managed": {
         "title": "managed",
         "type": "boolean",
         "_name_": "managed"
        },
        "ipv4_address": {
         "minLength": 1,
         "title": "ipv4_address",
         "type": "string",
         "_name_": "ipv4_address"
        },
        "ipv4_nat": {
         "title": "ipv4_nat",
         "type": "boolean",
         "_name_": "ipv4_nat"
        },
        "ipv6_address": {
         "minLength": 1,
         "title": "ipv6_address",
         "type": "string",
         "_name_": "ipv6_address"
        },
        "ipv6_nat": {
         "title": "ipv6_nat",
         "type": "boolean",
         "_name_": "ipv6_nat"
        }
       },
       "required": [
        "type",
        "managed",
        "ipv4_address",
        "ipv4_nat",
        "ipv6_address",
        "ipv6_nat"
       ],
       "title": "result",
       "type": "object",
       "_name_": "result",
       "_attrs_order_": [
        "type",
        "managed",
        "ipv4_address",
        "ipv4_nat",
        "ipv6_address",
        "ipv6_nat"
       ]
      },
      "return_schema_of_virt_global_pool_choices": {
       "title": "result",
       "type": "object",
       "_name_": "result"
      },
      "return_schema_of_virt_instance_query": {
       "anyOf": [
        {
         "items": [
          {
           "additionalProperties": false,
           "properties": {
            "id": {
             "title": "id",
             "type": "string",
             "_name_": "id",
             "_required_": false
            },
            "name": {
             "maxLength": 200,
             "minLength": 1,
             "title": "name",
             "type": "string",
             "_name_": "name",
             "_required_": false
            },
            "type": {
             "enum": [
              "CONTAINER",
              "VM"
             ],
             "title": "type",
             "type": "string",
             "_name_": "type",
             "_required_": false
            },
            "status": {
             "enum": [
              "RUNNING",
              "STOPPED",
              "UNKNOWN"
             ],
             "title": "status",
             "type": "string",
             "_name_": "status",
             "_required_": false
            },
            "cpu": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "type": "null"
              }
             ],
             "title": "cpu",
             "_name_": "cpu",
             "_required_": false
            },
            "memory": {
             "anyOf": [
              {
               "type": "integer"
              },
              {
               "type": "null"
              }
             ],
             "title": "memory",
             "_name_": "memory",
             "_required_": false
            },
            "autostart": {
             "title": "autostart",
             "type": "boolean",
             "_name_": "autostart",
             "_required_": false
            },
            "environment": {
             "additionalProperties": {
              "type": "string"
             },
             "title": "environment",
             "type": "object",
             "_name_": "environment",
             "_required_": false
            },
            "aliases": {
             "items": [
              {}
             ],
             "title": "aliases",
             "type": "array",
             "_name_": "aliases",
             "_required_": false
            },
            "image": {
             "title": "image",
             "_name_": "image",
             "_required_": false
            },
            "userns_idmap": {
             "anyOf": [
              {},
              {
               "type": "null"
              }
             ],
             "title": "userns_idmap",
             "_name_": "userns_idmap",
             "_required_": false
            },
            "raw": {
             "anyOf": [
              {
               "type": "object"
              },
              {
               "type": "null"
              }
             ],
             "title": "raw",
             "_name_": "raw",
             "_required_": false
            },
            "vnc_enabled": {
             "title": "vnc_enabled",
             "type": "boolean",
             "_name_": "vnc_enabled",
             "_required_": false
            },
            "vnc_port": {
             "anyOf": [
              {
               "type": "integer"
              },
              {
               "type": "null"
              }
             ],
             "title": "vnc_port",
             "_name_": "vnc_port",
             "_required_": false
            },
            "vnc_password": {
             "anyOf": [
              {
               "minLength": 1,
               "type": "string"
              },
              {
               "type": "null"
              }
             ],
             "title": "vnc_password",
             "_name_": "vnc_password",
             "_required_": false
            },
            "secure_boot": {
             "anyOf": [
              {
               "type": "boolean"
              },
              {
               "type": "null"
              }
             ],
             "title": "secure_boot",
             "_name_": "secure_boot",
             "_required_": false
            },
            "root_disk_size": {
             "anyOf": [
              {
               "type": "integer"
              },
              {
               "type": "null"
              }
             ],
             "title": "root_disk_size",
             "_name_": "root_disk_size",
             "_required_": false
            },
            "root_disk_io_bus": {
             "enum": [
              "NVME",
              "VIRTIO-BLK",
              "VIRTIO-SCSI",
              null
             ],
             "title": "root_disk_io_bus",
             "_name_": "root_disk_io_bus",
             "_required_": false
            },
            "storage_pool": {
             "description": "Storage pool in which the root of the instance is located.",
             "minLength": 1,
             "title": "storage_pool",
             "type": "string",
             "_name_": "storage_pool",
             "_required_": false
            }
           },
           "title": "VirtInstanceQueryResultItem",
           "type": "object",
           "_attrs_order_": [
            "id",
            "name",
            "type",
            "status",
            "cpu",
            "memory",
            "autostart",
            "environment",
            "aliases",
            "image",
            "userns_idmap",
            "raw",
            "vnc_enabled",
            "vnc_port",
            "vnc_password",
            "secure_boot",
            "root_disk_size",
            "root_disk_io_bus",
            "storage_pool"
           ]
          }
         ],
         "type": "array"
        },
        {
         "additionalProperties": false,
         "properties": {
          "id": {
           "title": "id",
           "type": "string",
           "_name_": "id",
           "_required_": false
          },
          "name": {
           "maxLength": 200,
           "minLength": 1,
           "title": "name",
           "type": "string",
           "_name_": "name",
           "_required_": false
          },
          "type": {
           "enum": [
            "CONTAINER",
            "VM"
           ],
           "title": "type",
           "type": "string",
           "_name_": "type",
           "_required_": false
          },
          "status": {
           "enum": [
            "RUNNING",
            "STOPPED",
            "UNKNOWN"
           ],
           "title": "status",
           "type": "string",
           "_name_": "status",
           "_required_": false
          },
          "cpu": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "null"
            }
           ],
           "title": "cpu",
           "_name_": "cpu",
           "_required_": false
          },
          "memory": {
           "anyOf": [
            {
             "type": "integer"
            },
            {
             "type": "null"
            }
           ],
           "title": "memory",
           "_name_": "memory",
           "_required_": false
          },
          "autostart": {
           "title": "autostart",
           "type": "boolean",
           "_name_": "autostart",
           "_required_": false
          },
          "environment": {
           "additionalProperties": {
            "type": "string"
           },
           "title": "environment",
           "type": "object",
           "_name_": "environment",
           "_required_": false
          },
          "aliases": {
           "items": [
            {}
           ],
           "title": "aliases",
           "type": "array",
           "_name_": "aliases",
           "_required_": false
          },
          "image": {
           "title": "image",
           "_name_": "image",
           "_required_": false
          },
          "userns_idmap": {
           "anyOf": [
            {},
            {
             "type": "null"
            }
           ],
           "title": "userns_idmap",
           "_name_": "userns_idmap",
           "_required_": false
          },
          "raw": {
           "anyOf": [
            {
             "type": "object"
            },
            {
             "type": "null"
            }
           ],
           "title": "raw",
           "_name_": "raw",
           "_required_": false
          },
          "vnc_enabled": {
           "title": "vnc_enabled",
           "type": "boolean",
           "_name_": "vnc_enabled",
           "_required_": false
          },
          "vnc_port": {
           "anyOf": [
            {
             "type": "integer"
            },
            {
             "type": "null"
            }
           ],
           "title": "vnc_port",
           "_name_": "vnc_port",
           "_required_": false
          },
          "vnc_password": {
           "anyOf": [
            {
             "minLength": 1,
             "type": "string"
            },
            {
             "type": "null"
            }
           ],
           "title": "vnc_password",
           "_name_": "vnc_password",
           "_required_": false
          },
          "secure_boot": {
           "anyOf": [
            {
             "type": "boolean"
            },
            {
             "type": "null"
            }
           ],
           "title": "secure_boot",
           "_name_": "secure_boot",
           "_required_": false
          },
          "root_disk_size": {
           "anyOf": [
            {
             "type": "integer"
            },
            {
             "type": "null"
            }
           ],
           "title": "root_disk_size",
           "_name_": "root_disk_size",
           "_required_": false
          },
          "root_disk_io_bus": {
           "enum": [
            "NVME",
            "VIRTIO-BLK",
            "VIRTIO-SCSI",
            null
           ],
           "title": "root_disk_io_bus",
           "_name_": "root_disk_io_bus",
           "_required_": false
          },
          "storage_pool": {
           "description": "Storage pool in which the root of the instance is located.",
           "minLength": 1,
           "title": "storage_pool",
           "type": "string",
           "_name_": "storage_pool",
           "_required_": false
          }
         },
         "title": "VirtInstanceQueryResultItem",
         "type": "object",
         "_attrs_order_": [
          "id",
          "name",
          "type",
          "status",
          "cpu",
          "memory",
          "autostart",
          "environment",
          "aliases",
          "image",
          "userns_idmap",
          "raw",
          "vnc_enabled",
          "vnc_port",
          "vnc_password",
          "secure_boot",
          "root_disk_size",
          "root_disk_io_bus",
          "storage_pool"
         ]
        },
        {
         "type": "integer"
        }
       ],
       "title": "result",
       "_name_": "result"
      },
      "virt_instance_create": {
       "additionalProperties": false,
       "properties": {
        "name": {
         "maxLength": 200,
         "minLength": 1,
         "title": "name",
         "type": "string",
         "_name_": "name"
        },
        "iso_volume": {
         "anyOf": [
          {
           "minLength": 1,
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "iso_volume",
         "_name_": "iso_volume"
        },
        "source_type": {
         "default": "IMAGE",
         "enum": [
          null,
          "IMAGE",
          "ZVOL",
          "ISO",
          "VOLUME"
         ],
         "title": "source_type",
         "_name_": "source_type"
        },
        "storage_pool": {
         "anyOf": [
          {
           "minLength": 1,
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "description": "Storage pool under which to allocate root filesystem. Must be one of the pools\nlisted in virt.global.config output under \"storage_pools\". If None (default) then the pool\nspecified in the global configuration will be used.",
         "title": "storage_pool",
         "_name_": "storage_pool"
        },
        "image": {
         "anyOf": [
          {
           "maxLength": 200,
           "minLength": 1,
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "image",
         "_name_": "image"
        },
        "root_disk_size": {
         "default": 10,
         "description": "This can be specified when creating VMs so the root device's size can be configured. Root device for VMs\nis a sparse zvol and the field specifies space in GBs and defaults to 10 GBs.",
         "minimum": 5,
         "title": "root_disk_size",
         "type": "integer",
         "_name_": "root_disk_size"
        },
        "root_disk_io_bus": {
         "default": "NVME",
         "enum": [
          "NVME",
          "VIRTIO-BLK",
          "VIRTIO-SCSI"
         ],
         "title": "root_disk_io_bus",
         "type": "string",
         "_name_": "root_disk_io_bus"
        },
        "remote": {
         "const": "LINUX_CONTAINERS",
         "default": "LINUX_CONTAINERS",
         "enum": [
          "LINUX_CONTAINERS"
         ],
         "title": "remote",
         "type": "string",
         "_name_": "remote"
        },
        "instance_type": {
         "default": "CONTAINER",
         "enum": [
          "CONTAINER",
          "VM"
         ],
         "title": "instance_type",
         "type": "string",
         "_name_": "instance_type"
        },
        "environment": {
         "anyOf": [
          {
           "additionalProperties": {
            "type": "string"
           },
           "type": "object"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "environment",
         "_name_": "environment"
        },
        "autostart": {
         "anyOf": [
          {
           "type": "boolean"
          },
          {
           "type": "null"
          }
         ],
         "default": true,
         "title": "autostart",
         "_name_": "autostart"
        },
        "cpu": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "cpu",
         "_name_": "cpu"
        },
        "devices": {
         "anyOf": [
          {
           "items": [
            {
             "discriminator": {
              "mapping": {
               "DISK": "#/$defs/Disk",
               "GPU": "#/$defs/GPU",
               "NIC": "#/$defs/NIC",
               "PCI": "#/$defs/PCI",
               "PROXY": "#/$defs/Proxy",
               "TPM": "#/$defs/TPM",
               "USB": "#/$defs/USB"
              },
              "propertyName": "dev_type"
             },
             "oneOf": [
              {},
              {},
              {},
              {},
              {},
              {},
              {}
             ]
            }
           ],
           "type": "array"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "devices",
         "_name_": "devices"
        },
        "memory": {
         "anyOf": [
          {
           "type": "integer"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "memory",
         "_name_": "memory"
        },
        "secure_boot": {
         "default": false,
         "title": "secure_boot",
         "type": "boolean",
         "_name_": "secure_boot"
        },
        "enable_vnc": {
         "default": false,
         "title": "enable_vnc",
         "type": "boolean",
         "_name_": "enable_vnc"
        },
        "vnc_port": {
         "anyOf": [
          {
           "maximum": 65535,
           "minimum": 5900,
           "type": "integer"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "vnc_port",
         "_name_": "vnc_port"
        },
        "zvol_path": {
         "anyOf": [
          {
           "minLength": 1,
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "description": "This is useful when a VM wants to be booted where a ZVOL already has a VM bootstrapped in it and needs\nto be ported over to virt plugin. Virt will consume this zvol and add it as a DISK device to the instance\nwith boot priority set to 1 so the VM can be booted from it.",
         "title": "zvol_path",
         "_name_": "zvol_path"
        },
        "volume": {
         "anyOf": [
          {
           "minLength": 1,
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "description": "This should be set when source type is \"VOLUME\" and should be the name of the virt volume which should\nbe used to boot the VM instance.",
         "title": "volume",
         "_name_": "volume"
        },
        "vnc_password": {
         "anyOf": [
          {
           "minLength": 1,
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "vnc_password",
         "_name_": "vnc_password"
        }
       },
       "required": [
        "name"
       ],
       "title": "virt_instance_create",
       "type": "object",
       "_name_": "virt_instance_create",
       "_attrs_order_": [
        "name",
        "iso_volume",
        "source_type",
        "storage_pool",
        "image",
        "root_disk_size",
        "root_disk_io_bus",
        "remote",
        "instance_type",
        "environment",
        "autostart",
        "cpu",
        "devices",
        "memory",
        "secure_boot",
        "enable_vnc",
        "vnc_port",
        "zvol_path",
        "volume",
        "vnc_password"
       ]
      },
      "return_schema_of_virt_instance_create": {
       "additionalProperties": false,
       "properties": {
        "id": {
         "title": "id",
         "type": "string",
         "_name_": "id"
        },
        "name": {
         "maxLength": 200,
         "minLength": 1,
         "title": "name",
         "type": "string",
         "_name_": "name"
        },
        "type": {
         "default": "CONTAINER",
         "enum": [
          "CONTAINER",
          "VM"
         ],
         "title": "type",
         "type": "string",
         "_name_": "type"
        },
        "status": {
         "enum": [
          "RUNNING",
          "STOPPED",
          "UNKNOWN"
         ],
         "title": "status",
         "type": "string",
         "_name_": "status"
        },
        "cpu": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "title": "cpu",
         "_name_": "cpu"
        },
        "memory": {
         "anyOf": [
          {
           "type": "integer"
          },
          {
           "type": "null"
          }
         ],
         "title": "memory",
         "_name_": "memory"
        },
        "autostart": {
         "title": "autostart",
         "type": "boolean",
         "_name_": "autostart"
        },
        "environment": {
         "additionalProperties": {
          "type": "string"
         },
         "title": "environment",
         "type": "object",
         "_name_": "environment"
        },
        "aliases": {
         "items": {},
         "title": "aliases",
         "type": "array",
         "_name_": "aliases"
        },
        "image": {
         "title": "image",
         "_name_": "image"
        },
        "userns_idmap": {
         "anyOf": [
          {},
          {
           "type": "null"
          }
         ],
         "title": "userns_idmap",
         "_name_": "userns_idmap"
        },
        "raw": {
         "anyOf": [
          {
           "type": "object"
          },
          {
           "type": "null"
          }
         ],
         "title": "raw",
         "_name_": "raw"
        },
        "vnc_enabled": {
         "title": "vnc_enabled",
         "type": "boolean",
         "_name_": "vnc_enabled"
        },
        "vnc_port": {
         "anyOf": [
          {
           "type": "integer"
          },
          {
           "type": "null"
          }
         ],
         "title": "vnc_port",
         "_name_": "vnc_port"
        },
        "vnc_password": {
         "anyOf": [
          {
           "minLength": 1,
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "title": "vnc_password",
         "_name_": "vnc_password"
        },
        "secure_boot": {
         "anyOf": [
          {
           "type": "boolean"
          },
          {
           "type": "null"
          }
         ],
         "title": "secure_boot",
         "_name_": "secure_boot"
        },
        "root_disk_size": {
         "anyOf": [
          {
           "type": "integer"
          },
          {
           "type": "null"
          }
         ],
         "title": "root_disk_size",
         "_name_": "root_disk_size"
        },
        "root_disk_io_bus": {
         "enum": [
          "NVME",
          "VIRTIO-BLK",
          "VIRTIO-SCSI",
          null
         ],
         "title": "root_disk_io_bus",
         "_name_": "root_disk_io_bus"
        },
        "storage_pool": {
         "description": "Storage pool in which the root of the instance is located.",
         "minLength": 1,
         "title": "storage_pool",
         "type": "string",
         "_name_": "storage_pool"
        }
       },
       "required": [
        "id",
        "name",
        "status",
        "cpu",
        "memory",
        "autostart",
        "environment",
        "aliases",
        "image",
        "userns_idmap",
        "raw",
        "vnc_enabled",
        "vnc_port",
        "vnc_password",
        "secure_boot",
        "root_disk_size",
        "root_disk_io_bus",
        "storage_pool"
       ],
       "title": "result",
       "type": "object",
       "_name_": "result",
       "_attrs_order_": [
        "id",
        "name",
        "type",
        "status",
        "cpu",
        "memory",
        "autostart",
        "environment",
        "aliases",
        "image",
        "userns_idmap",
        "raw",
        "vnc_enabled",
        "vnc_port",
        "vnc_password",
        "secure_boot",
        "root_disk_size",
        "root_disk_io_bus",
        "storage_pool"
       ]
      },
      "return_schema_of_virt_instance_delete": {
       "const": true,
       "enum": [
        true
       ],
       "title": "result",
       "type": "boolean",
       "_name_": "result"
      },
      "virt_instance_update": {
       "additionalProperties": false,
       "properties": {
        "environment": {
         "anyOf": [
          {
           "additionalProperties": {
            "type": "string"
           },
           "type": "object"
          },
          {
           "type": "null"
          }
         ],
         "title": "environment",
         "_name_": "environment"
        },
        "autostart": {
         "anyOf": [
          {
           "type": "boolean"
          },
          {
           "type": "null"
          }
         ],
         "title": "autostart",
         "_name_": "autostart"
        },
        "cpu": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "title": "cpu",
         "_name_": "cpu"
        },
        "memory": {
         "anyOf": [
          {
           "type": "integer"
          },
          {
           "type": "null"
          }
         ],
         "title": "memory",
         "_name_": "memory"
        },
        "vnc_port": {
         "anyOf": [
          {
           "maximum": 65535,
           "minimum": 5900,
           "type": "integer"
          },
          {
           "type": "null"
          }
         ],
         "title": "vnc_port",
         "_name_": "vnc_port"
        },
        "enable_vnc": {
         "title": "enable_vnc",
         "type": "boolean",
         "_name_": "enable_vnc"
        },
        "vnc_password": {
         "anyOf": [
          {
           "minLength": 1,
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "description": "Setting vnc_password to null will unset VNC password",
         "title": "vnc_password",
         "_name_": "vnc_password"
        },
        "secure_boot": {
         "title": "secure_boot",
         "type": "boolean",
         "_name_": "secure_boot"
        },
        "root_disk_size": {
         "anyOf": [
          {
           "minimum": 5,
           "type": "integer"
          },
          {
           "type": "null"
          }
         ],
         "title": "root_disk_size",
         "_name_": "root_disk_size"
        },
        "root_disk_io_bus": {
         "enum": [
          "NVME",
          "VIRTIO-BLK",
          "VIRTIO-SCSI",
          null
         ],
         "title": "root_disk_io_bus",
         "_name_": "root_disk_io_bus"
        }
       },
       "title": "virt_instance_update",
       "type": "object",
       "_name_": "virt_instance_update",
       "_attrs_order_": [
        "environment",
        "autostart",
        "cpu",
        "memory",
        "vnc_port",
        "enable_vnc",
        "vnc_password",
        "secure_boot",
        "root_disk_size",
        "root_disk_io_bus"
       ]
      },
      "return_schema_of_virt_instance_update": {
       "additionalProperties": false,
       "properties": {
        "id": {
         "title": "id",
         "type": "string",
         "_name_": "id"
        },
        "name": {
         "maxLength": 200,
         "minLength": 1,
         "title": "name",
         "type": "string",
         "_name_": "name"
        },
        "type": {
         "default": "CONTAINER",
         "enum": [
          "CONTAINER",
          "VM"
         ],
         "title": "type",
         "type": "string",
         "_name_": "type"
        },
        "status": {
         "enum": [
          "RUNNING",
          "STOPPED",
          "UNKNOWN"
         ],
         "title": "status",
         "type": "string",
         "_name_": "status"
        },
        "cpu": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "title": "cpu",
         "_name_": "cpu"
        },
        "memory": {
         "anyOf": [
          {
           "type": "integer"
          },
          {
           "type": "null"
          }
         ],
         "title": "memory",
         "_name_": "memory"
        },
        "autostart": {
         "title": "autostart",
         "type": "boolean",
         "_name_": "autostart"
        },
        "environment": {
         "additionalProperties": {
          "type": "string"
         },
         "title": "environment",
         "type": "object",
         "_name_": "environment"
        },
        "aliases": {
         "items": {},
         "title": "aliases",
         "type": "array",
         "_name_": "aliases"
        },
        "image": {
         "title": "image",
         "_name_": "image"
        },
        "userns_idmap": {
         "anyOf": [
          {},
          {
           "type": "null"
          }
         ],
         "title": "userns_idmap",
         "_name_": "userns_idmap"
        },
        "raw": {
         "anyOf": [
          {
           "type": "object"
          },
          {
           "type": "null"
          }
         ],
         "title": "raw",
         "_name_": "raw"
        },
        "vnc_enabled": {
         "title": "vnc_enabled",
         "type": "boolean",
         "_name_": "vnc_enabled"
        },
        "vnc_port": {
         "anyOf": [
          {
           "type": "integer"
          },
          {
           "type": "null"
          }
         ],
         "title": "vnc_port",
         "_name_": "vnc_port"
        },
        "vnc_password": {
         "anyOf": [
          {
           "minLength": 1,
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "title": "vnc_password",
         "_name_": "vnc_password"
        },
        "secure_boot": {
         "anyOf": [
          {
           "type": "boolean"
          },
          {
           "type": "null"
          }
         ],
         "title": "secure_boot",
         "_name_": "secure_boot"
        },
        "root_disk_size": {
         "anyOf": [
          {
           "type": "integer"
          },
          {
           "type": "null"
          }
         ],
         "title": "root_disk_size",
         "_name_": "root_disk_size"
        },
        "root_disk_io_bus": {
         "enum": [
          "NVME",
          "VIRTIO-BLK",
          "VIRTIO-SCSI",
          null
         ],
         "title": "root_disk_io_bus",
         "_name_": "root_disk_io_bus"
        },
        "storage_pool": {
         "description": "Storage pool in which the root of the instance is located.",
         "minLength": 1,
         "title": "storage_pool",
         "type": "string",
         "_name_": "storage_pool"
        }
       },
       "required": [
        "id",
        "name",
        "status",
        "cpu",
        "memory",
        "autostart",
        "environment",
        "aliases",
        "image",
        "userns_idmap",
        "raw",
        "vnc_enabled",
        "vnc_port",
        "vnc_password",
        "secure_boot",
        "root_disk_size",
        "root_disk_io_bus",
        "storage_pool"
       ],
       "title": "result",
       "type": "object",
       "_name_": "result",
       "_attrs_order_": [
        "id",
        "name",
        "type",
        "status",
        "cpu",
        "memory",
        "autostart",
        "environment",
        "aliases",
        "image",
        "userns_idmap",
        "raw",
        "vnc_enabled",
        "vnc_port",
        "vnc_password",
        "secure_boot",
        "root_disk_size",
        "root_disk_io_bus",
        "storage_pool"
       ]
      },
      "virt_instance_device_add_0": {
       "title": "id",
       "type": "string",
       "_name_": "id"
      },
      "virt_instance_device_add_1": {
       "discriminator": {
        "mapping": {
         "DISK": "#/$defs/Disk",
         "GPU": "#/$defs/GPU",
         "NIC": "#/$defs/NIC",
         "PCI": "#/$defs/PCI",
         "PROXY": "#/$defs/Proxy",
         "TPM": "#/$defs/TPM",
         "USB": "#/$defs/USB"
        },
        "propertyName": "dev_type"
       },
       "oneOf": [
        {
         "additionalProperties": false,
         "properties": {
          "name": {
           "anyOf": [
            {
             "minLength": 1,
             "type": "string"
            },
            {
             "type": "null"
            }
           ],
           "default": null,
           "title": "name",
           "_name_": "name",
           "_required_": false
          },
          "description": {
           "anyOf": [
            {
             "minLength": 1,
             "type": "string"
            },
            {
             "type": "null"
            }
           ],
           "default": null,
           "title": "description",
           "_name_": "description",
           "_required_": false
          },
          "readonly": {
           "default": false,
           "title": "readonly",
           "type": "boolean",
           "_name_": "readonly",
           "_required_": false
          },
          "dev_type": {
           "const": "DISK",
           "enum": [
            "DISK"
           ],
           "title": "dev_type",
           "type": "string",
           "_name_": "dev_type",
           "_required_": true
          },
          "source": {
           "anyOf": [
            {
             "minLength": 1,
             "type": "string"
            },
            {
             "type": "null"
            }
           ],
           "default": null,
           "description": "For CONTAINER instances, this would be a valid pool path. For VM instances, it\ncan be a valid zvol path or an incus storage volume name",
           "title": "source",
           "_name_": "source",
           "_required_": false
          },
          "destination": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "null"
            }
           ],
           "default": null,
           "title": "destination",
           "_name_": "destination",
           "_required_": false
          },
          "boot_priority": {
           "anyOf": [
            {
             "minimum": 0,
             "type": "integer"
            },
            {
             "type": "null"
            }
           ],
           "default": null,
           "title": "boot_priority",
           "_name_": "boot_priority",
           "_required_": false
          },
          "io_bus": {
           "default": null,
           "enum": [
            "NVME",
            "VIRTIO-BLK",
            "VIRTIO-SCSI",
            null
           ],
           "title": "io_bus",
           "_name_": "io_bus",
           "_required_": false
          },
          "storage_pool": {
           "anyOf": [
            {
             "minLength": 1,
             "type": "string"
            },
            {
             "type": "null"
            }
           ],
           "default": null,
           "description": "Storage pool in which the device is located. This must be one\nof the storage pools listed in virt.global.config output.\nIf this is set to None during device creation, then the default storage\npool defined in virt.global.config will be used.",
           "title": "storage_pool",
           "_name_": "storage_pool",
           "_required_": false
          }
         },
         "required": [
          "dev_type"
         ],
         "title": "Disk",
         "type": "object",
         "_attrs_order_": [
          "name",
          "description",
          "readonly",
          "dev_type",
          "source",
          "destination",
          "boot_priority",
          "io_bus",
          "storage_pool"
         ]
        },
        {
         "additionalProperties": false,
         "properties": {
          "name": {
           "anyOf": [
            {
             "minLength": 1,
             "type": "string"
            },
            {
             "type": "null"
            }
           ],
           "default": null,
           "title": "name",
           "_name_": "name",
           "_required_": false
          },
          "description": {
           "anyOf": [
            {
             "minLength": 1,
             "type": "string"
            },
            {
             "type": "null"
            }
           ],
           "default": null,
           "title": "description",
           "_name_": "description",
           "_required_": false
          },
          "readonly": {
           "default": false,
           "title": "readonly",
           "type": "boolean",
           "_name_": "readonly",
           "_required_": false
          },
          "dev_type": {
           "const": "GPU",
           "enum": [
            "GPU"
           ],
           "title": "dev_type",
           "type": "string",
           "_name_": "dev_type",
           "_required_": true
          },
          "gpu_type": {
           "enum": [
            "PHYSICAL",
            "MDEV",
            "MIG",
            "SRIOV"
           ],
           "title": "gpu_type",
           "type": "string",
           "_name_": "gpu_type",
           "_required_": true
          },
          "id": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "null"
            }
           ],
           "default": null,
           "title": "id",
           "_name_": "id",
           "_required_": false
          },
          "gid": {
           "anyOf": [
            {
             "maximum": 90000000,
             "minimum": 0,
             "type": "integer"
            },
            {
             "type": "null"
            }
           ],
           "default": null,
           "title": "gid",
           "_name_": "gid",
           "_required_": false
          },
          "uid": {
           "anyOf": [
            {
             "maximum": 90000000,
             "minimum": 0,
             "type": "integer"
            },
            {
             "type": "null"
            }
           ],
           "default": null,
           "title": "uid",
           "_name_": "uid",
           "_required_": false
          },
          "mode": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "null"
            }
           ],
           "default": null,
           "title": "mode",
           "_name_": "mode",
           "_required_": false
          },
          "mdev": {
           "anyOf": [
            {
             "minLength": 1,
             "type": "string"
            },
            {
             "type": "null"
            }
           ],
           "default": null,
           "title": "mdev",
           "_name_": "mdev",
           "_required_": false
          },
          "mig_uuid": {
           "anyOf": [
            {
             "minLength": 1,
             "type": "string"
            },
            {
             "type": "null"
            }
           ],
           "default": null,
           "title": "mig_uuid",
           "_name_": "mig_uuid",
           "_required_": false
          },
          "pci": {
           "anyOf": [
            {
             "minLength": 1,
             "type": "string"
            },
            {
             "type": "null"
            }
           ],
           "default": null,
           "title": "pci",
           "_name_": "pci",
           "_required_": false
          },
          "productid": {
           "anyOf": [
            {
             "minLength": 1,
             "type": "string"
            },
            {
             "type": "null"
            }
           ],
           "default": null,
           "title": "productid",
           "_name_": "productid",
           "_required_": false
          },
          "vendorid": {
           "anyOf": [
            {
             "minLength": 1,
             "type": "string"
            },
            {
             "type": "null"
            }
           ],
           "default": null,
           "title": "vendorid",
           "_name_": "vendorid",
           "_required_": false
          }
         },
         "required": [
          "dev_type",
          "gpu_type"
         ],
         "title": "GPU",
         "type": "object",
         "_attrs_order_": [
          "name",
          "description",
          "readonly",
          "dev_type",
          "gpu_type",
          "id",
          "gid",
          "uid",
          "mode",
          "mdev",
          "mig_uuid",
          "pci",
          "productid",
          "vendorid"
         ]
        },
        {
         "additionalProperties": false,
         "properties": {
          "name": {
           "anyOf": [
            {
             "minLength": 1,
             "type": "string"
            },
            {
             "type": "null"
            }
           ],
           "default": null,
           "title": "name",
           "_name_": "name",
           "_required_": false
          },
          "description": {
           "anyOf": [
            {
             "minLength": 1,
             "type": "string"
            },
            {
             "type": "null"
            }
           ],
           "default": null,
           "title": "description",
           "_name_": "description",
           "_required_": false
          },
          "readonly": {
           "default": false,
           "title": "readonly",
           "type": "boolean",
           "_name_": "readonly",
           "_required_": false
          },
          "dev_type": {
           "const": "PROXY",
           "enum": [
            "PROXY"
           ],
           "title": "dev_type",
           "type": "string",
           "_name_": "dev_type",
           "_required_": true
          },
          "source_proto": {
           "enum": [
            "UDP",
            "TCP"
           ],
           "title": "source_proto",
           "type": "string",
           "_name_": "source_proto",
           "_required_": true
          },
          "source_port": {
           "maximum": 65535,
           "minimum": 1,
           "title": "source_port",
           "type": "integer",
           "_name_": "source_port",
           "_required_": true
          },
          "dest_proto": {
           "enum": [
            "UDP",
            "TCP"
           ],
           "title": "dest_proto",
           "type": "string",
           "_name_": "dest_proto",
           "_required_": true
          },
          "dest_port": {
           "maximum": 65535,
           "minimum": 1,
           "title": "dest_port",
           "type": "integer",
           "_name_": "dest_port",
           "_required_": true
          }
         },
         "required": [
          "dev_type",
          "source_proto",
          "source_port",
          "dest_proto",
          "dest_port"
         ],
         "title": "Proxy",
         "type": "object",
         "_attrs_order_": [
          "name",
          "description",
          "readonly",
          "dev_type",
          "source_proto",
          "source_port",
          "dest_proto",
          "dest_port"
         ]
        },
        {
         "additionalProperties": false,
         "properties": {
          "name": {
           "anyOf": [
            {
             "minLength": 1,
             "type": "string"
            },
            {
             "type": "null"
            }
           ],
           "default": null,
           "title": "name",
           "_name_": "name",
           "_required_": false
          },
          "description": {
           "anyOf": [
            {
             "minLength": 1,
             "type": "string"
            },
            {
             "type": "null"
            }
           ],
           "default": null,
           "title": "description",
           "_name_": "description",
           "_required_": false
          },
          "readonly": {
           "default": false,
           "title": "readonly",
           "type": "boolean",
           "_name_": "readonly",
           "_required_": false
          },
          "dev_type": {
           "const": "TPM",
           "enum": [
            "TPM"
           ],
           "title": "dev_type",
           "type": "string",
           "_name_": "dev_type",
           "_required_": true
          },
          "path": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "null"
            }
           ],
           "default": null,
           "title": "path",
           "_name_": "path",
           "_required_": false
          },
          "pathrm": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "null"
            }
           ],
           "default": null,
           "title": "pathrm",
           "_name_": "pathrm",
           "_required_": false
          }
         },
         "required": [
          "dev_type"
         ],
         "title": "TPM",
         "type": "object",
         "_attrs_order_": [
          "name",
          "description",
          "readonly",
          "dev_type",
          "path",
          "pathrm"
         ]
        },
        {
         "additionalProperties": false,
         "properties": {
          "name": {
           "anyOf": [
            {
             "minLength": 1,
             "type": "string"
            },
            {
             "type": "null"
            }
           ],
           "default": null,
           "title": "name",
           "_name_": "name",
           "_required_": false
          },
          "description": {
           "anyOf": [
            {
             "minLength": 1,
             "type": "string"
            },
            {
             "type": "null"
            }
           ],
           "default": null,
           "title": "description",
           "_name_": "description",
           "_required_": false
          },
          "readonly": {
           "default": false,
           "title": "readonly",
           "type": "boolean",
           "_name_": "readonly",
           "_required_": false
          },
          "dev_type": {
           "const": "USB",
           "enum": [
            "USB"
           ],
           "title": "dev_type",
           "type": "string",
           "_name_": "dev_type",
           "_required_": true
          },
          "bus": {
           "anyOf": [
            {
             "type": "integer"
            },
            {
             "type": "null"
            }
           ],
           "default": null,
           "title": "bus",
           "_name_": "bus",
           "_required_": false
          },
          "dev": {
           "anyOf": [
            {
             "type": "integer"
            },
            {
             "type": "null"
            }
           ],
           "default": null,
           "title": "dev",
           "_name_": "dev",
           "_required_": false
          },
          "product_id": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "null"
            }
           ],
           "default": null,
           "title": "product_id",
           "_name_": "product_id",
           "_required_": false
          },
          "vendor_id": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "null"
            }
           ],
           "default": null,
           "title": "vendor_id",
           "_name_": "vendor_id",
           "_required_": false
          }
         },
         "required": [
          "dev_type"
         ],
         "title": "USB",
         "type": "object",
         "_attrs_order_": [
          "name",
          "description",
          "readonly",
          "dev_type",
          "bus",
          "dev",
          "product_id",
          "vendor_id"
         ]
        },
        {
         "additionalProperties": false,
         "properties": {
          "name": {
           "anyOf": [
            {
             "minLength": 1,
             "type": "string"
            },
            {
             "type": "null"
            }
           ],
           "default": null,
           "title": "name",
           "_name_": "name",
           "_required_": false
          },
          "description": {
           "anyOf": [
            {
             "minLength": 1,
             "type": "string"
            },
            {
             "type": "null"
            }
           ],
           "default": null,
           "title": "description",
           "_name_": "description",
           "_required_": false
          },
          "readonly": {
           "default": false,
           "title": "readonly",
           "type": "boolean",
           "_name_": "readonly",
           "_required_": false
          },
          "dev_type": {
           "const": "NIC",
           "enum": [
            "NIC"
           ],
           "title": "dev_type",
           "type": "string",
           "_name_": "dev_type",
           "_required_": true
          },
          "network": {
           "anyOf": [
            {
             "minLength": 1,
             "type": "string"
            },
            {
             "type": "null"
            }
           ],
           "default": null,
           "title": "network",
           "_name_": "network",
           "_required_": false
          },
          "nic_type": {
           "anyOf": [
            {
             "enum": [
              "BRIDGED",
              "MACVLAN"
             ],
             "type": "string"
            },
            {
             "type": "null"
            }
           ],
           "default": null,
           "title": "nic_type",
           "_name_": "nic_type",
           "_required_": false
          },
          "parent": {
           "anyOf": [
            {
             "minLength": 1,
             "type": "string"
            },
            {
             "type": "null"
            }
           ],
           "default": null,
           "title": "parent",
           "_name_": "parent",
           "_required_": false
          }
         },
         "required": [
          "dev_type"
         ],
         "title": "NIC",
         "type": "object",
         "_attrs_order_": [
          "name",
          "description",
          "readonly",
          "dev_type",
          "network",
          "nic_type",
          "parent"
         ]
        },
        {
         "additionalProperties": false,
         "properties": {
          "name": {
           "anyOf": [
            {
             "minLength": 1,
             "type": "string"
            },
            {
             "type": "null"
            }
           ],
           "default": null,
           "title": "name",
           "_name_": "name",
           "_required_": false
          },
          "description": {
           "anyOf": [
            {
             "minLength": 1,
             "type": "string"
            },
            {
             "type": "null"
            }
           ],
           "default": null,
           "title": "description",
           "_name_": "description",
           "_required_": false
          },
          "readonly": {
           "default": false,
           "title": "readonly",
           "type": "boolean",
           "_name_": "readonly",
           "_required_": false
          },
          "dev_type": {
           "const": "PCI",
           "enum": [
            "PCI"
           ],
           "title": "dev_type",
           "type": "string",
           "_name_": "dev_type",
           "_required_": true
          },
          "address": {
           "minLength": 1,
           "title": "address",
           "type": "string",
           "_name_": "address",
           "_required_": true
          }
         },
         "required": [
          "dev_type",
          "address"
         ],
         "title": "PCI",
         "type": "object",
         "_attrs_order_": [
          "name",
          "description",
          "readonly",
          "dev_type",
          "address"
         ]
        }
       ],
       "title": "device",
       "_name_": "device"
      },
      "virt_instance_device_add": {
       "type": "object",
       "properties": {
        "id": {
         "$ref": "#/components/schemas/virt_instance_device_add_0"
        },
        "device": {
         "$ref": "#/components/schemas/virt_instance_device_add_1"
        }
       }
      },
      "return_schema_of_virt_instance_device_add": {
       "const": true,
       "enum": [
        true
       ],
       "title": "result",
       "type": "boolean",
       "_name_": "result"
      },
      "virt_instance_device_delete_0": {
       "title": "id",
       "type": "string",
       "_name_": "id"
      },
      "virt_instance_device_delete_1": {
       "title": "name",
       "type": "string",
       "_name_": "name"
      },
      "virt_instance_device_delete": {
       "type": "object",
       "properties": {
        "id": {
         "$ref": "#/components/schemas/virt_instance_device_delete_0"
        },
        "name": {
         "$ref": "#/components/schemas/virt_instance_device_delete_1"
        }
       }
      },
      "return_schema_of_virt_instance_device_delete": {
       "const": true,
       "enum": [
        true
       ],
       "title": "result",
       "type": "boolean",
       "_name_": "result"
      },
      "virt_instance_device_list": {
       "title": "id",
       "type": "string",
       "_name_": "id"
      },
      "return_schema_of_virt_instance_device_list": {
       "items": {
        "discriminator": {
         "mapping": {
          "DISK": "#/$defs/Disk",
          "GPU": "#/$defs/GPU",
          "NIC": "#/$defs/NIC",
          "PCI": "#/$defs/PCI",
          "PROXY": "#/$defs/Proxy",
          "TPM": "#/$defs/TPM",
          "USB": "#/$defs/USB"
         },
         "propertyName": "dev_type"
        },
        "oneOf": [
         {
          "additionalProperties": false,
          "properties": {
           "name": {
            "anyOf": [
             {
              "minLength": 1,
              "type": "string"
             },
             {
              "type": "null"
             }
            ],
            "default": null,
            "title": "name",
            "_name_": "name",
            "_required_": false
           },
           "description": {
            "anyOf": [
             {
              "minLength": 1,
              "type": "string"
             },
             {
              "type": "null"
             }
            ],
            "default": null,
            "title": "description",
            "_name_": "description",
            "_required_": false
           },
           "readonly": {
            "default": false,
            "title": "readonly",
            "type": "boolean",
            "_name_": "readonly",
            "_required_": false
           },
           "dev_type": {
            "const": "DISK",
            "enum": [
             "DISK"
            ],
            "title": "dev_type",
            "type": "string",
            "_name_": "dev_type",
            "_required_": true
           },
           "source": {
            "anyOf": [
             {
              "minLength": 1,
              "type": "string"
             },
             {
              "type": "null"
             }
            ],
            "default": null,
            "description": "For CONTAINER instances, this would be a valid pool path. For VM instances, it\ncan be a valid zvol path or an incus storage volume name",
            "title": "source",
            "_name_": "source",
            "_required_": false
           },
           "destination": {
            "anyOf": [
             {
              "type": "string"
             },
             {
              "type": "null"
             }
            ],
            "default": null,
            "title": "destination",
            "_name_": "destination",
            "_required_": false
           },
           "boot_priority": {
            "anyOf": [
             {
              "minimum": 0,
              "type": "integer"
             },
             {
              "type": "null"
             }
            ],
            "default": null,
            "title": "boot_priority",
            "_name_": "boot_priority",
            "_required_": false
           },
           "io_bus": {
            "default": null,
            "enum": [
             "NVME",
             "VIRTIO-BLK",
             "VIRTIO-SCSI",
             null
            ],
            "title": "io_bus",
            "_name_": "io_bus",
            "_required_": false
           },
           "storage_pool": {
            "anyOf": [
             {
              "minLength": 1,
              "type": "string"
             },
             {
              "type": "null"
             }
            ],
            "default": null,
            "description": "Storage pool in which the device is located. This must be one\nof the storage pools listed in virt.global.config output.\nIf this is set to None during device creation, then the default storage\npool defined in virt.global.config will be used.",
            "title": "storage_pool",
            "_name_": "storage_pool",
            "_required_": false
           }
          },
          "required": [
           "dev_type"
          ],
          "title": "Disk",
          "type": "object",
          "_attrs_order_": [
           "name",
           "description",
           "readonly",
           "dev_type",
           "source",
           "destination",
           "boot_priority",
           "io_bus",
           "storage_pool"
          ]
         },
         {
          "additionalProperties": false,
          "properties": {
           "name": {
            "anyOf": [
             {
              "minLength": 1,
              "type": "string"
             },
             {
              "type": "null"
             }
            ],
            "default": null,
            "title": "name",
            "_name_": "name",
            "_required_": false
           },
           "description": {
            "anyOf": [
             {
              "minLength": 1,
              "type": "string"
             },
             {
              "type": "null"
             }
            ],
            "default": null,
            "title": "description",
            "_name_": "description",
            "_required_": false
           },
           "readonly": {
            "default": false,
            "title": "readonly",
            "type": "boolean",
            "_name_": "readonly",
            "_required_": false
           },
           "dev_type": {
            "const": "GPU",
            "enum": [
             "GPU"
            ],
            "title": "dev_type",
            "type": "string",
            "_name_": "dev_type",
            "_required_": true
           },
           "gpu_type": {
            "enum": [
             "PHYSICAL",
             "MDEV",
             "MIG",
             "SRIOV"
            ],
            "title": "gpu_type",
            "type": "string",
            "_name_": "gpu_type",
            "_required_": true
           },
           "id": {
            "anyOf": [
             {
              "type": "string"
             },
             {
              "type": "null"
             }
            ],
            "default": null,
            "title": "id",
            "_name_": "id",
            "_required_": false
           },
           "gid": {
            "anyOf": [
             {
              "maximum": 90000000,
              "minimum": 0,
              "type": "integer"
             },
             {
              "type": "null"
             }
            ],
            "default": null,
            "title": "gid",
            "_name_": "gid",
            "_required_": false
           },
           "uid": {
            "anyOf": [
             {
              "maximum": 90000000,
              "minimum": 0,
              "type": "integer"
             },
             {
              "type": "null"
             }
            ],
            "default": null,
            "title": "uid",
            "_name_": "uid",
            "_required_": false
           },
           "mode": {
            "anyOf": [
             {
              "type": "string"
             },
             {
              "type": "null"
             }
            ],
            "default": null,
            "title": "mode",
            "_name_": "mode",
            "_required_": false
           },
           "mdev": {
            "anyOf": [
             {
              "minLength": 1,
              "type": "string"
             },
             {
              "type": "null"
             }
            ],
            "default": null,
            "title": "mdev",
            "_name_": "mdev",
            "_required_": false
           },
           "mig_uuid": {
            "anyOf": [
             {
              "minLength": 1,
              "type": "string"
             },
             {
              "type": "null"
             }
            ],
            "default": null,
            "title": "mig_uuid",
            "_name_": "mig_uuid",
            "_required_": false
           },
           "pci": {
            "anyOf": [
             {
              "minLength": 1,
              "type": "string"
             },
             {
              "type": "null"
             }
            ],
            "default": null,
            "title": "pci",
            "_name_": "pci",
            "_required_": false
           },
           "productid": {
            "anyOf": [
             {
              "minLength": 1,
              "type": "string"
             },
             {
              "type": "null"
             }
            ],
            "default": null,
            "title": "productid",
            "_name_": "productid",
            "_required_": false
           },
           "vendorid": {
            "anyOf": [
             {
              "minLength": 1,
              "type": "string"
             },
             {
              "type": "null"
             }
            ],
            "default": null,
            "title": "vendorid",
            "_name_": "vendorid",
            "_required_": false
           }
          },
          "required": [
           "dev_type",
           "gpu_type"
          ],
          "title": "GPU",
          "type": "object",
          "_attrs_order_": [
           "name",
           "description",
           "readonly",
           "dev_type",
           "gpu_type",
           "id",
           "gid",
           "uid",
           "mode",
           "mdev",
           "mig_uuid",
           "pci",
           "productid",
           "vendorid"
          ]
         },
         {
          "additionalProperties": false,
          "properties": {
           "name": {
            "anyOf": [
             {
              "minLength": 1,
              "type": "string"
             },
             {
              "type": "null"
             }
            ],
            "default": null,
            "title": "name",
            "_name_": "name",
            "_required_": false
           },
           "description": {
            "anyOf": [
             {
              "minLength": 1,
              "type": "string"
             },
             {
              "type": "null"
             }
            ],
            "default": null,
            "title": "description",
            "_name_": "description",
            "_required_": false
           },
           "readonly": {
            "default": false,
            "title": "readonly",
            "type": "boolean",
            "_name_": "readonly",
            "_required_": false
           },
           "dev_type": {
            "const": "PROXY",
            "enum": [
             "PROXY"
            ],
            "title": "dev_type",
            "type": "string",
            "_name_": "dev_type",
            "_required_": true
           },
           "source_proto": {
            "enum": [
             "UDP",
             "TCP"
            ],
            "title": "source_proto",
            "type": "string",
            "_name_": "source_proto",
            "_required_": true
           },
           "source_port": {
            "maximum": 65535,
            "minimum": 1,
            "title": "source_port",
            "type": "integer",
            "_name_": "source_port",
            "_required_": true
           },
           "dest_proto": {
            "enum": [
             "UDP",
             "TCP"
            ],
            "title": "dest_proto",
            "type": "string",
            "_name_": "dest_proto",
            "_required_": true
           },
           "dest_port": {
            "maximum": 65535,
            "minimum": 1,
            "title": "dest_port",
            "type": "integer",
            "_name_": "dest_port",
            "_required_": true
           }
          },
          "required": [
           "dev_type",
           "source_proto",
           "source_port",
           "dest_proto",
           "dest_port"
          ],
          "title": "Proxy",
          "type": "object",
          "_attrs_order_": [
           "name",
           "description",
           "readonly",
           "dev_type",
           "source_proto",
           "source_port",
           "dest_proto",
           "dest_port"
          ]
         },
         {
          "additionalProperties": false,
          "properties": {
           "name": {
            "anyOf": [
             {
              "minLength": 1,
              "type": "string"
             },
             {
              "type": "null"
             }
            ],
            "default": null,
            "title": "name",
            "_name_": "name",
            "_required_": false
           },
           "description": {
            "anyOf": [
             {
              "minLength": 1,
              "type": "string"
             },
             {
              "type": "null"
             }
            ],
            "default": null,
            "title": "description",
            "_name_": "description",
            "_required_": false
           },
           "readonly": {
            "default": false,
            "title": "readonly",
            "type": "boolean",
            "_name_": "readonly",
            "_required_": false
           },
           "dev_type": {
            "const": "TPM",
            "enum": [
             "TPM"
            ],
            "title": "dev_type",
            "type": "string",
            "_name_": "dev_type",
            "_required_": true
           },
           "path": {
            "anyOf": [
             {
              "type": "string"
             },
             {
              "type": "null"
             }
            ],
            "default": null,
            "title": "path",
            "_name_": "path",
            "_required_": false
           },
           "pathrm": {
            "anyOf": [
             {
              "type": "string"
             },
             {
              "type": "null"
             }
            ],
            "default": null,
            "title": "pathrm",
            "_name_": "pathrm",
            "_required_": false
           }
          },
          "required": [
           "dev_type"
          ],
          "title": "TPM",
          "type": "object",
          "_attrs_order_": [
           "name",
           "description",
           "readonly",
           "dev_type",
           "path",
           "pathrm"
          ]
         },
         {
          "additionalProperties": false,
          "properties": {
           "name": {
            "anyOf": [
             {
              "minLength": 1,
              "type": "string"
             },
             {
              "type": "null"
             }
            ],
            "default": null,
            "title": "name",
            "_name_": "name",
            "_required_": false
           },
           "description": {
            "anyOf": [
             {
              "minLength": 1,
              "type": "string"
             },
             {
              "type": "null"
             }
            ],
            "default": null,
            "title": "description",
            "_name_": "description",
            "_required_": false
           },
           "readonly": {
            "default": false,
            "title": "readonly",
            "type": "boolean",
            "_name_": "readonly",
            "_required_": false
           },
           "dev_type": {
            "const": "USB",
            "enum": [
             "USB"
            ],
            "title": "dev_type",
            "type": "string",
            "_name_": "dev_type",
            "_required_": true
           },
           "bus": {
            "anyOf": [
             {
              "type": "integer"
             },
             {
              "type": "null"
             }
            ],
            "default": null,
            "title": "bus",
            "_name_": "bus",
            "_required_": false
           },
           "dev": {
            "anyOf": [
             {
              "type": "integer"
             },
             {
              "type": "null"
             }
            ],
            "default": null,
            "title": "dev",
            "_name_": "dev",
            "_required_": false
           },
           "product_id": {
            "anyOf": [
             {
              "type": "string"
             },
             {
              "type": "null"
             }
            ],
            "default": null,
            "title": "product_id",
            "_name_": "product_id",
            "_required_": false
           },
           "vendor_id": {
            "anyOf": [
             {
              "type": "string"
             },
             {
              "type": "null"
             }
            ],
            "default": null,
            "title": "vendor_id",
            "_name_": "vendor_id",
            "_required_": false
           }
          },
          "required": [
           "dev_type"
          ],
          "title": "USB",
          "type": "object",
          "_attrs_order_": [
           "name",
           "description",
           "readonly",
           "dev_type",
           "bus",
           "dev",
           "product_id",
           "vendor_id"
          ]
         },
         {
          "additionalProperties": false,
          "properties": {
           "name": {
            "anyOf": [
             {
              "minLength": 1,
              "type": "string"
             },
             {
              "type": "null"
             }
            ],
            "default": null,
            "title": "name",
            "_name_": "name",
            "_required_": false
           },
           "description": {
            "anyOf": [
             {
              "minLength": 1,
              "type": "string"
             },
             {
              "type": "null"
             }
            ],
            "default": null,
            "title": "description",
            "_name_": "description",
            "_required_": false
           },
           "readonly": {
            "default": false,
            "title": "readonly",
            "type": "boolean",
            "_name_": "readonly",
            "_required_": false
           },
           "dev_type": {
            "const": "NIC",
            "enum": [
             "NIC"
            ],
            "title": "dev_type",
            "type": "string",
            "_name_": "dev_type",
            "_required_": true
           },
           "network": {
            "anyOf": [
             {
              "minLength": 1,
              "type": "string"
             },
             {
              "type": "null"
             }
            ],
            "default": null,
            "title": "network",
            "_name_": "network",
            "_required_": false
           },
           "nic_type": {
            "anyOf": [
             {
              "enum": [
               "BRIDGED",
               "MACVLAN"
              ],
              "type": "string"
             },
             {
              "type": "null"
             }
            ],
            "default": null,
            "title": "nic_type",
            "_name_": "nic_type",
            "_required_": false
           },
           "parent": {
            "anyOf": [
             {
              "minLength": 1,
              "type": "string"
             },
             {
              "type": "null"
             }
            ],
            "default": null,
            "title": "parent",
            "_name_": "parent",
            "_required_": false
           }
          },
          "required": [
           "dev_type"
          ],
          "title": "NIC",
          "type": "object",
          "_attrs_order_": [
           "name",
           "description",
           "readonly",
           "dev_type",
           "network",
           "nic_type",
           "parent"
          ]
         },
         {
          "additionalProperties": false,
          "properties": {
           "name": {
            "anyOf": [
             {
              "minLength": 1,
              "type": "string"
             },
             {
              "type": "null"
             }
            ],
            "default": null,
            "title": "name",
            "_name_": "name",
            "_required_": false
           },
           "description": {
            "anyOf": [
             {
              "minLength": 1,
              "type": "string"
             },
             {
              "type": "null"
             }
            ],
            "default": null,
            "title": "description",
            "_name_": "description",
            "_required_": false
           },
           "readonly": {
            "default": false,
            "title": "readonly",
            "type": "boolean",
            "_name_": "readonly",
            "_required_": false
           },
           "dev_type": {
            "const": "PCI",
            "enum": [
             "PCI"
            ],
            "title": "dev_type",
            "type": "string",
            "_name_": "dev_type",
            "_required_": true
           },
           "address": {
            "minLength": 1,
            "title": "address",
            "type": "string",
            "_name_": "address",
            "_required_": true
           }
          },
          "required": [
           "dev_type",
           "address"
          ],
          "title": "PCI",
          "type": "object",
          "_attrs_order_": [
           "name",
           "description",
           "readonly",
           "dev_type",
           "address"
          ]
         }
        ]
       },
       "title": "result",
       "type": "array",
       "_name_": "result"
      },
      "virt_instance_device_update_0": {
       "title": "id",
       "type": "string",
       "_name_": "id"
      },
      "virt_instance_device_update_1": {
       "discriminator": {
        "mapping": {
         "DISK": "#/$defs/Disk",
         "GPU": "#/$defs/GPU",
         "NIC": "#/$defs/NIC",
         "PCI": "#/$defs/PCI",
         "PROXY": "#/$defs/Proxy",
         "TPM": "#/$defs/TPM",
         "USB": "#/$defs/USB"
        },
        "propertyName": "dev_type"
       },
       "oneOf": [
        {
         "additionalProperties": false,
         "properties": {
          "name": {
           "anyOf": [
            {
             "minLength": 1,
             "type": "string"
            },
            {
             "type": "null"
            }
           ],
           "default": null,
           "title": "name",
           "_name_": "name",
           "_required_": false
          },
          "description": {
           "anyOf": [
            {
             "minLength": 1,
             "type": "string"
            },
            {
             "type": "null"
            }
           ],
           "default": null,
           "title": "description",
           "_name_": "description",
           "_required_": false
          },
          "readonly": {
           "default": false,
           "title": "readonly",
           "type": "boolean",
           "_name_": "readonly",
           "_required_": false
          },
          "dev_type": {
           "const": "DISK",
           "enum": [
            "DISK"
           ],
           "title": "dev_type",
           "type": "string",
           "_name_": "dev_type",
           "_required_": true
          },
          "source": {
           "anyOf": [
            {
             "minLength": 1,
             "type": "string"
            },
            {
             "type": "null"
            }
           ],
           "default": null,
           "description": "For CONTAINER instances, this would be a valid pool path. For VM instances, it\ncan be a valid zvol path or an incus storage volume name",
           "title": "source",
           "_name_": "source",
           "_required_": false
          },
          "destination": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "null"
            }
           ],
           "default": null,
           "title": "destination",
           "_name_": "destination",
           "_required_": false
          },
          "boot_priority": {
           "anyOf": [
            {
             "minimum": 0,
             "type": "integer"
            },
            {
             "type": "null"
            }
           ],
           "default": null,
           "title": "boot_priority",
           "_name_": "boot_priority",
           "_required_": false
          },
          "io_bus": {
           "default": null,
           "enum": [
            "NVME",
            "VIRTIO-BLK",
            "VIRTIO-SCSI",
            null
           ],
           "title": "io_bus",
           "_name_": "io_bus",
           "_required_": false
          },
          "storage_pool": {
           "anyOf": [
            {
             "minLength": 1,
             "type": "string"
            },
            {
             "type": "null"
            }
           ],
           "default": null,
           "description": "Storage pool in which the device is located. This must be one\nof the storage pools listed in virt.global.config output.\nIf this is set to None during device creation, then the default storage\npool defined in virt.global.config will be used.",
           "title": "storage_pool",
           "_name_": "storage_pool",
           "_required_": false
          }
         },
         "required": [
          "dev_type"
         ],
         "title": "Disk",
         "type": "object",
         "_attrs_order_": [
          "name",
          "description",
          "readonly",
          "dev_type",
          "source",
          "destination",
          "boot_priority",
          "io_bus",
          "storage_pool"
         ]
        },
        {
         "additionalProperties": false,
         "properties": {
          "name": {
           "anyOf": [
            {
             "minLength": 1,
             "type": "string"
            },
            {
             "type": "null"
            }
           ],
           "default": null,
           "title": "name",
           "_name_": "name",
           "_required_": false
          },
          "description": {
           "anyOf": [
            {
             "minLength": 1,
             "type": "string"
            },
            {
             "type": "null"
            }
           ],
           "default": null,
           "title": "description",
           "_name_": "description",
           "_required_": false
          },
          "readonly": {
           "default": false,
           "title": "readonly",
           "type": "boolean",
           "_name_": "readonly",
           "_required_": false
          },
          "dev_type": {
           "const": "GPU",
           "enum": [
            "GPU"
           ],
           "title": "dev_type",
           "type": "string",
           "_name_": "dev_type",
           "_required_": true
          },
          "gpu_type": {
           "enum": [
            "PHYSICAL",
            "MDEV",
            "MIG",
            "SRIOV"
           ],
           "title": "gpu_type",
           "type": "string",
           "_name_": "gpu_type",
           "_required_": true
          },
          "id": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "null"
            }
           ],
           "default": null,
           "title": "id",
           "_name_": "id",
           "_required_": false
          },
          "gid": {
           "anyOf": [
            {
             "maximum": 90000000,
             "minimum": 0,
             "type": "integer"
            },
            {
             "type": "null"
            }
           ],
           "default": null,
           "title": "gid",
           "_name_": "gid",
           "_required_": false
          },
          "uid": {
           "anyOf": [
            {
             "maximum": 90000000,
             "minimum": 0,
             "type": "integer"
            },
            {
             "type": "null"
            }
           ],
           "default": null,
           "title": "uid",
           "_name_": "uid",
           "_required_": false
          },
          "mode": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "null"
            }
           ],
           "default": null,
           "title": "mode",
           "_name_": "mode",
           "_required_": false
          },
          "mdev": {
           "anyOf": [
            {
             "minLength": 1,
             "type": "string"
            },
            {
             "type": "null"
            }
           ],
           "default": null,
           "title": "mdev",
           "_name_": "mdev",
           "_required_": false
          },
          "mig_uuid": {
           "anyOf": [
            {
             "minLength": 1,
             "type": "string"
            },
            {
             "type": "null"
            }
           ],
           "default": null,
           "title": "mig_uuid",
           "_name_": "mig_uuid",
           "_required_": false
          },
          "pci": {
           "anyOf": [
            {
             "minLength": 1,
             "type": "string"
            },
            {
             "type": "null"
            }
           ],
           "default": null,
           "title": "pci",
           "_name_": "pci",
           "_required_": false
          },
          "productid": {
           "anyOf": [
            {
             "minLength": 1,
             "type": "string"
            },
            {
             "type": "null"
            }
           ],
           "default": null,
           "title": "productid",
           "_name_": "productid",
           "_required_": false
          },
          "vendorid": {
           "anyOf": [
            {
             "minLength": 1,
             "type": "string"
            },
            {
             "type": "null"
            }
           ],
           "default": null,
           "title": "vendorid",
           "_name_": "vendorid",
           "_required_": false
          }
         },
         "required": [
          "dev_type",
          "gpu_type"
         ],
         "title": "GPU",
         "type": "object",
         "_attrs_order_": [
          "name",
          "description",
          "readonly",
          "dev_type",
          "gpu_type",
          "id",
          "gid",
          "uid",
          "mode",
          "mdev",
          "mig_uuid",
          "pci",
          "productid",
          "vendorid"
         ]
        },
        {
         "additionalProperties": false,
         "properties": {
          "name": {
           "anyOf": [
            {
             "minLength": 1,
             "type": "string"
            },
            {
             "type": "null"
            }
           ],
           "default": null,
           "title": "name",
           "_name_": "name",
           "_required_": false
          },
          "description": {
           "anyOf": [
            {
             "minLength": 1,
             "type": "string"
            },
            {
             "type": "null"
            }
           ],
           "default": null,
           "title": "description",
           "_name_": "description",
           "_required_": false
          },
          "readonly": {
           "default": false,
           "title": "readonly",
           "type": "boolean",
           "_name_": "readonly",
           "_required_": false
          },
          "dev_type": {
           "const": "PROXY",
           "enum": [
            "PROXY"
           ],
           "title": "dev_type",
           "type": "string",
           "_name_": "dev_type",
           "_required_": true
          },
          "source_proto": {
           "enum": [
            "UDP",
            "TCP"
           ],
           "title": "source_proto",
           "type": "string",
           "_name_": "source_proto",
           "_required_": true
          },
          "source_port": {
           "maximum": 65535,
           "minimum": 1,
           "title": "source_port",
           "type": "integer",
           "_name_": "source_port",
           "_required_": true
          },
          "dest_proto": {
           "enum": [
            "UDP",
            "TCP"
           ],
           "title": "dest_proto",
           "type": "string",
           "_name_": "dest_proto",
           "_required_": true
          },
          "dest_port": {
           "maximum": 65535,
           "minimum": 1,
           "title": "dest_port",
           "type": "integer",
           "_name_": "dest_port",
           "_required_": true
          }
         },
         "required": [
          "dev_type",
          "source_proto",
          "source_port",
          "dest_proto",
          "dest_port"
         ],
         "title": "Proxy",
         "type": "object",
         "_attrs_order_": [
          "name",
          "description",
          "readonly",
          "dev_type",
          "source_proto",
          "source_port",
          "dest_proto",
          "dest_port"
         ]
        },
        {
         "additionalProperties": false,
         "properties": {
          "name": {
           "anyOf": [
            {
             "minLength": 1,
             "type": "string"
            },
            {
             "type": "null"
            }
           ],
           "default": null,
           "title": "name",
           "_name_": "name",
           "_required_": false
          },
          "description": {
           "anyOf": [
            {
             "minLength": 1,
             "type": "string"
            },
            {
             "type": "null"
            }
           ],
           "default": null,
           "title": "description",
           "_name_": "description",
           "_required_": false
          },
          "readonly": {
           "default": false,
           "title": "readonly",
           "type": "boolean",
           "_name_": "readonly",
           "_required_": false
          },
          "dev_type": {
           "const": "TPM",
           "enum": [
            "TPM"
           ],
           "title": "dev_type",
           "type": "string",
           "_name_": "dev_type",
           "_required_": true
          },
          "path": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "null"
            }
           ],
           "default": null,
           "title": "path",
           "_name_": "path",
           "_required_": false
          },
          "pathrm": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "null"
            }
           ],
           "default": null,
           "title": "pathrm",
           "_name_": "pathrm",
           "_required_": false
          }
         },
         "required": [
          "dev_type"
         ],
         "title": "TPM",
         "type": "object",
         "_attrs_order_": [
          "name",
          "description",
          "readonly",
          "dev_type",
          "path",
          "pathrm"
         ]
        },
        {
         "additionalProperties": false,
         "properties": {
          "name": {
           "anyOf": [
            {
             "minLength": 1,
             "type": "string"
            },
            {
             "type": "null"
            }
           ],
           "default": null,
           "title": "name",
           "_name_": "name",
           "_required_": false
          },
          "description": {
           "anyOf": [
            {
             "minLength": 1,
             "type": "string"
            },
            {
             "type": "null"
            }
           ],
           "default": null,
           "title": "description",
           "_name_": "description",
           "_required_": false
          },
          "readonly": {
           "default": false,
           "title": "readonly",
           "type": "boolean",
           "_name_": "readonly",
           "_required_": false
          },
          "dev_type": {
           "const": "USB",
           "enum": [
            "USB"
           ],
           "title": "dev_type",
           "type": "string",
           "_name_": "dev_type",
           "_required_": true
          },
          "bus": {
           "anyOf": [
            {
             "type": "integer"
            },
            {
             "type": "null"
            }
           ],
           "default": null,
           "title": "bus",
           "_name_": "bus",
           "_required_": false
          },
          "dev": {
           "anyOf": [
            {
             "type": "integer"
            },
            {
             "type": "null"
            }
           ],
           "default": null,
           "title": "dev",
           "_name_": "dev",
           "_required_": false
          },
          "product_id": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "null"
            }
           ],
           "default": null,
           "title": "product_id",
           "_name_": "product_id",
           "_required_": false
          },
          "vendor_id": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "type": "null"
            }
           ],
           "default": null,
           "title": "vendor_id",
           "_name_": "vendor_id",
           "_required_": false
          }
         },
         "required": [
          "dev_type"
         ],
         "title": "USB",
         "type": "object",
         "_attrs_order_": [
          "name",
          "description",
          "readonly",
          "dev_type",
          "bus",
          "dev",
          "product_id",
          "vendor_id"
         ]
        },
        {
         "additionalProperties": false,
         "properties": {
          "name": {
           "anyOf": [
            {
             "minLength": 1,
             "type": "string"
            },
            {
             "type": "null"
            }
           ],
           "default": null,
           "title": "name",
           "_name_": "name",
           "_required_": false
          },
          "description": {
           "anyOf": [
            {
             "minLength": 1,
             "type": "string"
            },
            {
             "type": "null"
            }
           ],
           "default": null,
           "title": "description",
           "_name_": "description",
           "_required_": false
          },
          "readonly": {
           "default": false,
           "title": "readonly",
           "type": "boolean",
           "_name_": "readonly",
           "_required_": false
          },
          "dev_type": {
           "const": "NIC",
           "enum": [
            "NIC"
           ],
           "title": "dev_type",
           "type": "string",
           "_name_": "dev_type",
           "_required_": true
          },
          "network": {
           "anyOf": [
            {
             "minLength": 1,
             "type": "string"
            },
            {
             "type": "null"
            }
           ],
           "default": null,
           "title": "network",
           "_name_": "network",
           "_required_": false
          },
          "nic_type": {
           "anyOf": [
            {
             "enum": [
              "BRIDGED",
              "MACVLAN"
             ],
             "type": "string"
            },
            {
             "type": "null"
            }
           ],
           "default": null,
           "title": "nic_type",
           "_name_": "nic_type",
           "_required_": false
          },
          "parent": {
           "anyOf": [
            {
             "minLength": 1,
             "type": "string"
            },
            {
             "type": "null"
            }
           ],
           "default": null,
           "title": "parent",
           "_name_": "parent",
           "_required_": false
          }
         },
         "required": [
          "dev_type"
         ],
         "title": "NIC",
         "type": "object",
         "_attrs_order_": [
          "name",
          "description",
          "readonly",
          "dev_type",
          "network",
          "nic_type",
          "parent"
         ]
        },
        {
         "additionalProperties": false,
         "properties": {
          "name": {
           "anyOf": [
            {
             "minLength": 1,
             "type": "string"
            },
            {
             "type": "null"
            }
           ],
           "default": null,
           "title": "name",
           "_name_": "name",
           "_required_": false
          },
          "description": {
           "anyOf": [
            {
             "minLength": 1,
             "type": "string"
            },
            {
             "type": "null"
            }
           ],
           "default": null,
           "title": "description",
           "_name_": "description",
           "_required_": false
          },
          "readonly": {
           "default": false,
           "title": "readonly",
           "type": "boolean",
           "_name_": "readonly",
           "_required_": false
          },
          "dev_type": {
           "const": "PCI",
           "enum": [
            "PCI"
           ],
           "title": "dev_type",
           "type": "string",
           "_name_": "dev_type",
           "_required_": true
          },
          "address": {
           "minLength": 1,
           "title": "address",
           "type": "string",
           "_name_": "address",
           "_required_": true
          }
         },
         "required": [
          "dev_type",
          "address"
         ],
         "title": "PCI",
         "type": "object",
         "_attrs_order_": [
          "name",
          "description",
          "readonly",
          "dev_type",
          "address"
         ]
        }
       ],
       "title": "device",
       "_name_": "device"
      },
      "virt_instance_device_update": {
       "type": "object",
       "properties": {
        "id": {
         "$ref": "#/components/schemas/virt_instance_device_update_0"
        },
        "device": {
         "$ref": "#/components/schemas/virt_instance_device_update_1"
        }
       }
      },
      "return_schema_of_virt_instance_device_update": {
       "const": true,
       "enum": [
        true
       ],
       "title": "result",
       "type": "boolean",
       "_name_": "result"
      },
      "virt_instance_get_instance_0": {
       "title": "id",
       "type": "string",
       "_name_": "id"
      },
      "virt_instance_get_instance_1": {
       "additionalProperties": false,
       "properties": {
        "relationships": {
         "default": true,
         "title": "relationships",
         "type": "boolean",
         "_name_": "relationships"
        },
        "extend": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "extend",
         "_name_": "extend"
        },
        "extend_context": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "extend_context",
         "_name_": "extend_context"
        },
        "prefix": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "prefix",
         "_name_": "prefix"
        },
        "extra": {
         "default": {},
         "title": "extra",
         "type": "object",
         "_name_": "extra"
        },
        "order_by": {
         "default": [],
         "items": {
          "type": "string"
         },
         "title": "order_by",
         "type": "array",
         "_name_": "order_by"
        },
        "select": {
         "default": [],
         "items": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "items": [
             {}
            ],
            "type": "array"
           }
          ]
         },
         "title": "select",
         "type": "array",
         "_name_": "select"
        },
        "count": {
         "default": false,
         "title": "count",
         "type": "boolean",
         "_name_": "count"
        },
        "get": {
         "default": false,
         "title": "get",
         "type": "boolean",
         "_name_": "get"
        },
        "offset": {
         "default": 0,
         "title": "offset",
         "type": "integer",
         "_name_": "offset"
        },
        "limit": {
         "default": 0,
         "title": "limit",
         "type": "integer",
         "_name_": "limit"
        },
        "force_sql_filters": {
         "default": false,
         "title": "force_sql_filters",
         "type": "boolean",
         "_name_": "force_sql_filters"
        }
       },
       "title": "options",
       "type": "object",
       "default": {},
       "_name_": "options",
       "_attrs_order_": [
        "relationships",
        "extend",
        "extend_context",
        "prefix",
        "extra",
        "order_by",
        "select",
        "count",
        "get",
        "offset",
        "limit",
        "force_sql_filters"
       ]
      },
      "virt_instance_get_instance": {
       "type": "object",
       "properties": {
        "id": {
         "$ref": "#/components/schemas/virt_instance_get_instance_0"
        },
        "options": {
         "$ref": "#/components/schemas/virt_instance_get_instance_1"
        }
       }
      },
      "return_schema_of_virt_instance_get_instance": {
       "additionalProperties": false,
       "properties": {
        "id": {
         "title": "id",
         "type": "string",
         "_name_": "id"
        },
        "name": {
         "maxLength": 200,
         "minLength": 1,
         "title": "name",
         "type": "string",
         "_name_": "name"
        },
        "type": {
         "default": "CONTAINER",
         "enum": [
          "CONTAINER",
          "VM"
         ],
         "title": "type",
         "type": "string",
         "_name_": "type"
        },
        "status": {
         "enum": [
          "RUNNING",
          "STOPPED",
          "UNKNOWN"
         ],
         "title": "status",
         "type": "string",
         "_name_": "status"
        },
        "cpu": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "title": "cpu",
         "_name_": "cpu"
        },
        "memory": {
         "anyOf": [
          {
           "type": "integer"
          },
          {
           "type": "null"
          }
         ],
         "title": "memory",
         "_name_": "memory"
        },
        "autostart": {
         "title": "autostart",
         "type": "boolean",
         "_name_": "autostart"
        },
        "environment": {
         "additionalProperties": {
          "type": "string"
         },
         "title": "environment",
         "type": "object",
         "_name_": "environment"
        },
        "aliases": {
         "items": {},
         "title": "aliases",
         "type": "array",
         "_name_": "aliases"
        },
        "image": {
         "title": "image",
         "_name_": "image"
        },
        "userns_idmap": {
         "anyOf": [
          {},
          {
           "type": "null"
          }
         ],
         "title": "userns_idmap",
         "_name_": "userns_idmap"
        },
        "raw": {
         "anyOf": [
          {
           "type": "object"
          },
          {
           "type": "null"
          }
         ],
         "title": "raw",
         "_name_": "raw"
        },
        "vnc_enabled": {
         "title": "vnc_enabled",
         "type": "boolean",
         "_name_": "vnc_enabled"
        },
        "vnc_port": {
         "anyOf": [
          {
           "type": "integer"
          },
          {
           "type": "null"
          }
         ],
         "title": "vnc_port",
         "_name_": "vnc_port"
        },
        "vnc_password": {
         "anyOf": [
          {
           "minLength": 1,
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "title": "vnc_password",
         "_name_": "vnc_password"
        },
        "secure_boot": {
         "anyOf": [
          {
           "type": "boolean"
          },
          {
           "type": "null"
          }
         ],
         "title": "secure_boot",
         "_name_": "secure_boot"
        },
        "root_disk_size": {
         "anyOf": [
          {
           "type": "integer"
          },
          {
           "type": "null"
          }
         ],
         "title": "root_disk_size",
         "_name_": "root_disk_size"
        },
        "root_disk_io_bus": {
         "enum": [
          "NVME",
          "VIRTIO-BLK",
          "VIRTIO-SCSI",
          null
         ],
         "title": "root_disk_io_bus",
         "_name_": "root_disk_io_bus"
        },
        "storage_pool": {
         "description": "Storage pool in which the root of the instance is located.",
         "minLength": 1,
         "title": "storage_pool",
         "type": "string",
         "_name_": "storage_pool"
        }
       },
       "required": [
        "id",
        "name",
        "status",
        "cpu",
        "memory",
        "autostart",
        "environment",
        "aliases",
        "image",
        "userns_idmap",
        "raw",
        "vnc_enabled",
        "vnc_port",
        "vnc_password",
        "secure_boot",
        "root_disk_size",
        "root_disk_io_bus",
        "storage_pool"
       ],
       "title": "result",
       "type": "object",
       "_name_": "result",
       "_attrs_order_": [
        "id",
        "name",
        "type",
        "status",
        "cpu",
        "memory",
        "autostart",
        "environment",
        "aliases",
        "image",
        "userns_idmap",
        "raw",
        "vnc_enabled",
        "vnc_port",
        "vnc_password",
        "secure_boot",
        "root_disk_size",
        "root_disk_io_bus",
        "storage_pool"
       ]
      },
      "virt_instance_image_choices": {
       "additionalProperties": false,
       "properties": {
        "remote": {
         "const": "LINUX_CONTAINERS",
         "default": "LINUX_CONTAINERS",
         "enum": [
          "LINUX_CONTAINERS"
         ],
         "title": "remote",
         "type": "string",
         "_name_": "remote"
        }
       },
       "title": "virt_instances_image_choices",
       "type": "object",
       "default": {
        "remote": "LINUX_CONTAINERS"
       },
       "_name_": "virt_instances_image_choices",
       "_attrs_order_": [
        "remote"
       ]
      },
      "return_schema_of_virt_instance_image_choices": {
       "additionalProperties": {
        "additionalProperties": false,
        "properties": {
         "label": {
          "title": "label",
          "type": "string",
          "_name_": "label",
          "_required_": true
         },
         "os": {
          "title": "os",
          "type": "string",
          "_name_": "os",
          "_required_": true
         },
         "release": {
          "title": "release",
          "type": "string",
          "_name_": "release",
          "_required_": true
         },
         "archs": {
          "items": [
           {
            "type": "string"
           }
          ],
          "title": "archs",
          "type": "array",
          "_name_": "archs",
          "_required_": true
         },
         "variant": {
          "title": "variant",
          "type": "string",
          "_name_": "variant",
          "_required_": true
         },
         "instance_types": {
          "items": [
           {
            "enum": [
             "CONTAINER",
             "VM"
            ],
            "type": "string"
           }
          ],
          "title": "instance_types",
          "type": "array",
          "_name_": "instance_types",
          "_required_": true
         },
         "secureboot": {
          "anyOf": [
           {
            "type": "boolean"
           },
           {
            "type": "null"
           }
          ],
          "title": "secureboot",
          "_name_": "secureboot",
          "_required_": true
         }
        },
        "required": [
         "label",
         "os",
         "release",
         "archs",
         "variant",
         "instance_types",
         "secureboot"
        ],
        "title": "ImageChoiceItem",
        "type": "object",
        "_attrs_order_": [
         "label",
         "os",
         "release",
         "archs",
         "variant",
         "instance_types",
         "secureboot"
        ]
       },
       "title": "result",
       "type": "object",
       "_name_": "result"
      },
      "virt_instance_restart_0": {
       "title": "id",
       "type": "string",
       "_name_": "id"
      },
      "virt_instance_restart_1": {
       "additionalProperties": false,
       "properties": {
        "timeout": {
         "default": -1,
         "title": "timeout",
         "type": "integer",
         "_name_": "timeout"
        },
        "force": {
         "default": false,
         "title": "force",
         "type": "boolean",
         "_name_": "force"
        }
       },
       "title": "stop_args",
       "type": "object",
       "default": {
        "timeout": -1,
        "force": false
       },
       "_name_": "stop_args",
       "_attrs_order_": [
        "timeout",
        "force"
       ]
      },
      "virt_instance_restart": {
       "type": "object",
       "properties": {
        "id": {
         "$ref": "#/components/schemas/virt_instance_restart_0"
        },
        "stop_args": {
         "$ref": "#/components/schemas/virt_instance_restart_1"
        }
       }
      },
      "return_schema_of_virt_instance_restart": {
       "title": "result",
       "type": "boolean",
       "_name_": "result"
      },
      "virt_instance_start": {
       "title": "id",
       "type": "string",
       "_name_": "id"
      },
      "return_schema_of_virt_instance_start": {
       "title": "result",
       "type": "boolean",
       "_name_": "result"
      },
      "virt_instance_stop_0": {
       "title": "id",
       "type": "string",
       "_name_": "id"
      },
      "virt_instance_stop_1": {
       "additionalProperties": false,
       "properties": {
        "timeout": {
         "default": -1,
         "title": "timeout",
         "type": "integer",
         "_name_": "timeout"
        },
        "force": {
         "default": false,
         "title": "force",
         "type": "boolean",
         "_name_": "force"
        }
       },
       "title": "stop_args",
       "type": "object",
       "default": {
        "timeout": -1,
        "force": false
       },
       "_name_": "stop_args",
       "_attrs_order_": [
        "timeout",
        "force"
       ]
      },
      "virt_instance_stop": {
       "type": "object",
       "properties": {
        "id": {
         "$ref": "#/components/schemas/virt_instance_stop_0"
        },
        "stop_args": {
         "$ref": "#/components/schemas/virt_instance_stop_1"
        }
       }
      },
      "return_schema_of_virt_instance_stop": {
       "title": "result",
       "type": "boolean",
       "_name_": "result"
      },
      "return_schema_of_virt_volume_query": {
       "anyOf": [
        {
         "items": [
          {
           "additionalProperties": false,
           "properties": {
            "id": {
             "minLength": 1,
             "title": "id",
             "type": "string",
             "_name_": "id",
             "_required_": false
            },
            "name": {
             "minLength": 1,
             "title": "name",
             "type": "string",
             "_name_": "name",
             "_required_": false
            },
            "storage_pool": {
             "minLength": 1,
             "title": "storage_pool",
             "type": "string",
             "_name_": "storage_pool",
             "_required_": false
            },
            "content_type": {
             "minLength": 1,
             "title": "content_type",
             "type": "string",
             "_name_": "content_type",
             "_required_": false
            },
            "created_at": {
             "title": "created_at",
             "type": "string",
             "_name_": "created_at",
             "_required_": false
            },
            "type": {
             "minLength": 1,
             "title": "type",
             "type": "string",
             "_name_": "type",
             "_required_": false
            },
            "config": {
             "title": "config",
             "type": "object",
             "_name_": "config",
             "_required_": false
            },
            "used_by": {
             "items": [
              {
               "minLength": 1,
               "type": "string"
              }
             ],
             "title": "used_by",
             "type": "array",
             "_name_": "used_by",
             "_required_": false
            }
           },
           "title": "VirtVolumeQueryResultItem",
           "type": "object",
           "_attrs_order_": [
            "id",
            "name",
            "storage_pool",
            "content_type",
            "created_at",
            "type",
            "config",
            "used_by"
           ]
          }
         ],
         "type": "array"
        },
        {
         "additionalProperties": false,
         "properties": {
          "id": {
           "minLength": 1,
           "title": "id",
           "type": "string",
           "_name_": "id",
           "_required_": false
          },
          "name": {
           "minLength": 1,
           "title": "name",
           "type": "string",
           "_name_": "name",
           "_required_": false
          },
          "storage_pool": {
           "minLength": 1,
           "title": "storage_pool",
           "type": "string",
           "_name_": "storage_pool",
           "_required_": false
          },
          "content_type": {
           "minLength": 1,
           "title": "content_type",
           "type": "string",
           "_name_": "content_type",
           "_required_": false
          },
          "created_at": {
           "title": "created_at",
           "type": "string",
           "_name_": "created_at",
           "_required_": false
          },
          "type": {
           "minLength": 1,
           "title": "type",
           "type": "string",
           "_name_": "type",
           "_required_": false
          },
          "config": {
           "title": "config",
           "type": "object",
           "_name_": "config",
           "_required_": false
          },
          "used_by": {
           "items": [
            {
             "minLength": 1,
             "type": "string"
            }
           ],
           "title": "used_by",
           "type": "array",
           "_name_": "used_by",
           "_required_": false
          }
         },
         "title": "VirtVolumeQueryResultItem",
         "type": "object",
         "_attrs_order_": [
          "id",
          "name",
          "storage_pool",
          "content_type",
          "created_at",
          "type",
          "config",
          "used_by"
         ]
        },
        {
         "type": "integer"
        }
       ],
       "title": "result",
       "_name_": "result"
      },
      "virt_volume_create": {
       "additionalProperties": false,
       "properties": {
        "name": {
         "maxLength": 63,
         "minLength": 1,
         "title": "name",
         "type": "string",
         "_name_": "name"
        },
        "content_type": {
         "const": "BLOCK",
         "default": "BLOCK",
         "enum": [
          "BLOCK"
         ],
         "title": "content_type",
         "type": "string",
         "_name_": "content_type"
        },
        "size": {
         "default": 1024,
         "description": "Size of volume in MB and it should at least be 512 MB",
         "minimum": 512,
         "title": "size",
         "type": "integer",
         "_name_": "size"
        },
        "storage_pool": {
         "anyOf": [
          {
           "minLength": 1,
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "description": "Storage pool in which to create the volume. This must be one of pools listed\nin virt.global.config output under `storage_pools`. If the value is None, then\nthe pool defined as `pool` in virt.global.config will be used.",
         "title": "storage_pool",
         "_name_": "storage_pool"
        }
       },
       "required": [
        "name"
       ],
       "title": "virt_volume_create",
       "type": "object",
       "_name_": "virt_volume_create",
       "_attrs_order_": [
        "name",
        "content_type",
        "size",
        "storage_pool"
       ]
      },
      "return_schema_of_virt_volume_create": {
       "additionalProperties": false,
       "properties": {
        "id": {
         "minLength": 1,
         "title": "id",
         "type": "string",
         "_name_": "id"
        },
        "name": {
         "minLength": 1,
         "title": "name",
         "type": "string",
         "_name_": "name"
        },
        "storage_pool": {
         "minLength": 1,
         "title": "storage_pool",
         "type": "string",
         "_name_": "storage_pool"
        },
        "content_type": {
         "minLength": 1,
         "title": "content_type",
         "type": "string",
         "_name_": "content_type"
        },
        "created_at": {
         "title": "created_at",
         "type": "string",
         "_name_": "created_at"
        },
        "type": {
         "minLength": 1,
         "title": "type",
         "type": "string",
         "_name_": "type"
        },
        "config": {
         "title": "config",
         "type": "object",
         "_name_": "config"
        },
        "used_by": {
         "items": {
          "minLength": 1,
          "type": "string"
         },
         "title": "used_by",
         "type": "array",
         "_name_": "used_by"
        }
       },
       "required": [
        "id",
        "name",
        "storage_pool",
        "content_type",
        "created_at",
        "type",
        "config",
        "used_by"
       ],
       "title": "result",
       "type": "object",
       "_name_": "result",
       "_attrs_order_": [
        "id",
        "name",
        "storage_pool",
        "content_type",
        "created_at",
        "type",
        "config",
        "used_by"
       ]
      },
      "return_schema_of_virt_volume_delete": {
       "const": true,
       "enum": [
        true
       ],
       "title": "result",
       "type": "boolean",
       "_name_": "result"
      },
      "virt_volume_update": {
       "additionalProperties": false,
       "properties": {
        "size": {
         "minimum": 512,
         "title": "size",
         "type": "integer",
         "_name_": "size"
        }
       },
       "title": "virt_volume_update",
       "type": "object",
       "_name_": "virt_volume_update",
       "_attrs_order_": [
        "size"
       ]
      },
      "return_schema_of_virt_volume_update": {
       "additionalProperties": false,
       "properties": {
        "id": {
         "minLength": 1,
         "title": "id",
         "type": "string",
         "_name_": "id"
        },
        "name": {
         "minLength": 1,
         "title": "name",
         "type": "string",
         "_name_": "name"
        },
        "storage_pool": {
         "minLength": 1,
         "title": "storage_pool",
         "type": "string",
         "_name_": "storage_pool"
        },
        "content_type": {
         "minLength": 1,
         "title": "content_type",
         "type": "string",
         "_name_": "content_type"
        },
        "created_at": {
         "title": "created_at",
         "type": "string",
         "_name_": "created_at"
        },
        "type": {
         "minLength": 1,
         "title": "type",
         "type": "string",
         "_name_": "type"
        },
        "config": {
         "title": "config",
         "type": "object",
         "_name_": "config"
        },
        "used_by": {
         "items": {
          "minLength": 1,
          "type": "string"
         },
         "title": "used_by",
         "type": "array",
         "_name_": "used_by"
        }
       },
       "required": [
        "id",
        "name",
        "storage_pool",
        "content_type",
        "created_at",
        "type",
        "config",
        "used_by"
       ],
       "title": "result",
       "type": "object",
       "_name_": "result",
       "_attrs_order_": [
        "id",
        "name",
        "storage_pool",
        "content_type",
        "created_at",
        "type",
        "config",
        "used_by"
       ]
      },
      "virt_volume_get_instance_0": {
       "title": "id",
       "type": "string",
       "_name_": "id"
      },
      "virt_volume_get_instance_1": {
       "additionalProperties": false,
       "properties": {
        "relationships": {
         "default": true,
         "title": "relationships",
         "type": "boolean",
         "_name_": "relationships"
        },
        "extend": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "extend",
         "_name_": "extend"
        },
        "extend_context": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "extend_context",
         "_name_": "extend_context"
        },
        "prefix": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "prefix",
         "_name_": "prefix"
        },
        "extra": {
         "default": {},
         "title": "extra",
         "type": "object",
         "_name_": "extra"
        },
        "order_by": {
         "default": [],
         "items": {
          "type": "string"
         },
         "title": "order_by",
         "type": "array",
         "_name_": "order_by"
        },
        "select": {
         "default": [],
         "items": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "items": [
             {}
            ],
            "type": "array"
           }
          ]
         },
         "title": "select",
         "type": "array",
         "_name_": "select"
        },
        "count": {
         "default": false,
         "title": "count",
         "type": "boolean",
         "_name_": "count"
        },
        "get": {
         "default": false,
         "title": "get",
         "type": "boolean",
         "_name_": "get"
        },
        "offset": {
         "default": 0,
         "title": "offset",
         "type": "integer",
         "_name_": "offset"
        },
        "limit": {
         "default": 0,
         "title": "limit",
         "type": "integer",
         "_name_": "limit"
        },
        "force_sql_filters": {
         "default": false,
         "title": "force_sql_filters",
         "type": "boolean",
         "_name_": "force_sql_filters"
        }
       },
       "title": "options",
       "type": "object",
       "default": {},
       "_name_": "options",
       "_attrs_order_": [
        "relationships",
        "extend",
        "extend_context",
        "prefix",
        "extra",
        "order_by",
        "select",
        "count",
        "get",
        "offset",
        "limit",
        "force_sql_filters"
       ]
      },
      "virt_volume_get_instance": {
       "type": "object",
       "properties": {
        "id": {
         "$ref": "#/components/schemas/virt_volume_get_instance_0"
        },
        "options": {
         "$ref": "#/components/schemas/virt_volume_get_instance_1"
        }
       }
      },
      "return_schema_of_virt_volume_get_instance": {
       "additionalProperties": false,
       "properties": {
        "id": {
         "minLength": 1,
         "title": "id",
         "type": "string",
         "_name_": "id"
        },
        "name": {
         "minLength": 1,
         "title": "name",
         "type": "string",
         "_name_": "name"
        },
        "storage_pool": {
         "minLength": 1,
         "title": "storage_pool",
         "type": "string",
         "_name_": "storage_pool"
        },
        "content_type": {
         "minLength": 1,
         "title": "content_type",
         "type": "string",
         "_name_": "content_type"
        },
        "created_at": {
         "title": "created_at",
         "type": "string",
         "_name_": "created_at"
        },
        "type": {
         "minLength": 1,
         "title": "type",
         "type": "string",
         "_name_": "type"
        },
        "config": {
         "title": "config",
         "type": "object",
         "_name_": "config"
        },
        "used_by": {
         "items": {
          "minLength": 1,
          "type": "string"
         },
         "title": "used_by",
         "type": "array",
         "_name_": "used_by"
        }
       },
       "required": [
        "id",
        "name",
        "storage_pool",
        "content_type",
        "created_at",
        "type",
        "config",
        "used_by"
       ],
       "title": "result",
       "type": "object",
       "_name_": "result",
       "_attrs_order_": [
        "id",
        "name",
        "storage_pool",
        "content_type",
        "created_at",
        "type",
        "config",
        "used_by"
       ]
      },
      "virt_volume_import_iso": {
       "additionalProperties": false,
       "properties": {
        "name": {
         "description": "Specify name of the newly created volume from the ISO specified",
         "maxLength": 63,
         "minLength": 1,
         "title": "name",
         "type": "string",
         "_name_": "name"
        },
        "iso_location": {
         "anyOf": [
          {
           "minLength": 1,
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "title": "iso_location",
         "_name_": "iso_location"
        },
        "upload_iso": {
         "default": false,
         "title": "upload_iso",
         "type": "boolean",
         "_name_": "upload_iso"
        },
        "storage_pool": {
         "anyOf": [
          {
           "minLength": 1,
           "type": "string"
          },
          {
           "type": "null"
          }
         ],
         "default": null,
         "description": "Storage pool in which to create the volume. This must be one of pools listed\nin virt.global.config output under `storage_pools`. If the value is None, then\nthe pool defined as `pool` in virt.global.config will be used.",
         "title": "storage_pool",
         "_name_": "storage_pool"
        }
       },
       "required": [
        "name"
       ],
       "title": "virt_volume_import_iso",
       "type": "object",
       "_name_": "virt_volume_import_iso",
       "_attrs_order_": [
        "name",
        "iso_location",
        "upload_iso",
        "storage_pool"
       ]
      },
      "return_schema_of_virt_volume_import_iso": {
       "additionalProperties": false,
       "properties": {
        "id": {
         "minLength": 1,
         "title": "id",
         "type": "string",
         "_name_": "id"
        },
        "name": {
         "minLength": 1,
         "title": "name",
         "type": "string",
         "_name_": "name"
        },
        "storage_pool": {
         "minLength": 1,
         "title": "storage_pool",
         "type": "string",
         "_name_": "storage_pool"
        },
        "content_type": {
         "minLength": 1,
         "title": "content_type",
         "type": "string",
         "_name_": "content_type"
        },
        "created_at": {
         "title": "created_at",
         "type": "string",
         "_name_": "created_at"
        },
        "type": {
         "minLength": 1,
         "title": "type",
         "type": "string",
         "_name_": "type"
        },
        "config": {
         "title": "config",
         "type": "object",
         "_name_": "config"
        },
        "used_by": {
         "items": {
          "minLength": 1,
          "type": "string"
         },
         "title": "used_by",
         "type": "array",
         "_name_": "used_by"
        }
       },
       "required": [
        "id",
        "name",
        "storage_pool",
        "content_type",
        "created_at",
        "type",
        "config",
        "used_by"
       ],
       "title": "result",
       "type": "object",
       "_name_": "result",
       "_attrs_order_": [
        "id",
        "name",
        "storage_pool",
        "content_type",
        "created_at",
        "type",
        "config",
        "used_by"
       ]
      },
      "virt_volume_import_zvol": {
       "additionalProperties": false,
       "properties": {
        "to_import": {
         "description": "List of zvols to import as volumes",
         "items": {},
         "title": "to_import",
         "type": "array",
         "_name_": "to_import"
        },
        "clone": {
         "default": false,
         "description": "Optionally clone and promote zvol",
         "title": "clone",
         "type": "boolean",
         "_name_": "clone"
        }
       },
       "required": [
        "to_import"
       ],
       "title": "virt_volume_import_iso",
       "type": "object",
       "_name_": "virt_volume_import_iso",
       "_attrs_order_": [
        "to_import",
        "clone"
       ]
      },
      "return_schema_of_virt_volume_import_zvol": {
       "additionalProperties": false,
       "properties": {
        "id": {
         "minLength": 1,
         "title": "id",
         "type": "string",
         "_name_": "id"
        },
        "name": {
         "minLength": 1,
         "title": "name",
         "type": "string",
         "_name_": "name"
        },
        "storage_pool": {
         "minLength": 1,
         "title": "storage_pool",
         "type": "string",
         "_name_": "storage_pool"
        },
        "content_type": {
         "minLength": 1,
         "title": "content_type",
         "type": "string",
         "_name_": "content_type"
        },
        "created_at": {
         "title": "created_at",
         "type": "string",
         "_name_": "created_at"
        },
        "type": {
         "minLength": 1,
         "title": "type",
         "type": "string",
         "_name_": "type"
        },
        "config": {
         "title": "config",
         "type": "object",
         "_name_": "config"
        },
        "used_by": {
         "items": {
          "minLength": 1,
          "type": "string"
         },
         "title": "used_by",
         "type": "array",
         "_name_": "used_by"
        }
       },
       "required": [
        "id",
        "name",
        "storage_pool",
        "content_type",
        "created_at",
        "type",
        "config",
        "used_by"
       ],
       "title": "result",
       "type": "object",
       "_name_": "result",
       "_attrs_order_": [
        "id",
        "name",
        "storage_pool",
        "content_type",
        "created_at",
        "type",
        "config",
        "used_by"
       ]
      },
      "return_schema_of_vmware_query": {
       "anyOf": [
        {
         "_name_": "query_result",
         "title": "query_result",
         "default": [],
         "_required_": false,
         "type": "array",
         "items": [
          {
           "type": "object",
           "properties": {
            "datastore": {
             "_name_": "datastore",
             "title": "datastore",
             "_required_": true,
             "type": "string"
            },
            "filesystem": {
             "_name_": "filesystem",
             "title": "filesystem",
             "_required_": true,
             "type": "string"
            },
            "hostname": {
             "_name_": "hostname",
             "title": "hostname",
             "_required_": true,
             "type": "string"
            },
            "password": {
             "_name_": "password",
             "title": "password",
             "_required_": true,
             "type": "string"
            },
            "username": {
             "_name_": "username",
             "title": "username",
             "_required_": true,
             "type": "string"
            },
            "id": {
             "type": "integer",
             "_name_": "id",
             "title": "id",
             "_required_": false
            },
            "state": {
             "type": "object",
             "properties": {},
             "additionalProperties": true,
             "_name_": "state",
             "title": "state",
             "default": {},
             "_required_": false,
             "_attrs_order_": []
            }
           },
           "additionalProperties": false,
           "_name_": "vmware_entry",
           "title": "vmware_entry",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "datastore",
            "filesystem",
            "hostname",
            "password",
            "username",
            "id",
            "state"
           ]
          }
         ]
        },
        {
         "type": "object",
         "properties": {
          "datastore": {
           "_name_": "datastore",
           "title": "datastore",
           "_required_": true,
           "type": "string"
          },
          "filesystem": {
           "_name_": "filesystem",
           "title": "filesystem",
           "_required_": true,
           "type": "string"
          },
          "hostname": {
           "_name_": "hostname",
           "title": "hostname",
           "_required_": true,
           "type": "string"
          },
          "password": {
           "_name_": "password",
           "title": "password",
           "_required_": true,
           "type": "string"
          },
          "username": {
           "_name_": "username",
           "title": "username",
           "_required_": true,
           "type": "string"
          },
          "id": {
           "type": "integer",
           "_name_": "id",
           "title": "id",
           "_required_": false
          },
          "state": {
           "type": "object",
           "properties": {},
           "additionalProperties": true,
           "_name_": "state",
           "title": "state",
           "default": {},
           "_required_": false,
           "_attrs_order_": []
          }
         },
         "additionalProperties": false,
         "_name_": "vmware_entry",
         "title": "vmware_entry",
         "default": {},
         "_required_": false,
         "_attrs_order_": [
          "datastore",
          "filesystem",
          "hostname",
          "password",
          "username",
          "id",
          "state"
         ]
        },
        {
         "type": "integer",
         "_name_": "count",
         "title": "count",
         "_required_": false
        },
        {
         "type": "object",
         "properties": {
          "datastore": {
           "_name_": "datastore",
           "title": "datastore",
           "_required_": true,
           "type": "string"
          },
          "filesystem": {
           "_name_": "filesystem",
           "title": "filesystem",
           "_required_": true,
           "type": "string"
          },
          "hostname": {
           "_name_": "hostname",
           "title": "hostname",
           "_required_": true,
           "type": "string"
          },
          "password": {
           "_name_": "password",
           "title": "password",
           "_required_": true,
           "type": "string"
          },
          "username": {
           "_name_": "username",
           "title": "username",
           "_required_": true,
           "type": "string"
          },
          "id": {
           "type": "integer",
           "_name_": "id",
           "title": "id",
           "_required_": false
          },
          "state": {
           "type": "object",
           "properties": {},
           "additionalProperties": true,
           "_name_": "state",
           "title": "state",
           "default": {},
           "_required_": false,
           "_attrs_order_": []
          }
         },
         "additionalProperties": false,
         "_name_": "vmware_entry",
         "title": "vmware_entry",
         "default": {},
         "_required_": false,
         "_attrs_order_": [
          "datastore",
          "filesystem",
          "hostname",
          "password",
          "username",
          "id",
          "state"
         ]
        }
       ],
       "nullable": false,
       "_name_": "query_result",
       "description": null
      },
      "vmware_create": {
       "type": "object",
       "properties": {
        "datastore": {
         "_name_": "datastore",
         "title": "datastore",
         "type": "string"
        },
        "filesystem": {
         "_name_": "filesystem",
         "title": "filesystem",
         "type": "string"
        },
        "hostname": {
         "_name_": "hostname",
         "title": "hostname",
         "type": "string",
         "description": "`hostname` is a valid IP address / hostname of a VMWare host. When clustering, this is the vCenter server for\nthe cluster."
        },
        "password": {
         "_name_": "password",
         "title": "password",
         "type": "string",
         "description": "`username` and `password` are the credentials used to authorize access to the VMWare host."
        },
        "username": {
         "_name_": "username",
         "title": "username",
         "type": "string",
         "description": "`username` and `password` are the credentials used to authorize access to the VMWare host."
        }
       },
       "additionalProperties": false,
       "_name_": "vmware_create",
       "title": "vmware_create",
       "default": {},
       "_attrs_order_": [
        "datastore",
        "filesystem",
        "hostname",
        "password",
        "username"
       ]
      },
      "return_schema_of_vmware_create": {
       "type": "object",
       "properties": {
        "datastore": {
         "_name_": "datastore",
         "title": "datastore",
         "type": "string"
        },
        "filesystem": {
         "_name_": "filesystem",
         "title": "filesystem",
         "type": "string"
        },
        "hostname": {
         "_name_": "hostname",
         "title": "hostname",
         "type": "string",
         "description": "`hostname` is a valid IP address / hostname of a VMWare host. When clustering, this is the vCenter server for\nthe cluster."
        },
        "password": {
         "_name_": "password",
         "title": "password",
         "type": "string",
         "description": "`username` and `password` are the credentials used to authorize access to the VMWare host."
        },
        "username": {
         "_name_": "username",
         "title": "username",
         "type": "string",
         "description": "`username` and `password` are the credentials used to authorize access to the VMWare host."
        },
        "id": {
         "type": "integer",
         "_name_": "id",
         "title": "id"
        },
        "state": {
         "type": "object",
         "properties": {},
         "additionalProperties": true,
         "_name_": "state",
         "title": "state",
         "default": {},
         "_attrs_order_": []
        }
       },
       "additionalProperties": false,
       "_name_": "vmware_create_returns",
       "title": "vmware_create_returns",
       "default": {},
       "_attrs_order_": [
        "datastore",
        "filesystem",
        "hostname",
        "password",
        "username",
        "id",
        "state"
       ]
      },
      "return_schema_of_vmware_delete": {
       "type": "boolean",
       "_name_": "deleted",
       "title": "deleted",
       "description": "Will return `true` if `id` is deleted successfully"
      },
      "vmware_update": {
       "type": "object",
       "properties": {
        "datastore": {
         "_name_": "datastore",
         "title": "datastore",
         "type": "string"
        },
        "filesystem": {
         "_name_": "filesystem",
         "title": "filesystem",
         "type": "string"
        },
        "hostname": {
         "_name_": "hostname",
         "title": "hostname",
         "type": "string",
         "description": "`hostname` is a valid IP address / hostname of a VMWare host. When clustering, this is the vCenter server for\nthe cluster."
        },
        "password": {
         "_name_": "password",
         "title": "password",
         "type": "string",
         "description": "`username` and `password` are the credentials used to authorize access to the VMWare host."
        },
        "username": {
         "_name_": "username",
         "title": "username",
         "type": "string",
         "description": "`username` and `password` are the credentials used to authorize access to the VMWare host."
        }
       },
       "additionalProperties": false,
       "_name_": "vmware_update",
       "title": "vmware_update",
       "default": {},
       "_attrs_order_": [
        "datastore",
        "filesystem",
        "hostname",
        "password",
        "username"
       ]
      },
      "return_schema_of_vmware_update": {
       "type": "object",
       "properties": {
        "datastore": {
         "_name_": "datastore",
         "title": "datastore",
         "type": "string"
        },
        "filesystem": {
         "_name_": "filesystem",
         "title": "filesystem",
         "type": "string"
        },
        "hostname": {
         "_name_": "hostname",
         "title": "hostname",
         "type": "string",
         "description": "`hostname` is a valid IP address / hostname of a VMWare host. When clustering, this is the vCenter server for\nthe cluster."
        },
        "password": {
         "_name_": "password",
         "title": "password",
         "type": "string",
         "description": "`username` and `password` are the credentials used to authorize access to the VMWare host."
        },
        "username": {
         "_name_": "username",
         "title": "username",
         "type": "string",
         "description": "`username` and `password` are the credentials used to authorize access to the VMWare host."
        },
        "id": {
         "type": "integer",
         "_name_": "id",
         "title": "id",
         "description": "Update VMWare snapshot of `id`.\nCreate VMWare snapshot."
        },
        "state": {
         "type": "object",
         "properties": {},
         "additionalProperties": true,
         "_name_": "state",
         "title": "state",
         "default": {},
         "_attrs_order_": []
        }
       },
       "additionalProperties": false,
       "_name_": "vmware_update_returns",
       "title": "vmware_update_returns",
       "default": {},
       "_attrs_order_": [
        "datastore",
        "filesystem",
        "hostname",
        "password",
        "username",
        "id",
        "state"
       ]
      },
      "vmware_dataset_has_vms_0": {
       "_name_": "dataset",
       "title": "dataset",
       "type": "string"
      },
      "vmware_dataset_has_vms_1": {
       "type": "boolean",
       "_name_": "recursive",
       "title": "recursive"
      },
      "vmware_dataset_has_vms": {
       "type": "object",
       "properties": {
        "dataset": {
         "$ref": "#/components/schemas/vmware_dataset_has_vms_0"
        },
        "recursive": {
         "$ref": "#/components/schemas/vmware_dataset_has_vms_1"
        }
       }
      },
      "vmware_get_datastores": {
       "type": "object",
       "properties": {
        "hostname": {
         "_name_": "hostname",
         "title": "hostname",
         "type": "string"
        },
        "username": {
         "_name_": "username",
         "title": "username",
         "type": "string"
        },
        "password": {
         "_name_": "password",
         "title": "password",
         "type": "string"
        }
       },
       "additionalProperties": false,
       "_name_": "vmware-creds",
       "title": "vmware-creds",
       "default": {},
       "_attrs_order_": [
        "hostname",
        "username",
        "password"
       ]
      },
      "vmware_get_instance_0": {
       "anyOf": [
        {
         "type": "string"
        },
        {
         "type": "integer"
        },
        {
         "type": "boolean"
        },
        {
         "type": "object"
        },
        {
         "type": "array"
        }
       ],
       "nullable": false,
       "_name_": "id",
       "title": "id",
       "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised."
      },
      "vmware_get_instance_1": {
       "type": "object",
       "properties": {
        "relationships": {
         "type": "boolean",
         "_name_": "relationships",
         "title": "relationships",
         "default": true
        },
        "extend": {
         "_name_": "extend",
         "title": "extend",
         "default": null,
         "type": "string",
         "nullable": true
        },
        "extend_context": {
         "_name_": "extend_context",
         "title": "extend_context",
         "default": null,
         "type": "string",
         "nullable": true
        },
        "prefix": {
         "_name_": "prefix",
         "title": "prefix",
         "default": null,
         "type": "string",
         "nullable": true
        },
        "extra": {
         "type": "object",
         "properties": {},
         "additionalProperties": true,
         "_name_": "extra",
         "title": "extra",
         "default": {},
         "_attrs_order_": []
        },
        "order_by": {
         "_name_": "order_by",
         "title": "order_by",
         "default": [],
         "type": "array",
         "items": {}
        },
        "select": {
         "_name_": "select",
         "title": "select",
         "default": [],
         "type": "array",
         "items": {}
        },
        "count": {
         "type": "boolean",
         "_name_": "count",
         "title": "count",
         "default": false
        },
        "get": {
         "type": "boolean",
         "_name_": "get",
         "title": "get",
         "default": false
        },
        "offset": {
         "type": "integer",
         "_name_": "offset",
         "title": "offset",
         "default": 0
        },
        "limit": {
         "type": "integer",
         "_name_": "limit",
         "title": "limit",
         "default": 0
        },
        "force_sql_filters": {
         "type": "boolean",
         "_name_": "force_sql_filters",
         "title": "force_sql_filters",
         "default": true
        }
       },
       "additionalProperties": false,
       "_name_": "query-options-get_instance",
       "title": "query-options-get_instance",
       "default": {},
       "_attrs_order_": [
        "relationships",
        "extend",
        "extend_context",
        "prefix",
        "extra",
        "order_by",
        "select",
        "count",
        "get",
        "offset",
        "limit",
        "force_sql_filters"
       ]
      },
      "vmware_get_instance": {
       "type": "object",
       "properties": {
        "id": {
         "$ref": "#/components/schemas/vmware_get_instance_0"
        },
        "query-options-get_instance": {
         "$ref": "#/components/schemas/vmware_get_instance_1"
        }
       }
      },
      "return_schema_of_vmware_get_instance": {
       "type": "object",
       "properties": {
        "datastore": {
         "_name_": "datastore",
         "title": "datastore",
         "type": "string"
        },
        "filesystem": {
         "_name_": "filesystem",
         "title": "filesystem",
         "type": "string"
        },
        "hostname": {
         "_name_": "hostname",
         "title": "hostname",
         "type": "string"
        },
        "password": {
         "_name_": "password",
         "title": "password",
         "type": "string"
        },
        "username": {
         "_name_": "username",
         "title": "username",
         "type": "string"
        },
        "id": {
         "type": "integer",
         "_name_": "id",
         "title": "id",
         "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised."
        },
        "state": {
         "type": "object",
         "properties": {},
         "additionalProperties": true,
         "_name_": "state",
         "title": "state",
         "default": {},
         "_attrs_order_": []
        }
       },
       "additionalProperties": false,
       "_name_": "vmware_entry",
       "title": "vmware_entry",
       "default": {},
       "_attrs_order_": [
        "datastore",
        "filesystem",
        "hostname",
        "password",
        "username",
        "id",
        "state"
       ]
      },
      "vmware_match_datastores_with_datasets": {
       "type": "object",
       "properties": {
        "hostname": {
         "_name_": "hostname",
         "title": "hostname",
         "type": "string"
        },
        "username": {
         "_name_": "username",
         "title": "username",
         "type": "string"
        },
        "password": {
         "_name_": "password",
         "title": "password",
         "type": "string"
        }
       },
       "additionalProperties": false,
       "_name_": "vmware-creds",
       "title": "vmware-creds",
       "default": {},
       "_attrs_order_": [
        "hostname",
        "username",
        "password"
       ]
      },
      "return_schema_of_zfs_snapshot_query": {
       "anyOf": [
        {
         "_name_": "query_result",
         "title": "query_result",
         "default": [],
         "_required_": false,
         "type": "array",
         "items": [
          {
           "type": "object",
           "properties": {},
           "additionalProperties": true,
           "_name_": "zfs_snapshot_entry",
           "title": "zfs_snapshot_entry",
           "default": {},
           "_required_": false,
           "_attrs_order_": []
          }
         ]
        },
        {
         "type": "object",
         "properties": {},
         "additionalProperties": true,
         "_name_": "zfs_snapshot_entry",
         "title": "zfs_snapshot_entry",
         "default": {},
         "_required_": false,
         "_attrs_order_": []
        },
        {
         "type": "integer",
         "_name_": "count",
         "title": "count",
         "_required_": false
        },
        {
         "type": "object",
         "properties": {},
         "additionalProperties": true,
         "_name_": "zfs_snapshot_entry",
         "title": "zfs_snapshot_entry",
         "default": {},
         "_required_": false,
         "_attrs_order_": []
        }
       ],
       "nullable": false,
       "_name_": "query_result",
       "description": null
      },
      "zfs_snapshot_create": {
       "type": "object",
       "properties": {
        "dataset": {
         "_name_": "dataset",
         "title": "dataset",
         "type": "string"
        },
        "name": {
         "_name_": "name",
         "title": "name",
         "type": "string"
        },
        "naming_schema": {
         "_name_": "naming_schema",
         "title": "naming_schema",
         "type": "string"
        },
        "recursive": {
         "type": "boolean",
         "_name_": "recursive",
         "title": "recursive",
         "default": false
        },
        "exclude": {
         "_name_": "exclude",
         "title": "exclude",
         "default": [],
         "type": "array",
         "items": {
          "_name_": "dataset",
          "title": "dataset",
          "_required_": false,
          "type": "string"
         }
        },
        "vmware_sync": {
         "type": "boolean",
         "_name_": "vmware_sync",
         "title": "vmware_sync",
         "default": false
        },
        "properties": {
         "type": "object",
         "properties": {},
         "additionalProperties": true,
         "_name_": "properties",
         "title": "properties",
         "default": {},
         "_attrs_order_": []
        }
       },
       "additionalProperties": false,
       "_name_": "snapshot_create",
       "title": "snapshot_create",
       "default": {},
       "_attrs_order_": [
        "dataset",
        "name",
        "naming_schema",
        "recursive",
        "exclude",
        "vmware_sync",
        "properties"
       ]
      },
      "return_schema_of_zfs_snapshot_create": {
       "type": "object",
       "properties": {},
       "additionalProperties": true,
       "_name_": "zfs_snapshot_create_returns",
       "title": "zfs_snapshot_create_returns",
       "default": {},
       "_attrs_order_": []
      },
      "zfs_snapshot_delete": {
       "type": "object",
       "properties": {
        "defer": {
         "type": "boolean",
         "_name_": "defer",
         "title": "defer",
         "default": false
        },
        "recursive": {
         "type": "boolean",
         "_name_": "recursive",
         "title": "recursive",
         "default": false
        }
       },
       "additionalProperties": false,
       "_name_": "options",
       "title": "options",
       "default": {},
       "_attrs_order_": [
        "defer",
        "recursive"
       ]
      },
      "return_schema_of_zfs_snapshot_delete": {
       "type": "boolean",
       "_name_": "deleted",
       "title": "deleted",
       "description": "Will return `true` if `id` is deleted successfully"
      },
      "zfs_snapshot_update": {
       "type": "object",
       "properties": {
        "user_properties_update": {
         "_name_": "user_properties_update",
         "title": "user_properties_update",
         "default": [],
         "type": "array",
         "items": {
          "type": "object",
          "properties": {
           "key": {
            "_name_": "key",
            "title": "key",
            "_required_": true,
            "type": "string"
           },
           "value": {
            "_name_": "value",
            "title": "value",
            "_required_": false,
            "type": "string"
           },
           "remove": {
            "type": "boolean",
            "_name_": "remove",
            "title": "remove",
            "_required_": false
           }
          },
          "additionalProperties": false,
          "_name_": "user_property",
          "title": "user_property",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "key",
           "value",
           "remove"
          ]
         }
        }
       },
       "additionalProperties": false,
       "_name_": "snapshot_update",
       "title": "snapshot_update",
       "default": {},
       "_attrs_order_": [
        "user_properties_update"
       ]
      },
      "return_schema_of_zfs_snapshot_update": {
       "type": "object",
       "properties": {},
       "additionalProperties": true,
       "_name_": "zfs_snapshot_update_returns",
       "title": "zfs_snapshot_update_returns",
       "default": {},
       "_attrs_order_": []
      },
      "zfs_snapshot_clone": {
       "type": "object",
       "properties": {
        "snapshot": {
         "_name_": "snapshot",
         "title": "snapshot",
         "type": "string"
        },
        "dataset_dst": {
         "_name_": "dataset_dst",
         "title": "dataset_dst",
         "type": "string"
        },
        "dataset_properties": {
         "type": "object",
         "properties": {},
         "additionalProperties": true,
         "_name_": "dataset_properties",
         "title": "dataset_properties",
         "default": {},
         "_attrs_order_": []
        }
       },
       "additionalProperties": false,
       "_name_": "snapshot_clone",
       "title": "snapshot_clone",
       "default": {},
       "_attrs_order_": [
        "snapshot",
        "dataset_dst",
        "dataset_properties"
       ]
      },
      "zfs_snapshot_get_instance_0": {
       "anyOf": [
        {
         "type": "string"
        },
        {
         "type": "integer"
        },
        {
         "type": "boolean"
        },
        {
         "type": "object"
        },
        {
         "type": "array"
        }
       ],
       "nullable": false,
       "_name_": "id",
       "title": "id",
       "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised."
      },
      "zfs_snapshot_get_instance_1": {
       "type": "object",
       "properties": {
        "relationships": {
         "type": "boolean",
         "_name_": "relationships",
         "title": "relationships",
         "default": true
        },
        "extend": {
         "_name_": "extend",
         "title": "extend",
         "default": null,
         "type": "string",
         "nullable": true
        },
        "extend_context": {
         "_name_": "extend_context",
         "title": "extend_context",
         "default": null,
         "type": "string",
         "nullable": true
        },
        "prefix": {
         "_name_": "prefix",
         "title": "prefix",
         "default": null,
         "type": "string",
         "nullable": true
        },
        "extra": {
         "type": "object",
         "properties": {},
         "additionalProperties": true,
         "_name_": "extra",
         "title": "extra",
         "default": {},
         "_attrs_order_": []
        },
        "order_by": {
         "_name_": "order_by",
         "title": "order_by",
         "default": [],
         "type": "array",
         "items": {}
        },
        "select": {
         "_name_": "select",
         "title": "select",
         "default": [],
         "type": "array",
         "items": {}
        },
        "count": {
         "type": "boolean",
         "_name_": "count",
         "title": "count",
         "default": false
        },
        "get": {
         "type": "boolean",
         "_name_": "get",
         "title": "get",
         "default": false
        },
        "offset": {
         "type": "integer",
         "_name_": "offset",
         "title": "offset",
         "default": 0
        },
        "limit": {
         "type": "integer",
         "_name_": "limit",
         "title": "limit",
         "default": 0
        },
        "force_sql_filters": {
         "type": "boolean",
         "_name_": "force_sql_filters",
         "title": "force_sql_filters",
         "default": true
        }
       },
       "additionalProperties": false,
       "_name_": "query-options-get_instance",
       "title": "query-options-get_instance",
       "default": {},
       "_attrs_order_": [
        "relationships",
        "extend",
        "extend_context",
        "prefix",
        "extra",
        "order_by",
        "select",
        "count",
        "get",
        "offset",
        "limit",
        "force_sql_filters"
       ]
      },
      "zfs_snapshot_get_instance": {
       "type": "object",
       "properties": {
        "id": {
         "$ref": "#/components/schemas/zfs_snapshot_get_instance_0"
        },
        "query-options-get_instance": {
         "$ref": "#/components/schemas/zfs_snapshot_get_instance_1"
        }
       }
      },
      "return_schema_of_zfs_snapshot_get_instance": {
       "type": "object",
       "properties": {},
       "additionalProperties": true,
       "_name_": "zfs_snapshot_entry",
       "title": "zfs_snapshot_entry",
       "default": {},
       "_attrs_order_": []
      },
      "zfs_snapshot_hold_0": {
       "_name_": "id",
       "title": "id",
       "type": "string",
       "description": "Holds snapshot `id`."
      },
      "zfs_snapshot_hold_1": {
       "type": "object",
       "properties": {
        "recursive": {
         "type": "boolean",
         "_name_": "recursive",
         "title": "recursive",
         "default": false
        }
       },
       "additionalProperties": false,
       "_name_": "options",
       "title": "options",
       "default": {},
       "_attrs_order_": [
        "recursive"
       ]
      },
      "zfs_snapshot_hold": {
       "type": "object",
       "properties": {
        "id": {
         "$ref": "#/components/schemas/zfs_snapshot_hold_0"
        },
        "options": {
         "$ref": "#/components/schemas/zfs_snapshot_hold_1"
        }
       }
      },
      "zfs_snapshot_release_0": {
       "_name_": "id",
       "title": "id",
       "type": "string",
       "description": "Release held snapshot `id`."
      },
      "zfs_snapshot_release_1": {
       "type": "object",
       "properties": {
        "recursive": {
         "type": "boolean",
         "_name_": "recursive",
         "title": "recursive",
         "default": false
        }
       },
       "additionalProperties": false,
       "_name_": "options",
       "title": "options",
       "default": {},
       "_attrs_order_": [
        "recursive"
       ]
      },
      "zfs_snapshot_release": {
       "type": "object",
       "properties": {
        "id": {
         "$ref": "#/components/schemas/zfs_snapshot_release_0"
        },
        "options": {
         "$ref": "#/components/schemas/zfs_snapshot_release_1"
        }
       }
      },
      "zfs_snapshot_rollback_0": {
       "_name_": "id",
       "title": "id",
       "type": "string",
       "description": "Rollback to a given snapshot `id`."
      },
      "zfs_snapshot_rollback_1": {
       "type": "object",
       "properties": {
        "recursive": {
         "type": "boolean",
         "_name_": "recursive",
         "title": "recursive",
         "default": false,
         "description": "`options.recursive_clones` is just like `recursive` but will also destroy any clones."
        },
        "recursive_clones": {
         "type": "boolean",
         "_name_": "recursive_clones",
         "title": "recursive_clones",
         "default": false
        },
        "force": {
         "type": "boolean",
         "_name_": "force",
         "title": "force",
         "default": false
        },
        "recursive_rollback": {
         "type": "boolean",
         "_name_": "recursive_rollback",
         "title": "recursive_rollback",
         "default": false
        }
       },
       "additionalProperties": false,
       "_name_": "options",
       "title": "options",
       "default": {},
       "_attrs_order_": [
        "recursive",
        "recursive_clones",
        "force",
        "recursive_rollback"
       ]
      },
      "zfs_snapshot_rollback": {
       "type": "object",
       "properties": {
        "id": {
         "$ref": "#/components/schemas/zfs_snapshot_rollback_0"
        },
        "options": {
         "$ref": "#/components/schemas/zfs_snapshot_rollback_1"
        }
       }
      }
     },
     "responses": {
      "NotFound": {
       "description": "Endpoint not found"
      },
      "Unauthorized": {
       "description": "No authorization for this endpoint"
      },
      "Success": {
       "description": "Operation succeeded"
      }
     },
     "securitySchemes": {
      "basic": {
       "type": "http",
       "scheme": "basic"
      }
     }
    },
    "security": [
     {
      "basic": []
     }
    ]
   }